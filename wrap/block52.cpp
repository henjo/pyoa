
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaFigGroupMem
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaFigGroupMem_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaFigGroupMem_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaFigGroupMemObject* self = (PyoaTimeAppDef_oaFigGroupMemObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaFigGroupMem)
    {
        PyParamoaTimeAppDef_oaFigGroupMem p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaFigGroupMem_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaFigGroupMem, Choices are:\n"
        "    (oaTimeAppDef_oaFigGroupMem)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaFigGroupMem_tp_dealloc(PyoaTimeAppDef_oaFigGroupMemObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaFigGroupMem_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaFigGroupMem value;
    int convert_status=PyoaTimeAppDef_oaFigGroupMem_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaTimeAppDef_oaFigGroupMem::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaFigGroupMem_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaFigGroupMem v1;
    PyParamoaTimeAppDef_oaFigGroupMem v2;
    int convert_status1=PyoaTimeAppDef_oaFigGroupMem_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaFigGroupMem_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaFigGroupMem_Convert(PyObject* ob,PyParamoaTimeAppDef_oaFigGroupMem* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaFigGroupMem_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaFigGroupMem**) ((PyoaTimeAppDef_oaFigGroupMemObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaFigGroupMem Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(oaTimeAppDef_oaFigGroupMem** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaFigGroupMem* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaFigGroupMem_Type.tp_alloc(&PyoaTimeAppDef_oaFigGroupMem_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaFigGroupMemObject* self = (PyoaTimeAppDef_oaFigGroupMemObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(oaTimeAppDef_oaFigGroupMem* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaFigGroupMem_Type.tp_alloc(&PyoaTimeAppDef_oaFigGroupMem_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaFigGroupMemObject* self = (PyoaTimeAppDef_oaFigGroupMemObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFigGroupMem_get_doc[] = 
"Class: oaTimeAppDef_oaFigGroupMem, Function: get\n"
"  Paramegers: (oaFigGroupMem)\n"
"    Calls: oaTime get(const oaFigGroupMem* object)\n"
"    Signature: get|simple-oaTime|cptr-oaFigGroupMem,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaFigGroupMem_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFigGroupMem data;
    int convert_status=PyoaTimeAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFigGroupMemObject* self=(PyoaTimeAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroupMem p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFigGroupMem_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFigGroupMem_getDefault_doc[] = 
"Class: oaTimeAppDef_oaFigGroupMem, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaFigGroupMem_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFigGroupMem data;
    int convert_status=PyoaTimeAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFigGroupMemObject* self=(PyoaTimeAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFigGroupMem_set_doc[] = 
"Class: oaTimeAppDef_oaFigGroupMem, Function: set\n"
"  Paramegers: (oaFigGroupMem,oaTime)\n"
"    Calls: void set(oaFigGroupMem* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaFigGroupMem,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaFigGroupMem_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFigGroupMem data;
    int convert_status=PyoaTimeAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFigGroupMemObject* self=(PyoaTimeAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroupMem p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFigGroupMem_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFigGroupMem_isNull_doc[] =
"Class: oaTimeAppDef_oaFigGroupMem, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaFigGroupMem_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaFigGroupMem data;
    int convert_status=PyoaTimeAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaFigGroupMem_assign_doc[] = 
"Class: oaTimeAppDef_oaFigGroupMem, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaFigGroupMem_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaFigGroupMem data;
  int convert_status=PyoaTimeAppDef_oaFigGroupMem_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaFigGroupMem p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaFigGroupMem_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaFigGroupMem_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaFigGroupMem_get,METH_VARARGS,oaTimeAppDef_oaFigGroupMem_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaFigGroupMem_getDefault,METH_VARARGS,oaTimeAppDef_oaFigGroupMem_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaFigGroupMem_set,METH_VARARGS,oaTimeAppDef_oaFigGroupMem_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaFigGroupMem_tp_isNull,METH_VARARGS,oaTimeAppDef_oaFigGroupMem_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaFigGroupMem_tp_assign,METH_VARARGS,oaTimeAppDef_oaFigGroupMem_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFigGroupMem_doc[] = 
"Class: oaTimeAppDef_oaFigGroupMem\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaFigGroupMem)\n"
"    Calls: (const oaTimeAppDef_oaFigGroupMem&)\n"
"    Signature: oaTimeAppDef_oaFigGroupMem||cref-oaTimeAppDef_oaFigGroupMem,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaFigGroupMem_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaFigGroupMem",
    sizeof(PyoaTimeAppDef_oaFigGroupMemObject),
    0,
    (destructor)oaTimeAppDef_oaFigGroupMem_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaFigGroupMem_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaFigGroupMem_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaFigGroupMem_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaFigGroupMem_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaFigGroupMem_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFigGroupMem_static_find_doc[] = 
"Class: oaTimeAppDef_oaFigGroupMem, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaFigGroupMem_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::find(p1.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaFigGroupMem, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFigGroupMem_static_get_doc[] = 
"Class: oaTimeAppDef_oaFigGroupMem, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaFigGroupMem_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::get(p1.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFigGroupMemp result= (oaTimeAppDef_oaFigGroupMem::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaFigGroupMem_FromoaTimeAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaFigGroupMem, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaFigGroupMem_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaFigGroupMem_static_find,METH_VARARGS,oaTimeAppDef_oaFigGroupMem_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaFigGroupMem_static_get,METH_VARARGS,oaTimeAppDef_oaFigGroupMem_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaFigGroupMem_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaFigGroupMem_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaFigGroupMem\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaFigGroupMem",
           (PyObject*)(&PyoaTimeAppDef_oaFigGroupMem_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaFigGroupMem\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaFigGroupMem_Type.tp_dict;
    for(method=oaTimeAppDef_oaFigGroupMem_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaFrame
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaFrame_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaFrame_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaFrameObject* self = (PyoaTimeAppDef_oaFrameObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaFrame)
    {
        PyParamoaTimeAppDef_oaFrame p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaFrame_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaFrame, Choices are:\n"
        "    (oaTimeAppDef_oaFrame)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaFrame_tp_dealloc(PyoaTimeAppDef_oaFrameObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaFrame_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaFrame value;
    int convert_status=PyoaTimeAppDef_oaFrame_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaTimeAppDef_oaFrame::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaFrame_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaFrame v1;
    PyParamoaTimeAppDef_oaFrame v2;
    int convert_status1=PyoaTimeAppDef_oaFrame_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaFrame_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaFrame_Convert(PyObject* ob,PyParamoaTimeAppDef_oaFrame* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaFrame_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaFrame**) ((PyoaTimeAppDef_oaFrameObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaFrame Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(oaTimeAppDef_oaFrame** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaFrame* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaFrame_Type.tp_alloc(&PyoaTimeAppDef_oaFrame_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaFrameObject* self = (PyoaTimeAppDef_oaFrameObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(oaTimeAppDef_oaFrame* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaFrame_Type.tp_alloc(&PyoaTimeAppDef_oaFrame_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaFrameObject* self = (PyoaTimeAppDef_oaFrameObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrame_get_doc[] = 
"Class: oaTimeAppDef_oaFrame, Function: get\n"
"  Paramegers: (oaFrame)\n"
"    Calls: oaTime get(const oaFrame* object)\n"
"    Signature: get|simple-oaTime|cptr-oaFrame,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaFrame_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFrame data;
    int convert_status=PyoaTimeAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFrameObject* self=(PyoaTimeAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrame p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFrame_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrame_getDefault_doc[] = 
"Class: oaTimeAppDef_oaFrame, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaFrame_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFrame data;
    int convert_status=PyoaTimeAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFrameObject* self=(PyoaTimeAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrame_set_doc[] = 
"Class: oaTimeAppDef_oaFrame, Function: set\n"
"  Paramegers: (oaFrame,oaTime)\n"
"    Calls: void set(oaFrame* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaFrame,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaFrame_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFrame data;
    int convert_status=PyoaTimeAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFrameObject* self=(PyoaTimeAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrame p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFrame_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrame_isNull_doc[] =
"Class: oaTimeAppDef_oaFrame, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaFrame_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaFrame data;
    int convert_status=PyoaTimeAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaFrame_assign_doc[] = 
"Class: oaTimeAppDef_oaFrame, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaFrame_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaFrame data;
  int convert_status=PyoaTimeAppDef_oaFrame_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaFrame p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaFrame_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaFrame_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaFrame_get,METH_VARARGS,oaTimeAppDef_oaFrame_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaFrame_getDefault,METH_VARARGS,oaTimeAppDef_oaFrame_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaFrame_set,METH_VARARGS,oaTimeAppDef_oaFrame_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaFrame_tp_isNull,METH_VARARGS,oaTimeAppDef_oaFrame_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaFrame_tp_assign,METH_VARARGS,oaTimeAppDef_oaFrame_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrame_doc[] = 
"Class: oaTimeAppDef_oaFrame\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaFrame)\n"
"    Calls: (const oaTimeAppDef_oaFrame&)\n"
"    Signature: oaTimeAppDef_oaFrame||cref-oaTimeAppDef_oaFrame,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaFrame_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaFrame",
    sizeof(PyoaTimeAppDef_oaFrameObject),
    0,
    (destructor)oaTimeAppDef_oaFrame_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaFrame_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaFrame_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaFrame_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaFrame_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaFrame_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrame_static_find_doc[] = 
"Class: oaTimeAppDef_oaFrame, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaFrame* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaFrame|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaFrame* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaFrame_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::find(p1.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaFrame, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrame_static_get_doc[] = 
"Class: oaTimeAppDef_oaFrame, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaFrame* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrame|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaFrame* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrame|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaFrame* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrame|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaFrame_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::get(p1.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFramep result= (oaTimeAppDef_oaFrame::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaFrame_FromoaTimeAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaFrame, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaFrame_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaFrame_static_find,METH_VARARGS,oaTimeAppDef_oaFrame_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaFrame_static_get,METH_VARARGS,oaTimeAppDef_oaFrame_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaFrame_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaFrame_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaFrame\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaFrame",
           (PyObject*)(&PyoaTimeAppDef_oaFrame_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaFrame\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaFrame_Type.tp_dict;
    for(method=oaTimeAppDef_oaFrame_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaFrameInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaFrameInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaFrameInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaFrameInstObject* self = (PyoaTimeAppDef_oaFrameInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaFrameInst)
    {
        PyParamoaTimeAppDef_oaFrameInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaFrameInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaFrameInst, Choices are:\n"
        "    (oaTimeAppDef_oaFrameInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaFrameInst_tp_dealloc(PyoaTimeAppDef_oaFrameInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaFrameInst_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaFrameInst value;
    int convert_status=PyoaTimeAppDef_oaFrameInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaTimeAppDef_oaFrameInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaFrameInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaFrameInst v1;
    PyParamoaTimeAppDef_oaFrameInst v2;
    int convert_status1=PyoaTimeAppDef_oaFrameInst_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaFrameInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaFrameInst_Convert(PyObject* ob,PyParamoaTimeAppDef_oaFrameInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaFrameInst_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaFrameInst**) ((PyoaTimeAppDef_oaFrameInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaFrameInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(oaTimeAppDef_oaFrameInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaFrameInst* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaFrameInst_Type.tp_alloc(&PyoaTimeAppDef_oaFrameInst_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaFrameInstObject* self = (PyoaTimeAppDef_oaFrameInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(oaTimeAppDef_oaFrameInst* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaFrameInst_Type.tp_alloc(&PyoaTimeAppDef_oaFrameInst_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaFrameInstObject* self = (PyoaTimeAppDef_oaFrameInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrameInst_get_doc[] = 
"Class: oaTimeAppDef_oaFrameInst, Function: get\n"
"  Paramegers: (oaFrameInst)\n"
"    Calls: oaTime get(const oaFrameInst* object)\n"
"    Signature: get|simple-oaTime|cptr-oaFrameInst,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaFrameInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFrameInst data;
    int convert_status=PyoaTimeAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFrameInstObject* self=(PyoaTimeAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrameInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFrameInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrameInst_getDefault_doc[] = 
"Class: oaTimeAppDef_oaFrameInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaFrameInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFrameInst data;
    int convert_status=PyoaTimeAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFrameInstObject* self=(PyoaTimeAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrameInst_set_doc[] = 
"Class: oaTimeAppDef_oaFrameInst, Function: set\n"
"  Paramegers: (oaFrameInst,oaTime)\n"
"    Calls: void set(oaFrameInst* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaFrameInst,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaFrameInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaFrameInst data;
    int convert_status=PyoaTimeAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaFrameInstObject* self=(PyoaTimeAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrameInst p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFrameInst_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrameInst_isNull_doc[] =
"Class: oaTimeAppDef_oaFrameInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaFrameInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaFrameInst data;
    int convert_status=PyoaTimeAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaFrameInst_assign_doc[] = 
"Class: oaTimeAppDef_oaFrameInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaFrameInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaFrameInst data;
  int convert_status=PyoaTimeAppDef_oaFrameInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaFrameInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaFrameInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaFrameInst_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaFrameInst_get,METH_VARARGS,oaTimeAppDef_oaFrameInst_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaFrameInst_getDefault,METH_VARARGS,oaTimeAppDef_oaFrameInst_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaFrameInst_set,METH_VARARGS,oaTimeAppDef_oaFrameInst_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaFrameInst_tp_isNull,METH_VARARGS,oaTimeAppDef_oaFrameInst_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaFrameInst_tp_assign,METH_VARARGS,oaTimeAppDef_oaFrameInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrameInst_doc[] = 
"Class: oaTimeAppDef_oaFrameInst\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaFrameInst)\n"
"    Calls: (const oaTimeAppDef_oaFrameInst&)\n"
"    Signature: oaTimeAppDef_oaFrameInst||cref-oaTimeAppDef_oaFrameInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaFrameInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaFrameInst",
    sizeof(PyoaTimeAppDef_oaFrameInstObject),
    0,
    (destructor)oaTimeAppDef_oaFrameInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaFrameInst_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaFrameInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaFrameInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaFrameInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaFrameInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrameInst_static_find_doc[] = 
"Class: oaTimeAppDef_oaFrameInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaFrameInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaFrameInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaFrameInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::find(p1.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaFrameInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaFrameInst_static_get_doc[] = 
"Class: oaTimeAppDef_oaFrameInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaFrameInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaFrameInst* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaFrameInst* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaFrameInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::get(p1.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaFrameInstp result= (oaTimeAppDef_oaFrameInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaFrameInst_FromoaTimeAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaFrameInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaFrameInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaFrameInst_static_find,METH_VARARGS,oaTimeAppDef_oaFrameInst_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaFrameInst_static_get,METH_VARARGS,oaTimeAppDef_oaFrameInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaFrameInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaFrameInst_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaFrameInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaFrameInst",
           (PyObject*)(&PyoaTimeAppDef_oaFrameInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaFrameInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaFrameInst_Type.tp_dict;
    for(method=oaTimeAppDef_oaFrameInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaGCellPattern
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGCellPattern_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaGCellPattern_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaGCellPatternObject* self = (PyoaTimeAppDef_oaGCellPatternObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaGCellPattern)
    {
        PyParamoaTimeAppDef_oaGCellPattern p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaGCellPattern_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaGCellPattern, Choices are:\n"
        "    (oaTimeAppDef_oaGCellPattern)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaGCellPattern_tp_dealloc(PyoaTimeAppDef_oaGCellPatternObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGCellPattern_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaGCellPattern value;
    int convert_status=PyoaTimeAppDef_oaGCellPattern_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaTimeAppDef_oaGCellPattern::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaGCellPattern_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaGCellPattern v1;
    PyParamoaTimeAppDef_oaGCellPattern v2;
    int convert_status1=PyoaTimeAppDef_oaGCellPattern_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaGCellPattern_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaGCellPattern_Convert(PyObject* ob,PyParamoaTimeAppDef_oaGCellPattern* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaGCellPattern_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaGCellPattern**) ((PyoaTimeAppDef_oaGCellPatternObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaGCellPattern Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(oaTimeAppDef_oaGCellPattern** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaGCellPattern* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaGCellPattern_Type.tp_alloc(&PyoaTimeAppDef_oaGCellPattern_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaGCellPatternObject* self = (PyoaTimeAppDef_oaGCellPatternObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(oaTimeAppDef_oaGCellPattern* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaGCellPattern_Type.tp_alloc(&PyoaTimeAppDef_oaGCellPattern_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaGCellPatternObject* self = (PyoaTimeAppDef_oaGCellPatternObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGCellPattern_get_doc[] = 
"Class: oaTimeAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaGCellPattern)\n"
"    Calls: oaTime get(const oaGCellPattern* object)\n"
"    Signature: get|simple-oaTime|cptr-oaGCellPattern,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGCellPattern_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGCellPattern data;
    int convert_status=PyoaTimeAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGCellPatternObject* self=(PyoaTimeAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGCellPattern_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGCellPattern_getDefault_doc[] = 
"Class: oaTimeAppDef_oaGCellPattern, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaGCellPattern_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGCellPattern data;
    int convert_status=PyoaTimeAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGCellPatternObject* self=(PyoaTimeAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGCellPattern_set_doc[] = 
"Class: oaTimeAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaGCellPattern,oaTime)\n"
"    Calls: void set(oaGCellPattern* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaGCellPattern,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGCellPattern_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGCellPattern data;
    int convert_status=PyoaTimeAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGCellPatternObject* self=(PyoaTimeAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGCellPattern_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGCellPattern_isNull_doc[] =
"Class: oaTimeAppDef_oaGCellPattern, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaGCellPattern_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaGCellPattern data;
    int convert_status=PyoaTimeAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaGCellPattern_assign_doc[] = 
"Class: oaTimeAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaGCellPattern_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaGCellPattern data;
  int convert_status=PyoaTimeAppDef_oaGCellPattern_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaGCellPattern p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaGCellPattern_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaGCellPattern_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaGCellPattern_get,METH_VARARGS,oaTimeAppDef_oaGCellPattern_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaGCellPattern_getDefault,METH_VARARGS,oaTimeAppDef_oaGCellPattern_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaGCellPattern_set,METH_VARARGS,oaTimeAppDef_oaGCellPattern_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaGCellPattern_tp_isNull,METH_VARARGS,oaTimeAppDef_oaGCellPattern_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaGCellPattern_tp_assign,METH_VARARGS,oaTimeAppDef_oaGCellPattern_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGCellPattern_doc[] = 
"Class: oaTimeAppDef_oaGCellPattern\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaGCellPattern)\n"
"    Calls: (const oaTimeAppDef_oaGCellPattern&)\n"
"    Signature: oaTimeAppDef_oaGCellPattern||cref-oaTimeAppDef_oaGCellPattern,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaGCellPattern_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaGCellPattern",
    sizeof(PyoaTimeAppDef_oaGCellPatternObject),
    0,
    (destructor)oaTimeAppDef_oaGCellPattern_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaGCellPattern_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaGCellPattern_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaGCellPattern_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaGCellPattern_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaGCellPattern_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGCellPattern_static_find_doc[] = 
"Class: oaTimeAppDef_oaGCellPattern, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaGCellPattern_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::find(p1.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGCellPattern, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGCellPattern_static_get_doc[] = 
"Class: oaTimeAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaGCellPattern_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::get(p1.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGCellPatternp result= (oaTimeAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaGCellPattern_FromoaTimeAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGCellPattern, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaGCellPattern_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaGCellPattern_static_find,METH_VARARGS,oaTimeAppDef_oaGCellPattern_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaGCellPattern_static_get,METH_VARARGS,oaTimeAppDef_oaGCellPattern_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaGCellPattern_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaGCellPattern_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaGCellPattern\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaGCellPattern",
           (PyObject*)(&PyoaTimeAppDef_oaGCellPattern_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaGCellPattern\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaGCellPattern_Type.tp_dict;
    for(method=oaTimeAppDef_oaGCellPattern_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaGroup
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGroup_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaGroup_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaGroupObject* self = (PyoaTimeAppDef_oaGroupObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaGroup)
    {
        PyParamoaTimeAppDef_oaGroup p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaGroup_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaGroup, Choices are:\n"
        "    (oaTimeAppDef_oaGroup)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaGroup_tp_dealloc(PyoaTimeAppDef_oaGroupObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGroup_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaGroup value;
    int convert_status=PyoaTimeAppDef_oaGroup_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaTimeAppDef_oaGroup::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaGroup_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaGroup v1;
    PyParamoaTimeAppDef_oaGroup v2;
    int convert_status1=PyoaTimeAppDef_oaGroup_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaGroup_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaGroup_Convert(PyObject* ob,PyParamoaTimeAppDef_oaGroup* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaGroup_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaGroup**) ((PyoaTimeAppDef_oaGroupObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaGroup Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(oaTimeAppDef_oaGroup** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaGroup* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaGroup_Type.tp_alloc(&PyoaTimeAppDef_oaGroup_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaGroupObject* self = (PyoaTimeAppDef_oaGroupObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(oaTimeAppDef_oaGroup* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaGroup_Type.tp_alloc(&PyoaTimeAppDef_oaGroup_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaGroupObject* self = (PyoaTimeAppDef_oaGroupObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroup_get_doc[] = 
"Class: oaTimeAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaGroup)\n"
"    Calls: oaTime get(const oaGroup* object)\n"
"    Signature: get|simple-oaTime|cptr-oaGroup,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGroup_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGroup data;
    int convert_status=PyoaTimeAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGroupObject* self=(PyoaTimeAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroup_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroup_getDefault_doc[] = 
"Class: oaTimeAppDef_oaGroup, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaGroup_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGroup data;
    int convert_status=PyoaTimeAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGroupObject* self=(PyoaTimeAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroup_set_doc[] = 
"Class: oaTimeAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaGroup,oaTime)\n"
"    Calls: void set(oaGroup* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaGroup,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGroup_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGroup data;
    int convert_status=PyoaTimeAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGroupObject* self=(PyoaTimeAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroup_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroup_isNull_doc[] =
"Class: oaTimeAppDef_oaGroup, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaGroup_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaGroup data;
    int convert_status=PyoaTimeAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaGroup_assign_doc[] = 
"Class: oaTimeAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaGroup_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaGroup data;
  int convert_status=PyoaTimeAppDef_oaGroup_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaGroup p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaGroup_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaGroup_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaGroup_get,METH_VARARGS,oaTimeAppDef_oaGroup_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaGroup_getDefault,METH_VARARGS,oaTimeAppDef_oaGroup_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaGroup_set,METH_VARARGS,oaTimeAppDef_oaGroup_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaGroup_tp_isNull,METH_VARARGS,oaTimeAppDef_oaGroup_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaGroup_tp_assign,METH_VARARGS,oaTimeAppDef_oaGroup_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroup_doc[] = 
"Class: oaTimeAppDef_oaGroup\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaGroup)\n"
"    Calls: (const oaTimeAppDef_oaGroup&)\n"
"    Signature: oaTimeAppDef_oaGroup||cref-oaTimeAppDef_oaGroup,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaGroup_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaGroup",
    sizeof(PyoaTimeAppDef_oaGroupObject),
    0,
    (destructor)oaTimeAppDef_oaGroup_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaGroup_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaGroup_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaGroup_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaGroup_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaGroup_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroup_static_find_doc[] = 
"Class: oaTimeAppDef_oaGroup, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGroup* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGroup|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGroup* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaGroup_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::find(p1.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGroup, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroup_static_get_doc[] = 
"Class: oaTimeAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGroup* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroup|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaGroup* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroup|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGroup* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroup|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaGroup_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::get(p1.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupp result= (oaTimeAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaGroup_FromoaTimeAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGroup, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaGroup_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaGroup_static_find,METH_VARARGS,oaTimeAppDef_oaGroup_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaGroup_static_get,METH_VARARGS,oaTimeAppDef_oaGroup_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaGroup_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaGroup_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaGroup\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaGroup",
           (PyObject*)(&PyoaTimeAppDef_oaGroup_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaGroup\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaGroup_Type.tp_dict;
    for(method=oaTimeAppDef_oaGroup_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaGroupMember
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGroupMember_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaGroupMember_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaGroupMemberObject* self = (PyoaTimeAppDef_oaGroupMemberObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaGroupMember)
    {
        PyParamoaTimeAppDef_oaGroupMember p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaGroupMember_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaGroupMember, Choices are:\n"
        "    (oaTimeAppDef_oaGroupMember)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaGroupMember_tp_dealloc(PyoaTimeAppDef_oaGroupMemberObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGroupMember_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaGroupMember value;
    int convert_status=PyoaTimeAppDef_oaGroupMember_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaTimeAppDef_oaGroupMember::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaGroupMember_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaGroupMember v1;
    PyParamoaTimeAppDef_oaGroupMember v2;
    int convert_status1=PyoaTimeAppDef_oaGroupMember_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaGroupMember_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaGroupMember_Convert(PyObject* ob,PyParamoaTimeAppDef_oaGroupMember* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaGroupMember_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaGroupMember**) ((PyoaTimeAppDef_oaGroupMemberObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaGroupMember Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(oaTimeAppDef_oaGroupMember** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaGroupMember* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaGroupMember_Type.tp_alloc(&PyoaTimeAppDef_oaGroupMember_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaGroupMemberObject* self = (PyoaTimeAppDef_oaGroupMemberObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(oaTimeAppDef_oaGroupMember* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaGroupMember_Type.tp_alloc(&PyoaTimeAppDef_oaGroupMember_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaGroupMemberObject* self = (PyoaTimeAppDef_oaGroupMemberObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroupMember_get_doc[] = 
"Class: oaTimeAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaGroupMember)\n"
"    Calls: oaTime get(const oaGroupMember* object)\n"
"    Signature: get|simple-oaTime|cptr-oaGroupMember,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGroupMember_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGroupMember data;
    int convert_status=PyoaTimeAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGroupMemberObject* self=(PyoaTimeAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroupMember_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroupMember_getDefault_doc[] = 
"Class: oaTimeAppDef_oaGroupMember, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaGroupMember_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGroupMember data;
    int convert_status=PyoaTimeAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGroupMemberObject* self=(PyoaTimeAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroupMember_set_doc[] = 
"Class: oaTimeAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaGroupMember,oaTime)\n"
"    Calls: void set(oaGroupMember* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaGroupMember,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGroupMember_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGroupMember data;
    int convert_status=PyoaTimeAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGroupMemberObject* self=(PyoaTimeAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroupMember_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroupMember_isNull_doc[] =
"Class: oaTimeAppDef_oaGroupMember, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaGroupMember_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaGroupMember data;
    int convert_status=PyoaTimeAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaGroupMember_assign_doc[] = 
"Class: oaTimeAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaGroupMember_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaGroupMember data;
  int convert_status=PyoaTimeAppDef_oaGroupMember_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaGroupMember p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaGroupMember_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaGroupMember_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaGroupMember_get,METH_VARARGS,oaTimeAppDef_oaGroupMember_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaGroupMember_getDefault,METH_VARARGS,oaTimeAppDef_oaGroupMember_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaGroupMember_set,METH_VARARGS,oaTimeAppDef_oaGroupMember_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaGroupMember_tp_isNull,METH_VARARGS,oaTimeAppDef_oaGroupMember_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaGroupMember_tp_assign,METH_VARARGS,oaTimeAppDef_oaGroupMember_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroupMember_doc[] = 
"Class: oaTimeAppDef_oaGroupMember\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaGroupMember)\n"
"    Calls: (const oaTimeAppDef_oaGroupMember&)\n"
"    Signature: oaTimeAppDef_oaGroupMember||cref-oaTimeAppDef_oaGroupMember,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaGroupMember_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaGroupMember",
    sizeof(PyoaTimeAppDef_oaGroupMemberObject),
    0,
    (destructor)oaTimeAppDef_oaGroupMember_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaGroupMember_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaGroupMember_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaGroupMember_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaGroupMember_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaGroupMember_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroupMember_static_find_doc[] = 
"Class: oaTimeAppDef_oaGroupMember, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGroupMember* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGroupMember* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaGroupMember_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::find(p1.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGroupMember, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGroupMember_static_get_doc[] = 
"Class: oaTimeAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGroupMember* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaGroupMember* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGroupMember* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaGroupMember_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::get(p1.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGroupMemberp result= (oaTimeAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaGroupMember_FromoaTimeAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGroupMember, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaGroupMember_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaGroupMember_static_find,METH_VARARGS,oaTimeAppDef_oaGroupMember_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaGroupMember_static_get,METH_VARARGS,oaTimeAppDef_oaGroupMember_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaGroupMember_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaGroupMember_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaGroupMember\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaGroupMember",
           (PyObject*)(&PyoaTimeAppDef_oaGroupMember_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaGroupMember\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaGroupMember_Type.tp_dict;
    for(method=oaTimeAppDef_oaGroupMember_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaGuide
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGuide_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaGuide_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaGuideObject* self = (PyoaTimeAppDef_oaGuideObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaGuide)
    {
        PyParamoaTimeAppDef_oaGuide p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaGuide_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaGuide, Choices are:\n"
        "    (oaTimeAppDef_oaGuide)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaGuide_tp_dealloc(PyoaTimeAppDef_oaGuideObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaGuide_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaGuide value;
    int convert_status=PyoaTimeAppDef_oaGuide_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaTimeAppDef_oaGuide::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaGuide_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaGuide v1;
    PyParamoaTimeAppDef_oaGuide v2;
    int convert_status1=PyoaTimeAppDef_oaGuide_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaGuide_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaGuide_Convert(PyObject* ob,PyParamoaTimeAppDef_oaGuide* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaGuide_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaGuide**) ((PyoaTimeAppDef_oaGuideObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaGuide Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(oaTimeAppDef_oaGuide** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaGuide* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaGuide_Type.tp_alloc(&PyoaTimeAppDef_oaGuide_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaGuideObject* self = (PyoaTimeAppDef_oaGuideObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(oaTimeAppDef_oaGuide* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaGuide_Type.tp_alloc(&PyoaTimeAppDef_oaGuide_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaGuideObject* self = (PyoaTimeAppDef_oaGuideObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGuide_get_doc[] = 
"Class: oaTimeAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaGuide)\n"
"    Calls: oaTime get(const oaGuide* object)\n"
"    Signature: get|simple-oaTime|cptr-oaGuide,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGuide_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGuide data;
    int convert_status=PyoaTimeAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGuideObject* self=(PyoaTimeAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGuide_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGuide_getDefault_doc[] = 
"Class: oaTimeAppDef_oaGuide, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaGuide_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGuide data;
    int convert_status=PyoaTimeAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGuideObject* self=(PyoaTimeAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGuide_set_doc[] = 
"Class: oaTimeAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaGuide,oaTime)\n"
"    Calls: void set(oaGuide* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaGuide,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaGuide_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaGuide data;
    int convert_status=PyoaTimeAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaGuideObject* self=(PyoaTimeAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGuide_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGuide_isNull_doc[] =
"Class: oaTimeAppDef_oaGuide, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaGuide_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaGuide data;
    int convert_status=PyoaTimeAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaGuide_assign_doc[] = 
"Class: oaTimeAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaGuide_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaGuide data;
  int convert_status=PyoaTimeAppDef_oaGuide_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaGuide p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaGuide_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaGuide_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaGuide_get,METH_VARARGS,oaTimeAppDef_oaGuide_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaGuide_getDefault,METH_VARARGS,oaTimeAppDef_oaGuide_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaGuide_set,METH_VARARGS,oaTimeAppDef_oaGuide_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaGuide_tp_isNull,METH_VARARGS,oaTimeAppDef_oaGuide_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaGuide_tp_assign,METH_VARARGS,oaTimeAppDef_oaGuide_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGuide_doc[] = 
"Class: oaTimeAppDef_oaGuide\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaGuide)\n"
"    Calls: (const oaTimeAppDef_oaGuide&)\n"
"    Signature: oaTimeAppDef_oaGuide||cref-oaTimeAppDef_oaGuide,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaGuide_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaGuide",
    sizeof(PyoaTimeAppDef_oaGuideObject),
    0,
    (destructor)oaTimeAppDef_oaGuide_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaGuide_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaGuide_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaGuide_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaGuide_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaGuide_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGuide_static_find_doc[] = 
"Class: oaTimeAppDef_oaGuide, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGuide* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGuide|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGuide* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaGuide_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::find(p1.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGuide, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaGuide_static_get_doc[] = 
"Class: oaTimeAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaGuide* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGuide|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaGuide* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGuide|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGuide* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGuide|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaGuide_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::get(p1.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaGuidep result= (oaTimeAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaGuide_FromoaTimeAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaGuide, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaGuide_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaGuide_static_find,METH_VARARGS,oaTimeAppDef_oaGuide_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaGuide_static_get,METH_VARARGS,oaTimeAppDef_oaGuide_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaGuide_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaGuide_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaGuide\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaGuide",
           (PyObject*)(&PyoaTimeAppDef_oaGuide_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaGuide\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaGuide_Type.tp_dict;
    for(method=oaTimeAppDef_oaGuide_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaImage
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaImage_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaImage_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaImageObject* self = (PyoaTimeAppDef_oaImageObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaImage)
    {
        PyParamoaTimeAppDef_oaImage p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaImage_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaImage, Choices are:\n"
        "    (oaTimeAppDef_oaImage)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaImage_tp_dealloc(PyoaTimeAppDef_oaImageObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaImage_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaImage value;
    int convert_status=PyoaTimeAppDef_oaImage_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaTimeAppDef_oaImage::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaImage_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaImage v1;
    PyParamoaTimeAppDef_oaImage v2;
    int convert_status1=PyoaTimeAppDef_oaImage_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaImage_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaImage_Convert(PyObject* ob,PyParamoaTimeAppDef_oaImage* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaImage_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaImage**) ((PyoaTimeAppDef_oaImageObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaImage Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(oaTimeAppDef_oaImage** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaImage* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaImage_Type.tp_alloc(&PyoaTimeAppDef_oaImage_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaImageObject* self = (PyoaTimeAppDef_oaImageObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(oaTimeAppDef_oaImage* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaImage_Type.tp_alloc(&PyoaTimeAppDef_oaImage_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaImageObject* self = (PyoaTimeAppDef_oaImageObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaImage_get_doc[] = 
"Class: oaTimeAppDef_oaImage, Function: get\n"
"  Paramegers: (oaImage)\n"
"    Calls: oaTime get(const oaImage* object)\n"
"    Signature: get|simple-oaTime|cptr-oaImage,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaImage_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaImage data;
    int convert_status=PyoaTimeAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaImageObject* self=(PyoaTimeAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaImage_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaImage_getDefault_doc[] = 
"Class: oaTimeAppDef_oaImage, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaImage_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaImage data;
    int convert_status=PyoaTimeAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaImageObject* self=(PyoaTimeAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaImage_set_doc[] = 
"Class: oaTimeAppDef_oaImage, Function: set\n"
"  Paramegers: (oaImage,oaTime)\n"
"    Calls: void set(oaImage* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaImage,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaImage_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaImage data;
    int convert_status=PyoaTimeAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaImageObject* self=(PyoaTimeAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaImage_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaImage_isNull_doc[] =
"Class: oaTimeAppDef_oaImage, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaImage_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaImage data;
    int convert_status=PyoaTimeAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaImage_assign_doc[] = 
"Class: oaTimeAppDef_oaImage, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaImage_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaImage data;
  int convert_status=PyoaTimeAppDef_oaImage_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaImage p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaImage_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaImage_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaImage_get,METH_VARARGS,oaTimeAppDef_oaImage_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaImage_getDefault,METH_VARARGS,oaTimeAppDef_oaImage_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaImage_set,METH_VARARGS,oaTimeAppDef_oaImage_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaImage_tp_isNull,METH_VARARGS,oaTimeAppDef_oaImage_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaImage_tp_assign,METH_VARARGS,oaTimeAppDef_oaImage_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaImage_doc[] = 
"Class: oaTimeAppDef_oaImage\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaImage)\n"
"    Calls: (const oaTimeAppDef_oaImage&)\n"
"    Signature: oaTimeAppDef_oaImage||cref-oaTimeAppDef_oaImage,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaImage_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaImage",
    sizeof(PyoaTimeAppDef_oaImageObject),
    0,
    (destructor)oaTimeAppDef_oaImage_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaImage_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaImage_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaImage_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaImage_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaImage_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaImage_static_find_doc[] = 
"Class: oaTimeAppDef_oaImage, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaImage* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaImage|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaImage* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaImage_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::find(p1.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaImage, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaImage_static_get_doc[] = 
"Class: oaTimeAppDef_oaImage, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaImage* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaImage|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaImage* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaImage|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaImage* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaImage|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaImage_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::get(p1.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaImagep result= (oaTimeAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaImage_FromoaTimeAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaImage, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaImage_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaImage_static_find,METH_VARARGS,oaTimeAppDef_oaImage_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaImage_static_get,METH_VARARGS,oaTimeAppDef_oaImage_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaImage_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaImage_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaImage\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaImage",
           (PyObject*)(&PyoaTimeAppDef_oaImage_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaImage\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaImage_Type.tp_dict;
    for(method=oaTimeAppDef_oaImage_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaInstObject* self = (PyoaTimeAppDef_oaInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaInst)
    {
        PyParamoaTimeAppDef_oaInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaInst, Choices are:\n"
        "    (oaTimeAppDef_oaInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaInst_tp_dealloc(PyoaTimeAppDef_oaInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaInst_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaInst value;
    int convert_status=PyoaTimeAppDef_oaInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[41];
    sprintf(buffer,"<oaTimeAppDef_oaInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaInst v1;
    PyParamoaTimeAppDef_oaInst v2;
    int convert_status1=PyoaTimeAppDef_oaInst_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaInst_Convert(PyObject* ob,PyParamoaTimeAppDef_oaInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaInst_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaInst**) ((PyoaTimeAppDef_oaInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(oaTimeAppDef_oaInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaInst* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaInst_Type.tp_alloc(&PyoaTimeAppDef_oaInst_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaInstObject* self = (PyoaTimeAppDef_oaInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(oaTimeAppDef_oaInst* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaInst_Type.tp_alloc(&PyoaTimeAppDef_oaInst_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaInstObject* self = (PyoaTimeAppDef_oaInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInst_get_doc[] = 
"Class: oaTimeAppDef_oaInst, Function: get\n"
"  Paramegers: (oaInst)\n"
"    Calls: oaTime get(const oaInst* object)\n"
"    Signature: get|simple-oaTime|cptr-oaInst,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInst data;
    int convert_status=PyoaTimeAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstObject* self=(PyoaTimeAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInst_getDefault_doc[] = 
"Class: oaTimeAppDef_oaInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInst data;
    int convert_status=PyoaTimeAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstObject* self=(PyoaTimeAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInst_set_doc[] = 
"Class: oaTimeAppDef_oaInst, Function: set\n"
"  Paramegers: (oaInst,oaTime)\n"
"    Calls: void set(oaInst* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaInst,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInst data;
    int convert_status=PyoaTimeAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstObject* self=(PyoaTimeAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInst_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInst_isNull_doc[] =
"Class: oaTimeAppDef_oaInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaInst data;
    int convert_status=PyoaTimeAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaInst_assign_doc[] = 
"Class: oaTimeAppDef_oaInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaInst data;
  int convert_status=PyoaTimeAppDef_oaInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaInst_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaInst_get,METH_VARARGS,oaTimeAppDef_oaInst_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaInst_getDefault,METH_VARARGS,oaTimeAppDef_oaInst_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaInst_set,METH_VARARGS,oaTimeAppDef_oaInst_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaInst_tp_isNull,METH_VARARGS,oaTimeAppDef_oaInst_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaInst_tp_assign,METH_VARARGS,oaTimeAppDef_oaInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInst_doc[] = 
"Class: oaTimeAppDef_oaInst\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaInst)\n"
"    Calls: (const oaTimeAppDef_oaInst&)\n"
"    Signature: oaTimeAppDef_oaInst||cref-oaTimeAppDef_oaInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaInst",
    sizeof(PyoaTimeAppDef_oaInstObject),
    0,
    (destructor)oaTimeAppDef_oaInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaInst_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInst_static_find_doc[] = 
"Class: oaTimeAppDef_oaInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaInst|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::find(p1.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInst_static_get_doc[] = 
"Class: oaTimeAppDef_oaInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaInst* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaInst* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::get(p1.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstp result= (oaTimeAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaInst_FromoaTimeAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaInst_static_find,METH_VARARGS,oaTimeAppDef_oaInst_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaInst_static_get,METH_VARARGS,oaTimeAppDef_oaInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaInst_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaInst",
           (PyObject*)(&PyoaTimeAppDef_oaInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaInst_Type.tp_dict;
    for(method=oaTimeAppDef_oaInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaInstHeaderObject* self = (PyoaTimeAppDef_oaInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaInstHeader)
    {
        PyParamoaTimeAppDef_oaInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaInstHeader, Choices are:\n"
        "    (oaTimeAppDef_oaInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaInstHeader_tp_dealloc(PyoaTimeAppDef_oaInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaInstHeader value;
    int convert_status=PyoaTimeAppDef_oaInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaTimeAppDef_oaInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaInstHeader v1;
    PyParamoaTimeAppDef_oaInstHeader v2;
    int convert_status1=PyoaTimeAppDef_oaInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaInstHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaInstHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaInstHeader**) ((PyoaTimeAppDef_oaInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(oaTimeAppDef_oaInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaInstHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaInstHeaderObject* self = (PyoaTimeAppDef_oaInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(oaTimeAppDef_oaInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaInstHeaderObject* self = (PyoaTimeAppDef_oaInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstHeader_get_doc[] = 
"Class: oaTimeAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaInstHeader)\n"
"    Calls: oaTime get(const oaInstHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaInstHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInstHeader data;
    int convert_status=PyoaTimeAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstHeaderObject* self=(PyoaTimeAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInstHeader data;
    int convert_status=PyoaTimeAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstHeaderObject* self=(PyoaTimeAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstHeader_set_doc[] = 
"Class: oaTimeAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaInstHeader,oaTime)\n"
"    Calls: void set(oaInstHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaInstHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInstHeader data;
    int convert_status=PyoaTimeAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstHeaderObject* self=(PyoaTimeAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaInstHeader data;
    int convert_status=PyoaTimeAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaInstHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaInstHeader data;
  int convert_status=PyoaTimeAppDef_oaInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaInstHeader_get,METH_VARARGS,oaTimeAppDef_oaInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaInstHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaInstHeader_set,METH_VARARGS,oaTimeAppDef_oaInstHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaInstHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaInstHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstHeader_doc[] = 
"Class: oaTimeAppDef_oaInstHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaInstHeader)\n"
"    Calls: (const oaTimeAppDef_oaInstHeader&)\n"
"    Signature: oaTimeAppDef_oaInstHeader||cref-oaTimeAppDef_oaInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaInstHeader",
    sizeof(PyoaTimeAppDef_oaInstHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaInstHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaInstHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstHeaderp result= (oaTimeAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaInstHeader_FromoaTimeAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaInstHeader_static_find,METH_VARARGS,oaTimeAppDef_oaInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaInstHeader_static_get,METH_VARARGS,oaTimeAppDef_oaInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaInstHeader",
           (PyObject*)(&PyoaTimeAppDef_oaInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaInstHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaInstTermObject* self = (PyoaTimeAppDef_oaInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaInstTerm)
    {
        PyParamoaTimeAppDef_oaInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaInstTerm, Choices are:\n"
        "    (oaTimeAppDef_oaInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaInstTerm_tp_dealloc(PyoaTimeAppDef_oaInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaInstTerm value;
    int convert_status=PyoaTimeAppDef_oaInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaTimeAppDef_oaInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaInstTerm v1;
    PyParamoaTimeAppDef_oaInstTerm v2;
    int convert_status1=PyoaTimeAppDef_oaInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaInstTerm_Convert(PyObject* ob,PyParamoaTimeAppDef_oaInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaInstTerm_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaInstTerm**) ((PyoaTimeAppDef_oaInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(oaTimeAppDef_oaInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaInstTerm* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaInstTerm_Type.tp_alloc(&PyoaTimeAppDef_oaInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaInstTermObject* self = (PyoaTimeAppDef_oaInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(oaTimeAppDef_oaInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaInstTerm_Type.tp_alloc(&PyoaTimeAppDef_oaInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaInstTermObject* self = (PyoaTimeAppDef_oaInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstTerm_get_doc[] = 
"Class: oaTimeAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaInstTerm)\n"
"    Calls: oaTime get(const oaInstTerm* object)\n"
"    Signature: get|simple-oaTime|cptr-oaInstTerm,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInstTerm data;
    int convert_status=PyoaTimeAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstTermObject* self=(PyoaTimeAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstTerm_getDefault_doc[] = 
"Class: oaTimeAppDef_oaInstTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInstTerm data;
    int convert_status=PyoaTimeAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstTermObject* self=(PyoaTimeAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstTerm_set_doc[] = 
"Class: oaTimeAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaInstTerm,oaTime)\n"
"    Calls: void set(oaInstTerm* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaInstTerm,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaInstTerm data;
    int convert_status=PyoaTimeAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaInstTermObject* self=(PyoaTimeAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstTerm_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstTerm_isNull_doc[] =
"Class: oaTimeAppDef_oaInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaInstTerm data;
    int convert_status=PyoaTimeAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaInstTerm_assign_doc[] = 
"Class: oaTimeAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaInstTerm data;
  int convert_status=PyoaTimeAppDef_oaInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaInstTerm_get,METH_VARARGS,oaTimeAppDef_oaInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaInstTerm_getDefault,METH_VARARGS,oaTimeAppDef_oaInstTerm_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaInstTerm_set,METH_VARARGS,oaTimeAppDef_oaInstTerm_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaInstTerm_tp_isNull,METH_VARARGS,oaTimeAppDef_oaInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaInstTerm_tp_assign,METH_VARARGS,oaTimeAppDef_oaInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstTerm_doc[] = 
"Class: oaTimeAppDef_oaInstTerm\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaInstTerm)\n"
"    Calls: (const oaTimeAppDef_oaInstTerm&)\n"
"    Signature: oaTimeAppDef_oaInstTerm||cref-oaTimeAppDef_oaInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaInstTerm",
    sizeof(PyoaTimeAppDef_oaInstTermObject),
    0,
    (destructor)oaTimeAppDef_oaInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstTerm_static_find_doc[] = 
"Class: oaTimeAppDef_oaInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::find(p1.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaInstTerm_static_get_doc[] = 
"Class: oaTimeAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaInstTerm* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaInstTerm* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::get(p1.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaInstTermp result= (oaTimeAppDef_oaInstTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaInstTerm_FromoaTimeAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaInstTerm_static_find,METH_VARARGS,oaTimeAppDef_oaInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaInstTerm_static_get,METH_VARARGS,oaTimeAppDef_oaInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaInstTerm",
           (PyObject*)(&PyoaTimeAppDef_oaInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaInstTerm_Type.tp_dict;
    for(method=oaTimeAppDef_oaInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaLPPHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLPPHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaLPPHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaLPPHeaderObject* self = (PyoaTimeAppDef_oaLPPHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaLPPHeader)
    {
        PyParamoaTimeAppDef_oaLPPHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaLPPHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaLPPHeader, Choices are:\n"
        "    (oaTimeAppDef_oaLPPHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaLPPHeader_tp_dealloc(PyoaTimeAppDef_oaLPPHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLPPHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaLPPHeader value;
    int convert_status=PyoaTimeAppDef_oaLPPHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaTimeAppDef_oaLPPHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaLPPHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaLPPHeader v1;
    PyParamoaTimeAppDef_oaLPPHeader v2;
    int convert_status1=PyoaTimeAppDef_oaLPPHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaLPPHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaLPPHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaLPPHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaLPPHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaLPPHeader**) ((PyoaTimeAppDef_oaLPPHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaLPPHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(oaTimeAppDef_oaLPPHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaLPPHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaLPPHeader_Type.tp_alloc(&PyoaTimeAppDef_oaLPPHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaLPPHeaderObject* self = (PyoaTimeAppDef_oaLPPHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(oaTimeAppDef_oaLPPHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaLPPHeader_Type.tp_alloc(&PyoaTimeAppDef_oaLPPHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaLPPHeaderObject* self = (PyoaTimeAppDef_oaLPPHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLPPHeader_get_doc[] = 
"Class: oaTimeAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaLPPHeader)\n"
"    Calls: oaTime get(const oaLPPHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaLPPHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLPPHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLPPHeader data;
    int convert_status=PyoaTimeAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLPPHeaderObject* self=(PyoaTimeAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLPPHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLPPHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaLPPHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaLPPHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLPPHeader data;
    int convert_status=PyoaTimeAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLPPHeaderObject* self=(PyoaTimeAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLPPHeader_set_doc[] = 
"Class: oaTimeAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaLPPHeader,oaTime)\n"
"    Calls: void set(oaLPPHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaLPPHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLPPHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLPPHeader data;
    int convert_status=PyoaTimeAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLPPHeaderObject* self=(PyoaTimeAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLPPHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLPPHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaLPPHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaLPPHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaLPPHeader data;
    int convert_status=PyoaTimeAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaLPPHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaLPPHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaLPPHeader data;
  int convert_status=PyoaTimeAppDef_oaLPPHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaLPPHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaLPPHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaLPPHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaLPPHeader_get,METH_VARARGS,oaTimeAppDef_oaLPPHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaLPPHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaLPPHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaLPPHeader_set,METH_VARARGS,oaTimeAppDef_oaLPPHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaLPPHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaLPPHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaLPPHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaLPPHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLPPHeader_doc[] = 
"Class: oaTimeAppDef_oaLPPHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaLPPHeader)\n"
"    Calls: (const oaTimeAppDef_oaLPPHeader&)\n"
"    Signature: oaTimeAppDef_oaLPPHeader||cref-oaTimeAppDef_oaLPPHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaLPPHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaLPPHeader",
    sizeof(PyoaTimeAppDef_oaLPPHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaLPPHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaLPPHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaLPPHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaLPPHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaLPPHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaLPPHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLPPHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaLPPHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaLPPHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLPPHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLPPHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaLPPHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLPPHeaderp result= (oaTimeAppDef_oaLPPHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaLPPHeader_FromoaTimeAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLPPHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaLPPHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaLPPHeader_static_find,METH_VARARGS,oaTimeAppDef_oaLPPHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaLPPHeader_static_get,METH_VARARGS,oaTimeAppDef_oaLPPHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaLPPHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaLPPHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaLPPHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaLPPHeader",
           (PyObject*)(&PyoaTimeAppDef_oaLPPHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaLPPHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaLPPHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaLPPHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaLayer
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLayer_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaLayer_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaLayerObject* self = (PyoaTimeAppDef_oaLayerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaLayer)
    {
        PyParamoaTimeAppDef_oaLayer p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaLayer_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaLayer, Choices are:\n"
        "    (oaTimeAppDef_oaLayer)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaLayer_tp_dealloc(PyoaTimeAppDef_oaLayerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLayer_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaLayer value;
    int convert_status=PyoaTimeAppDef_oaLayer_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaTimeAppDef_oaLayer::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaLayer_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaLayer v1;
    PyParamoaTimeAppDef_oaLayer v2;
    int convert_status1=PyoaTimeAppDef_oaLayer_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaLayer_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaLayer_Convert(PyObject* ob,PyParamoaTimeAppDef_oaLayer* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaLayer_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaLayer**) ((PyoaTimeAppDef_oaLayerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaLayer Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(oaTimeAppDef_oaLayer** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaLayer* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaLayer_Type.tp_alloc(&PyoaTimeAppDef_oaLayer_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaLayerObject* self = (PyoaTimeAppDef_oaLayerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(oaTimeAppDef_oaLayer* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaLayer_Type.tp_alloc(&PyoaTimeAppDef_oaLayer_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaLayerObject* self = (PyoaTimeAppDef_oaLayerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayer_get_doc[] = 
"Class: oaTimeAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaLayer)\n"
"    Calls: oaTime get(const oaLayer* object)\n"
"    Signature: get|simple-oaTime|cptr-oaLayer,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLayer_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLayer data;
    int convert_status=PyoaTimeAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLayerObject* self=(PyoaTimeAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayer_getDefault_doc[] = 
"Class: oaTimeAppDef_oaLayer, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaLayer_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLayer data;
    int convert_status=PyoaTimeAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLayerObject* self=(PyoaTimeAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayer_set_doc[] = 
"Class: oaTimeAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaLayer,oaTime)\n"
"    Calls: void set(oaLayer* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaLayer,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLayer_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLayer data;
    int convert_status=PyoaTimeAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLayerObject* self=(PyoaTimeAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayer_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayer_isNull_doc[] =
"Class: oaTimeAppDef_oaLayer, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaLayer_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaLayer data;
    int convert_status=PyoaTimeAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaLayer_assign_doc[] = 
"Class: oaTimeAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaLayer_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaLayer data;
  int convert_status=PyoaTimeAppDef_oaLayer_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaLayer p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaLayer_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaLayer_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaLayer_get,METH_VARARGS,oaTimeAppDef_oaLayer_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaLayer_getDefault,METH_VARARGS,oaTimeAppDef_oaLayer_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaLayer_set,METH_VARARGS,oaTimeAppDef_oaLayer_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaLayer_tp_isNull,METH_VARARGS,oaTimeAppDef_oaLayer_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaLayer_tp_assign,METH_VARARGS,oaTimeAppDef_oaLayer_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayer_doc[] = 
"Class: oaTimeAppDef_oaLayer\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaLayer)\n"
"    Calls: (const oaTimeAppDef_oaLayer&)\n"
"    Signature: oaTimeAppDef_oaLayer||cref-oaTimeAppDef_oaLayer,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaLayer_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaLayer",
    sizeof(PyoaTimeAppDef_oaLayerObject),
    0,
    (destructor)oaTimeAppDef_oaLayer_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaLayer_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaLayer_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaLayer_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaLayer_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaLayer_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayer_static_find_doc[] = 
"Class: oaTimeAppDef_oaLayer, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLayer* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLayer|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLayer* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaLayer_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::find(p1.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLayer, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayer_static_get_doc[] = 
"Class: oaTimeAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLayer* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayer|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaLayer* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayer|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLayer* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayer|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaLayer_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::get(p1.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerp result= (oaTimeAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaLayer_FromoaTimeAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLayer, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaLayer_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaLayer_static_find,METH_VARARGS,oaTimeAppDef_oaLayer_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaLayer_static_get,METH_VARARGS,oaTimeAppDef_oaLayer_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaLayer_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaLayer_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaLayer\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaLayer",
           (PyObject*)(&PyoaTimeAppDef_oaLayer_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaLayer\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaLayer_Type.tp_dict;
    for(method=oaTimeAppDef_oaLayer_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaLayerHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLayerHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaLayerHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaLayerHeaderObject* self = (PyoaTimeAppDef_oaLayerHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaLayerHeader)
    {
        PyParamoaTimeAppDef_oaLayerHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaLayerHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaLayerHeader, Choices are:\n"
        "    (oaTimeAppDef_oaLayerHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaLayerHeader_tp_dealloc(PyoaTimeAppDef_oaLayerHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLayerHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaLayerHeader value;
    int convert_status=PyoaTimeAppDef_oaLayerHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaTimeAppDef_oaLayerHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaLayerHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaLayerHeader v1;
    PyParamoaTimeAppDef_oaLayerHeader v2;
    int convert_status1=PyoaTimeAppDef_oaLayerHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaLayerHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaLayerHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaLayerHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaLayerHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaLayerHeader**) ((PyoaTimeAppDef_oaLayerHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaLayerHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(oaTimeAppDef_oaLayerHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaLayerHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaLayerHeader_Type.tp_alloc(&PyoaTimeAppDef_oaLayerHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaLayerHeaderObject* self = (PyoaTimeAppDef_oaLayerHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(oaTimeAppDef_oaLayerHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaLayerHeader_Type.tp_alloc(&PyoaTimeAppDef_oaLayerHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaLayerHeaderObject* self = (PyoaTimeAppDef_oaLayerHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayerHeader_get_doc[] = 
"Class: oaTimeAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaLayerHeader)\n"
"    Calls: oaTime get(const oaLayerHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaLayerHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLayerHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLayerHeader data;
    int convert_status=PyoaTimeAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLayerHeaderObject* self=(PyoaTimeAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayerHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaLayerHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaLayerHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLayerHeader data;
    int convert_status=PyoaTimeAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLayerHeaderObject* self=(PyoaTimeAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayerHeader_set_doc[] = 
"Class: oaTimeAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaLayerHeader,oaTime)\n"
"    Calls: void set(oaLayerHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaLayerHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLayerHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLayerHeader data;
    int convert_status=PyoaTimeAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLayerHeaderObject* self=(PyoaTimeAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayerHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayerHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaLayerHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaLayerHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaLayerHeader data;
    int convert_status=PyoaTimeAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaLayerHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaLayerHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaLayerHeader data;
  int convert_status=PyoaTimeAppDef_oaLayerHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaLayerHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaLayerHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaLayerHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaLayerHeader_get,METH_VARARGS,oaTimeAppDef_oaLayerHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaLayerHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaLayerHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaLayerHeader_set,METH_VARARGS,oaTimeAppDef_oaLayerHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaLayerHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaLayerHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaLayerHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaLayerHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayerHeader_doc[] = 
"Class: oaTimeAppDef_oaLayerHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaLayerHeader)\n"
"    Calls: (const oaTimeAppDef_oaLayerHeader&)\n"
"    Signature: oaTimeAppDef_oaLayerHeader||cref-oaTimeAppDef_oaLayerHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaLayerHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaLayerHeader",
    sizeof(PyoaTimeAppDef_oaLayerHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaLayerHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaLayerHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaLayerHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaLayerHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaLayerHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaLayerHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayerHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaLayerHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaLayerHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLayerHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLayerHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaLayerHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLayerHeaderp result= (oaTimeAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaLayerHeader_FromoaTimeAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLayerHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaLayerHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaLayerHeader_static_find,METH_VARARGS,oaTimeAppDef_oaLayerHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaLayerHeader_static_get,METH_VARARGS,oaTimeAppDef_oaLayerHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaLayerHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaLayerHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaLayerHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaLayerHeader",
           (PyObject*)(&PyoaTimeAppDef_oaLayerHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaLayerHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaLayerHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaLayerHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaLib
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLib_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaLib_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaLibObject* self = (PyoaTimeAppDef_oaLibObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaLib)
    {
        PyParamoaTimeAppDef_oaLib p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaLib_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaLib, Choices are:\n"
        "    (oaTimeAppDef_oaLib)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaLib_tp_dealloc(PyoaTimeAppDef_oaLibObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaLib_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaLib value;
    int convert_status=PyoaTimeAppDef_oaLib_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaTimeAppDef_oaLib::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaLib_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaLib v1;
    PyParamoaTimeAppDef_oaLib v2;
    int convert_status1=PyoaTimeAppDef_oaLib_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaLib_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaLib_Convert(PyObject* ob,PyParamoaTimeAppDef_oaLib* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaLib_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaLib**) ((PyoaTimeAppDef_oaLibObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaLib Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(oaTimeAppDef_oaLib** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaLib* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaLib_Type.tp_alloc(&PyoaTimeAppDef_oaLib_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaLibObject* self = (PyoaTimeAppDef_oaLibObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(oaTimeAppDef_oaLib* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaLib_Type.tp_alloc(&PyoaTimeAppDef_oaLib_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaLibObject* self = (PyoaTimeAppDef_oaLibObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLib_get_doc[] = 
"Class: oaTimeAppDef_oaLib, Function: get\n"
"  Paramegers: (oaLib)\n"
"    Calls: oaTime get(const oaLib* object)\n"
"    Signature: get|simple-oaTime|cptr-oaLib,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLib_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLib data;
    int convert_status=PyoaTimeAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLibObject* self=(PyoaTimeAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLib_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLib_getDefault_doc[] = 
"Class: oaTimeAppDef_oaLib, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaLib_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLib data;
    int convert_status=PyoaTimeAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLibObject* self=(PyoaTimeAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLib_set_doc[] = 
"Class: oaTimeAppDef_oaLib, Function: set\n"
"  Paramegers: (oaLib,oaTime)\n"
"    Calls: void set(oaLib* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaLib,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaLib_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaLib data;
    int convert_status=PyoaTimeAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaLibObject* self=(PyoaTimeAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLib_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLib_isNull_doc[] =
"Class: oaTimeAppDef_oaLib, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaLib_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaLib data;
    int convert_status=PyoaTimeAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaLib_assign_doc[] = 
"Class: oaTimeAppDef_oaLib, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaLib_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaLib data;
  int convert_status=PyoaTimeAppDef_oaLib_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaLib p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaLib_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaLib_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaLib_get,METH_VARARGS,oaTimeAppDef_oaLib_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaLib_getDefault,METH_VARARGS,oaTimeAppDef_oaLib_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaLib_set,METH_VARARGS,oaTimeAppDef_oaLib_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaLib_tp_isNull,METH_VARARGS,oaTimeAppDef_oaLib_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaLib_tp_assign,METH_VARARGS,oaTimeAppDef_oaLib_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLib_doc[] = 
"Class: oaTimeAppDef_oaLib\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaLib)\n"
"    Calls: (const oaTimeAppDef_oaLib&)\n"
"    Signature: oaTimeAppDef_oaLib||cref-oaTimeAppDef_oaLib,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaLib_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaLib",
    sizeof(PyoaTimeAppDef_oaLibObject),
    0,
    (destructor)oaTimeAppDef_oaLib_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaLib_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaLib_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaLib_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaLib_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaLib_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLib_static_find_doc[] = 
"Class: oaTimeAppDef_oaLib, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLib* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLib|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLib* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaLib_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::find(p1.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLib, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaLib_static_get_doc[] = 
"Class: oaTimeAppDef_oaLib, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaLib* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLib|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaLib* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLib|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLib* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLib|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaLib_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::get(p1.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaLibp result= (oaTimeAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaLib_FromoaTimeAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaLib, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaLib_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaLib_static_find,METH_VARARGS,oaTimeAppDef_oaLib_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaLib_static_get,METH_VARARGS,oaTimeAppDef_oaLib_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaLib_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaLib_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaLib\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaLib",
           (PyObject*)(&PyoaTimeAppDef_oaLib_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaLib\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaLib_Type.tp_dict;
    for(method=oaTimeAppDef_oaLib_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaMarker
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaMarker_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaMarker_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaMarkerObject* self = (PyoaTimeAppDef_oaMarkerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaMarker)
    {
        PyParamoaTimeAppDef_oaMarker p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaMarker_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaMarker, Choices are:\n"
        "    (oaTimeAppDef_oaMarker)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaMarker_tp_dealloc(PyoaTimeAppDef_oaMarkerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaMarker_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaMarker value;
    int convert_status=PyoaTimeAppDef_oaMarker_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaTimeAppDef_oaMarker::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaMarker_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaMarker v1;
    PyParamoaTimeAppDef_oaMarker v2;
    int convert_status1=PyoaTimeAppDef_oaMarker_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaMarker_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaMarker_Convert(PyObject* ob,PyParamoaTimeAppDef_oaMarker* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaMarker_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaMarker**) ((PyoaTimeAppDef_oaMarkerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaMarker Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(oaTimeAppDef_oaMarker** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaMarker* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaMarker_Type.tp_alloc(&PyoaTimeAppDef_oaMarker_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaMarkerObject* self = (PyoaTimeAppDef_oaMarkerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(oaTimeAppDef_oaMarker* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaMarker_Type.tp_alloc(&PyoaTimeAppDef_oaMarker_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaMarkerObject* self = (PyoaTimeAppDef_oaMarkerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaMarker_get_doc[] = 
"Class: oaTimeAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaMarker)\n"
"    Calls: oaTime get(const oaMarker* object)\n"
"    Signature: get|simple-oaTime|cptr-oaMarker,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaMarker_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaMarker data;
    int convert_status=PyoaTimeAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaMarkerObject* self=(PyoaTimeAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaMarker_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaMarker_getDefault_doc[] = 
"Class: oaTimeAppDef_oaMarker, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaMarker_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaMarker data;
    int convert_status=PyoaTimeAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaMarkerObject* self=(PyoaTimeAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaMarker_set_doc[] = 
"Class: oaTimeAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaMarker,oaTime)\n"
"    Calls: void set(oaMarker* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaMarker,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaMarker_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaMarker data;
    int convert_status=PyoaTimeAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaMarkerObject* self=(PyoaTimeAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaMarker_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaMarker_isNull_doc[] =
"Class: oaTimeAppDef_oaMarker, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaMarker_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaMarker data;
    int convert_status=PyoaTimeAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaMarker_assign_doc[] = 
"Class: oaTimeAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaMarker_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaMarker data;
  int convert_status=PyoaTimeAppDef_oaMarker_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaMarker p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaMarker_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaMarker_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaMarker_get,METH_VARARGS,oaTimeAppDef_oaMarker_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaMarker_getDefault,METH_VARARGS,oaTimeAppDef_oaMarker_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaMarker_set,METH_VARARGS,oaTimeAppDef_oaMarker_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaMarker_tp_isNull,METH_VARARGS,oaTimeAppDef_oaMarker_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaMarker_tp_assign,METH_VARARGS,oaTimeAppDef_oaMarker_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaMarker_doc[] = 
"Class: oaTimeAppDef_oaMarker\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaMarker)\n"
"    Calls: (const oaTimeAppDef_oaMarker&)\n"
"    Signature: oaTimeAppDef_oaMarker||cref-oaTimeAppDef_oaMarker,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaMarker_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaMarker",
    sizeof(PyoaTimeAppDef_oaMarkerObject),
    0,
    (destructor)oaTimeAppDef_oaMarker_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaMarker_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaMarker_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaMarker_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaMarker_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaMarker_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaMarker_static_find_doc[] = 
"Class: oaTimeAppDef_oaMarker, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaMarker* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaMarker|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaMarker* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaMarker_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::find(p1.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaMarker, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaMarker_static_get_doc[] = 
"Class: oaTimeAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaMarker* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaMarker|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaMarker* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaMarker|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaMarker* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaMarker|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaMarker_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::get(p1.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaMarkerp result= (oaTimeAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaMarker_FromoaTimeAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaMarker, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaMarker_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaMarker_static_find,METH_VARARGS,oaTimeAppDef_oaMarker_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaMarker_static_get,METH_VARARGS,oaTimeAppDef_oaMarker_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaMarker_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaMarker_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaMarker\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaMarker",
           (PyObject*)(&PyoaTimeAppDef_oaMarker_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaMarker\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaMarker_Type.tp_dict;
    for(method=oaTimeAppDef_oaMarker_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModAssignmentObject* self = (PyoaTimeAppDef_oaModAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModAssignment)
    {
        PyParamoaTimeAppDef_oaModAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModAssignment, Choices are:\n"
        "    (oaTimeAppDef_oaModAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModAssignment_tp_dealloc(PyoaTimeAppDef_oaModAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModAssignment_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModAssignment value;
    int convert_status=PyoaTimeAppDef_oaModAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaModAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModAssignment v1;
    PyParamoaTimeAppDef_oaModAssignment v2;
    int convert_status1=PyoaTimeAppDef_oaModAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModAssignment_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModAssignment_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModAssignment**) ((PyoaTimeAppDef_oaModAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(oaTimeAppDef_oaModAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModAssignment* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModAssignment_Type.tp_alloc(&PyoaTimeAppDef_oaModAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModAssignmentObject* self = (PyoaTimeAppDef_oaModAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(oaTimeAppDef_oaModAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModAssignment_Type.tp_alloc(&PyoaTimeAppDef_oaModAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModAssignmentObject* self = (PyoaTimeAppDef_oaModAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModAssignment_get_doc[] = 
"Class: oaTimeAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaModAssignment)\n"
"    Calls: oaTime get(const oaModAssignment* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModAssignment,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModAssignment data;
    int convert_status=PyoaTimeAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModAssignmentObject* self=(PyoaTimeAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModAssignment_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModAssignment, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModAssignment data;
    int convert_status=PyoaTimeAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModAssignmentObject* self=(PyoaTimeAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModAssignment_set_doc[] = 
"Class: oaTimeAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaModAssignment,oaTime)\n"
"    Calls: void set(oaModAssignment* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModAssignment,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModAssignment data;
    int convert_status=PyoaTimeAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModAssignmentObject* self=(PyoaTimeAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModAssignment_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModAssignment_isNull_doc[] =
"Class: oaTimeAppDef_oaModAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModAssignment data;
    int convert_status=PyoaTimeAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModAssignment_assign_doc[] = 
"Class: oaTimeAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModAssignment data;
  int convert_status=PyoaTimeAppDef_oaModAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModAssignment_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModAssignment_get,METH_VARARGS,oaTimeAppDef_oaModAssignment_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModAssignment_getDefault,METH_VARARGS,oaTimeAppDef_oaModAssignment_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModAssignment_set,METH_VARARGS,oaTimeAppDef_oaModAssignment_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModAssignment_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModAssignment_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModAssignment_tp_assign,METH_VARARGS,oaTimeAppDef_oaModAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModAssignment_doc[] = 
"Class: oaTimeAppDef_oaModAssignment\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModAssignment)\n"
"    Calls: (const oaTimeAppDef_oaModAssignment&)\n"
"    Signature: oaTimeAppDef_oaModAssignment||cref-oaTimeAppDef_oaModAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModAssignment",
    sizeof(PyoaTimeAppDef_oaModAssignmentObject),
    0,
    (destructor)oaTimeAppDef_oaModAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModAssignment_static_find_doc[] = 
"Class: oaTimeAppDef_oaModAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::find(p1.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModAssignment_static_get_doc[] = 
"Class: oaTimeAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModAssignment* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModAssignment* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::get(p1.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModAssignmentp result= (oaTimeAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModAssignment_FromoaTimeAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModAssignment_static_find,METH_VARARGS,oaTimeAppDef_oaModAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModAssignment_static_get,METH_VARARGS,oaTimeAppDef_oaModAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModAssignment",
           (PyObject*)(&PyoaTimeAppDef_oaModAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModAssignment_Type.tp_dict;
    for(method=oaTimeAppDef_oaModAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModBusNetDefObject* self = (PyoaTimeAppDef_oaModBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModBusNetDef)
    {
        PyParamoaTimeAppDef_oaModBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModBusNetDef, Choices are:\n"
        "    (oaTimeAppDef_oaModBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModBusNetDef_tp_dealloc(PyoaTimeAppDef_oaModBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModBusNetDef value;
    int convert_status=PyoaTimeAppDef_oaModBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaTimeAppDef_oaModBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModBusNetDef v1;
    PyParamoaTimeAppDef_oaModBusNetDef v2;
    int convert_status1=PyoaTimeAppDef_oaModBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModBusNetDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModBusNetDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModBusNetDef**) ((PyoaTimeAppDef_oaModBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(oaTimeAppDef_oaModBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModBusNetDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaTimeAppDef_oaModBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModBusNetDefObject* self = (PyoaTimeAppDef_oaModBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(oaTimeAppDef_oaModBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaTimeAppDef_oaModBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModBusNetDefObject* self = (PyoaTimeAppDef_oaModBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusNetDef_get_doc[] = 
"Class: oaTimeAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaModBusNetDef)\n"
"    Calls: oaTime get(const oaModBusNetDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModBusNetDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModBusNetDefObject* self=(PyoaTimeAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusNetDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModBusNetDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModBusNetDefObject* self=(PyoaTimeAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusNetDef_set_doc[] = 
"Class: oaTimeAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaModBusNetDef,oaTime)\n"
"    Calls: void set(oaModBusNetDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModBusNetDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModBusNetDefObject* self=(PyoaTimeAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusNetDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusNetDef_isNull_doc[] =
"Class: oaTimeAppDef_oaModBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModBusNetDef_assign_doc[] = 
"Class: oaTimeAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModBusNetDef data;
  int convert_status=PyoaTimeAppDef_oaModBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModBusNetDef_get,METH_VARARGS,oaTimeAppDef_oaModBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModBusNetDef_getDefault,METH_VARARGS,oaTimeAppDef_oaModBusNetDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModBusNetDef_set,METH_VARARGS,oaTimeAppDef_oaModBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModBusNetDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModBusNetDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaModBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusNetDef_doc[] = 
"Class: oaTimeAppDef_oaModBusNetDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModBusNetDef)\n"
"    Calls: (const oaTimeAppDef_oaModBusNetDef&)\n"
"    Signature: oaTimeAppDef_oaModBusNetDef||cref-oaTimeAppDef_oaModBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModBusNetDef",
    sizeof(PyoaTimeAppDef_oaModBusNetDefObject),
    0,
    (destructor)oaTimeAppDef_oaModBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusNetDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaModBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::find(p1.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusNetDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::get(p1.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusNetDefp result= (oaTimeAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModBusNetDef_FromoaTimeAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModBusNetDef_static_find,METH_VARARGS,oaTimeAppDef_oaModBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModBusNetDef_static_get,METH_VARARGS,oaTimeAppDef_oaModBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModBusNetDef",
           (PyObject*)(&PyoaTimeAppDef_oaModBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModBusNetDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaModBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModBusTermDefObject* self = (PyoaTimeAppDef_oaModBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModBusTermDef)
    {
        PyParamoaTimeAppDef_oaModBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModBusTermDef, Choices are:\n"
        "    (oaTimeAppDef_oaModBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModBusTermDef_tp_dealloc(PyoaTimeAppDef_oaModBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModBusTermDef value;
    int convert_status=PyoaTimeAppDef_oaModBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaModBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModBusTermDef v1;
    PyParamoaTimeAppDef_oaModBusTermDef v2;
    int convert_status1=PyoaTimeAppDef_oaModBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModBusTermDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModBusTermDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModBusTermDef**) ((PyoaTimeAppDef_oaModBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(oaTimeAppDef_oaModBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModBusTermDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaTimeAppDef_oaModBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModBusTermDefObject* self = (PyoaTimeAppDef_oaModBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(oaTimeAppDef_oaModBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaTimeAppDef_oaModBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModBusTermDefObject* self = (PyoaTimeAppDef_oaModBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusTermDef_get_doc[] = 
"Class: oaTimeAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaModBusTermDef)\n"
"    Calls: oaTime get(const oaModBusTermDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModBusTermDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModBusTermDefObject* self=(PyoaTimeAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusTermDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModBusTermDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModBusTermDefObject* self=(PyoaTimeAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusTermDef_set_doc[] = 
"Class: oaTimeAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaModBusTermDef,oaTime)\n"
"    Calls: void set(oaModBusTermDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModBusTermDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModBusTermDefObject* self=(PyoaTimeAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusTermDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusTermDef_isNull_doc[] =
"Class: oaTimeAppDef_oaModBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModBusTermDef_assign_doc[] = 
"Class: oaTimeAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModBusTermDef data;
  int convert_status=PyoaTimeAppDef_oaModBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModBusTermDef_get,METH_VARARGS,oaTimeAppDef_oaModBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModBusTermDef_getDefault,METH_VARARGS,oaTimeAppDef_oaModBusTermDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModBusTermDef_set,METH_VARARGS,oaTimeAppDef_oaModBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModBusTermDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModBusTermDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaModBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusTermDef_doc[] = 
"Class: oaTimeAppDef_oaModBusTermDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModBusTermDef)\n"
"    Calls: (const oaTimeAppDef_oaModBusTermDef&)\n"
"    Signature: oaTimeAppDef_oaModBusTermDef||cref-oaTimeAppDef_oaModBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModBusTermDef",
    sizeof(PyoaTimeAppDef_oaModBusTermDefObject),
    0,
    (destructor)oaTimeAppDef_oaModBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusTermDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaModBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::find(p1.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModBusTermDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::get(p1.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModBusTermDefp result= (oaTimeAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModBusTermDef_FromoaTimeAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModBusTermDef_static_find,METH_VARARGS,oaTimeAppDef_oaModBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModBusTermDef_static_get,METH_VARARGS,oaTimeAppDef_oaModBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModBusTermDef",
           (PyObject*)(&PyoaTimeAppDef_oaModBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModBusTermDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaModBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModConnectDefObject* self = (PyoaTimeAppDef_oaModConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModConnectDef)
    {
        PyParamoaTimeAppDef_oaModConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModConnectDef, Choices are:\n"
        "    (oaTimeAppDef_oaModConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModConnectDef_tp_dealloc(PyoaTimeAppDef_oaModConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModConnectDef value;
    int convert_status=PyoaTimeAppDef_oaModConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaModConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModConnectDef v1;
    PyParamoaTimeAppDef_oaModConnectDef v2;
    int convert_status1=PyoaTimeAppDef_oaModConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModConnectDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModConnectDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModConnectDef**) ((PyoaTimeAppDef_oaModConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(oaTimeAppDef_oaModConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModConnectDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModConnectDef_Type.tp_alloc(&PyoaTimeAppDef_oaModConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModConnectDefObject* self = (PyoaTimeAppDef_oaModConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(oaTimeAppDef_oaModConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModConnectDef_Type.tp_alloc(&PyoaTimeAppDef_oaModConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModConnectDefObject* self = (PyoaTimeAppDef_oaModConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModConnectDef_get_doc[] = 
"Class: oaTimeAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaModConnectDef)\n"
"    Calls: oaTime get(const oaModConnectDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModConnectDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModConnectDef data;
    int convert_status=PyoaTimeAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModConnectDefObject* self=(PyoaTimeAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModConnectDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModConnectDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModConnectDef data;
    int convert_status=PyoaTimeAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModConnectDefObject* self=(PyoaTimeAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModConnectDef_set_doc[] = 
"Class: oaTimeAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaModConnectDef,oaTime)\n"
"    Calls: void set(oaModConnectDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModConnectDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModConnectDef data;
    int convert_status=PyoaTimeAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModConnectDefObject* self=(PyoaTimeAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModConnectDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModConnectDef_isNull_doc[] =
"Class: oaTimeAppDef_oaModConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModConnectDef data;
    int convert_status=PyoaTimeAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModConnectDef_assign_doc[] = 
"Class: oaTimeAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModConnectDef data;
  int convert_status=PyoaTimeAppDef_oaModConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModConnectDef_get,METH_VARARGS,oaTimeAppDef_oaModConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModConnectDef_getDefault,METH_VARARGS,oaTimeAppDef_oaModConnectDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModConnectDef_set,METH_VARARGS,oaTimeAppDef_oaModConnectDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModConnectDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModConnectDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaModConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModConnectDef_doc[] = 
"Class: oaTimeAppDef_oaModConnectDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModConnectDef)\n"
"    Calls: (const oaTimeAppDef_oaModConnectDef&)\n"
"    Signature: oaTimeAppDef_oaModConnectDef||cref-oaTimeAppDef_oaModConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModConnectDef",
    sizeof(PyoaTimeAppDef_oaModConnectDefObject),
    0,
    (destructor)oaTimeAppDef_oaModConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModConnectDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaModConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::find(p1.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModConnectDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::get(p1.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModConnectDefp result= (oaTimeAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModConnectDef_FromoaTimeAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModConnectDef_static_find,METH_VARARGS,oaTimeAppDef_oaModConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModConnectDef_static_get,METH_VARARGS,oaTimeAppDef_oaModConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModConnectDef",
           (PyObject*)(&PyoaTimeAppDef_oaModConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModConnectDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaModConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModInstObject* self = (PyoaTimeAppDef_oaModInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModInst)
    {
        PyParamoaTimeAppDef_oaModInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModInst, Choices are:\n"
        "    (oaTimeAppDef_oaModInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModInst_tp_dealloc(PyoaTimeAppDef_oaModInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModInst_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModInst value;
    int convert_status=PyoaTimeAppDef_oaModInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaTimeAppDef_oaModInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModInst v1;
    PyParamoaTimeAppDef_oaModInst v2;
    int convert_status1=PyoaTimeAppDef_oaModInst_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModInst_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModInst_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModInst**) ((PyoaTimeAppDef_oaModInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(oaTimeAppDef_oaModInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModInst* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModInst_Type.tp_alloc(&PyoaTimeAppDef_oaModInst_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModInstObject* self = (PyoaTimeAppDef_oaModInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(oaTimeAppDef_oaModInst* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModInst_Type.tp_alloc(&PyoaTimeAppDef_oaModInst_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModInstObject* self = (PyoaTimeAppDef_oaModInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInst_get_doc[] = 
"Class: oaTimeAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaModInst)\n"
"    Calls: oaTime get(const oaModInst* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModInst,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInst data;
    int convert_status=PyoaTimeAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstObject* self=(PyoaTimeAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInst_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInst data;
    int convert_status=PyoaTimeAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstObject* self=(PyoaTimeAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInst_set_doc[] = 
"Class: oaTimeAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaModInst,oaTime)\n"
"    Calls: void set(oaModInst* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModInst,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInst data;
    int convert_status=PyoaTimeAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstObject* self=(PyoaTimeAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInst_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInst_isNull_doc[] =
"Class: oaTimeAppDef_oaModInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModInst data;
    int convert_status=PyoaTimeAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModInst_assign_doc[] = 
"Class: oaTimeAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModInst data;
  int convert_status=PyoaTimeAppDef_oaModInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModInst_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModInst_get,METH_VARARGS,oaTimeAppDef_oaModInst_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModInst_getDefault,METH_VARARGS,oaTimeAppDef_oaModInst_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModInst_set,METH_VARARGS,oaTimeAppDef_oaModInst_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModInst_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModInst_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModInst_tp_assign,METH_VARARGS,oaTimeAppDef_oaModInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInst_doc[] = 
"Class: oaTimeAppDef_oaModInst\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModInst)\n"
"    Calls: (const oaTimeAppDef_oaModInst&)\n"
"    Signature: oaTimeAppDef_oaModInst||cref-oaTimeAppDef_oaModInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModInst",
    sizeof(PyoaTimeAppDef_oaModInstObject),
    0,
    (destructor)oaTimeAppDef_oaModInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModInst_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInst_static_find_doc[] = 
"Class: oaTimeAppDef_oaModInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModInst|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::find(p1.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInst_static_get_doc[] = 
"Class: oaTimeAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModInst* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModInst* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::get(p1.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstp result= (oaTimeAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModInst_FromoaTimeAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModInst_static_find,METH_VARARGS,oaTimeAppDef_oaModInst_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModInst_static_get,METH_VARARGS,oaTimeAppDef_oaModInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModInst_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModInst",
           (PyObject*)(&PyoaTimeAppDef_oaModInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModInst_Type.tp_dict;
    for(method=oaTimeAppDef_oaModInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModInstHeaderObject* self = (PyoaTimeAppDef_oaModInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModInstHeader)
    {
        PyParamoaTimeAppDef_oaModInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModInstHeader, Choices are:\n"
        "    (oaTimeAppDef_oaModInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModInstHeader_tp_dealloc(PyoaTimeAppDef_oaModInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModInstHeader value;
    int convert_status=PyoaTimeAppDef_oaModInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaModInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModInstHeader v1;
    PyParamoaTimeAppDef_oaModInstHeader v2;
    int convert_status1=PyoaTimeAppDef_oaModInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModInstHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModInstHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModInstHeader**) ((PyoaTimeAppDef_oaModInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(oaTimeAppDef_oaModInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModInstHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaModInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModInstHeaderObject* self = (PyoaTimeAppDef_oaModInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(oaTimeAppDef_oaModInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaModInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModInstHeaderObject* self = (PyoaTimeAppDef_oaModInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstHeader_get_doc[] = 
"Class: oaTimeAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaModInstHeader)\n"
"    Calls: oaTime get(const oaModInstHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModInstHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstHeaderObject* self=(PyoaTimeAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstHeaderObject* self=(PyoaTimeAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstHeader_set_doc[] = 
"Class: oaTimeAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaModInstHeader,oaTime)\n"
"    Calls: void set(oaModInstHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModInstHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstHeaderObject* self=(PyoaTimeAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaModInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModInstHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModInstHeader data;
  int convert_status=PyoaTimeAppDef_oaModInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModInstHeader_get,METH_VARARGS,oaTimeAppDef_oaModInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModInstHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaModInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModInstHeader_set,METH_VARARGS,oaTimeAppDef_oaModInstHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModInstHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModInstHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaModInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstHeader_doc[] = 
"Class: oaTimeAppDef_oaModInstHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModInstHeader)\n"
"    Calls: (const oaTimeAppDef_oaModInstHeader&)\n"
"    Signature: oaTimeAppDef_oaModInstHeader||cref-oaTimeAppDef_oaModInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModInstHeader",
    sizeof(PyoaTimeAppDef_oaModInstHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaModInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaModInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstHeaderp result= (oaTimeAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModInstHeader_FromoaTimeAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModInstHeader_static_find,METH_VARARGS,oaTimeAppDef_oaModInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModInstHeader_static_get,METH_VARARGS,oaTimeAppDef_oaModInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModInstHeader",
           (PyObject*)(&PyoaTimeAppDef_oaModInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModInstHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaModInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModInstTermObject* self = (PyoaTimeAppDef_oaModInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModInstTerm)
    {
        PyParamoaTimeAppDef_oaModInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModInstTerm, Choices are:\n"
        "    (oaTimeAppDef_oaModInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModInstTerm_tp_dealloc(PyoaTimeAppDef_oaModInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModInstTerm value;
    int convert_status=PyoaTimeAppDef_oaModInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaTimeAppDef_oaModInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModInstTerm v1;
    PyParamoaTimeAppDef_oaModInstTerm v2;
    int convert_status1=PyoaTimeAppDef_oaModInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModInstTerm_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModInstTerm_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModInstTerm**) ((PyoaTimeAppDef_oaModInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(oaTimeAppDef_oaModInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModInstTerm* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModInstTerm_Type.tp_alloc(&PyoaTimeAppDef_oaModInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModInstTermObject* self = (PyoaTimeAppDef_oaModInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(oaTimeAppDef_oaModInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModInstTerm_Type.tp_alloc(&PyoaTimeAppDef_oaModInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModInstTermObject* self = (PyoaTimeAppDef_oaModInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstTerm_get_doc[] = 
"Class: oaTimeAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaModInstTerm)\n"
"    Calls: oaTime get(const oaModInstTerm* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModInstTerm,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInstTerm data;
    int convert_status=PyoaTimeAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstTermObject* self=(PyoaTimeAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstTerm_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModInstTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInstTerm data;
    int convert_status=PyoaTimeAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstTermObject* self=(PyoaTimeAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstTerm_set_doc[] = 
"Class: oaTimeAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaModInstTerm,oaTime)\n"
"    Calls: void set(oaModInstTerm* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModInstTerm,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModInstTerm data;
    int convert_status=PyoaTimeAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModInstTermObject* self=(PyoaTimeAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstTerm_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstTerm_isNull_doc[] =
"Class: oaTimeAppDef_oaModInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModInstTerm data;
    int convert_status=PyoaTimeAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModInstTerm_assign_doc[] = 
"Class: oaTimeAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModInstTerm data;
  int convert_status=PyoaTimeAppDef_oaModInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModInstTerm_get,METH_VARARGS,oaTimeAppDef_oaModInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModInstTerm_getDefault,METH_VARARGS,oaTimeAppDef_oaModInstTerm_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModInstTerm_set,METH_VARARGS,oaTimeAppDef_oaModInstTerm_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModInstTerm_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModInstTerm_tp_assign,METH_VARARGS,oaTimeAppDef_oaModInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstTerm_doc[] = 
"Class: oaTimeAppDef_oaModInstTerm\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModInstTerm)\n"
"    Calls: (const oaTimeAppDef_oaModInstTerm&)\n"
"    Signature: oaTimeAppDef_oaModInstTerm||cref-oaTimeAppDef_oaModInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModInstTerm",
    sizeof(PyoaTimeAppDef_oaModInstTermObject),
    0,
    (destructor)oaTimeAppDef_oaModInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstTerm_static_find_doc[] = 
"Class: oaTimeAppDef_oaModInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::find(p1.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModInstTerm_static_get_doc[] = 
"Class: oaTimeAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::get(p1.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModInstTermp result= (oaTimeAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModInstTerm_FromoaTimeAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModInstTerm_static_find,METH_VARARGS,oaTimeAppDef_oaModInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModInstTerm_static_get,METH_VARARGS,oaTimeAppDef_oaModInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModInstTerm",
           (PyObject*)(&PyoaTimeAppDef_oaModInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModInstTerm_Type.tp_dict;
    for(method=oaTimeAppDef_oaModInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModModuleInstHeaderObject* self = (PyoaTimeAppDef_oaModModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModModuleInstHeader)
    {
        PyParamoaTimeAppDef_oaModModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModModuleInstHeader, Choices are:\n"
        "    (oaTimeAppDef_oaModModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModModuleInstHeader_tp_dealloc(PyoaTimeAppDef_oaModModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModModuleInstHeader value;
    int convert_status=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaTimeAppDef_oaModModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModModuleInstHeader v1;
    PyParamoaTimeAppDef_oaModModuleInstHeader v2;
    int convert_status1=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModModuleInstHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModModuleInstHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModModuleInstHeader**) ((PyoaTimeAppDef_oaModModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(oaTimeAppDef_oaModModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModModuleInstHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaModModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModModuleInstHeaderObject* self = (PyoaTimeAppDef_oaModModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(oaTimeAppDef_oaModModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaModModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModModuleInstHeaderObject* self = (PyoaTimeAppDef_oaModModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModModuleInstHeader_get_doc[] = 
"Class: oaTimeAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaModModuleInstHeader)\n"
"    Calls: oaTime get(const oaModModuleInstHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModModuleInstHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModModuleInstHeaderObject* self=(PyoaTimeAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModModuleInstHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModModuleInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModModuleInstHeaderObject* self=(PyoaTimeAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModModuleInstHeader_set_doc[] = 
"Class: oaTimeAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaModModuleInstHeader,oaTime)\n"
"    Calls: void set(oaModModuleInstHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModModuleInstHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModModuleInstHeaderObject* self=(PyoaTimeAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModModuleInstHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModModuleInstHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaModModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModModuleInstHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModModuleInstHeader data;
  int convert_status=PyoaTimeAppDef_oaModModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModModuleInstHeader_get,METH_VARARGS,oaTimeAppDef_oaModModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModModuleInstHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaModModuleInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModModuleInstHeader_set,METH_VARARGS,oaTimeAppDef_oaModModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModModuleInstHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModModuleInstHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaModModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModModuleInstHeader_doc[] = 
"Class: oaTimeAppDef_oaModModuleInstHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModModuleInstHeader)\n"
"    Calls: (const oaTimeAppDef_oaModModuleInstHeader&)\n"
"    Signature: oaTimeAppDef_oaModModuleInstHeader||cref-oaTimeAppDef_oaModModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModModuleInstHeader",
    sizeof(PyoaTimeAppDef_oaModModuleInstHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaModModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModModuleInstHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaModModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModModuleInstHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModModuleInstHeaderp result= (oaTimeAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModModuleInstHeader_FromoaTimeAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModModuleInstHeader_static_find,METH_VARARGS,oaTimeAppDef_oaModModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModModuleInstHeader_static_get,METH_VARARGS,oaTimeAppDef_oaModModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModModuleInstHeader",
           (PyObject*)(&PyoaTimeAppDef_oaModModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModModuleInstHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaModModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModNetObject* self = (PyoaTimeAppDef_oaModNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModNet)
    {
        PyParamoaTimeAppDef_oaModNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModNet, Choices are:\n"
        "    (oaTimeAppDef_oaModNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModNet_tp_dealloc(PyoaTimeAppDef_oaModNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModNet_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModNet value;
    int convert_status=PyoaTimeAppDef_oaModNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaTimeAppDef_oaModNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModNet v1;
    PyParamoaTimeAppDef_oaModNet v2;
    int convert_status1=PyoaTimeAppDef_oaModNet_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModNet_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModNet_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModNet**) ((PyoaTimeAppDef_oaModNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(oaTimeAppDef_oaModNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModNet* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModNet_Type.tp_alloc(&PyoaTimeAppDef_oaModNet_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModNetObject* self = (PyoaTimeAppDef_oaModNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(oaTimeAppDef_oaModNet* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModNet_Type.tp_alloc(&PyoaTimeAppDef_oaModNet_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModNetObject* self = (PyoaTimeAppDef_oaModNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModNet_get_doc[] = 
"Class: oaTimeAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaModNet)\n"
"    Calls: oaTime get(const oaModNet* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModNet,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModNet data;
    int convert_status=PyoaTimeAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModNetObject* self=(PyoaTimeAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModNet_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModNet data;
    int convert_status=PyoaTimeAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModNetObject* self=(PyoaTimeAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModNet_set_doc[] = 
"Class: oaTimeAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaModNet,oaTime)\n"
"    Calls: void set(oaModNet* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModNet,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModNet data;
    int convert_status=PyoaTimeAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModNetObject* self=(PyoaTimeAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModNet_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModNet_isNull_doc[] =
"Class: oaTimeAppDef_oaModNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModNet data;
    int convert_status=PyoaTimeAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModNet_assign_doc[] = 
"Class: oaTimeAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModNet data;
  int convert_status=PyoaTimeAppDef_oaModNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModNet_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModNet_get,METH_VARARGS,oaTimeAppDef_oaModNet_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModNet_getDefault,METH_VARARGS,oaTimeAppDef_oaModNet_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModNet_set,METH_VARARGS,oaTimeAppDef_oaModNet_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModNet_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModNet_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModNet_tp_assign,METH_VARARGS,oaTimeAppDef_oaModNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModNet_doc[] = 
"Class: oaTimeAppDef_oaModNet\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModNet)\n"
"    Calls: (const oaTimeAppDef_oaModNet&)\n"
"    Signature: oaTimeAppDef_oaModNet||cref-oaTimeAppDef_oaModNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModNet",
    sizeof(PyoaTimeAppDef_oaModNetObject),
    0,
    (destructor)oaTimeAppDef_oaModNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModNet_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModNet_static_find_doc[] = 
"Class: oaTimeAppDef_oaModNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModNet|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::find(p1.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModNet_static_get_doc[] = 
"Class: oaTimeAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModNet* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModNet* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::get(p1.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModNetp result= (oaTimeAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModNet_FromoaTimeAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModNet_static_find,METH_VARARGS,oaTimeAppDef_oaModNet_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModNet_static_get,METH_VARARGS,oaTimeAppDef_oaModNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModNet_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModNet",
           (PyObject*)(&PyoaTimeAppDef_oaModNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModNet_Type.tp_dict;
    for(method=oaTimeAppDef_oaModNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModTermObject* self = (PyoaTimeAppDef_oaModTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModTerm)
    {
        PyParamoaTimeAppDef_oaModTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModTerm, Choices are:\n"
        "    (oaTimeAppDef_oaModTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModTerm_tp_dealloc(PyoaTimeAppDef_oaModTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModTerm_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModTerm value;
    int convert_status=PyoaTimeAppDef_oaModTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaTimeAppDef_oaModTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModTerm v1;
    PyParamoaTimeAppDef_oaModTerm v2;
    int convert_status1=PyoaTimeAppDef_oaModTerm_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModTerm_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModTerm_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModTerm**) ((PyoaTimeAppDef_oaModTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(oaTimeAppDef_oaModTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModTerm* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModTerm_Type.tp_alloc(&PyoaTimeAppDef_oaModTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModTermObject* self = (PyoaTimeAppDef_oaModTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(oaTimeAppDef_oaModTerm* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModTerm_Type.tp_alloc(&PyoaTimeAppDef_oaModTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModTermObject* self = (PyoaTimeAppDef_oaModTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModTerm_get_doc[] = 
"Class: oaTimeAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaModTerm)\n"
"    Calls: oaTime get(const oaModTerm* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModTerm,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModTerm data;
    int convert_status=PyoaTimeAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModTermObject* self=(PyoaTimeAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModTerm_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModTerm data;
    int convert_status=PyoaTimeAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModTermObject* self=(PyoaTimeAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModTerm_set_doc[] = 
"Class: oaTimeAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaModTerm,oaTime)\n"
"    Calls: void set(oaModTerm* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModTerm,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModTerm data;
    int convert_status=PyoaTimeAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModTermObject* self=(PyoaTimeAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModTerm_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModTerm_isNull_doc[] =
"Class: oaTimeAppDef_oaModTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModTerm data;
    int convert_status=PyoaTimeAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModTerm_assign_doc[] = 
"Class: oaTimeAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModTerm data;
  int convert_status=PyoaTimeAppDef_oaModTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModTerm_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModTerm_get,METH_VARARGS,oaTimeAppDef_oaModTerm_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModTerm_getDefault,METH_VARARGS,oaTimeAppDef_oaModTerm_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModTerm_set,METH_VARARGS,oaTimeAppDef_oaModTerm_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModTerm_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModTerm_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModTerm_tp_assign,METH_VARARGS,oaTimeAppDef_oaModTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModTerm_doc[] = 
"Class: oaTimeAppDef_oaModTerm\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModTerm)\n"
"    Calls: (const oaTimeAppDef_oaModTerm&)\n"
"    Signature: oaTimeAppDef_oaModTerm||cref-oaTimeAppDef_oaModTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModTerm",
    sizeof(PyoaTimeAppDef_oaModTermObject),
    0,
    (destructor)oaTimeAppDef_oaModTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModTerm_static_find_doc[] = 
"Class: oaTimeAppDef_oaModTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModTerm|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::find(p1.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModTerm_static_get_doc[] = 
"Class: oaTimeAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModTerm* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModTerm* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::get(p1.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModTermp result= (oaTimeAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModTerm_FromoaTimeAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModTerm_static_find,METH_VARARGS,oaTimeAppDef_oaModTerm_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModTerm_static_get,METH_VARARGS,oaTimeAppDef_oaModTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModTerm",
           (PyObject*)(&PyoaTimeAppDef_oaModTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModTerm_Type.tp_dict;
    for(method=oaTimeAppDef_oaModTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModVectorInstDefObject* self = (PyoaTimeAppDef_oaModVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModVectorInstDef)
    {
        PyParamoaTimeAppDef_oaModVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModVectorInstDef, Choices are:\n"
        "    (oaTimeAppDef_oaModVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModVectorInstDef_tp_dealloc(PyoaTimeAppDef_oaModVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModVectorInstDef value;
    int convert_status=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaTimeAppDef_oaModVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModVectorInstDef v1;
    PyParamoaTimeAppDef_oaModVectorInstDef v2;
    int convert_status1=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModVectorInstDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModVectorInstDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModVectorInstDef**) ((PyoaTimeAppDef_oaModVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(oaTimeAppDef_oaModVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModVectorInstDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaTimeAppDef_oaModVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModVectorInstDefObject* self = (PyoaTimeAppDef_oaModVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(oaTimeAppDef_oaModVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaTimeAppDef_oaModVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModVectorInstDefObject* self = (PyoaTimeAppDef_oaModVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModVectorInstDef_get_doc[] = 
"Class: oaTimeAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaModVectorInstDef)\n"
"    Calls: oaTime get(const oaModVectorInstDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModVectorInstDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModVectorInstDefObject* self=(PyoaTimeAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModVectorInstDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModVectorInstDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModVectorInstDefObject* self=(PyoaTimeAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModVectorInstDef_set_doc[] = 
"Class: oaTimeAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaModVectorInstDef,oaTime)\n"
"    Calls: void set(oaModVectorInstDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModVectorInstDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModVectorInstDefObject* self=(PyoaTimeAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModVectorInstDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModVectorInstDef_isNull_doc[] =
"Class: oaTimeAppDef_oaModVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModVectorInstDef_assign_doc[] = 
"Class: oaTimeAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModVectorInstDef data;
  int convert_status=PyoaTimeAppDef_oaModVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModVectorInstDef_get,METH_VARARGS,oaTimeAppDef_oaModVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModVectorInstDef_getDefault,METH_VARARGS,oaTimeAppDef_oaModVectorInstDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModVectorInstDef_set,METH_VARARGS,oaTimeAppDef_oaModVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModVectorInstDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModVectorInstDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaModVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModVectorInstDef_doc[] = 
"Class: oaTimeAppDef_oaModVectorInstDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModVectorInstDef)\n"
"    Calls: (const oaTimeAppDef_oaModVectorInstDef&)\n"
"    Signature: oaTimeAppDef_oaModVectorInstDef||cref-oaTimeAppDef_oaModVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModVectorInstDef",
    sizeof(PyoaTimeAppDef_oaModVectorInstDefObject),
    0,
    (destructor)oaTimeAppDef_oaModVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModVectorInstDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaModVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::find(p1.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModVectorInstDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::get(p1.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModVectorInstDefp result= (oaTimeAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModVectorInstDef_FromoaTimeAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModVectorInstDef_static_find,METH_VARARGS,oaTimeAppDef_oaModVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModVectorInstDef_static_get,METH_VARARGS,oaTimeAppDef_oaModVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModVectorInstDef",
           (PyObject*)(&PyoaTimeAppDef_oaModVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModVectorInstDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaModVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaModule
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModule_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaModule_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaModuleObject* self = (PyoaTimeAppDef_oaModuleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaModule)
    {
        PyParamoaTimeAppDef_oaModule p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaModule_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaModule, Choices are:\n"
        "    (oaTimeAppDef_oaModule)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaModule_tp_dealloc(PyoaTimeAppDef_oaModuleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaModule_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaModule value;
    int convert_status=PyoaTimeAppDef_oaModule_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaTimeAppDef_oaModule::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaModule_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaModule v1;
    PyParamoaTimeAppDef_oaModule v2;
    int convert_status1=PyoaTimeAppDef_oaModule_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaModule_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaModule_Convert(PyObject* ob,PyParamoaTimeAppDef_oaModule* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaModule_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaModule**) ((PyoaTimeAppDef_oaModuleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaModule Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(oaTimeAppDef_oaModule** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaModule* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaModule_Type.tp_alloc(&PyoaTimeAppDef_oaModule_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaModuleObject* self = (PyoaTimeAppDef_oaModuleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(oaTimeAppDef_oaModule* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaModule_Type.tp_alloc(&PyoaTimeAppDef_oaModule_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaModuleObject* self = (PyoaTimeAppDef_oaModuleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModule_get_doc[] = 
"Class: oaTimeAppDef_oaModule, Function: get\n"
"  Paramegers: (oaModule)\n"
"    Calls: oaTime get(const oaModule* object)\n"
"    Signature: get|simple-oaTime|cptr-oaModule,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModule_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModule data;
    int convert_status=PyoaTimeAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModuleObject* self=(PyoaTimeAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModule_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModule_getDefault_doc[] = 
"Class: oaTimeAppDef_oaModule, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaModule_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModule data;
    int convert_status=PyoaTimeAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModuleObject* self=(PyoaTimeAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModule_set_doc[] = 
"Class: oaTimeAppDef_oaModule, Function: set\n"
"  Paramegers: (oaModule,oaTime)\n"
"    Calls: void set(oaModule* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaModule,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaModule_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaModule data;
    int convert_status=PyoaTimeAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaModuleObject* self=(PyoaTimeAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModule_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModule_isNull_doc[] =
"Class: oaTimeAppDef_oaModule, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaModule_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaModule data;
    int convert_status=PyoaTimeAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaModule_assign_doc[] = 
"Class: oaTimeAppDef_oaModule, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaModule_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaModule data;
  int convert_status=PyoaTimeAppDef_oaModule_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaModule p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaModule_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaModule_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaModule_get,METH_VARARGS,oaTimeAppDef_oaModule_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaModule_getDefault,METH_VARARGS,oaTimeAppDef_oaModule_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaModule_set,METH_VARARGS,oaTimeAppDef_oaModule_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaModule_tp_isNull,METH_VARARGS,oaTimeAppDef_oaModule_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaModule_tp_assign,METH_VARARGS,oaTimeAppDef_oaModule_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModule_doc[] = 
"Class: oaTimeAppDef_oaModule\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaModule)\n"
"    Calls: (const oaTimeAppDef_oaModule&)\n"
"    Signature: oaTimeAppDef_oaModule||cref-oaTimeAppDef_oaModule,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaModule_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaModule",
    sizeof(PyoaTimeAppDef_oaModuleObject),
    0,
    (destructor)oaTimeAppDef_oaModule_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaModule_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaModule_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaModule_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaModule_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaModule_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModule_static_find_doc[] = 
"Class: oaTimeAppDef_oaModule, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModule* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModule|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModule* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaModule_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::find(p1.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModule, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaModule_static_get_doc[] = 
"Class: oaTimeAppDef_oaModule, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaModule* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModule|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaModule* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModule|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModule* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModule|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaModule_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::get(p1.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaModulep result= (oaTimeAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaModule_FromoaTimeAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaModule, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaModule_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaModule_static_find,METH_VARARGS,oaTimeAppDef_oaModule_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaModule_static_get,METH_VARARGS,oaTimeAppDef_oaModule_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaModule_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaModule_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaModule\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaModule",
           (PyObject*)(&PyoaTimeAppDef_oaModule_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaModule\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaModule_Type.tp_dict;
    for(method=oaTimeAppDef_oaModule_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaNetObject* self = (PyoaTimeAppDef_oaNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaNet)
    {
        PyParamoaTimeAppDef_oaNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaNet, Choices are:\n"
        "    (oaTimeAppDef_oaNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaNet_tp_dealloc(PyoaTimeAppDef_oaNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaNet_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaNet value;
    int convert_status=PyoaTimeAppDef_oaNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaTimeAppDef_oaNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaNet v1;
    PyParamoaTimeAppDef_oaNet v2;
    int convert_status1=PyoaTimeAppDef_oaNet_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaNet_Convert(PyObject* ob,PyParamoaTimeAppDef_oaNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaNet_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaNet**) ((PyoaTimeAppDef_oaNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(oaTimeAppDef_oaNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaNet* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaNet_Type.tp_alloc(&PyoaTimeAppDef_oaNet_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaNetObject* self = (PyoaTimeAppDef_oaNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(oaTimeAppDef_oaNet* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaNet_Type.tp_alloc(&PyoaTimeAppDef_oaNet_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaNetObject* self = (PyoaTimeAppDef_oaNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNet_get_doc[] = 
"Class: oaTimeAppDef_oaNet, Function: get\n"
"  Paramegers: (oaNet)\n"
"    Calls: oaTime get(const oaNet* object)\n"
"    Signature: get|simple-oaTime|cptr-oaNet,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaNet data;
    int convert_status=PyoaTimeAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaNetObject* self=(PyoaTimeAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNet_getDefault_doc[] = 
"Class: oaTimeAppDef_oaNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaNet data;
    int convert_status=PyoaTimeAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaNetObject* self=(PyoaTimeAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNet_set_doc[] = 
"Class: oaTimeAppDef_oaNet, Function: set\n"
"  Paramegers: (oaNet,oaTime)\n"
"    Calls: void set(oaNet* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaNet,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaNet data;
    int convert_status=PyoaTimeAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaNetObject* self=(PyoaTimeAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNet_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNet_isNull_doc[] =
"Class: oaTimeAppDef_oaNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaNet data;
    int convert_status=PyoaTimeAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaNet_assign_doc[] = 
"Class: oaTimeAppDef_oaNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaNet data;
  int convert_status=PyoaTimeAppDef_oaNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaNet_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaNet_get,METH_VARARGS,oaTimeAppDef_oaNet_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaNet_getDefault,METH_VARARGS,oaTimeAppDef_oaNet_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaNet_set,METH_VARARGS,oaTimeAppDef_oaNet_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaNet_tp_isNull,METH_VARARGS,oaTimeAppDef_oaNet_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaNet_tp_assign,METH_VARARGS,oaTimeAppDef_oaNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNet_doc[] = 
"Class: oaTimeAppDef_oaNet\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaNet)\n"
"    Calls: (const oaTimeAppDef_oaNet&)\n"
"    Signature: oaTimeAppDef_oaNet||cref-oaTimeAppDef_oaNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaNet",
    sizeof(PyoaTimeAppDef_oaNetObject),
    0,
    (destructor)oaTimeAppDef_oaNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaNet_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNet_static_find_doc[] = 
"Class: oaTimeAppDef_oaNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaNet|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::find(p1.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNet_static_get_doc[] = 
"Class: oaTimeAppDef_oaNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaNet* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaNet* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::get(p1.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNetp result= (oaTimeAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaNet_FromoaTimeAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaNet_static_find,METH_VARARGS,oaTimeAppDef_oaNet_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaNet_static_get,METH_VARARGS,oaTimeAppDef_oaNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaNet_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaNet",
           (PyObject*)(&PyoaTimeAppDef_oaNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaNet_Type.tp_dict;
    for(method=oaTimeAppDef_oaNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaNode
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaNode_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaNode_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaNodeObject* self = (PyoaTimeAppDef_oaNodeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaNode)
    {
        PyParamoaTimeAppDef_oaNode p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaNode_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaNode, Choices are:\n"
        "    (oaTimeAppDef_oaNode)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaNode_tp_dealloc(PyoaTimeAppDef_oaNodeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaNode_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaNode value;
    int convert_status=PyoaTimeAppDef_oaNode_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[41];
    sprintf(buffer,"<oaTimeAppDef_oaNode::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaNode_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaNode v1;
    PyParamoaTimeAppDef_oaNode v2;
    int convert_status1=PyoaTimeAppDef_oaNode_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaNode_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaNode_Convert(PyObject* ob,PyParamoaTimeAppDef_oaNode* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaNode_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaNode**) ((PyoaTimeAppDef_oaNodeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaNode Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(oaTimeAppDef_oaNode** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaNode* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaNode_Type.tp_alloc(&PyoaTimeAppDef_oaNode_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaNodeObject* self = (PyoaTimeAppDef_oaNodeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(oaTimeAppDef_oaNode* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaNode_Type.tp_alloc(&PyoaTimeAppDef_oaNode_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaNodeObject* self = (PyoaTimeAppDef_oaNodeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNode_get_doc[] = 
"Class: oaTimeAppDef_oaNode, Function: get\n"
"  Paramegers: (oaNode)\n"
"    Calls: oaTime get(const oaNode* object)\n"
"    Signature: get|simple-oaTime|cptr-oaNode,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaNode_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaNode data;
    int convert_status=PyoaTimeAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaNodeObject* self=(PyoaTimeAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNode_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNode_getDefault_doc[] = 
"Class: oaTimeAppDef_oaNode, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaNode_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaNode data;
    int convert_status=PyoaTimeAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaNodeObject* self=(PyoaTimeAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNode_set_doc[] = 
"Class: oaTimeAppDef_oaNode, Function: set\n"
"  Paramegers: (oaNode,oaTime)\n"
"    Calls: void set(oaNode* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaNode,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaNode_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaNode data;
    int convert_status=PyoaTimeAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaNodeObject* self=(PyoaTimeAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNode_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNode_isNull_doc[] =
"Class: oaTimeAppDef_oaNode, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaNode_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaNode data;
    int convert_status=PyoaTimeAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaNode_assign_doc[] = 
"Class: oaTimeAppDef_oaNode, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaNode_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaNode data;
  int convert_status=PyoaTimeAppDef_oaNode_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaNode p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaNode_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaNode_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaNode_get,METH_VARARGS,oaTimeAppDef_oaNode_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaNode_getDefault,METH_VARARGS,oaTimeAppDef_oaNode_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaNode_set,METH_VARARGS,oaTimeAppDef_oaNode_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaNode_tp_isNull,METH_VARARGS,oaTimeAppDef_oaNode_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaNode_tp_assign,METH_VARARGS,oaTimeAppDef_oaNode_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNode_doc[] = 
"Class: oaTimeAppDef_oaNode\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaNode)\n"
"    Calls: (const oaTimeAppDef_oaNode&)\n"
"    Signature: oaTimeAppDef_oaNode||cref-oaTimeAppDef_oaNode,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaNode_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaNode",
    sizeof(PyoaTimeAppDef_oaNodeObject),
    0,
    (destructor)oaTimeAppDef_oaNode_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaNode_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaNode_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaNode_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaNode_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaNode_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNode_static_find_doc[] = 
"Class: oaTimeAppDef_oaNode, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaNode* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaNode|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaNode* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaNode_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::find(p1.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaNode, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaNode_static_get_doc[] = 
"Class: oaTimeAppDef_oaNode, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaNode* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNode|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaNode* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNode|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaNode* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNode|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaNode_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::get(p1.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaNodep result= (oaTimeAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaNode_FromoaTimeAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaNode, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaNode_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaNode_static_find,METH_VARARGS,oaTimeAppDef_oaNode_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaNode_static_get,METH_VARARGS,oaTimeAppDef_oaNode_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaNode_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaNode_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaNode\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaNode",
           (PyObject*)(&PyoaTimeAppDef_oaNode_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaNode\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaNode_Type.tp_dict;
    for(method=oaTimeAppDef_oaNode_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccAssignmentObject* self = (PyoaTimeAppDef_oaOccAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccAssignment)
    {
        PyParamoaTimeAppDef_oaOccAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccAssignment, Choices are:\n"
        "    (oaTimeAppDef_oaOccAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccAssignment_tp_dealloc(PyoaTimeAppDef_oaOccAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccAssignment_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccAssignment value;
    int convert_status=PyoaTimeAppDef_oaOccAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaOccAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccAssignment v1;
    PyParamoaTimeAppDef_oaOccAssignment v2;
    int convert_status1=PyoaTimeAppDef_oaOccAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccAssignment_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccAssignment_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccAssignment**) ((PyoaTimeAppDef_oaOccAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(oaTimeAppDef_oaOccAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccAssignment* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccAssignment_Type.tp_alloc(&PyoaTimeAppDef_oaOccAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccAssignmentObject* self = (PyoaTimeAppDef_oaOccAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(oaTimeAppDef_oaOccAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccAssignment_Type.tp_alloc(&PyoaTimeAppDef_oaOccAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccAssignmentObject* self = (PyoaTimeAppDef_oaOccAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccAssignment_get_doc[] = 
"Class: oaTimeAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaOccAssignment)\n"
"    Calls: oaTime get(const oaOccAssignment* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccAssignment,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccAssignment data;
    int convert_status=PyoaTimeAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccAssignmentObject* self=(PyoaTimeAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccAssignment_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccAssignment, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccAssignment data;
    int convert_status=PyoaTimeAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccAssignmentObject* self=(PyoaTimeAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccAssignment_set_doc[] = 
"Class: oaTimeAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaOccAssignment,oaTime)\n"
"    Calls: void set(oaOccAssignment* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccAssignment,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccAssignment data;
    int convert_status=PyoaTimeAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccAssignmentObject* self=(PyoaTimeAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccAssignment_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccAssignment_isNull_doc[] =
"Class: oaTimeAppDef_oaOccAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccAssignment data;
    int convert_status=PyoaTimeAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccAssignment_assign_doc[] = 
"Class: oaTimeAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccAssignment data;
  int convert_status=PyoaTimeAppDef_oaOccAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccAssignment_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccAssignment_get,METH_VARARGS,oaTimeAppDef_oaOccAssignment_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccAssignment_getDefault,METH_VARARGS,oaTimeAppDef_oaOccAssignment_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccAssignment_set,METH_VARARGS,oaTimeAppDef_oaOccAssignment_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccAssignment_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccAssignment_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccAssignment_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccAssignment_doc[] = 
"Class: oaTimeAppDef_oaOccAssignment\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccAssignment)\n"
"    Calls: (const oaTimeAppDef_oaOccAssignment&)\n"
"    Signature: oaTimeAppDef_oaOccAssignment||cref-oaTimeAppDef_oaOccAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccAssignment",
    sizeof(PyoaTimeAppDef_oaOccAssignmentObject),
    0,
    (destructor)oaTimeAppDef_oaOccAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccAssignment_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::find(p1.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccAssignment_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::get(p1.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccAssignmentp result= (oaTimeAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccAssignment_FromoaTimeAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccAssignment_static_find,METH_VARARGS,oaTimeAppDef_oaOccAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccAssignment_static_get,METH_VARARGS,oaTimeAppDef_oaOccAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccAssignment",
           (PyObject*)(&PyoaTimeAppDef_oaOccAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccAssignment_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccBusNetDefObject* self = (PyoaTimeAppDef_oaOccBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccBusNetDef)
    {
        PyParamoaTimeAppDef_oaOccBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccBusNetDef, Choices are:\n"
        "    (oaTimeAppDef_oaOccBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccBusNetDef_tp_dealloc(PyoaTimeAppDef_oaOccBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccBusNetDef value;
    int convert_status=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaTimeAppDef_oaOccBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccBusNetDef v1;
    PyParamoaTimeAppDef_oaOccBusNetDef v2;
    int convert_status1=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccBusNetDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccBusNetDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccBusNetDef**) ((PyoaTimeAppDef_oaOccBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(oaTimeAppDef_oaOccBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccBusNetDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccBusNetDefObject* self = (PyoaTimeAppDef_oaOccBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(oaTimeAppDef_oaOccBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccBusNetDefObject* self = (PyoaTimeAppDef_oaOccBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusNetDef_get_doc[] = 
"Class: oaTimeAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaOccBusNetDef)\n"
"    Calls: oaTime get(const oaOccBusNetDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccBusNetDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccBusNetDefObject* self=(PyoaTimeAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusNetDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccBusNetDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccBusNetDefObject* self=(PyoaTimeAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusNetDef_set_doc[] = 
"Class: oaTimeAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaOccBusNetDef,oaTime)\n"
"    Calls: void set(oaOccBusNetDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccBusNetDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccBusNetDefObject* self=(PyoaTimeAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusNetDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusNetDef_isNull_doc[] =
"Class: oaTimeAppDef_oaOccBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccBusNetDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccBusNetDef_assign_doc[] = 
"Class: oaTimeAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccBusNetDef data;
  int convert_status=PyoaTimeAppDef_oaOccBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccBusNetDef_get,METH_VARARGS,oaTimeAppDef_oaOccBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccBusNetDef_getDefault,METH_VARARGS,oaTimeAppDef_oaOccBusNetDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccBusNetDef_set,METH_VARARGS,oaTimeAppDef_oaOccBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccBusNetDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccBusNetDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusNetDef_doc[] = 
"Class: oaTimeAppDef_oaOccBusNetDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccBusNetDef)\n"
"    Calls: (const oaTimeAppDef_oaOccBusNetDef&)\n"
"    Signature: oaTimeAppDef_oaOccBusNetDef||cref-oaTimeAppDef_oaOccBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccBusNetDef",
    sizeof(PyoaTimeAppDef_oaOccBusNetDefObject),
    0,
    (destructor)oaTimeAppDef_oaOccBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusNetDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::find(p1.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusNetDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::get(p1.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusNetDefp result= (oaTimeAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccBusNetDef_FromoaTimeAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccBusNetDef_static_find,METH_VARARGS,oaTimeAppDef_oaOccBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccBusNetDef_static_get,METH_VARARGS,oaTimeAppDef_oaOccBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccBusNetDef",
           (PyObject*)(&PyoaTimeAppDef_oaOccBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccBusNetDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccBusTermDefObject* self = (PyoaTimeAppDef_oaOccBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccBusTermDef)
    {
        PyParamoaTimeAppDef_oaOccBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccBusTermDef, Choices are:\n"
        "    (oaTimeAppDef_oaOccBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccBusTermDef_tp_dealloc(PyoaTimeAppDef_oaOccBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccBusTermDef value;
    int convert_status=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaOccBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccBusTermDef v1;
    PyParamoaTimeAppDef_oaOccBusTermDef v2;
    int convert_status1=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccBusTermDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccBusTermDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccBusTermDef**) ((PyoaTimeAppDef_oaOccBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(oaTimeAppDef_oaOccBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccBusTermDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccBusTermDefObject* self = (PyoaTimeAppDef_oaOccBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(oaTimeAppDef_oaOccBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccBusTermDefObject* self = (PyoaTimeAppDef_oaOccBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusTermDef_get_doc[] = 
"Class: oaTimeAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaOccBusTermDef)\n"
"    Calls: oaTime get(const oaOccBusTermDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccBusTermDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccBusTermDefObject* self=(PyoaTimeAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusTermDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccBusTermDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccBusTermDefObject* self=(PyoaTimeAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusTermDef_set_doc[] = 
"Class: oaTimeAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaOccBusTermDef,oaTime)\n"
"    Calls: void set(oaOccBusTermDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccBusTermDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccBusTermDefObject* self=(PyoaTimeAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusTermDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusTermDef_isNull_doc[] =
"Class: oaTimeAppDef_oaOccBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccBusTermDef data;
    int convert_status=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccBusTermDef_assign_doc[] = 
"Class: oaTimeAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccBusTermDef data;
  int convert_status=PyoaTimeAppDef_oaOccBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccBusTermDef_get,METH_VARARGS,oaTimeAppDef_oaOccBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccBusTermDef_getDefault,METH_VARARGS,oaTimeAppDef_oaOccBusTermDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccBusTermDef_set,METH_VARARGS,oaTimeAppDef_oaOccBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccBusTermDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccBusTermDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusTermDef_doc[] = 
"Class: oaTimeAppDef_oaOccBusTermDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccBusTermDef)\n"
"    Calls: (const oaTimeAppDef_oaOccBusTermDef&)\n"
"    Signature: oaTimeAppDef_oaOccBusTermDef||cref-oaTimeAppDef_oaOccBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccBusTermDef",
    sizeof(PyoaTimeAppDef_oaOccBusTermDefObject),
    0,
    (destructor)oaTimeAppDef_oaOccBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusTermDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::find(p1.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccBusTermDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::get(p1.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccBusTermDefp result= (oaTimeAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccBusTermDef_FromoaTimeAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccBusTermDef_static_find,METH_VARARGS,oaTimeAppDef_oaOccBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccBusTermDef_static_get,METH_VARARGS,oaTimeAppDef_oaOccBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccBusTermDef",
           (PyObject*)(&PyoaTimeAppDef_oaOccBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccBusTermDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccConnectDefObject* self = (PyoaTimeAppDef_oaOccConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccConnectDef)
    {
        PyParamoaTimeAppDef_oaOccConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccConnectDef, Choices are:\n"
        "    (oaTimeAppDef_oaOccConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccConnectDef_tp_dealloc(PyoaTimeAppDef_oaOccConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccConnectDef value;
    int convert_status=PyoaTimeAppDef_oaOccConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaOccConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccConnectDef v1;
    PyParamoaTimeAppDef_oaOccConnectDef v2;
    int convert_status1=PyoaTimeAppDef_oaOccConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccConnectDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccConnectDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccConnectDef**) ((PyoaTimeAppDef_oaOccConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(oaTimeAppDef_oaOccConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccConnectDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccConnectDefObject* self = (PyoaTimeAppDef_oaOccConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(oaTimeAppDef_oaOccConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccConnectDefObject* self = (PyoaTimeAppDef_oaOccConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccConnectDef_get_doc[] = 
"Class: oaTimeAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaOccConnectDef)\n"
"    Calls: oaTime get(const oaOccConnectDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccConnectDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccConnectDef data;
    int convert_status=PyoaTimeAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccConnectDefObject* self=(PyoaTimeAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccConnectDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccConnectDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccConnectDef data;
    int convert_status=PyoaTimeAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccConnectDefObject* self=(PyoaTimeAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccConnectDef_set_doc[] = 
"Class: oaTimeAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaOccConnectDef,oaTime)\n"
"    Calls: void set(oaOccConnectDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccConnectDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccConnectDef data;
    int convert_status=PyoaTimeAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccConnectDefObject* self=(PyoaTimeAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccConnectDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccConnectDef_isNull_doc[] =
"Class: oaTimeAppDef_oaOccConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccConnectDef data;
    int convert_status=PyoaTimeAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccConnectDef_assign_doc[] = 
"Class: oaTimeAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccConnectDef data;
  int convert_status=PyoaTimeAppDef_oaOccConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccConnectDef_get,METH_VARARGS,oaTimeAppDef_oaOccConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccConnectDef_getDefault,METH_VARARGS,oaTimeAppDef_oaOccConnectDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccConnectDef_set,METH_VARARGS,oaTimeAppDef_oaOccConnectDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccConnectDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccConnectDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccConnectDef_doc[] = 
"Class: oaTimeAppDef_oaOccConnectDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccConnectDef)\n"
"    Calls: (const oaTimeAppDef_oaOccConnectDef&)\n"
"    Signature: oaTimeAppDef_oaOccConnectDef||cref-oaTimeAppDef_oaOccConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccConnectDef",
    sizeof(PyoaTimeAppDef_oaOccConnectDefObject),
    0,
    (destructor)oaTimeAppDef_oaOccConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccConnectDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::find(p1.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccConnectDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::get(p1.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccConnectDefp result= (oaTimeAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccConnectDef_FromoaTimeAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccConnectDef_static_find,METH_VARARGS,oaTimeAppDef_oaOccConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccConnectDef_static_get,METH_VARARGS,oaTimeAppDef_oaOccConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccConnectDef",
           (PyObject*)(&PyoaTimeAppDef_oaOccConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccConnectDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccInstObject* self = (PyoaTimeAppDef_oaOccInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccInst)
    {
        PyParamoaTimeAppDef_oaOccInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccInst, Choices are:\n"
        "    (oaTimeAppDef_oaOccInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccInst_tp_dealloc(PyoaTimeAppDef_oaOccInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccInst_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccInst value;
    int convert_status=PyoaTimeAppDef_oaOccInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaTimeAppDef_oaOccInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccInst v1;
    PyParamoaTimeAppDef_oaOccInst v2;
    int convert_status1=PyoaTimeAppDef_oaOccInst_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccInst_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccInst_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccInst**) ((PyoaTimeAppDef_oaOccInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(oaTimeAppDef_oaOccInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccInst* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccInst_Type.tp_alloc(&PyoaTimeAppDef_oaOccInst_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccInstObject* self = (PyoaTimeAppDef_oaOccInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(oaTimeAppDef_oaOccInst* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccInst_Type.tp_alloc(&PyoaTimeAppDef_oaOccInst_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccInstObject* self = (PyoaTimeAppDef_oaOccInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInst_get_doc[] = 
"Class: oaTimeAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaOccInst)\n"
"    Calls: oaTime get(const oaOccInst* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccInst,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInst data;
    int convert_status=PyoaTimeAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstObject* self=(PyoaTimeAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInst_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInst data;
    int convert_status=PyoaTimeAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstObject* self=(PyoaTimeAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInst_set_doc[] = 
"Class: oaTimeAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaOccInst,oaTime)\n"
"    Calls: void set(oaOccInst* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccInst,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInst data;
    int convert_status=PyoaTimeAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstObject* self=(PyoaTimeAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInst_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInst_isNull_doc[] =
"Class: oaTimeAppDef_oaOccInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccInst data;
    int convert_status=PyoaTimeAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccInst_assign_doc[] = 
"Class: oaTimeAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccInst data;
  int convert_status=PyoaTimeAppDef_oaOccInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccInst_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccInst_get,METH_VARARGS,oaTimeAppDef_oaOccInst_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccInst_getDefault,METH_VARARGS,oaTimeAppDef_oaOccInst_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccInst_set,METH_VARARGS,oaTimeAppDef_oaOccInst_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccInst_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccInst_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccInst_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInst_doc[] = 
"Class: oaTimeAppDef_oaOccInst\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccInst)\n"
"    Calls: (const oaTimeAppDef_oaOccInst&)\n"
"    Signature: oaTimeAppDef_oaOccInst||cref-oaTimeAppDef_oaOccInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccInst",
    sizeof(PyoaTimeAppDef_oaOccInstObject),
    0,
    (destructor)oaTimeAppDef_oaOccInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccInst_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInst_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccInst|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::find(p1.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInst_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccInst* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccInst* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInst|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::get(p1.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstp result= (oaTimeAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccInst_FromoaTimeAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccInst_static_find,METH_VARARGS,oaTimeAppDef_oaOccInst_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccInst_static_get,METH_VARARGS,oaTimeAppDef_oaOccInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccInst_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccInst",
           (PyObject*)(&PyoaTimeAppDef_oaOccInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccInst_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccInstHeaderObject* self = (PyoaTimeAppDef_oaOccInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccInstHeader)
    {
        PyParamoaTimeAppDef_oaOccInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccInstHeader, Choices are:\n"
        "    (oaTimeAppDef_oaOccInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccInstHeader_tp_dealloc(PyoaTimeAppDef_oaOccInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccInstHeader value;
    int convert_status=PyoaTimeAppDef_oaOccInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaOccInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccInstHeader v1;
    PyParamoaTimeAppDef_oaOccInstHeader v2;
    int convert_status1=PyoaTimeAppDef_oaOccInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccInstHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccInstHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccInstHeader**) ((PyoaTimeAppDef_oaOccInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(oaTimeAppDef_oaOccInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccInstHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaOccInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccInstHeaderObject* self = (PyoaTimeAppDef_oaOccInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(oaTimeAppDef_oaOccInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaOccInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccInstHeaderObject* self = (PyoaTimeAppDef_oaOccInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstHeader_get_doc[] = 
"Class: oaTimeAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaOccInstHeader)\n"
"    Calls: oaTime get(const oaOccInstHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccInstHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstHeaderObject* self=(PyoaTimeAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstHeaderObject* self=(PyoaTimeAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstHeader_set_doc[] = 
"Class: oaTimeAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaOccInstHeader,oaTime)\n"
"    Calls: void set(oaOccInstHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccInstHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstHeaderObject* self=(PyoaTimeAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaOccInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccInstHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccInstHeader data;
  int convert_status=PyoaTimeAppDef_oaOccInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccInstHeader_get,METH_VARARGS,oaTimeAppDef_oaOccInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccInstHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaOccInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccInstHeader_set,METH_VARARGS,oaTimeAppDef_oaOccInstHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccInstHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccInstHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstHeader_doc[] = 
"Class: oaTimeAppDef_oaOccInstHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccInstHeader)\n"
"    Calls: (const oaTimeAppDef_oaOccInstHeader&)\n"
"    Signature: oaTimeAppDef_oaOccInstHeader||cref-oaTimeAppDef_oaOccInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccInstHeader",
    sizeof(PyoaTimeAppDef_oaOccInstHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaOccInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstHeaderp result= (oaTimeAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccInstHeader_FromoaTimeAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccInstHeader_static_find,METH_VARARGS,oaTimeAppDef_oaOccInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccInstHeader_static_get,METH_VARARGS,oaTimeAppDef_oaOccInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccInstHeader",
           (PyObject*)(&PyoaTimeAppDef_oaOccInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccInstHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccInstTermObject* self = (PyoaTimeAppDef_oaOccInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccInstTerm)
    {
        PyParamoaTimeAppDef_oaOccInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccInstTerm, Choices are:\n"
        "    (oaTimeAppDef_oaOccInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccInstTerm_tp_dealloc(PyoaTimeAppDef_oaOccInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccInstTerm value;
    int convert_status=PyoaTimeAppDef_oaOccInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaTimeAppDef_oaOccInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccInstTerm v1;
    PyParamoaTimeAppDef_oaOccInstTerm v2;
    int convert_status1=PyoaTimeAppDef_oaOccInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccInstTerm_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccInstTerm_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccInstTerm**) ((PyoaTimeAppDef_oaOccInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(oaTimeAppDef_oaOccInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccInstTerm* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaTimeAppDef_oaOccInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccInstTermObject* self = (PyoaTimeAppDef_oaOccInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(oaTimeAppDef_oaOccInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaTimeAppDef_oaOccInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccInstTermObject* self = (PyoaTimeAppDef_oaOccInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstTerm_get_doc[] = 
"Class: oaTimeAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaOccInstTerm)\n"
"    Calls: oaTime get(const oaOccInstTerm* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccInstTerm,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInstTerm data;
    int convert_status=PyoaTimeAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstTermObject* self=(PyoaTimeAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstTerm_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccInstTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInstTerm data;
    int convert_status=PyoaTimeAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstTermObject* self=(PyoaTimeAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstTerm_set_doc[] = 
"Class: oaTimeAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaOccInstTerm,oaTime)\n"
"    Calls: void set(oaOccInstTerm* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccInstTerm,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccInstTerm data;
    int convert_status=PyoaTimeAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccInstTermObject* self=(PyoaTimeAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstTerm_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstTerm_isNull_doc[] =
"Class: oaTimeAppDef_oaOccInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccInstTerm data;
    int convert_status=PyoaTimeAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccInstTerm_assign_doc[] = 
"Class: oaTimeAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccInstTerm data;
  int convert_status=PyoaTimeAppDef_oaOccInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccInstTerm_get,METH_VARARGS,oaTimeAppDef_oaOccInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccInstTerm_getDefault,METH_VARARGS,oaTimeAppDef_oaOccInstTerm_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccInstTerm_set,METH_VARARGS,oaTimeAppDef_oaOccInstTerm_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccInstTerm_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccInstTerm_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstTerm_doc[] = 
"Class: oaTimeAppDef_oaOccInstTerm\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccInstTerm)\n"
"    Calls: (const oaTimeAppDef_oaOccInstTerm&)\n"
"    Signature: oaTimeAppDef_oaOccInstTerm||cref-oaTimeAppDef_oaOccInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccInstTerm",
    sizeof(PyoaTimeAppDef_oaOccInstTermObject),
    0,
    (destructor)oaTimeAppDef_oaOccInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstTerm_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::find(p1.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccInstTerm_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::get(p1.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccInstTermp result= (oaTimeAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccInstTerm_FromoaTimeAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccInstTerm_static_find,METH_VARARGS,oaTimeAppDef_oaOccInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccInstTerm_static_get,METH_VARARGS,oaTimeAppDef_oaOccInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccInstTerm",
           (PyObject*)(&PyoaTimeAppDef_oaOccInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccInstTerm_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccModuleInstHeaderObject* self = (PyoaTimeAppDef_oaOccModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccModuleInstHeader)
    {
        PyParamoaTimeAppDef_oaOccModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccModuleInstHeader, Choices are:\n"
        "    (oaTimeAppDef_oaOccModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccModuleInstHeader_tp_dealloc(PyoaTimeAppDef_oaOccModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccModuleInstHeader value;
    int convert_status=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaTimeAppDef_oaOccModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccModuleInstHeader v1;
    PyParamoaTimeAppDef_oaOccModuleInstHeader v2;
    int convert_status1=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccModuleInstHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccModuleInstHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccModuleInstHeader**) ((PyoaTimeAppDef_oaOccModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(oaTimeAppDef_oaOccModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccModuleInstHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaOccModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccModuleInstHeaderObject* self = (PyoaTimeAppDef_oaOccModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(oaTimeAppDef_oaOccModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaTimeAppDef_oaOccModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccModuleInstHeaderObject* self = (PyoaTimeAppDef_oaOccModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccModuleInstHeader_get_doc[] = 
"Class: oaTimeAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaOccModuleInstHeader)\n"
"    Calls: oaTime get(const oaOccModuleInstHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccModuleInstHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccModuleInstHeaderObject* self=(PyoaTimeAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccModuleInstHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccModuleInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccModuleInstHeaderObject* self=(PyoaTimeAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccModuleInstHeader_set_doc[] = 
"Class: oaTimeAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaOccModuleInstHeader,oaTime)\n"
"    Calls: void set(oaOccModuleInstHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccModuleInstHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccModuleInstHeaderObject* self=(PyoaTimeAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccModuleInstHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccModuleInstHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaOccModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccModuleInstHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccModuleInstHeader data;
  int convert_status=PyoaTimeAppDef_oaOccModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccModuleInstHeader_get,METH_VARARGS,oaTimeAppDef_oaOccModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccModuleInstHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaOccModuleInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccModuleInstHeader_set,METH_VARARGS,oaTimeAppDef_oaOccModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccModuleInstHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccModuleInstHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccModuleInstHeader_doc[] = 
"Class: oaTimeAppDef_oaOccModuleInstHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccModuleInstHeader)\n"
"    Calls: (const oaTimeAppDef_oaOccModuleInstHeader&)\n"
"    Signature: oaTimeAppDef_oaOccModuleInstHeader||cref-oaTimeAppDef_oaOccModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccModuleInstHeader",
    sizeof(PyoaTimeAppDef_oaOccModuleInstHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaOccModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccModuleInstHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccModuleInstHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccModuleInstHeaderp result= (oaTimeAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccModuleInstHeader_FromoaTimeAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccModuleInstHeader_static_find,METH_VARARGS,oaTimeAppDef_oaOccModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccModuleInstHeader_static_get,METH_VARARGS,oaTimeAppDef_oaOccModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccModuleInstHeader",
           (PyObject*)(&PyoaTimeAppDef_oaOccModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccModuleInstHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccNetObject* self = (PyoaTimeAppDef_oaOccNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccNet)
    {
        PyParamoaTimeAppDef_oaOccNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccNet, Choices are:\n"
        "    (oaTimeAppDef_oaOccNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccNet_tp_dealloc(PyoaTimeAppDef_oaOccNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccNet_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccNet value;
    int convert_status=PyoaTimeAppDef_oaOccNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaTimeAppDef_oaOccNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccNet v1;
    PyParamoaTimeAppDef_oaOccNet v2;
    int convert_status1=PyoaTimeAppDef_oaOccNet_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccNet_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccNet_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccNet**) ((PyoaTimeAppDef_oaOccNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(oaTimeAppDef_oaOccNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccNet* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccNet_Type.tp_alloc(&PyoaTimeAppDef_oaOccNet_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccNetObject* self = (PyoaTimeAppDef_oaOccNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(oaTimeAppDef_oaOccNet* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccNet_Type.tp_alloc(&PyoaTimeAppDef_oaOccNet_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccNetObject* self = (PyoaTimeAppDef_oaOccNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccNet_get_doc[] = 
"Class: oaTimeAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaOccNet)\n"
"    Calls: oaTime get(const oaOccNet* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccNet,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccNet data;
    int convert_status=PyoaTimeAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccNetObject* self=(PyoaTimeAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccNet_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccNet data;
    int convert_status=PyoaTimeAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccNetObject* self=(PyoaTimeAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccNet_set_doc[] = 
"Class: oaTimeAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaOccNet,oaTime)\n"
"    Calls: void set(oaOccNet* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccNet,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccNet data;
    int convert_status=PyoaTimeAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccNetObject* self=(PyoaTimeAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccNet_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccNet_isNull_doc[] =
"Class: oaTimeAppDef_oaOccNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccNet data;
    int convert_status=PyoaTimeAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccNet_assign_doc[] = 
"Class: oaTimeAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccNet data;
  int convert_status=PyoaTimeAppDef_oaOccNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccNet_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccNet_get,METH_VARARGS,oaTimeAppDef_oaOccNet_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccNet_getDefault,METH_VARARGS,oaTimeAppDef_oaOccNet_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccNet_set,METH_VARARGS,oaTimeAppDef_oaOccNet_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccNet_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccNet_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccNet_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccNet_doc[] = 
"Class: oaTimeAppDef_oaOccNet\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccNet)\n"
"    Calls: (const oaTimeAppDef_oaOccNet&)\n"
"    Signature: oaTimeAppDef_oaOccNet||cref-oaTimeAppDef_oaOccNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccNet",
    sizeof(PyoaTimeAppDef_oaOccNetObject),
    0,
    (destructor)oaTimeAppDef_oaOccNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccNet_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccNet_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccNet|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::find(p1.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccNet_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccNet* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccNet* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccNet|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::get(p1.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccNetp result= (oaTimeAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccNet_FromoaTimeAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccNet_static_find,METH_VARARGS,oaTimeAppDef_oaOccNet_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccNet_static_get,METH_VARARGS,oaTimeAppDef_oaOccNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccNet_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccNet",
           (PyObject*)(&PyoaTimeAppDef_oaOccNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccNet_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccShapeObject* self = (PyoaTimeAppDef_oaOccShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccShape)
    {
        PyParamoaTimeAppDef_oaOccShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccShape, Choices are:\n"
        "    (oaTimeAppDef_oaOccShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccShape_tp_dealloc(PyoaTimeAppDef_oaOccShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccShape_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccShape value;
    int convert_status=PyoaTimeAppDef_oaOccShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaTimeAppDef_oaOccShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccShape v1;
    PyParamoaTimeAppDef_oaOccShape v2;
    int convert_status1=PyoaTimeAppDef_oaOccShape_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccShape_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccShape_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccShape**) ((PyoaTimeAppDef_oaOccShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(oaTimeAppDef_oaOccShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccShape* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccShape_Type.tp_alloc(&PyoaTimeAppDef_oaOccShape_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccShapeObject* self = (PyoaTimeAppDef_oaOccShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(oaTimeAppDef_oaOccShape* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccShape_Type.tp_alloc(&PyoaTimeAppDef_oaOccShape_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccShapeObject* self = (PyoaTimeAppDef_oaOccShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccShape_get_doc[] = 
"Class: oaTimeAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaOccShape)\n"
"    Calls: oaTime get(const oaOccShape* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccShape,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccShape data;
    int convert_status=PyoaTimeAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccShapeObject* self=(PyoaTimeAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccShape_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccShape, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccShape_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccShape data;
    int convert_status=PyoaTimeAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccShapeObject* self=(PyoaTimeAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccShape_set_doc[] = 
"Class: oaTimeAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaOccShape,oaTime)\n"
"    Calls: void set(oaOccShape* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccShape,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccShape data;
    int convert_status=PyoaTimeAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccShapeObject* self=(PyoaTimeAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccShape_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccShape_isNull_doc[] =
"Class: oaTimeAppDef_oaOccShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccShape data;
    int convert_status=PyoaTimeAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccShape_assign_doc[] = 
"Class: oaTimeAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccShape data;
  int convert_status=PyoaTimeAppDef_oaOccShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccShape_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccShape_get,METH_VARARGS,oaTimeAppDef_oaOccShape_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccShape_getDefault,METH_VARARGS,oaTimeAppDef_oaOccShape_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccShape_set,METH_VARARGS,oaTimeAppDef_oaOccShape_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccShape_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccShape_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccShape_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccShape_doc[] = 
"Class: oaTimeAppDef_oaOccShape\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccShape)\n"
"    Calls: (const oaTimeAppDef_oaOccShape&)\n"
"    Signature: oaTimeAppDef_oaOccShape||cref-oaTimeAppDef_oaOccShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccShape",
    sizeof(PyoaTimeAppDef_oaOccShapeObject),
    0,
    (destructor)oaTimeAppDef_oaOccShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccShape_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccShape_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccShape|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::find(p1.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccShape_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccShape|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccShape* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccShape|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccShape* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccShape|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::get(p1.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccShapep result= (oaTimeAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccShape_FromoaTimeAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccShape_static_find,METH_VARARGS,oaTimeAppDef_oaOccShape_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccShape_static_get,METH_VARARGS,oaTimeAppDef_oaOccShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccShape_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccShape",
           (PyObject*)(&PyoaTimeAppDef_oaOccShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccShape_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccTermObject* self = (PyoaTimeAppDef_oaOccTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccTerm)
    {
        PyParamoaTimeAppDef_oaOccTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccTerm, Choices are:\n"
        "    (oaTimeAppDef_oaOccTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccTerm_tp_dealloc(PyoaTimeAppDef_oaOccTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccTerm_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccTerm value;
    int convert_status=PyoaTimeAppDef_oaOccTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaTimeAppDef_oaOccTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccTerm v1;
    PyParamoaTimeAppDef_oaOccTerm v2;
    int convert_status1=PyoaTimeAppDef_oaOccTerm_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccTerm_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccTerm_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccTerm**) ((PyoaTimeAppDef_oaOccTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(oaTimeAppDef_oaOccTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccTerm* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccTerm_Type.tp_alloc(&PyoaTimeAppDef_oaOccTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccTermObject* self = (PyoaTimeAppDef_oaOccTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(oaTimeAppDef_oaOccTerm* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccTerm_Type.tp_alloc(&PyoaTimeAppDef_oaOccTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccTermObject* self = (PyoaTimeAppDef_oaOccTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccTerm_get_doc[] = 
"Class: oaTimeAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaOccTerm)\n"
"    Calls: oaTime get(const oaOccTerm* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccTerm,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccTerm data;
    int convert_status=PyoaTimeAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccTermObject* self=(PyoaTimeAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccTerm_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccTerm data;
    int convert_status=PyoaTimeAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccTermObject* self=(PyoaTimeAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccTerm_set_doc[] = 
"Class: oaTimeAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaOccTerm,oaTime)\n"
"    Calls: void set(oaOccTerm* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccTerm,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccTerm data;
    int convert_status=PyoaTimeAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccTermObject* self=(PyoaTimeAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccTerm_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccTerm_isNull_doc[] =
"Class: oaTimeAppDef_oaOccTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccTerm data;
    int convert_status=PyoaTimeAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccTerm_assign_doc[] = 
"Class: oaTimeAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccTerm data;
  int convert_status=PyoaTimeAppDef_oaOccTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccTerm_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccTerm_get,METH_VARARGS,oaTimeAppDef_oaOccTerm_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccTerm_getDefault,METH_VARARGS,oaTimeAppDef_oaOccTerm_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccTerm_set,METH_VARARGS,oaTimeAppDef_oaOccTerm_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccTerm_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccTerm_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccTerm_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccTerm_doc[] = 
"Class: oaTimeAppDef_oaOccTerm\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccTerm)\n"
"    Calls: (const oaTimeAppDef_oaOccTerm&)\n"
"    Signature: oaTimeAppDef_oaOccTerm||cref-oaTimeAppDef_oaOccTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccTerm",
    sizeof(PyoaTimeAppDef_oaOccTermObject),
    0,
    (destructor)oaTimeAppDef_oaOccTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccTerm_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::find(p1.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccTerm_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccTerm* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccTerm* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::get(p1.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccTermp result= (oaTimeAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccTerm_FromoaTimeAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccTerm_static_find,METH_VARARGS,oaTimeAppDef_oaOccTerm_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccTerm_static_get,METH_VARARGS,oaTimeAppDef_oaOccTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccTerm",
           (PyObject*)(&PyoaTimeAppDef_oaOccTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccTerm_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccVectorInstDefObject* self = (PyoaTimeAppDef_oaOccVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccVectorInstDef)
    {
        PyParamoaTimeAppDef_oaOccVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccVectorInstDef, Choices are:\n"
        "    (oaTimeAppDef_oaOccVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccVectorInstDef_tp_dealloc(PyoaTimeAppDef_oaOccVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccVectorInstDef value;
    int convert_status=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaTimeAppDef_oaOccVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccVectorInstDef v1;
    PyParamoaTimeAppDef_oaOccVectorInstDef v2;
    int convert_status1=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccVectorInstDef_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccVectorInstDef_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccVectorInstDef**) ((PyoaTimeAppDef_oaOccVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(oaTimeAppDef_oaOccVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccVectorInstDef* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccVectorInstDefObject* self = (PyoaTimeAppDef_oaOccVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(oaTimeAppDef_oaOccVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaTimeAppDef_oaOccVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccVectorInstDefObject* self = (PyoaTimeAppDef_oaOccVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccVectorInstDef_get_doc[] = 
"Class: oaTimeAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaOccVectorInstDef)\n"
"    Calls: oaTime get(const oaOccVectorInstDef* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccVectorInstDef,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccVectorInstDefObject* self=(PyoaTimeAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccVectorInstDef_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccVectorInstDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccVectorInstDefObject* self=(PyoaTimeAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccVectorInstDef_set_doc[] = 
"Class: oaTimeAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaOccVectorInstDef,oaTime)\n"
"    Calls: void set(oaOccVectorInstDef* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccVectorInstDef,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccVectorInstDefObject* self=(PyoaTimeAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccVectorInstDef_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccVectorInstDef_isNull_doc[] =
"Class: oaTimeAppDef_oaOccVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccVectorInstDef_assign_doc[] = 
"Class: oaTimeAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccVectorInstDef data;
  int convert_status=PyoaTimeAppDef_oaOccVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccVectorInstDef_get,METH_VARARGS,oaTimeAppDef_oaOccVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccVectorInstDef_getDefault,METH_VARARGS,oaTimeAppDef_oaOccVectorInstDef_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccVectorInstDef_set,METH_VARARGS,oaTimeAppDef_oaOccVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccVectorInstDef_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccVectorInstDef_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccVectorInstDef_doc[] = 
"Class: oaTimeAppDef_oaOccVectorInstDef\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccVectorInstDef)\n"
"    Calls: (const oaTimeAppDef_oaOccVectorInstDef&)\n"
"    Signature: oaTimeAppDef_oaOccVectorInstDef||cref-oaTimeAppDef_oaOccVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccVectorInstDef",
    sizeof(PyoaTimeAppDef_oaOccVectorInstDefObject),
    0,
    (destructor)oaTimeAppDef_oaOccVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccVectorInstDef_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::find(p1.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccVectorInstDef_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::get(p1.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccVectorInstDefp result= (oaTimeAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccVectorInstDef_FromoaTimeAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccVectorInstDef_static_find,METH_VARARGS,oaTimeAppDef_oaOccVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccVectorInstDef_static_get,METH_VARARGS,oaTimeAppDef_oaOccVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccVectorInstDef",
           (PyObject*)(&PyoaTimeAppDef_oaOccVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccVectorInstDef_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOccurrence
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccurrence_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOccurrence_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOccurrenceObject* self = (PyoaTimeAppDef_oaOccurrenceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOccurrence)
    {
        PyParamoaTimeAppDef_oaOccurrence p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOccurrence_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOccurrence, Choices are:\n"
        "    (oaTimeAppDef_oaOccurrence)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOccurrence_tp_dealloc(PyoaTimeAppDef_oaOccurrenceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOccurrence_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOccurrence value;
    int convert_status=PyoaTimeAppDef_oaOccurrence_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaTimeAppDef_oaOccurrence::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOccurrence_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOccurrence v1;
    PyParamoaTimeAppDef_oaOccurrence v2;
    int convert_status1=PyoaTimeAppDef_oaOccurrence_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOccurrence_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOccurrence_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOccurrence* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOccurrence_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOccurrence**) ((PyoaTimeAppDef_oaOccurrenceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOccurrence Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(oaTimeAppDef_oaOccurrence** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOccurrence* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOccurrence_Type.tp_alloc(&PyoaTimeAppDef_oaOccurrence_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOccurrenceObject* self = (PyoaTimeAppDef_oaOccurrenceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(oaTimeAppDef_oaOccurrence* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOccurrence_Type.tp_alloc(&PyoaTimeAppDef_oaOccurrence_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOccurrenceObject* self = (PyoaTimeAppDef_oaOccurrenceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccurrence_get_doc[] = 
"Class: oaTimeAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaOccurrence)\n"
"    Calls: oaTime get(const oaOccurrence* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOccurrence,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccurrence_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccurrence data;
    int convert_status=PyoaTimeAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccurrenceObject* self=(PyoaTimeAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccurrence_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccurrence_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOccurrence, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOccurrence_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccurrence data;
    int convert_status=PyoaTimeAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccurrenceObject* self=(PyoaTimeAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccurrence_set_doc[] = 
"Class: oaTimeAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaOccurrence,oaTime)\n"
"    Calls: void set(oaOccurrence* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOccurrence,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOccurrence_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOccurrence data;
    int convert_status=PyoaTimeAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOccurrenceObject* self=(PyoaTimeAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccurrence_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccurrence_isNull_doc[] =
"Class: oaTimeAppDef_oaOccurrence, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOccurrence_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOccurrence data;
    int convert_status=PyoaTimeAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOccurrence_assign_doc[] = 
"Class: oaTimeAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOccurrence_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOccurrence data;
  int convert_status=PyoaTimeAppDef_oaOccurrence_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOccurrence p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOccurrence_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOccurrence_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOccurrence_get,METH_VARARGS,oaTimeAppDef_oaOccurrence_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOccurrence_getDefault,METH_VARARGS,oaTimeAppDef_oaOccurrence_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOccurrence_set,METH_VARARGS,oaTimeAppDef_oaOccurrence_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOccurrence_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOccurrence_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOccurrence_tp_assign,METH_VARARGS,oaTimeAppDef_oaOccurrence_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccurrence_doc[] = 
"Class: oaTimeAppDef_oaOccurrence\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOccurrence)\n"
"    Calls: (const oaTimeAppDef_oaOccurrence&)\n"
"    Signature: oaTimeAppDef_oaOccurrence||cref-oaTimeAppDef_oaOccurrence,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOccurrence_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOccurrence",
    sizeof(PyoaTimeAppDef_oaOccurrenceObject),
    0,
    (destructor)oaTimeAppDef_oaOccurrence_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOccurrence_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOccurrence_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOccurrence_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOccurrence_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOccurrence_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccurrence_static_find_doc[] = 
"Class: oaTimeAppDef_oaOccurrence, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccurrence* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccurrence* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOccurrence_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::find(p1.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccurrence, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOccurrence_static_get_doc[] = 
"Class: oaTimeAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOccurrence* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccurrence* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccurrence* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOccurrence_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::get(p1.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOccurrencep result= (oaTimeAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOccurrence_FromoaTimeAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOccurrence, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOccurrence_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOccurrence_static_find,METH_VARARGS,oaTimeAppDef_oaOccurrence_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOccurrence_static_get,METH_VARARGS,oaTimeAppDef_oaOccurrence_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOccurrence_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOccurrence_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOccurrence\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOccurrence",
           (PyObject*)(&PyoaTimeAppDef_oaOccurrence_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOccurrence\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOccurrence_Type.tp_dict;
    for(method=oaTimeAppDef_oaOccurrence_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaOpPointHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOpPointHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaOpPointHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaOpPointHeaderObject* self = (PyoaTimeAppDef_oaOpPointHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaOpPointHeader)
    {
        PyParamoaTimeAppDef_oaOpPointHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaOpPointHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaOpPointHeader, Choices are:\n"
        "    (oaTimeAppDef_oaOpPointHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaOpPointHeader_tp_dealloc(PyoaTimeAppDef_oaOpPointHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaOpPointHeader_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaOpPointHeader value;
    int convert_status=PyoaTimeAppDef_oaOpPointHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaTimeAppDef_oaOpPointHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaOpPointHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaOpPointHeader v1;
    PyParamoaTimeAppDef_oaOpPointHeader v2;
    int convert_status1=PyoaTimeAppDef_oaOpPointHeader_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaOpPointHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaOpPointHeader_Convert(PyObject* ob,PyParamoaTimeAppDef_oaOpPointHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaOpPointHeader_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaOpPointHeader**) ((PyoaTimeAppDef_oaOpPointHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaOpPointHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(oaTimeAppDef_oaOpPointHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaOpPointHeader* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaTimeAppDef_oaOpPointHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaOpPointHeaderObject* self = (PyoaTimeAppDef_oaOpPointHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(oaTimeAppDef_oaOpPointHeader* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaTimeAppDef_oaOpPointHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaOpPointHeaderObject* self = (PyoaTimeAppDef_oaOpPointHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOpPointHeader_get_doc[] = 
"Class: oaTimeAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaOpPointHeader)\n"
"    Calls: oaTime get(const oaOpPointHeader* object)\n"
"    Signature: get|simple-oaTime|cptr-oaOpPointHeader,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOpPointHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOpPointHeader data;
    int convert_status=PyoaTimeAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOpPointHeaderObject* self=(PyoaTimeAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOpPointHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOpPointHeader_getDefault_doc[] = 
"Class: oaTimeAppDef_oaOpPointHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaOpPointHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOpPointHeader data;
    int convert_status=PyoaTimeAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOpPointHeaderObject* self=(PyoaTimeAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOpPointHeader_set_doc[] = 
"Class: oaTimeAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaOpPointHeader,oaTime)\n"
"    Calls: void set(oaOpPointHeader* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaOpPointHeader,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaOpPointHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaOpPointHeader data;
    int convert_status=PyoaTimeAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaOpPointHeaderObject* self=(PyoaTimeAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOpPointHeader_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOpPointHeader_isNull_doc[] =
"Class: oaTimeAppDef_oaOpPointHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaOpPointHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaOpPointHeader data;
    int convert_status=PyoaTimeAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaOpPointHeader_assign_doc[] = 
"Class: oaTimeAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaOpPointHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaOpPointHeader data;
  int convert_status=PyoaTimeAppDef_oaOpPointHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaOpPointHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaOpPointHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaOpPointHeader_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaOpPointHeader_get,METH_VARARGS,oaTimeAppDef_oaOpPointHeader_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaOpPointHeader_getDefault,METH_VARARGS,oaTimeAppDef_oaOpPointHeader_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaOpPointHeader_set,METH_VARARGS,oaTimeAppDef_oaOpPointHeader_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaOpPointHeader_tp_isNull,METH_VARARGS,oaTimeAppDef_oaOpPointHeader_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaOpPointHeader_tp_assign,METH_VARARGS,oaTimeAppDef_oaOpPointHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOpPointHeader_doc[] = 
"Class: oaTimeAppDef_oaOpPointHeader\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaOpPointHeader)\n"
"    Calls: (const oaTimeAppDef_oaOpPointHeader&)\n"
"    Signature: oaTimeAppDef_oaOpPointHeader||cref-oaTimeAppDef_oaOpPointHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaOpPointHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaOpPointHeader",
    sizeof(PyoaTimeAppDef_oaOpPointHeaderObject),
    0,
    (destructor)oaTimeAppDef_oaOpPointHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaOpPointHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaOpPointHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaOpPointHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaOpPointHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaOpPointHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOpPointHeader_static_find_doc[] = 
"Class: oaTimeAppDef_oaOpPointHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaOpPointHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::find(p1.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOpPointHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaOpPointHeader_static_get_doc[] = 
"Class: oaTimeAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaOpPointHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::get(p1.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaOpPointHeaderp result= (oaTimeAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaOpPointHeader_FromoaTimeAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaOpPointHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaOpPointHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaOpPointHeader_static_find,METH_VARARGS,oaTimeAppDef_oaOpPointHeader_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaOpPointHeader_static_get,METH_VARARGS,oaTimeAppDef_oaOpPointHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaOpPointHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaOpPointHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaOpPointHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaOpPointHeader",
           (PyObject*)(&PyoaTimeAppDef_oaOpPointHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaOpPointHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaOpPointHeader_Type.tp_dict;
    for(method=oaTimeAppDef_oaOpPointHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaParasiticNetwork
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaParasiticNetwork_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaParasiticNetwork_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaParasiticNetworkObject* self = (PyoaTimeAppDef_oaParasiticNetworkObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaParasiticNetwork)
    {
        PyParamoaTimeAppDef_oaParasiticNetwork p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaParasiticNetwork_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaParasiticNetwork, Choices are:\n"
        "    (oaTimeAppDef_oaParasiticNetwork)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaParasiticNetwork_tp_dealloc(PyoaTimeAppDef_oaParasiticNetworkObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaParasiticNetwork_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaParasiticNetwork value;
    int convert_status=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaTimeAppDef_oaParasiticNetwork::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaParasiticNetwork_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaParasiticNetwork v1;
    PyParamoaTimeAppDef_oaParasiticNetwork v2;
    int convert_status1=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaParasiticNetwork_Convert(PyObject* ob,PyParamoaTimeAppDef_oaParasiticNetwork* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaParasiticNetwork_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaParasiticNetwork**) ((PyoaTimeAppDef_oaParasiticNetworkObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaParasiticNetwork Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(oaTimeAppDef_oaParasiticNetwork** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaParasiticNetwork* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaTimeAppDef_oaParasiticNetwork_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaParasiticNetworkObject* self = (PyoaTimeAppDef_oaParasiticNetworkObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(oaTimeAppDef_oaParasiticNetwork* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaTimeAppDef_oaParasiticNetwork_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaParasiticNetworkObject* self = (PyoaTimeAppDef_oaParasiticNetworkObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaParasiticNetwork_get_doc[] = 
"Class: oaTimeAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaParasiticNetwork)\n"
"    Calls: oaTime get(const oaParasiticNetwork* object)\n"
"    Signature: get|simple-oaTime|cptr-oaParasiticNetwork,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaParasiticNetwork_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaParasiticNetwork data;
    int convert_status=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaParasiticNetworkObject* self=(PyoaTimeAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaParasiticNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaParasiticNetwork_getDefault_doc[] = 
"Class: oaTimeAppDef_oaParasiticNetwork, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaParasiticNetwork_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaParasiticNetwork data;
    int convert_status=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaParasiticNetworkObject* self=(PyoaTimeAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaParasiticNetwork_set_doc[] = 
"Class: oaTimeAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaParasiticNetwork,oaTime)\n"
"    Calls: void set(oaParasiticNetwork* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaParasiticNetwork,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaParasiticNetwork_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaParasiticNetwork data;
    int convert_status=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaParasiticNetworkObject* self=(PyoaTimeAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaParasiticNetwork_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaParasiticNetwork_isNull_doc[] =
"Class: oaTimeAppDef_oaParasiticNetwork, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaParasiticNetwork_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaParasiticNetwork data;
    int convert_status=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaParasiticNetwork_assign_doc[] = 
"Class: oaTimeAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaParasiticNetwork_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaParasiticNetwork data;
  int convert_status=PyoaTimeAppDef_oaParasiticNetwork_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaParasiticNetwork_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaParasiticNetwork_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaParasiticNetwork_get,METH_VARARGS,oaTimeAppDef_oaParasiticNetwork_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaParasiticNetwork_getDefault,METH_VARARGS,oaTimeAppDef_oaParasiticNetwork_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaParasiticNetwork_set,METH_VARARGS,oaTimeAppDef_oaParasiticNetwork_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaParasiticNetwork_tp_isNull,METH_VARARGS,oaTimeAppDef_oaParasiticNetwork_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaParasiticNetwork_tp_assign,METH_VARARGS,oaTimeAppDef_oaParasiticNetwork_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaParasiticNetwork_doc[] = 
"Class: oaTimeAppDef_oaParasiticNetwork\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaParasiticNetwork)\n"
"    Calls: (const oaTimeAppDef_oaParasiticNetwork&)\n"
"    Signature: oaTimeAppDef_oaParasiticNetwork||cref-oaTimeAppDef_oaParasiticNetwork,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaParasiticNetwork_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaParasiticNetwork",
    sizeof(PyoaTimeAppDef_oaParasiticNetworkObject),
    0,
    (destructor)oaTimeAppDef_oaParasiticNetwork_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaParasiticNetwork_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaParasiticNetwork_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaParasiticNetwork_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaParasiticNetwork_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaParasiticNetwork_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaParasiticNetwork_static_find_doc[] = 
"Class: oaTimeAppDef_oaParasiticNetwork, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaParasiticNetwork_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::find(p1.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaParasiticNetwork, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaParasiticNetwork_static_get_doc[] = 
"Class: oaTimeAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaParasiticNetwork_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::get(p1.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaParasiticNetworkp result= (oaTimeAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaParasiticNetwork_FromoaTimeAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaParasiticNetwork, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaParasiticNetwork_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaParasiticNetwork_static_find,METH_VARARGS,oaTimeAppDef_oaParasiticNetwork_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaParasiticNetwork_static_get,METH_VARARGS,oaTimeAppDef_oaParasiticNetwork_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaParasiticNetwork_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaParasiticNetwork_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaParasiticNetwork\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaParasiticNetwork",
           (PyObject*)(&PyoaTimeAppDef_oaParasiticNetwork_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaParasiticNetwork\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaParasiticNetwork_Type.tp_dict;
    for(method=oaTimeAppDef_oaParasiticNetwork_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaPin
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaPin_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaPin_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaPinObject* self = (PyoaTimeAppDef_oaPinObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaPin)
    {
        PyParamoaTimeAppDef_oaPin p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaPin_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaPin, Choices are:\n"
        "    (oaTimeAppDef_oaPin)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaPin_tp_dealloc(PyoaTimeAppDef_oaPinObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaPin_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaPin value;
    int convert_status=PyoaTimeAppDef_oaPin_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaTimeAppDef_oaPin::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaPin_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaPin v1;
    PyParamoaTimeAppDef_oaPin v2;
    int convert_status1=PyoaTimeAppDef_oaPin_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaPin_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaPin_Convert(PyObject* ob,PyParamoaTimeAppDef_oaPin* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaPin_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaPin**) ((PyoaTimeAppDef_oaPinObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaPin Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(oaTimeAppDef_oaPin** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaPin* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaPin_Type.tp_alloc(&PyoaTimeAppDef_oaPin_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaPinObject* self = (PyoaTimeAppDef_oaPinObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(oaTimeAppDef_oaPin* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaPin_Type.tp_alloc(&PyoaTimeAppDef_oaPin_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaPinObject* self = (PyoaTimeAppDef_oaPinObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPin_get_doc[] = 
"Class: oaTimeAppDef_oaPin, Function: get\n"
"  Paramegers: (oaPin)\n"
"    Calls: oaTime get(const oaPin* object)\n"
"    Signature: get|simple-oaTime|cptr-oaPin,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaPin_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPin data;
    int convert_status=PyoaTimeAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPinObject* self=(PyoaTimeAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPin_getDefault_doc[] = 
"Class: oaTimeAppDef_oaPin, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaPin_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPin data;
    int convert_status=PyoaTimeAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPinObject* self=(PyoaTimeAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPin_set_doc[] = 
"Class: oaTimeAppDef_oaPin, Function: set\n"
"  Paramegers: (oaPin,oaTime)\n"
"    Calls: void set(oaPin* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaPin,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaPin_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPin data;
    int convert_status=PyoaTimeAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPinObject* self=(PyoaTimeAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPin_isNull_doc[] =
"Class: oaTimeAppDef_oaPin, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaPin_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaPin data;
    int convert_status=PyoaTimeAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaPin_assign_doc[] = 
"Class: oaTimeAppDef_oaPin, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaPin_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaPin data;
  int convert_status=PyoaTimeAppDef_oaPin_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaPin p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaPin_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaPin_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaPin_get,METH_VARARGS,oaTimeAppDef_oaPin_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaPin_getDefault,METH_VARARGS,oaTimeAppDef_oaPin_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaPin_set,METH_VARARGS,oaTimeAppDef_oaPin_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaPin_tp_isNull,METH_VARARGS,oaTimeAppDef_oaPin_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaPin_tp_assign,METH_VARARGS,oaTimeAppDef_oaPin_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPin_doc[] = 
"Class: oaTimeAppDef_oaPin\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaPin)\n"
"    Calls: (const oaTimeAppDef_oaPin&)\n"
"    Signature: oaTimeAppDef_oaPin||cref-oaTimeAppDef_oaPin,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaPin_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaPin",
    sizeof(PyoaTimeAppDef_oaPinObject),
    0,
    (destructor)oaTimeAppDef_oaPin_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaPin_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaPin_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaPin_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaPin_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaPin_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPin_static_find_doc[] = 
"Class: oaTimeAppDef_oaPin, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaPin* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaPin|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaPin* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaPin_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::find(p1.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaPin, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPin_static_get_doc[] = 
"Class: oaTimeAppDef_oaPin, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaPin* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPin|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaPin* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPin|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaPin* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPin|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaPin_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::get(p1.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPinp result= (oaTimeAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaPin_FromoaTimeAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaPin, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaPin_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaPin_static_find,METH_VARARGS,oaTimeAppDef_oaPin_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaPin_static_get,METH_VARARGS,oaTimeAppDef_oaPin_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaPin_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaPin_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaPin\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaPin",
           (PyObject*)(&PyoaTimeAppDef_oaPin_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaPin\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaPin_Type.tp_dict;
    for(method=oaTimeAppDef_oaPin_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaPoleResidue
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaPoleResidue_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaPoleResidue_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaPoleResidueObject* self = (PyoaTimeAppDef_oaPoleResidueObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaPoleResidue)
    {
        PyParamoaTimeAppDef_oaPoleResidue p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaPoleResidue_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaPoleResidue, Choices are:\n"
        "    (oaTimeAppDef_oaPoleResidue)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaPoleResidue_tp_dealloc(PyoaTimeAppDef_oaPoleResidueObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaPoleResidue_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaPoleResidue value;
    int convert_status=PyoaTimeAppDef_oaPoleResidue_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaTimeAppDef_oaPoleResidue::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaPoleResidue_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaPoleResidue v1;
    PyParamoaTimeAppDef_oaPoleResidue v2;
    int convert_status1=PyoaTimeAppDef_oaPoleResidue_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaPoleResidue_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaPoleResidue_Convert(PyObject* ob,PyParamoaTimeAppDef_oaPoleResidue* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaPoleResidue_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaPoleResidue**) ((PyoaTimeAppDef_oaPoleResidueObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaPoleResidue Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(oaTimeAppDef_oaPoleResidue** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaPoleResidue* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaPoleResidue_Type.tp_alloc(&PyoaTimeAppDef_oaPoleResidue_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaPoleResidueObject* self = (PyoaTimeAppDef_oaPoleResidueObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(oaTimeAppDef_oaPoleResidue* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaPoleResidue_Type.tp_alloc(&PyoaTimeAppDef_oaPoleResidue_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaPoleResidueObject* self = (PyoaTimeAppDef_oaPoleResidueObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPoleResidue_get_doc[] = 
"Class: oaTimeAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: oaTime get(const oaPoleResidue* object)\n"
"    Signature: get|simple-oaTime|cptr-oaPoleResidue,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaPoleResidue_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPoleResidue data;
    int convert_status=PyoaTimeAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPoleResidueObject* self=(PyoaTimeAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPoleResidue_getDefault_doc[] = 
"Class: oaTimeAppDef_oaPoleResidue, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaPoleResidue_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPoleResidue data;
    int convert_status=PyoaTimeAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPoleResidueObject* self=(PyoaTimeAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPoleResidue_set_doc[] = 
"Class: oaTimeAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaPoleResidue,oaTime)\n"
"    Calls: void set(oaPoleResidue* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaPoleResidue,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaPoleResidue_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPoleResidue data;
    int convert_status=PyoaTimeAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPoleResidueObject* self=(PyoaTimeAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPoleResidue_isNull_doc[] =
"Class: oaTimeAppDef_oaPoleResidue, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaPoleResidue_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaPoleResidue data;
    int convert_status=PyoaTimeAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaPoleResidue_assign_doc[] = 
"Class: oaTimeAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaPoleResidue_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaPoleResidue data;
  int convert_status=PyoaTimeAppDef_oaPoleResidue_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaPoleResidue p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaPoleResidue_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaPoleResidue_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaPoleResidue_get,METH_VARARGS,oaTimeAppDef_oaPoleResidue_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaPoleResidue_getDefault,METH_VARARGS,oaTimeAppDef_oaPoleResidue_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaPoleResidue_set,METH_VARARGS,oaTimeAppDef_oaPoleResidue_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaPoleResidue_tp_isNull,METH_VARARGS,oaTimeAppDef_oaPoleResidue_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaPoleResidue_tp_assign,METH_VARARGS,oaTimeAppDef_oaPoleResidue_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPoleResidue_doc[] = 
"Class: oaTimeAppDef_oaPoleResidue\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaPoleResidue)\n"
"    Calls: (const oaTimeAppDef_oaPoleResidue&)\n"
"    Signature: oaTimeAppDef_oaPoleResidue||cref-oaTimeAppDef_oaPoleResidue,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaPoleResidue_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaPoleResidue",
    sizeof(PyoaTimeAppDef_oaPoleResidueObject),
    0,
    (destructor)oaTimeAppDef_oaPoleResidue_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaPoleResidue_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaPoleResidue_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaPoleResidue_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaPoleResidue_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaPoleResidue_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPoleResidue_static_find_doc[] = 
"Class: oaTimeAppDef_oaPoleResidue, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaPoleResidue_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::find(p1.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaPoleResidue, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPoleResidue_static_get_doc[] = 
"Class: oaTimeAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaPoleResidue_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::get(p1.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPoleResiduep result= (oaTimeAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaPoleResidue_FromoaTimeAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaPoleResidue, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaPoleResidue_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaPoleResidue_static_find,METH_VARARGS,oaTimeAppDef_oaPoleResidue_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaPoleResidue_static_get,METH_VARARGS,oaTimeAppDef_oaPoleResidue_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaPoleResidue_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaPoleResidue_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaPoleResidue\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaPoleResidue",
           (PyObject*)(&PyoaTimeAppDef_oaPoleResidue_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaPoleResidue\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaPoleResidue_Type.tp_dict;
    for(method=oaTimeAppDef_oaPoleResidue_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaProp
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaProp_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaProp_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaPropObject* self = (PyoaTimeAppDef_oaPropObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaProp)
    {
        PyParamoaTimeAppDef_oaProp p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaProp_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaProp, Choices are:\n"
        "    (oaTimeAppDef_oaProp)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaProp_tp_dealloc(PyoaTimeAppDef_oaPropObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaProp_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaProp value;
    int convert_status=PyoaTimeAppDef_oaProp_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[41];
    sprintf(buffer,"<oaTimeAppDef_oaProp::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaProp_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaProp v1;
    PyParamoaTimeAppDef_oaProp v2;
    int convert_status1=PyoaTimeAppDef_oaProp_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaProp_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaProp_Convert(PyObject* ob,PyParamoaTimeAppDef_oaProp* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaProp_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaProp**) ((PyoaTimeAppDef_oaPropObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaProp Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(oaTimeAppDef_oaProp** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaProp* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaProp_Type.tp_alloc(&PyoaTimeAppDef_oaProp_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaPropObject* self = (PyoaTimeAppDef_oaPropObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(oaTimeAppDef_oaProp* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaProp_Type.tp_alloc(&PyoaTimeAppDef_oaProp_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaPropObject* self = (PyoaTimeAppDef_oaPropObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaProp_get_doc[] = 
"Class: oaTimeAppDef_oaProp, Function: get\n"
"  Paramegers: (oaProp)\n"
"    Calls: oaTime get(const oaProp* object)\n"
"    Signature: get|simple-oaTime|cptr-oaProp,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaProp_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaProp data;
    int convert_status=PyoaTimeAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPropObject* self=(PyoaTimeAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaProp_getDefault_doc[] = 
"Class: oaTimeAppDef_oaProp, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaProp_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaProp data;
    int convert_status=PyoaTimeAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPropObject* self=(PyoaTimeAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaProp_set_doc[] = 
"Class: oaTimeAppDef_oaProp, Function: set\n"
"  Paramegers: (oaProp,oaTime)\n"
"    Calls: void set(oaProp* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaProp,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaProp_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaProp data;
    int convert_status=PyoaTimeAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPropObject* self=(PyoaTimeAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaProp_isNull_doc[] =
"Class: oaTimeAppDef_oaProp, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaProp_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaProp data;
    int convert_status=PyoaTimeAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaProp_assign_doc[] = 
"Class: oaTimeAppDef_oaProp, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaProp_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaProp data;
  int convert_status=PyoaTimeAppDef_oaProp_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaProp p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaProp_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaProp_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaProp_get,METH_VARARGS,oaTimeAppDef_oaProp_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaProp_getDefault,METH_VARARGS,oaTimeAppDef_oaProp_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaProp_set,METH_VARARGS,oaTimeAppDef_oaProp_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaProp_tp_isNull,METH_VARARGS,oaTimeAppDef_oaProp_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaProp_tp_assign,METH_VARARGS,oaTimeAppDef_oaProp_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaProp_doc[] = 
"Class: oaTimeAppDef_oaProp\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaProp)\n"
"    Calls: (const oaTimeAppDef_oaProp&)\n"
"    Signature: oaTimeAppDef_oaProp||cref-oaTimeAppDef_oaProp,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaProp_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaProp",
    sizeof(PyoaTimeAppDef_oaPropObject),
    0,
    (destructor)oaTimeAppDef_oaProp_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaProp_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaProp_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaProp_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaProp_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaProp_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaProp_static_find_doc[] = 
"Class: oaTimeAppDef_oaProp, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaProp* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaProp|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaProp* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaProp_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::find(p1.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaProp, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaProp_static_get_doc[] = 
"Class: oaTimeAppDef_oaProp, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaProp* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaProp|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaProp* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaProp|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaProp* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaProp|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaProp_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::get(p1.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPropp result= (oaTimeAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaProp_FromoaTimeAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaProp, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaProp_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaProp_static_find,METH_VARARGS,oaTimeAppDef_oaProp_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaProp_static_get,METH_VARARGS,oaTimeAppDef_oaProp_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaProp_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaProp_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaProp\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaProp",
           (PyObject*)(&PyoaTimeAppDef_oaProp_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaProp\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaProp_Type.tp_dict;
    for(method=oaTimeAppDef_oaProp_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaPurpose
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaPurpose_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaPurpose_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaPurposeObject* self = (PyoaTimeAppDef_oaPurposeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaPurpose)
    {
        PyParamoaTimeAppDef_oaPurpose p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaPurpose_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaPurpose, Choices are:\n"
        "    (oaTimeAppDef_oaPurpose)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaPurpose_tp_dealloc(PyoaTimeAppDef_oaPurposeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaPurpose_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaPurpose value;
    int convert_status=PyoaTimeAppDef_oaPurpose_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaTimeAppDef_oaPurpose::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaPurpose_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaPurpose v1;
    PyParamoaTimeAppDef_oaPurpose v2;
    int convert_status1=PyoaTimeAppDef_oaPurpose_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaPurpose_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaPurpose_Convert(PyObject* ob,PyParamoaTimeAppDef_oaPurpose* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaPurpose_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaPurpose**) ((PyoaTimeAppDef_oaPurposeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaPurpose Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(oaTimeAppDef_oaPurpose** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaPurpose* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaPurpose_Type.tp_alloc(&PyoaTimeAppDef_oaPurpose_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaPurposeObject* self = (PyoaTimeAppDef_oaPurposeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(oaTimeAppDef_oaPurpose* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaPurpose_Type.tp_alloc(&PyoaTimeAppDef_oaPurpose_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaPurposeObject* self = (PyoaTimeAppDef_oaPurposeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPurpose_get_doc[] = 
"Class: oaTimeAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: oaTime get(const oaPurpose* object)\n"
"    Signature: get|simple-oaTime|cptr-oaPurpose,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaPurpose_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPurpose data;
    int convert_status=PyoaTimeAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPurposeObject* self=(PyoaTimeAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPurpose_getDefault_doc[] = 
"Class: oaTimeAppDef_oaPurpose, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaPurpose_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPurpose data;
    int convert_status=PyoaTimeAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPurposeObject* self=(PyoaTimeAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPurpose_set_doc[] = 
"Class: oaTimeAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaPurpose,oaTime)\n"
"    Calls: void set(oaPurpose* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaPurpose,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaPurpose_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaPurpose data;
    int convert_status=PyoaTimeAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaPurposeObject* self=(PyoaTimeAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPurpose_isNull_doc[] =
"Class: oaTimeAppDef_oaPurpose, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaPurpose_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaPurpose data;
    int convert_status=PyoaTimeAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaPurpose_assign_doc[] = 
"Class: oaTimeAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaPurpose_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaPurpose data;
  int convert_status=PyoaTimeAppDef_oaPurpose_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaPurpose p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaPurpose_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaPurpose_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaPurpose_get,METH_VARARGS,oaTimeAppDef_oaPurpose_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaPurpose_getDefault,METH_VARARGS,oaTimeAppDef_oaPurpose_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaPurpose_set,METH_VARARGS,oaTimeAppDef_oaPurpose_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaPurpose_tp_isNull,METH_VARARGS,oaTimeAppDef_oaPurpose_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaPurpose_tp_assign,METH_VARARGS,oaTimeAppDef_oaPurpose_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPurpose_doc[] = 
"Class: oaTimeAppDef_oaPurpose\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaPurpose)\n"
"    Calls: (const oaTimeAppDef_oaPurpose&)\n"
"    Signature: oaTimeAppDef_oaPurpose||cref-oaTimeAppDef_oaPurpose,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaPurpose_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaPurpose",
    sizeof(PyoaTimeAppDef_oaPurposeObject),
    0,
    (destructor)oaTimeAppDef_oaPurpose_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaPurpose_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaPurpose_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaPurpose_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaPurpose_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaPurpose_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPurpose_static_find_doc[] = 
"Class: oaTimeAppDef_oaPurpose, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaPurpose* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaPurpose|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaPurpose* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaPurpose_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::find(p1.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaPurpose, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaPurpose_static_get_doc[] = 
"Class: oaTimeAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaPurpose* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPurpose|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaPurpose* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPurpose|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaPurpose* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPurpose|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaPurpose_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::get(p1.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaPurposep result= (oaTimeAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaPurpose_FromoaTimeAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaPurpose, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaPurpose_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaPurpose_static_find,METH_VARARGS,oaTimeAppDef_oaPurpose_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaPurpose_static_get,METH_VARARGS,oaTimeAppDef_oaPurpose_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaPurpose_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaPurpose_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaPurpose\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaPurpose",
           (PyObject*)(&PyoaTimeAppDef_oaPurpose_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaPurpose\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaPurpose_Type.tp_dict;
    for(method=oaTimeAppDef_oaPurpose_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaTimeAppDef_oaReducedModel
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaReducedModel_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaTimeAppDef_oaReducedModel_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaTimeAppDef_oaReducedModelObject* self = (PyoaTimeAppDef_oaReducedModelObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaTimeAppDef_oaReducedModel)
    {
        PyParamoaTimeAppDef_oaReducedModel p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaTimeAppDef_oaReducedModel_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaTimeAppDef_oaReducedModel, Choices are:\n"
        "    (oaTimeAppDef_oaReducedModel)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaTimeAppDef_oaReducedModel_tp_dealloc(PyoaTimeAppDef_oaReducedModelObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaTimeAppDef_oaReducedModel_tp_repr(PyObject *ob)
{
    PyParamoaTimeAppDef_oaReducedModel value;
    int convert_status=PyoaTimeAppDef_oaReducedModel_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaTimeAppDef_oaReducedModel::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaTimeAppDef_oaReducedModel_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaTimeAppDef_oaReducedModel v1;
    PyParamoaTimeAppDef_oaReducedModel v2;
    int convert_status1=PyoaTimeAppDef_oaReducedModel_Convert(ob1,&v1);
    int convert_status2=PyoaTimeAppDef_oaReducedModel_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaTimeAppDef_oaReducedModel_Convert(PyObject* ob,PyParamoaTimeAppDef_oaReducedModel* result)
{
    if (ob == NULL) return 1;
    if (PyoaTimeAppDef_oaReducedModel_Check(ob)) {
        result->SetData( (oaTimeAppDef_oaReducedModel**) ((PyoaTimeAppDef_oaReducedModelObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaTimeAppDef_oaReducedModel Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(oaTimeAppDef_oaReducedModel** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaTimeAppDef_oaReducedModel* data=*value;
        PyObject* bself = PyoaTimeAppDef_oaReducedModel_Type.tp_alloc(&PyoaTimeAppDef_oaReducedModel_Type,0);
        if (bself == NULL) return bself;
        PyoaTimeAppDef_oaReducedModelObject* self = (PyoaTimeAppDef_oaReducedModelObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(oaTimeAppDef_oaReducedModel* data)
{
    if (data) {
       PyObject* bself = PyoaTimeAppDef_oaReducedModel_Type.tp_alloc(&PyoaTimeAppDef_oaReducedModel_Type,0);
       if (bself == NULL) return bself;
       PyoaTimeAppDef_oaReducedModelObject* self = (PyoaTimeAppDef_oaReducedModelObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaReducedModel_get_doc[] = 
"Class: oaTimeAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: oaTime get(const oaReducedModel* object)\n"
"    Signature: get|simple-oaTime|cptr-oaReducedModel,\n"
"    This function returns the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaReducedModel_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaReducedModel data;
    int convert_status=PyoaTimeAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaReducedModelObject* self=(PyoaTimeAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTime result= (data.DataCall()->get(p1.Data()));
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaReducedModel_getDefault_doc[] = 
"Class: oaTimeAppDef_oaReducedModel, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaTime getDefault() const\n"
"    Signature: getDefault|simple-oaTime|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this time extension.\n"
;

static PyObject*
oaTimeAppDef_oaReducedModel_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaReducedModel data;
    int convert_status=PyoaTimeAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaReducedModelObject* self=(PyoaTimeAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaTime result= (data.DataCall()->getDefault());
        return PyoaTime_FromoaTime(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaReducedModel_set_doc[] = 
"Class: oaTimeAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaReducedModel,oaTime)\n"
"    Calls: void set(oaReducedModel* object,oaTime value)\n"
"    Signature: set|void-void|ptr-oaReducedModel,simple-oaTime,\n"
"    This function sets the value of this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaTimeAppDef_oaReducedModel_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeAppDef_oaReducedModel data;
    int convert_status=PyoaTimeAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaTimeAppDef_oaReducedModelObject* self=(PyoaTimeAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    PyParamoaTime p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaTime_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaReducedModel_isNull_doc[] =
"Class: oaTimeAppDef_oaReducedModel, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaTimeAppDef_oaReducedModel_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaTimeAppDef_oaReducedModel data;
    int convert_status=PyoaTimeAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaTimeAppDef_oaReducedModel_assign_doc[] = 
"Class: oaTimeAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaTimeAppDef_oaReducedModel_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaTimeAppDef_oaReducedModel data;
  int convert_status=PyoaTimeAppDef_oaReducedModel_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaTimeAppDef_oaReducedModel p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaTimeAppDef_oaReducedModel_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaTimeAppDef_oaReducedModel_methodlist[] = {
    {"get",(PyCFunction)oaTimeAppDef_oaReducedModel_get,METH_VARARGS,oaTimeAppDef_oaReducedModel_get_doc},
    {"getDefault",(PyCFunction)oaTimeAppDef_oaReducedModel_getDefault,METH_VARARGS,oaTimeAppDef_oaReducedModel_getDefault_doc},
    {"set",(PyCFunction)oaTimeAppDef_oaReducedModel_set,METH_VARARGS,oaTimeAppDef_oaReducedModel_set_doc},
    {"isNull",(PyCFunction)oaTimeAppDef_oaReducedModel_tp_isNull,METH_VARARGS,oaTimeAppDef_oaReducedModel_isNull_doc},
    {"assign",(PyCFunction)oaTimeAppDef_oaReducedModel_tp_assign,METH_VARARGS,oaTimeAppDef_oaReducedModel_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaReducedModel_doc[] = 
"Class: oaTimeAppDef_oaReducedModel\n"
"  The oaTimeAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once are created, a time field is added to each object of the specified dataType. The default value for the time extension is the epoch (0). Applications can use the new time field for any purpose.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaTimeAppDef_oaReducedModel)\n"
"    Calls: (const oaTimeAppDef_oaReducedModel&)\n"
"    Signature: oaTimeAppDef_oaReducedModel||cref-oaTimeAppDef_oaReducedModel,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaTimeAppDef_oaReducedModel_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaTimeAppDef_oaReducedModel",
    sizeof(PyoaTimeAppDef_oaReducedModelObject),
    0,
    (destructor)oaTimeAppDef_oaReducedModel_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaTimeAppDef_oaReducedModel_tp_compare,	/* tp_compare */
    (reprfunc)oaTimeAppDef_oaReducedModel_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaTimeAppDef_oaReducedModel_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaTimeAppDef_oaReducedModel_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaTimeAppDef_oaReducedModel_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaTimeAppDef_oaReducedModel_static_find_doc[] = 
"Class: oaTimeAppDef_oaReducedModel, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaReducedModel* find(const oaString& name)\n"
"    Signature: find|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaReducedModel* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaTimeAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaTimeAppDef_oaReducedModel_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::find(p1.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::find(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaReducedModel, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaTimeAppDef_oaReducedModel_static_get_doc[] = 
"Class: oaTimeAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaTimeAppDef_oaReducedModel* get(const oaString& name)\n"
"    Signature: get|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime)\n"
"    Calls: oaTimeAppDef_oaReducedModel* get(const oaString& name,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaReducedModel* get(const oaString& name,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef class time extension with the specified name . You can create a time extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaTimeAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime)\n"
"    Calls: oaTimeAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue)\n"
"    Signature: get|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
"    Calls: oaTimeAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaTime defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaTimeAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaTime,simple-oaBoolean,\n"
"    This function constructs an oaTimeAppDef object, creating a time extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaTimeAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaTimeAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaTimeAppDef_oaReducedModel_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::get(p1.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2)) {
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaTime p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaTime_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaTime,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaTime p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaTime_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaTimeAppDef_oaReducedModelp result= (oaTimeAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaTimeAppDef_oaReducedModel_FromoaTimeAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaTimeAppDef_oaReducedModel, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaTime)\n"
        "    (oaString,oaTime,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaTime)\n"
        "    (oaString,oaAppObjectDef,oaTime,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaTimeAppDef_oaReducedModel_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaTimeAppDef_oaReducedModel_static_find,METH_VARARGS,oaTimeAppDef_oaReducedModel_static_find_doc},
    {"static_get",(PyCFunction)oaTimeAppDef_oaReducedModel_static_get,METH_VARARGS,oaTimeAppDef_oaReducedModel_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaTimeAppDef_oaReducedModel_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaTimeAppDef_oaReducedModel_Type)<0) {
      printf("** PyType_Ready failed for: oaTimeAppDef_oaReducedModel\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaTimeAppDef_oaReducedModel",
           (PyObject*)(&PyoaTimeAppDef_oaReducedModel_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaTimeAppDef_oaReducedModel\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaTimeAppDef_oaReducedModel_Type.tp_dict;
    for(method=oaTimeAppDef_oaReducedModel_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

