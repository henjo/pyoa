
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModBusNetDefObject* self = (PyoaIntAppDef_oaModBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModBusNetDef)
    {
        PyParamoaIntAppDef_oaModBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModBusNetDef, Choices are:\n"
        "    (oaIntAppDef_oaModBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModBusNetDef_tp_dealloc(PyoaIntAppDef_oaModBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModBusNetDef value;
    int convert_status=PyoaIntAppDef_oaModBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntAppDef_oaModBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModBusNetDef v1;
    PyParamoaIntAppDef_oaModBusNetDef v2;
    int convert_status1=PyoaIntAppDef_oaModBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModBusNetDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaModBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModBusNetDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModBusNetDef**) ((PyoaIntAppDef_oaModBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(oaIntAppDef_oaModBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModBusNetDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaIntAppDef_oaModBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModBusNetDefObject* self = (PyoaIntAppDef_oaModBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(oaIntAppDef_oaModBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaIntAppDef_oaModBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModBusNetDefObject* self = (PyoaIntAppDef_oaModBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusNetDef_get_doc[] = 
"Class: oaIntAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaModBusNetDef)\n"
"    Calls: oaInt4 get(const oaModBusNetDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModBusNetDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModBusNetDef data;
    int convert_status=PyoaIntAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModBusNetDefObject* self=(PyoaIntAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusNetDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaModBusNetDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModBusNetDef data;
    int convert_status=PyoaIntAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModBusNetDefObject* self=(PyoaIntAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusNetDef_set_doc[] = 
"Class: oaIntAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaModBusNetDef,oaInt4)\n"
"    Calls: void set(oaModBusNetDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModBusNetDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModBusNetDef data;
    int convert_status=PyoaIntAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModBusNetDefObject* self=(PyoaIntAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusNetDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusNetDef_isNull_doc[] =
"Class: oaIntAppDef_oaModBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModBusNetDef data;
    int convert_status=PyoaIntAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModBusNetDef_assign_doc[] = 
"Class: oaIntAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModBusNetDef data;
  int convert_status=PyoaIntAppDef_oaModBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModBusNetDef_get,METH_VARARGS,oaIntAppDef_oaModBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModBusNetDef_getDefault,METH_VARARGS,oaIntAppDef_oaModBusNetDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModBusNetDef_set,METH_VARARGS,oaIntAppDef_oaModBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModBusNetDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaModBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModBusNetDef_tp_assign,METH_VARARGS,oaIntAppDef_oaModBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusNetDef_doc[] = 
"Class: oaIntAppDef_oaModBusNetDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModBusNetDef)\n"
"    Calls: (const oaIntAppDef_oaModBusNetDef&)\n"
"    Signature: oaIntAppDef_oaModBusNetDef||cref-oaIntAppDef_oaModBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModBusNetDef",
    sizeof(PyoaIntAppDef_oaModBusNetDefObject),
    0,
    (destructor)oaIntAppDef_oaModBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusNetDef_static_find_doc[] = 
"Class: oaIntAppDef_oaModBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::find(p1.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusNetDef_static_get_doc[] = 
"Class: oaIntAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::get(p1.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusNetDefp result= (oaIntAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModBusNetDef_FromoaIntAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModBusNetDef_static_find,METH_VARARGS,oaIntAppDef_oaModBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModBusNetDef_static_get,METH_VARARGS,oaIntAppDef_oaModBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModBusNetDef",
           (PyObject*)(&PyoaIntAppDef_oaModBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModBusNetDef_Type.tp_dict;
    for(method=oaIntAppDef_oaModBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModBusTermDefObject* self = (PyoaIntAppDef_oaModBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModBusTermDef)
    {
        PyParamoaIntAppDef_oaModBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModBusTermDef, Choices are:\n"
        "    (oaIntAppDef_oaModBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModBusTermDef_tp_dealloc(PyoaIntAppDef_oaModBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModBusTermDef value;
    int convert_status=PyoaIntAppDef_oaModBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaModBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModBusTermDef v1;
    PyParamoaIntAppDef_oaModBusTermDef v2;
    int convert_status1=PyoaIntAppDef_oaModBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModBusTermDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaModBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModBusTermDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModBusTermDef**) ((PyoaIntAppDef_oaModBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(oaIntAppDef_oaModBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModBusTermDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaIntAppDef_oaModBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModBusTermDefObject* self = (PyoaIntAppDef_oaModBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(oaIntAppDef_oaModBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaIntAppDef_oaModBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModBusTermDefObject* self = (PyoaIntAppDef_oaModBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusTermDef_get_doc[] = 
"Class: oaIntAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaModBusTermDef)\n"
"    Calls: oaInt4 get(const oaModBusTermDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModBusTermDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModBusTermDef data;
    int convert_status=PyoaIntAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModBusTermDefObject* self=(PyoaIntAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusTermDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaModBusTermDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModBusTermDef data;
    int convert_status=PyoaIntAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModBusTermDefObject* self=(PyoaIntAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusTermDef_set_doc[] = 
"Class: oaIntAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaModBusTermDef,oaInt4)\n"
"    Calls: void set(oaModBusTermDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModBusTermDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModBusTermDef data;
    int convert_status=PyoaIntAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModBusTermDefObject* self=(PyoaIntAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusTermDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusTermDef_isNull_doc[] =
"Class: oaIntAppDef_oaModBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModBusTermDef data;
    int convert_status=PyoaIntAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModBusTermDef_assign_doc[] = 
"Class: oaIntAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModBusTermDef data;
  int convert_status=PyoaIntAppDef_oaModBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModBusTermDef_get,METH_VARARGS,oaIntAppDef_oaModBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModBusTermDef_getDefault,METH_VARARGS,oaIntAppDef_oaModBusTermDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModBusTermDef_set,METH_VARARGS,oaIntAppDef_oaModBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModBusTermDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaModBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModBusTermDef_tp_assign,METH_VARARGS,oaIntAppDef_oaModBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusTermDef_doc[] = 
"Class: oaIntAppDef_oaModBusTermDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModBusTermDef)\n"
"    Calls: (const oaIntAppDef_oaModBusTermDef&)\n"
"    Signature: oaIntAppDef_oaModBusTermDef||cref-oaIntAppDef_oaModBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModBusTermDef",
    sizeof(PyoaIntAppDef_oaModBusTermDefObject),
    0,
    (destructor)oaIntAppDef_oaModBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusTermDef_static_find_doc[] = 
"Class: oaIntAppDef_oaModBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::find(p1.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModBusTermDef_static_get_doc[] = 
"Class: oaIntAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::get(p1.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModBusTermDefp result= (oaIntAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModBusTermDef_FromoaIntAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModBusTermDef_static_find,METH_VARARGS,oaIntAppDef_oaModBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModBusTermDef_static_get,METH_VARARGS,oaIntAppDef_oaModBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModBusTermDef",
           (PyObject*)(&PyoaIntAppDef_oaModBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModBusTermDef_Type.tp_dict;
    for(method=oaIntAppDef_oaModBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModConnectDefObject* self = (PyoaIntAppDef_oaModConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModConnectDef)
    {
        PyParamoaIntAppDef_oaModConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModConnectDef, Choices are:\n"
        "    (oaIntAppDef_oaModConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModConnectDef_tp_dealloc(PyoaIntAppDef_oaModConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModConnectDef value;
    int convert_status=PyoaIntAppDef_oaModConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaModConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModConnectDef v1;
    PyParamoaIntAppDef_oaModConnectDef v2;
    int convert_status1=PyoaIntAppDef_oaModConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModConnectDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaModConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModConnectDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModConnectDef**) ((PyoaIntAppDef_oaModConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(oaIntAppDef_oaModConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModConnectDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModConnectDef_Type.tp_alloc(&PyoaIntAppDef_oaModConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModConnectDefObject* self = (PyoaIntAppDef_oaModConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(oaIntAppDef_oaModConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModConnectDef_Type.tp_alloc(&PyoaIntAppDef_oaModConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModConnectDefObject* self = (PyoaIntAppDef_oaModConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModConnectDef_get_doc[] = 
"Class: oaIntAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaModConnectDef)\n"
"    Calls: oaInt4 get(const oaModConnectDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModConnectDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModConnectDef data;
    int convert_status=PyoaIntAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModConnectDefObject* self=(PyoaIntAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModConnectDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaModConnectDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModConnectDef data;
    int convert_status=PyoaIntAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModConnectDefObject* self=(PyoaIntAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModConnectDef_set_doc[] = 
"Class: oaIntAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaModConnectDef,oaInt4)\n"
"    Calls: void set(oaModConnectDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModConnectDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModConnectDef data;
    int convert_status=PyoaIntAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModConnectDefObject* self=(PyoaIntAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModConnectDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModConnectDef_isNull_doc[] =
"Class: oaIntAppDef_oaModConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModConnectDef data;
    int convert_status=PyoaIntAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModConnectDef_assign_doc[] = 
"Class: oaIntAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModConnectDef data;
  int convert_status=PyoaIntAppDef_oaModConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModConnectDef_get,METH_VARARGS,oaIntAppDef_oaModConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModConnectDef_getDefault,METH_VARARGS,oaIntAppDef_oaModConnectDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModConnectDef_set,METH_VARARGS,oaIntAppDef_oaModConnectDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModConnectDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaModConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModConnectDef_tp_assign,METH_VARARGS,oaIntAppDef_oaModConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModConnectDef_doc[] = 
"Class: oaIntAppDef_oaModConnectDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModConnectDef)\n"
"    Calls: (const oaIntAppDef_oaModConnectDef&)\n"
"    Signature: oaIntAppDef_oaModConnectDef||cref-oaIntAppDef_oaModConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModConnectDef",
    sizeof(PyoaIntAppDef_oaModConnectDefObject),
    0,
    (destructor)oaIntAppDef_oaModConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModConnectDef_static_find_doc[] = 
"Class: oaIntAppDef_oaModConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::find(p1.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModConnectDef_static_get_doc[] = 
"Class: oaIntAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModConnectDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModConnectDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::get(p1.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModConnectDefp result= (oaIntAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModConnectDef_FromoaIntAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModConnectDef_static_find,METH_VARARGS,oaIntAppDef_oaModConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModConnectDef_static_get,METH_VARARGS,oaIntAppDef_oaModConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModConnectDef",
           (PyObject*)(&PyoaIntAppDef_oaModConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModConnectDef_Type.tp_dict;
    for(method=oaIntAppDef_oaModConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModInstObject* self = (PyoaIntAppDef_oaModInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModInst)
    {
        PyParamoaIntAppDef_oaModInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModInst, Choices are:\n"
        "    (oaIntAppDef_oaModInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModInst_tp_dealloc(PyoaIntAppDef_oaModInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModInst_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModInst value;
    int convert_status=PyoaIntAppDef_oaModInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaModInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModInst v1;
    PyParamoaIntAppDef_oaModInst v2;
    int convert_status1=PyoaIntAppDef_oaModInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModInst_Convert(PyObject* ob,PyParamoaIntAppDef_oaModInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModInst_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModInst**) ((PyoaIntAppDef_oaModInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(oaIntAppDef_oaModInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModInst* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModInst_Type.tp_alloc(&PyoaIntAppDef_oaModInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModInstObject* self = (PyoaIntAppDef_oaModInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(oaIntAppDef_oaModInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModInst_Type.tp_alloc(&PyoaIntAppDef_oaModInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModInstObject* self = (PyoaIntAppDef_oaModInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInst_get_doc[] = 
"Class: oaIntAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaModInst)\n"
"    Calls: oaInt4 get(const oaModInst* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModInst,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInst data;
    int convert_status=PyoaIntAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstObject* self=(PyoaIntAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInst_getDefault_doc[] = 
"Class: oaIntAppDef_oaModInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInst data;
    int convert_status=PyoaIntAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstObject* self=(PyoaIntAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInst_set_doc[] = 
"Class: oaIntAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaModInst,oaInt4)\n"
"    Calls: void set(oaModInst* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModInst,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInst data;
    int convert_status=PyoaIntAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstObject* self=(PyoaIntAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInst_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInst_isNull_doc[] =
"Class: oaIntAppDef_oaModInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModInst data;
    int convert_status=PyoaIntAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModInst_assign_doc[] = 
"Class: oaIntAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModInst data;
  int convert_status=PyoaIntAppDef_oaModInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModInst_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModInst_get,METH_VARARGS,oaIntAppDef_oaModInst_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModInst_getDefault,METH_VARARGS,oaIntAppDef_oaModInst_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModInst_set,METH_VARARGS,oaIntAppDef_oaModInst_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModInst_tp_isNull,METH_VARARGS,oaIntAppDef_oaModInst_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModInst_tp_assign,METH_VARARGS,oaIntAppDef_oaModInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInst_doc[] = 
"Class: oaIntAppDef_oaModInst\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModInst)\n"
"    Calls: (const oaIntAppDef_oaModInst&)\n"
"    Signature: oaIntAppDef_oaModInst||cref-oaIntAppDef_oaModInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModInst",
    sizeof(PyoaIntAppDef_oaModInstObject),
    0,
    (destructor)oaIntAppDef_oaModInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInst_static_find_doc[] = 
"Class: oaIntAppDef_oaModInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModInst|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::find(p1.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInst_static_get_doc[] = 
"Class: oaIntAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModInst* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModInst* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::get(p1.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstp result= (oaIntAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModInst_FromoaIntAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModInst_static_find,METH_VARARGS,oaIntAppDef_oaModInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModInst_static_get,METH_VARARGS,oaIntAppDef_oaModInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModInst",
           (PyObject*)(&PyoaIntAppDef_oaModInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModInst_Type.tp_dict;
    for(method=oaIntAppDef_oaModInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModInstHeaderObject* self = (PyoaIntAppDef_oaModInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModInstHeader)
    {
        PyParamoaIntAppDef_oaModInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModInstHeader, Choices are:\n"
        "    (oaIntAppDef_oaModInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModInstHeader_tp_dealloc(PyoaIntAppDef_oaModInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModInstHeader value;
    int convert_status=PyoaIntAppDef_oaModInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaModInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModInstHeader v1;
    PyParamoaIntAppDef_oaModInstHeader v2;
    int convert_status1=PyoaIntAppDef_oaModInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModInstHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaModInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModInstHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModInstHeader**) ((PyoaIntAppDef_oaModInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(oaIntAppDef_oaModInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModInstHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaModInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModInstHeaderObject* self = (PyoaIntAppDef_oaModInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(oaIntAppDef_oaModInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaModInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModInstHeaderObject* self = (PyoaIntAppDef_oaModInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstHeader_get_doc[] = 
"Class: oaIntAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaModInstHeader)\n"
"    Calls: oaInt4 get(const oaModInstHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModInstHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInstHeader data;
    int convert_status=PyoaIntAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstHeaderObject* self=(PyoaIntAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaModInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInstHeader data;
    int convert_status=PyoaIntAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstHeaderObject* self=(PyoaIntAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstHeader_set_doc[] = 
"Class: oaIntAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaModInstHeader,oaInt4)\n"
"    Calls: void set(oaModInstHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModInstHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInstHeader data;
    int convert_status=PyoaIntAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstHeaderObject* self=(PyoaIntAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstHeader_isNull_doc[] =
"Class: oaIntAppDef_oaModInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModInstHeader data;
    int convert_status=PyoaIntAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModInstHeader_assign_doc[] = 
"Class: oaIntAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModInstHeader data;
  int convert_status=PyoaIntAppDef_oaModInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModInstHeader_get,METH_VARARGS,oaIntAppDef_oaModInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModInstHeader_getDefault,METH_VARARGS,oaIntAppDef_oaModInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModInstHeader_set,METH_VARARGS,oaIntAppDef_oaModInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModInstHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaModInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModInstHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaModInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstHeader_doc[] = 
"Class: oaIntAppDef_oaModInstHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModInstHeader)\n"
"    Calls: (const oaIntAppDef_oaModInstHeader&)\n"
"    Signature: oaIntAppDef_oaModInstHeader||cref-oaIntAppDef_oaModInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModInstHeader",
    sizeof(PyoaIntAppDef_oaModInstHeaderObject),
    0,
    (destructor)oaIntAppDef_oaModInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaModInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::find(p1.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModInstHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModInstHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::get(p1.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstHeaderp result= (oaIntAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModInstHeader_FromoaIntAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModInstHeader_static_find,METH_VARARGS,oaIntAppDef_oaModInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModInstHeader_static_get,METH_VARARGS,oaIntAppDef_oaModInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModInstHeader",
           (PyObject*)(&PyoaIntAppDef_oaModInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModInstHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaModInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModInstTermObject* self = (PyoaIntAppDef_oaModInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModInstTerm)
    {
        PyParamoaIntAppDef_oaModInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModInstTerm, Choices are:\n"
        "    (oaIntAppDef_oaModInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModInstTerm_tp_dealloc(PyoaIntAppDef_oaModInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModInstTerm value;
    int convert_status=PyoaIntAppDef_oaModInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaIntAppDef_oaModInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModInstTerm v1;
    PyParamoaIntAppDef_oaModInstTerm v2;
    int convert_status1=PyoaIntAppDef_oaModInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModInstTerm_Convert(PyObject* ob,PyParamoaIntAppDef_oaModInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModInstTerm_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModInstTerm**) ((PyoaIntAppDef_oaModInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(oaIntAppDef_oaModInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModInstTerm* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModInstTerm_Type.tp_alloc(&PyoaIntAppDef_oaModInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModInstTermObject* self = (PyoaIntAppDef_oaModInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(oaIntAppDef_oaModInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModInstTerm_Type.tp_alloc(&PyoaIntAppDef_oaModInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModInstTermObject* self = (PyoaIntAppDef_oaModInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstTerm_get_doc[] = 
"Class: oaIntAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaModInstTerm)\n"
"    Calls: oaInt4 get(const oaModInstTerm* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModInstTerm,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInstTerm data;
    int convert_status=PyoaIntAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstTermObject* self=(PyoaIntAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstTerm_getDefault_doc[] = 
"Class: oaIntAppDef_oaModInstTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInstTerm data;
    int convert_status=PyoaIntAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstTermObject* self=(PyoaIntAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstTerm_set_doc[] = 
"Class: oaIntAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaModInstTerm,oaInt4)\n"
"    Calls: void set(oaModInstTerm* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModInstTerm,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModInstTerm data;
    int convert_status=PyoaIntAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModInstTermObject* self=(PyoaIntAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstTerm_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstTerm_isNull_doc[] =
"Class: oaIntAppDef_oaModInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModInstTerm data;
    int convert_status=PyoaIntAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModInstTerm_assign_doc[] = 
"Class: oaIntAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModInstTerm data;
  int convert_status=PyoaIntAppDef_oaModInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModInstTerm_get,METH_VARARGS,oaIntAppDef_oaModInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModInstTerm_getDefault,METH_VARARGS,oaIntAppDef_oaModInstTerm_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModInstTerm_set,METH_VARARGS,oaIntAppDef_oaModInstTerm_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModInstTerm_tp_isNull,METH_VARARGS,oaIntAppDef_oaModInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModInstTerm_tp_assign,METH_VARARGS,oaIntAppDef_oaModInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstTerm_doc[] = 
"Class: oaIntAppDef_oaModInstTerm\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModInstTerm)\n"
"    Calls: (const oaIntAppDef_oaModInstTerm&)\n"
"    Signature: oaIntAppDef_oaModInstTerm||cref-oaIntAppDef_oaModInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModInstTerm",
    sizeof(PyoaIntAppDef_oaModInstTermObject),
    0,
    (destructor)oaIntAppDef_oaModInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstTerm_static_find_doc[] = 
"Class: oaIntAppDef_oaModInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::find(p1.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModInstTerm_static_get_doc[] = 
"Class: oaIntAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModInstTerm* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModInstTerm* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::get(p1.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModInstTermp result= (oaIntAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModInstTerm_FromoaIntAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModInstTerm_static_find,METH_VARARGS,oaIntAppDef_oaModInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModInstTerm_static_get,METH_VARARGS,oaIntAppDef_oaModInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModInstTerm",
           (PyObject*)(&PyoaIntAppDef_oaModInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModInstTerm_Type.tp_dict;
    for(method=oaIntAppDef_oaModInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModModuleInstHeaderObject* self = (PyoaIntAppDef_oaModModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModModuleInstHeader)
    {
        PyParamoaIntAppDef_oaModModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModModuleInstHeader, Choices are:\n"
        "    (oaIntAppDef_oaModModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModModuleInstHeader_tp_dealloc(PyoaIntAppDef_oaModModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModModuleInstHeader value;
    int convert_status=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntAppDef_oaModModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModModuleInstHeader v1;
    PyParamoaIntAppDef_oaModModuleInstHeader v2;
    int convert_status1=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModModuleInstHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaModModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModModuleInstHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModModuleInstHeader**) ((PyoaIntAppDef_oaModModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(oaIntAppDef_oaModModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModModuleInstHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaModModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModModuleInstHeaderObject* self = (PyoaIntAppDef_oaModModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(oaIntAppDef_oaModModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaModModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModModuleInstHeaderObject* self = (PyoaIntAppDef_oaModModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModModuleInstHeader_get_doc[] = 
"Class: oaIntAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaModModuleInstHeader)\n"
"    Calls: oaInt4 get(const oaModModuleInstHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModModuleInstHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModModuleInstHeaderObject* self=(PyoaIntAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModModuleInstHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaModModuleInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModModuleInstHeaderObject* self=(PyoaIntAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModModuleInstHeader_set_doc[] = 
"Class: oaIntAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaModModuleInstHeader,oaInt4)\n"
"    Calls: void set(oaModModuleInstHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModModuleInstHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModModuleInstHeaderObject* self=(PyoaIntAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModModuleInstHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModModuleInstHeader_isNull_doc[] =
"Class: oaIntAppDef_oaModModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModModuleInstHeader_assign_doc[] = 
"Class: oaIntAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModModuleInstHeader data;
  int convert_status=PyoaIntAppDef_oaModModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModModuleInstHeader_get,METH_VARARGS,oaIntAppDef_oaModModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModModuleInstHeader_getDefault,METH_VARARGS,oaIntAppDef_oaModModuleInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModModuleInstHeader_set,METH_VARARGS,oaIntAppDef_oaModModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModModuleInstHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaModModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModModuleInstHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaModModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModModuleInstHeader_doc[] = 
"Class: oaIntAppDef_oaModModuleInstHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModModuleInstHeader)\n"
"    Calls: (const oaIntAppDef_oaModModuleInstHeader&)\n"
"    Signature: oaIntAppDef_oaModModuleInstHeader||cref-oaIntAppDef_oaModModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModModuleInstHeader",
    sizeof(PyoaIntAppDef_oaModModuleInstHeaderObject),
    0,
    (destructor)oaIntAppDef_oaModModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModModuleInstHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaModModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::find(p1.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModModuleInstHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::get(p1.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModModuleInstHeaderp result= (oaIntAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModModuleInstHeader_FromoaIntAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModModuleInstHeader_static_find,METH_VARARGS,oaIntAppDef_oaModModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModModuleInstHeader_static_get,METH_VARARGS,oaIntAppDef_oaModModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModModuleInstHeader",
           (PyObject*)(&PyoaIntAppDef_oaModModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModModuleInstHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaModModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModNetObject* self = (PyoaIntAppDef_oaModNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModNet)
    {
        PyParamoaIntAppDef_oaModNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModNet, Choices are:\n"
        "    (oaIntAppDef_oaModNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModNet_tp_dealloc(PyoaIntAppDef_oaModNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModNet_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModNet value;
    int convert_status=PyoaIntAppDef_oaModNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaIntAppDef_oaModNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModNet v1;
    PyParamoaIntAppDef_oaModNet v2;
    int convert_status1=PyoaIntAppDef_oaModNet_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModNet_Convert(PyObject* ob,PyParamoaIntAppDef_oaModNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModNet_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModNet**) ((PyoaIntAppDef_oaModNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(oaIntAppDef_oaModNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModNet* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModNet_Type.tp_alloc(&PyoaIntAppDef_oaModNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModNetObject* self = (PyoaIntAppDef_oaModNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(oaIntAppDef_oaModNet* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModNet_Type.tp_alloc(&PyoaIntAppDef_oaModNet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModNetObject* self = (PyoaIntAppDef_oaModNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModNet_get_doc[] = 
"Class: oaIntAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaModNet)\n"
"    Calls: oaInt4 get(const oaModNet* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModNet,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModNet data;
    int convert_status=PyoaIntAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModNetObject* self=(PyoaIntAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModNet_getDefault_doc[] = 
"Class: oaIntAppDef_oaModNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModNet data;
    int convert_status=PyoaIntAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModNetObject* self=(PyoaIntAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModNet_set_doc[] = 
"Class: oaIntAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaModNet,oaInt4)\n"
"    Calls: void set(oaModNet* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModNet,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModNet data;
    int convert_status=PyoaIntAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModNetObject* self=(PyoaIntAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModNet_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModNet_isNull_doc[] =
"Class: oaIntAppDef_oaModNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModNet data;
    int convert_status=PyoaIntAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModNet_assign_doc[] = 
"Class: oaIntAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModNet data;
  int convert_status=PyoaIntAppDef_oaModNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModNet_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModNet_get,METH_VARARGS,oaIntAppDef_oaModNet_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModNet_getDefault,METH_VARARGS,oaIntAppDef_oaModNet_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModNet_set,METH_VARARGS,oaIntAppDef_oaModNet_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModNet_tp_isNull,METH_VARARGS,oaIntAppDef_oaModNet_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModNet_tp_assign,METH_VARARGS,oaIntAppDef_oaModNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModNet_doc[] = 
"Class: oaIntAppDef_oaModNet\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModNet)\n"
"    Calls: (const oaIntAppDef_oaModNet&)\n"
"    Signature: oaIntAppDef_oaModNet||cref-oaIntAppDef_oaModNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModNet",
    sizeof(PyoaIntAppDef_oaModNetObject),
    0,
    (destructor)oaIntAppDef_oaModNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModNet_static_find_doc[] = 
"Class: oaIntAppDef_oaModNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModNet|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::find(p1.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModNet_static_get_doc[] = 
"Class: oaIntAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModNet* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModNet* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::get(p1.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModNetp result= (oaIntAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModNet_FromoaIntAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModNet_static_find,METH_VARARGS,oaIntAppDef_oaModNet_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModNet_static_get,METH_VARARGS,oaIntAppDef_oaModNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModNet",
           (PyObject*)(&PyoaIntAppDef_oaModNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModNet_Type.tp_dict;
    for(method=oaIntAppDef_oaModNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModTermObject* self = (PyoaIntAppDef_oaModTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModTerm)
    {
        PyParamoaIntAppDef_oaModTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModTerm, Choices are:\n"
        "    (oaIntAppDef_oaModTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModTerm_tp_dealloc(PyoaIntAppDef_oaModTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModTerm value;
    int convert_status=PyoaIntAppDef_oaModTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaModTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModTerm v1;
    PyParamoaIntAppDef_oaModTerm v2;
    int convert_status1=PyoaIntAppDef_oaModTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModTerm_Convert(PyObject* ob,PyParamoaIntAppDef_oaModTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModTerm_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModTerm**) ((PyoaIntAppDef_oaModTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(oaIntAppDef_oaModTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModTerm* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModTerm_Type.tp_alloc(&PyoaIntAppDef_oaModTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModTermObject* self = (PyoaIntAppDef_oaModTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(oaIntAppDef_oaModTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModTerm_Type.tp_alloc(&PyoaIntAppDef_oaModTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModTermObject* self = (PyoaIntAppDef_oaModTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModTerm_get_doc[] = 
"Class: oaIntAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaModTerm)\n"
"    Calls: oaInt4 get(const oaModTerm* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModTerm,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModTerm data;
    int convert_status=PyoaIntAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModTermObject* self=(PyoaIntAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModTerm_getDefault_doc[] = 
"Class: oaIntAppDef_oaModTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModTerm data;
    int convert_status=PyoaIntAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModTermObject* self=(PyoaIntAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModTerm_set_doc[] = 
"Class: oaIntAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaModTerm,oaInt4)\n"
"    Calls: void set(oaModTerm* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModTerm,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModTerm data;
    int convert_status=PyoaIntAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModTermObject* self=(PyoaIntAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModTerm_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModTerm_isNull_doc[] =
"Class: oaIntAppDef_oaModTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModTerm data;
    int convert_status=PyoaIntAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModTerm_assign_doc[] = 
"Class: oaIntAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModTerm data;
  int convert_status=PyoaIntAppDef_oaModTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModTerm_get,METH_VARARGS,oaIntAppDef_oaModTerm_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModTerm_getDefault,METH_VARARGS,oaIntAppDef_oaModTerm_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModTerm_set,METH_VARARGS,oaIntAppDef_oaModTerm_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModTerm_tp_isNull,METH_VARARGS,oaIntAppDef_oaModTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModTerm_tp_assign,METH_VARARGS,oaIntAppDef_oaModTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModTerm_doc[] = 
"Class: oaIntAppDef_oaModTerm\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModTerm)\n"
"    Calls: (const oaIntAppDef_oaModTerm&)\n"
"    Signature: oaIntAppDef_oaModTerm||cref-oaIntAppDef_oaModTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModTerm",
    sizeof(PyoaIntAppDef_oaModTermObject),
    0,
    (destructor)oaIntAppDef_oaModTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModTerm_static_find_doc[] = 
"Class: oaIntAppDef_oaModTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModTerm|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::find(p1.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModTerm_static_get_doc[] = 
"Class: oaIntAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModTerm* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModTerm* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::get(p1.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModTermp result= (oaIntAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModTerm_FromoaIntAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModTerm_static_find,METH_VARARGS,oaIntAppDef_oaModTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModTerm_static_get,METH_VARARGS,oaIntAppDef_oaModTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModTerm",
           (PyObject*)(&PyoaIntAppDef_oaModTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModTerm_Type.tp_dict;
    for(method=oaIntAppDef_oaModTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModVectorInstDefObject* self = (PyoaIntAppDef_oaModVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModVectorInstDef)
    {
        PyParamoaIntAppDef_oaModVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModVectorInstDef, Choices are:\n"
        "    (oaIntAppDef_oaModVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModVectorInstDef_tp_dealloc(PyoaIntAppDef_oaModVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModVectorInstDef value;
    int convert_status=PyoaIntAppDef_oaModVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntAppDef_oaModVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModVectorInstDef v1;
    PyParamoaIntAppDef_oaModVectorInstDef v2;
    int convert_status1=PyoaIntAppDef_oaModVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModVectorInstDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaModVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModVectorInstDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModVectorInstDef**) ((PyoaIntAppDef_oaModVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(oaIntAppDef_oaModVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModVectorInstDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaIntAppDef_oaModVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModVectorInstDefObject* self = (PyoaIntAppDef_oaModVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(oaIntAppDef_oaModVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaIntAppDef_oaModVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModVectorInstDefObject* self = (PyoaIntAppDef_oaModVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModVectorInstDef_get_doc[] = 
"Class: oaIntAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaModVectorInstDef)\n"
"    Calls: oaInt4 get(const oaModVectorInstDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModVectorInstDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModVectorInstDefObject* self=(PyoaIntAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModVectorInstDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaModVectorInstDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModVectorInstDefObject* self=(PyoaIntAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModVectorInstDef_set_doc[] = 
"Class: oaIntAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaModVectorInstDef,oaInt4)\n"
"    Calls: void set(oaModVectorInstDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModVectorInstDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModVectorInstDefObject* self=(PyoaIntAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModVectorInstDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModVectorInstDef_isNull_doc[] =
"Class: oaIntAppDef_oaModVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModVectorInstDef_assign_doc[] = 
"Class: oaIntAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModVectorInstDef data;
  int convert_status=PyoaIntAppDef_oaModVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModVectorInstDef_get,METH_VARARGS,oaIntAppDef_oaModVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModVectorInstDef_getDefault,METH_VARARGS,oaIntAppDef_oaModVectorInstDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModVectorInstDef_set,METH_VARARGS,oaIntAppDef_oaModVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModVectorInstDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaModVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModVectorInstDef_tp_assign,METH_VARARGS,oaIntAppDef_oaModVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModVectorInstDef_doc[] = 
"Class: oaIntAppDef_oaModVectorInstDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModVectorInstDef)\n"
"    Calls: (const oaIntAppDef_oaModVectorInstDef&)\n"
"    Signature: oaIntAppDef_oaModVectorInstDef||cref-oaIntAppDef_oaModVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModVectorInstDef",
    sizeof(PyoaIntAppDef_oaModVectorInstDefObject),
    0,
    (destructor)oaIntAppDef_oaModVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModVectorInstDef_static_find_doc[] = 
"Class: oaIntAppDef_oaModVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::find(p1.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModVectorInstDef_static_get_doc[] = 
"Class: oaIntAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::get(p1.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModVectorInstDefp result= (oaIntAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModVectorInstDef_FromoaIntAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModVectorInstDef_static_find,METH_VARARGS,oaIntAppDef_oaModVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModVectorInstDef_static_get,METH_VARARGS,oaIntAppDef_oaModVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModVectorInstDef",
           (PyObject*)(&PyoaIntAppDef_oaModVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModVectorInstDef_Type.tp_dict;
    for(method=oaIntAppDef_oaModVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaModule
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModule_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaModule_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaModuleObject* self = (PyoaIntAppDef_oaModuleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaModule)
    {
        PyParamoaIntAppDef_oaModule p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaModule_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaModule, Choices are:\n"
        "    (oaIntAppDef_oaModule)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaModule_tp_dealloc(PyoaIntAppDef_oaModuleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaModule_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaModule value;
    int convert_status=PyoaIntAppDef_oaModule_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaIntAppDef_oaModule::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaModule_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaModule v1;
    PyParamoaIntAppDef_oaModule v2;
    int convert_status1=PyoaIntAppDef_oaModule_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaModule_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaModule_Convert(PyObject* ob,PyParamoaIntAppDef_oaModule* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaModule_Check(ob)) {
        result->SetData( (oaIntAppDef_oaModule**) ((PyoaIntAppDef_oaModuleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaModule Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(oaIntAppDef_oaModule** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaModule* data=*value;
        PyObject* bself = PyoaIntAppDef_oaModule_Type.tp_alloc(&PyoaIntAppDef_oaModule_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaModuleObject* self = (PyoaIntAppDef_oaModuleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(oaIntAppDef_oaModule* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaModule_Type.tp_alloc(&PyoaIntAppDef_oaModule_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaModuleObject* self = (PyoaIntAppDef_oaModuleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModule_get_doc[] = 
"Class: oaIntAppDef_oaModule, Function: get\n"
"  Paramegers: (oaModule)\n"
"    Calls: oaInt4 get(const oaModule* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaModule,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModule_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModule data;
    int convert_status=PyoaIntAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModuleObject* self=(PyoaIntAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModule_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModule_getDefault_doc[] = 
"Class: oaIntAppDef_oaModule, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaModule_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModule data;
    int convert_status=PyoaIntAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModuleObject* self=(PyoaIntAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModule_set_doc[] = 
"Class: oaIntAppDef_oaModule, Function: set\n"
"  Paramegers: (oaModule,oaInt4)\n"
"    Calls: void set(oaModule* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaModule,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaModule_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaModule data;
    int convert_status=PyoaIntAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaModuleObject* self=(PyoaIntAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModule_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModule_isNull_doc[] =
"Class: oaIntAppDef_oaModule, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaModule_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaModule data;
    int convert_status=PyoaIntAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaModule_assign_doc[] = 
"Class: oaIntAppDef_oaModule, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaModule_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaModule data;
  int convert_status=PyoaIntAppDef_oaModule_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaModule p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaModule_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaModule_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaModule_get,METH_VARARGS,oaIntAppDef_oaModule_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaModule_getDefault,METH_VARARGS,oaIntAppDef_oaModule_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaModule_set,METH_VARARGS,oaIntAppDef_oaModule_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaModule_tp_isNull,METH_VARARGS,oaIntAppDef_oaModule_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaModule_tp_assign,METH_VARARGS,oaIntAppDef_oaModule_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModule_doc[] = 
"Class: oaIntAppDef_oaModule\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaModule)\n"
"    Calls: (const oaIntAppDef_oaModule&)\n"
"    Signature: oaIntAppDef_oaModule||cref-oaIntAppDef_oaModule,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaModule_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaModule",
    sizeof(PyoaIntAppDef_oaModuleObject),
    0,
    (destructor)oaIntAppDef_oaModule_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaModule_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaModule_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaModule_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaModule_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaModule_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaModule_static_find_doc[] = 
"Class: oaIntAppDef_oaModule, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModule* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaModule|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModule* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaModule_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::find(p1.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModule, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaModule_static_get_doc[] = 
"Class: oaIntAppDef_oaModule, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaModule* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaModule|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaModule* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModule|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModule* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModule|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaModule_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::get(p1.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaModulep result= (oaIntAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaModule_FromoaIntAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaModule, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaModule_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaModule_static_find,METH_VARARGS,oaIntAppDef_oaModule_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaModule_static_get,METH_VARARGS,oaIntAppDef_oaModule_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaModule_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaModule_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaModule\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaModule",
           (PyObject*)(&PyoaIntAppDef_oaModule_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaModule\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaModule_Type.tp_dict;
    for(method=oaIntAppDef_oaModule_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaNetObject* self = (PyoaIntAppDef_oaNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaNet)
    {
        PyParamoaIntAppDef_oaNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaNet, Choices are:\n"
        "    (oaIntAppDef_oaNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaNet_tp_dealloc(PyoaIntAppDef_oaNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaNet_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaNet value;
    int convert_status=PyoaIntAppDef_oaNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[39];
    sprintf(buffer,"<oaIntAppDef_oaNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaNet v1;
    PyParamoaIntAppDef_oaNet v2;
    int convert_status1=PyoaIntAppDef_oaNet_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaNet_Convert(PyObject* ob,PyParamoaIntAppDef_oaNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaNet_Check(ob)) {
        result->SetData( (oaIntAppDef_oaNet**) ((PyoaIntAppDef_oaNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(oaIntAppDef_oaNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaNet* data=*value;
        PyObject* bself = PyoaIntAppDef_oaNet_Type.tp_alloc(&PyoaIntAppDef_oaNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaNetObject* self = (PyoaIntAppDef_oaNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(oaIntAppDef_oaNet* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaNet_Type.tp_alloc(&PyoaIntAppDef_oaNet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaNetObject* self = (PyoaIntAppDef_oaNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaNet_get_doc[] = 
"Class: oaIntAppDef_oaNet, Function: get\n"
"  Paramegers: (oaNet)\n"
"    Calls: oaInt4 get(const oaNet* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaNet,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaNet data;
    int convert_status=PyoaIntAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaNetObject* self=(PyoaIntAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNet_getDefault_doc[] = 
"Class: oaIntAppDef_oaNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaNet data;
    int convert_status=PyoaIntAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaNetObject* self=(PyoaIntAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNet_set_doc[] = 
"Class: oaIntAppDef_oaNet, Function: set\n"
"  Paramegers: (oaNet,oaInt4)\n"
"    Calls: void set(oaNet* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaNet,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaNet data;
    int convert_status=PyoaIntAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaNetObject* self=(PyoaIntAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNet_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNet_isNull_doc[] =
"Class: oaIntAppDef_oaNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaNet data;
    int convert_status=PyoaIntAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaNet_assign_doc[] = 
"Class: oaIntAppDef_oaNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaNet data;
  int convert_status=PyoaIntAppDef_oaNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaNet_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaNet_get,METH_VARARGS,oaIntAppDef_oaNet_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaNet_getDefault,METH_VARARGS,oaIntAppDef_oaNet_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaNet_set,METH_VARARGS,oaIntAppDef_oaNet_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaNet_tp_isNull,METH_VARARGS,oaIntAppDef_oaNet_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaNet_tp_assign,METH_VARARGS,oaIntAppDef_oaNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaNet_doc[] = 
"Class: oaIntAppDef_oaNet\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaNet)\n"
"    Calls: (const oaIntAppDef_oaNet&)\n"
"    Signature: oaIntAppDef_oaNet||cref-oaIntAppDef_oaNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaNet",
    sizeof(PyoaIntAppDef_oaNetObject),
    0,
    (destructor)oaIntAppDef_oaNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaNet_static_find_doc[] = 
"Class: oaIntAppDef_oaNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaNet|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::find(p1.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNet_static_get_doc[] = 
"Class: oaIntAppDef_oaNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaNet* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaNet* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::get(p1.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNetp result= (oaIntAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaNet_FromoaIntAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaNet_static_find,METH_VARARGS,oaIntAppDef_oaNet_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaNet_static_get,METH_VARARGS,oaIntAppDef_oaNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaNet",
           (PyObject*)(&PyoaIntAppDef_oaNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaNet_Type.tp_dict;
    for(method=oaIntAppDef_oaNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaNode
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaNode_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaNode_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaNodeObject* self = (PyoaIntAppDef_oaNodeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaNode)
    {
        PyParamoaIntAppDef_oaNode p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaNode_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaNode, Choices are:\n"
        "    (oaIntAppDef_oaNode)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaNode_tp_dealloc(PyoaIntAppDef_oaNodeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaNode_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaNode value;
    int convert_status=PyoaIntAppDef_oaNode_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaIntAppDef_oaNode::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaNode_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaNode v1;
    PyParamoaIntAppDef_oaNode v2;
    int convert_status1=PyoaIntAppDef_oaNode_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaNode_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaNode_Convert(PyObject* ob,PyParamoaIntAppDef_oaNode* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaNode_Check(ob)) {
        result->SetData( (oaIntAppDef_oaNode**) ((PyoaIntAppDef_oaNodeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaNode Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(oaIntAppDef_oaNode** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaNode* data=*value;
        PyObject* bself = PyoaIntAppDef_oaNode_Type.tp_alloc(&PyoaIntAppDef_oaNode_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaNodeObject* self = (PyoaIntAppDef_oaNodeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(oaIntAppDef_oaNode* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaNode_Type.tp_alloc(&PyoaIntAppDef_oaNode_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaNodeObject* self = (PyoaIntAppDef_oaNodeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaNode_get_doc[] = 
"Class: oaIntAppDef_oaNode, Function: get\n"
"  Paramegers: (oaNode)\n"
"    Calls: oaInt4 get(const oaNode* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaNode,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaNode_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaNode data;
    int convert_status=PyoaIntAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaNodeObject* self=(PyoaIntAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNode_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNode_getDefault_doc[] = 
"Class: oaIntAppDef_oaNode, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaNode_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaNode data;
    int convert_status=PyoaIntAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaNodeObject* self=(PyoaIntAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNode_set_doc[] = 
"Class: oaIntAppDef_oaNode, Function: set\n"
"  Paramegers: (oaNode,oaInt4)\n"
"    Calls: void set(oaNode* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaNode,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaNode_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaNode data;
    int convert_status=PyoaIntAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaNodeObject* self=(PyoaIntAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNode_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNode_isNull_doc[] =
"Class: oaIntAppDef_oaNode, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaNode_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaNode data;
    int convert_status=PyoaIntAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaNode_assign_doc[] = 
"Class: oaIntAppDef_oaNode, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaNode_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaNode data;
  int convert_status=PyoaIntAppDef_oaNode_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaNode p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaNode_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaNode_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaNode_get,METH_VARARGS,oaIntAppDef_oaNode_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaNode_getDefault,METH_VARARGS,oaIntAppDef_oaNode_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaNode_set,METH_VARARGS,oaIntAppDef_oaNode_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaNode_tp_isNull,METH_VARARGS,oaIntAppDef_oaNode_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaNode_tp_assign,METH_VARARGS,oaIntAppDef_oaNode_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaNode_doc[] = 
"Class: oaIntAppDef_oaNode\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaNode)\n"
"    Calls: (const oaIntAppDef_oaNode&)\n"
"    Signature: oaIntAppDef_oaNode||cref-oaIntAppDef_oaNode,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaNode_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaNode",
    sizeof(PyoaIntAppDef_oaNodeObject),
    0,
    (destructor)oaIntAppDef_oaNode_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaNode_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaNode_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaNode_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaNode_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaNode_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaNode_static_find_doc[] = 
"Class: oaIntAppDef_oaNode, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaNode* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaNode|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaNode* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaNode_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::find(p1.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaNode, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaNode_static_get_doc[] = 
"Class: oaIntAppDef_oaNode, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaNode* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaNode|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaNode* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaNode|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaNode* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaNode|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaNode_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::get(p1.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaNodep result= (oaIntAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaNode_FromoaIntAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaNode, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaNode_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaNode_static_find,METH_VARARGS,oaIntAppDef_oaNode_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaNode_static_get,METH_VARARGS,oaIntAppDef_oaNode_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaNode_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaNode_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaNode\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaNode",
           (PyObject*)(&PyoaIntAppDef_oaNode_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaNode\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaNode_Type.tp_dict;
    for(method=oaIntAppDef_oaNode_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccAssignmentObject* self = (PyoaIntAppDef_oaOccAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccAssignment)
    {
        PyParamoaIntAppDef_oaOccAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccAssignment, Choices are:\n"
        "    (oaIntAppDef_oaOccAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccAssignment_tp_dealloc(PyoaIntAppDef_oaOccAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccAssignment_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccAssignment value;
    int convert_status=PyoaIntAppDef_oaOccAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaOccAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccAssignment v1;
    PyParamoaIntAppDef_oaOccAssignment v2;
    int convert_status1=PyoaIntAppDef_oaOccAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccAssignment_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccAssignment_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccAssignment**) ((PyoaIntAppDef_oaOccAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(oaIntAppDef_oaOccAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccAssignment* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccAssignment_Type.tp_alloc(&PyoaIntAppDef_oaOccAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccAssignmentObject* self = (PyoaIntAppDef_oaOccAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(oaIntAppDef_oaOccAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccAssignment_Type.tp_alloc(&PyoaIntAppDef_oaOccAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccAssignmentObject* self = (PyoaIntAppDef_oaOccAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccAssignment_get_doc[] = 
"Class: oaIntAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaOccAssignment)\n"
"    Calls: oaInt4 get(const oaOccAssignment* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccAssignment,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccAssignment data;
    int convert_status=PyoaIntAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccAssignmentObject* self=(PyoaIntAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccAssignment_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccAssignment, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccAssignment data;
    int convert_status=PyoaIntAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccAssignmentObject* self=(PyoaIntAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccAssignment_set_doc[] = 
"Class: oaIntAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaOccAssignment,oaInt4)\n"
"    Calls: void set(oaOccAssignment* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccAssignment,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccAssignment data;
    int convert_status=PyoaIntAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccAssignmentObject* self=(PyoaIntAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccAssignment_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccAssignment_isNull_doc[] =
"Class: oaIntAppDef_oaOccAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccAssignment data;
    int convert_status=PyoaIntAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccAssignment_assign_doc[] = 
"Class: oaIntAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccAssignment data;
  int convert_status=PyoaIntAppDef_oaOccAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccAssignment_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccAssignment_get,METH_VARARGS,oaIntAppDef_oaOccAssignment_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccAssignment_getDefault,METH_VARARGS,oaIntAppDef_oaOccAssignment_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccAssignment_set,METH_VARARGS,oaIntAppDef_oaOccAssignment_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccAssignment_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccAssignment_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccAssignment_tp_assign,METH_VARARGS,oaIntAppDef_oaOccAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccAssignment_doc[] = 
"Class: oaIntAppDef_oaOccAssignment\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccAssignment)\n"
"    Calls: (const oaIntAppDef_oaOccAssignment&)\n"
"    Signature: oaIntAppDef_oaOccAssignment||cref-oaIntAppDef_oaOccAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccAssignment",
    sizeof(PyoaIntAppDef_oaOccAssignmentObject),
    0,
    (destructor)oaIntAppDef_oaOccAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccAssignment_static_find_doc[] = 
"Class: oaIntAppDef_oaOccAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::find(p1.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccAssignment_static_get_doc[] = 
"Class: oaIntAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccAssignment* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccAssignment* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::get(p1.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccAssignmentp result= (oaIntAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccAssignment_FromoaIntAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccAssignment_static_find,METH_VARARGS,oaIntAppDef_oaOccAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccAssignment_static_get,METH_VARARGS,oaIntAppDef_oaOccAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccAssignment",
           (PyObject*)(&PyoaIntAppDef_oaOccAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccAssignment_Type.tp_dict;
    for(method=oaIntAppDef_oaOccAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccBusNetDefObject* self = (PyoaIntAppDef_oaOccBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccBusNetDef)
    {
        PyParamoaIntAppDef_oaOccBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccBusNetDef, Choices are:\n"
        "    (oaIntAppDef_oaOccBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccBusNetDef_tp_dealloc(PyoaIntAppDef_oaOccBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccBusNetDef value;
    int convert_status=PyoaIntAppDef_oaOccBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntAppDef_oaOccBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccBusNetDef v1;
    PyParamoaIntAppDef_oaOccBusNetDef v2;
    int convert_status1=PyoaIntAppDef_oaOccBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccBusNetDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccBusNetDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccBusNetDef**) ((PyoaIntAppDef_oaOccBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(oaIntAppDef_oaOccBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccBusNetDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaIntAppDef_oaOccBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccBusNetDefObject* self = (PyoaIntAppDef_oaOccBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(oaIntAppDef_oaOccBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaIntAppDef_oaOccBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccBusNetDefObject* self = (PyoaIntAppDef_oaOccBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusNetDef_get_doc[] = 
"Class: oaIntAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaOccBusNetDef)\n"
"    Calls: oaInt4 get(const oaOccBusNetDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccBusNetDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccBusNetDef data;
    int convert_status=PyoaIntAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccBusNetDefObject* self=(PyoaIntAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusNetDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccBusNetDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccBusNetDef data;
    int convert_status=PyoaIntAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccBusNetDefObject* self=(PyoaIntAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusNetDef_set_doc[] = 
"Class: oaIntAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaOccBusNetDef,oaInt4)\n"
"    Calls: void set(oaOccBusNetDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccBusNetDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccBusNetDef data;
    int convert_status=PyoaIntAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccBusNetDefObject* self=(PyoaIntAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusNetDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusNetDef_isNull_doc[] =
"Class: oaIntAppDef_oaOccBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccBusNetDef data;
    int convert_status=PyoaIntAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccBusNetDef_assign_doc[] = 
"Class: oaIntAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccBusNetDef data;
  int convert_status=PyoaIntAppDef_oaOccBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccBusNetDef_get,METH_VARARGS,oaIntAppDef_oaOccBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccBusNetDef_getDefault,METH_VARARGS,oaIntAppDef_oaOccBusNetDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccBusNetDef_set,METH_VARARGS,oaIntAppDef_oaOccBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccBusNetDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccBusNetDef_tp_assign,METH_VARARGS,oaIntAppDef_oaOccBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusNetDef_doc[] = 
"Class: oaIntAppDef_oaOccBusNetDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccBusNetDef)\n"
"    Calls: (const oaIntAppDef_oaOccBusNetDef&)\n"
"    Signature: oaIntAppDef_oaOccBusNetDef||cref-oaIntAppDef_oaOccBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccBusNetDef",
    sizeof(PyoaIntAppDef_oaOccBusNetDefObject),
    0,
    (destructor)oaIntAppDef_oaOccBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusNetDef_static_find_doc[] = 
"Class: oaIntAppDef_oaOccBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::find(p1.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusNetDef_static_get_doc[] = 
"Class: oaIntAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::get(p1.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusNetDefp result= (oaIntAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccBusNetDef_FromoaIntAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccBusNetDef_static_find,METH_VARARGS,oaIntAppDef_oaOccBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccBusNetDef_static_get,METH_VARARGS,oaIntAppDef_oaOccBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccBusNetDef",
           (PyObject*)(&PyoaIntAppDef_oaOccBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccBusNetDef_Type.tp_dict;
    for(method=oaIntAppDef_oaOccBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccBusTermDefObject* self = (PyoaIntAppDef_oaOccBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccBusTermDef)
    {
        PyParamoaIntAppDef_oaOccBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccBusTermDef, Choices are:\n"
        "    (oaIntAppDef_oaOccBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccBusTermDef_tp_dealloc(PyoaIntAppDef_oaOccBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccBusTermDef value;
    int convert_status=PyoaIntAppDef_oaOccBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaOccBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccBusTermDef v1;
    PyParamoaIntAppDef_oaOccBusTermDef v2;
    int convert_status1=PyoaIntAppDef_oaOccBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccBusTermDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccBusTermDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccBusTermDef**) ((PyoaIntAppDef_oaOccBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(oaIntAppDef_oaOccBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccBusTermDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaIntAppDef_oaOccBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccBusTermDefObject* self = (PyoaIntAppDef_oaOccBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(oaIntAppDef_oaOccBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaIntAppDef_oaOccBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccBusTermDefObject* self = (PyoaIntAppDef_oaOccBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusTermDef_get_doc[] = 
"Class: oaIntAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaOccBusTermDef)\n"
"    Calls: oaInt4 get(const oaOccBusTermDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccBusTermDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccBusTermDef data;
    int convert_status=PyoaIntAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccBusTermDefObject* self=(PyoaIntAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusTermDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccBusTermDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccBusTermDef data;
    int convert_status=PyoaIntAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccBusTermDefObject* self=(PyoaIntAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusTermDef_set_doc[] = 
"Class: oaIntAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaOccBusTermDef,oaInt4)\n"
"    Calls: void set(oaOccBusTermDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccBusTermDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccBusTermDef data;
    int convert_status=PyoaIntAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccBusTermDefObject* self=(PyoaIntAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusTermDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusTermDef_isNull_doc[] =
"Class: oaIntAppDef_oaOccBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccBusTermDef data;
    int convert_status=PyoaIntAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccBusTermDef_assign_doc[] = 
"Class: oaIntAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccBusTermDef data;
  int convert_status=PyoaIntAppDef_oaOccBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccBusTermDef_get,METH_VARARGS,oaIntAppDef_oaOccBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccBusTermDef_getDefault,METH_VARARGS,oaIntAppDef_oaOccBusTermDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccBusTermDef_set,METH_VARARGS,oaIntAppDef_oaOccBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccBusTermDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccBusTermDef_tp_assign,METH_VARARGS,oaIntAppDef_oaOccBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusTermDef_doc[] = 
"Class: oaIntAppDef_oaOccBusTermDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccBusTermDef)\n"
"    Calls: (const oaIntAppDef_oaOccBusTermDef&)\n"
"    Signature: oaIntAppDef_oaOccBusTermDef||cref-oaIntAppDef_oaOccBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccBusTermDef",
    sizeof(PyoaIntAppDef_oaOccBusTermDefObject),
    0,
    (destructor)oaIntAppDef_oaOccBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusTermDef_static_find_doc[] = 
"Class: oaIntAppDef_oaOccBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::find(p1.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccBusTermDef_static_get_doc[] = 
"Class: oaIntAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::get(p1.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccBusTermDefp result= (oaIntAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccBusTermDef_FromoaIntAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccBusTermDef_static_find,METH_VARARGS,oaIntAppDef_oaOccBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccBusTermDef_static_get,METH_VARARGS,oaIntAppDef_oaOccBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccBusTermDef",
           (PyObject*)(&PyoaIntAppDef_oaOccBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccBusTermDef_Type.tp_dict;
    for(method=oaIntAppDef_oaOccBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccConnectDefObject* self = (PyoaIntAppDef_oaOccConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccConnectDef)
    {
        PyParamoaIntAppDef_oaOccConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccConnectDef, Choices are:\n"
        "    (oaIntAppDef_oaOccConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccConnectDef_tp_dealloc(PyoaIntAppDef_oaOccConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccConnectDef value;
    int convert_status=PyoaIntAppDef_oaOccConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaOccConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccConnectDef v1;
    PyParamoaIntAppDef_oaOccConnectDef v2;
    int convert_status1=PyoaIntAppDef_oaOccConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccConnectDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccConnectDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccConnectDef**) ((PyoaIntAppDef_oaOccConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(oaIntAppDef_oaOccConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccConnectDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaIntAppDef_oaOccConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccConnectDefObject* self = (PyoaIntAppDef_oaOccConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(oaIntAppDef_oaOccConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaIntAppDef_oaOccConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccConnectDefObject* self = (PyoaIntAppDef_oaOccConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccConnectDef_get_doc[] = 
"Class: oaIntAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaOccConnectDef)\n"
"    Calls: oaInt4 get(const oaOccConnectDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccConnectDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccConnectDef data;
    int convert_status=PyoaIntAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccConnectDefObject* self=(PyoaIntAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccConnectDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccConnectDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccConnectDef data;
    int convert_status=PyoaIntAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccConnectDefObject* self=(PyoaIntAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccConnectDef_set_doc[] = 
"Class: oaIntAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaOccConnectDef,oaInt4)\n"
"    Calls: void set(oaOccConnectDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccConnectDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccConnectDef data;
    int convert_status=PyoaIntAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccConnectDefObject* self=(PyoaIntAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccConnectDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccConnectDef_isNull_doc[] =
"Class: oaIntAppDef_oaOccConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccConnectDef data;
    int convert_status=PyoaIntAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccConnectDef_assign_doc[] = 
"Class: oaIntAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccConnectDef data;
  int convert_status=PyoaIntAppDef_oaOccConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccConnectDef_get,METH_VARARGS,oaIntAppDef_oaOccConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccConnectDef_getDefault,METH_VARARGS,oaIntAppDef_oaOccConnectDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccConnectDef_set,METH_VARARGS,oaIntAppDef_oaOccConnectDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccConnectDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccConnectDef_tp_assign,METH_VARARGS,oaIntAppDef_oaOccConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccConnectDef_doc[] = 
"Class: oaIntAppDef_oaOccConnectDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccConnectDef)\n"
"    Calls: (const oaIntAppDef_oaOccConnectDef&)\n"
"    Signature: oaIntAppDef_oaOccConnectDef||cref-oaIntAppDef_oaOccConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccConnectDef",
    sizeof(PyoaIntAppDef_oaOccConnectDefObject),
    0,
    (destructor)oaIntAppDef_oaOccConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccConnectDef_static_find_doc[] = 
"Class: oaIntAppDef_oaOccConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::find(p1.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccConnectDef_static_get_doc[] = 
"Class: oaIntAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::get(p1.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccConnectDefp result= (oaIntAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccConnectDef_FromoaIntAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccConnectDef_static_find,METH_VARARGS,oaIntAppDef_oaOccConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccConnectDef_static_get,METH_VARARGS,oaIntAppDef_oaOccConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccConnectDef",
           (PyObject*)(&PyoaIntAppDef_oaOccConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccConnectDef_Type.tp_dict;
    for(method=oaIntAppDef_oaOccConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccInstObject* self = (PyoaIntAppDef_oaOccInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccInst)
    {
        PyParamoaIntAppDef_oaOccInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccInst, Choices are:\n"
        "    (oaIntAppDef_oaOccInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccInst_tp_dealloc(PyoaIntAppDef_oaOccInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccInst_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccInst value;
    int convert_status=PyoaIntAppDef_oaOccInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaOccInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccInst v1;
    PyParamoaIntAppDef_oaOccInst v2;
    int convert_status1=PyoaIntAppDef_oaOccInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccInst_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccInst_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccInst**) ((PyoaIntAppDef_oaOccInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(oaIntAppDef_oaOccInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccInst* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccInst_Type.tp_alloc(&PyoaIntAppDef_oaOccInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccInstObject* self = (PyoaIntAppDef_oaOccInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(oaIntAppDef_oaOccInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccInst_Type.tp_alloc(&PyoaIntAppDef_oaOccInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccInstObject* self = (PyoaIntAppDef_oaOccInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInst_get_doc[] = 
"Class: oaIntAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaOccInst)\n"
"    Calls: oaInt4 get(const oaOccInst* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccInst,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInst data;
    int convert_status=PyoaIntAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstObject* self=(PyoaIntAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInst_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInst data;
    int convert_status=PyoaIntAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstObject* self=(PyoaIntAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInst_set_doc[] = 
"Class: oaIntAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaOccInst,oaInt4)\n"
"    Calls: void set(oaOccInst* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccInst,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInst data;
    int convert_status=PyoaIntAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstObject* self=(PyoaIntAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInst_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInst_isNull_doc[] =
"Class: oaIntAppDef_oaOccInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccInst data;
    int convert_status=PyoaIntAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccInst_assign_doc[] = 
"Class: oaIntAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccInst data;
  int convert_status=PyoaIntAppDef_oaOccInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccInst_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccInst_get,METH_VARARGS,oaIntAppDef_oaOccInst_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccInst_getDefault,METH_VARARGS,oaIntAppDef_oaOccInst_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccInst_set,METH_VARARGS,oaIntAppDef_oaOccInst_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccInst_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccInst_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccInst_tp_assign,METH_VARARGS,oaIntAppDef_oaOccInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInst_doc[] = 
"Class: oaIntAppDef_oaOccInst\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccInst)\n"
"    Calls: (const oaIntAppDef_oaOccInst&)\n"
"    Signature: oaIntAppDef_oaOccInst||cref-oaIntAppDef_oaOccInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccInst",
    sizeof(PyoaIntAppDef_oaOccInstObject),
    0,
    (destructor)oaIntAppDef_oaOccInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInst_static_find_doc[] = 
"Class: oaIntAppDef_oaOccInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccInst|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::find(p1.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInst_static_get_doc[] = 
"Class: oaIntAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccInst* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccInst* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::get(p1.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstp result= (oaIntAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccInst_FromoaIntAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccInst_static_find,METH_VARARGS,oaIntAppDef_oaOccInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccInst_static_get,METH_VARARGS,oaIntAppDef_oaOccInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccInst",
           (PyObject*)(&PyoaIntAppDef_oaOccInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccInst_Type.tp_dict;
    for(method=oaIntAppDef_oaOccInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccInstHeaderObject* self = (PyoaIntAppDef_oaOccInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccInstHeader)
    {
        PyParamoaIntAppDef_oaOccInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccInstHeader, Choices are:\n"
        "    (oaIntAppDef_oaOccInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccInstHeader_tp_dealloc(PyoaIntAppDef_oaOccInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccInstHeader value;
    int convert_status=PyoaIntAppDef_oaOccInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaOccInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccInstHeader v1;
    PyParamoaIntAppDef_oaOccInstHeader v2;
    int convert_status1=PyoaIntAppDef_oaOccInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccInstHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccInstHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccInstHeader**) ((PyoaIntAppDef_oaOccInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(oaIntAppDef_oaOccInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccInstHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaOccInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccInstHeaderObject* self = (PyoaIntAppDef_oaOccInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(oaIntAppDef_oaOccInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaOccInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccInstHeaderObject* self = (PyoaIntAppDef_oaOccInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstHeader_get_doc[] = 
"Class: oaIntAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaOccInstHeader)\n"
"    Calls: oaInt4 get(const oaOccInstHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccInstHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstHeaderObject* self=(PyoaIntAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstHeaderObject* self=(PyoaIntAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstHeader_set_doc[] = 
"Class: oaIntAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaOccInstHeader,oaInt4)\n"
"    Calls: void set(oaOccInstHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccInstHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstHeaderObject* self=(PyoaIntAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstHeader_isNull_doc[] =
"Class: oaIntAppDef_oaOccInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccInstHeader_assign_doc[] = 
"Class: oaIntAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccInstHeader data;
  int convert_status=PyoaIntAppDef_oaOccInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccInstHeader_get,METH_VARARGS,oaIntAppDef_oaOccInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccInstHeader_getDefault,METH_VARARGS,oaIntAppDef_oaOccInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccInstHeader_set,METH_VARARGS,oaIntAppDef_oaOccInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccInstHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccInstHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaOccInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstHeader_doc[] = 
"Class: oaIntAppDef_oaOccInstHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccInstHeader)\n"
"    Calls: (const oaIntAppDef_oaOccInstHeader&)\n"
"    Signature: oaIntAppDef_oaOccInstHeader||cref-oaIntAppDef_oaOccInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccInstHeader",
    sizeof(PyoaIntAppDef_oaOccInstHeaderObject),
    0,
    (destructor)oaIntAppDef_oaOccInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaOccInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::find(p1.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::get(p1.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstHeaderp result= (oaIntAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccInstHeader_FromoaIntAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccInstHeader_static_find,METH_VARARGS,oaIntAppDef_oaOccInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccInstHeader_static_get,METH_VARARGS,oaIntAppDef_oaOccInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccInstHeader",
           (PyObject*)(&PyoaIntAppDef_oaOccInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccInstHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaOccInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccInstTermObject* self = (PyoaIntAppDef_oaOccInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccInstTerm)
    {
        PyParamoaIntAppDef_oaOccInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccInstTerm, Choices are:\n"
        "    (oaIntAppDef_oaOccInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccInstTerm_tp_dealloc(PyoaIntAppDef_oaOccInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccInstTerm value;
    int convert_status=PyoaIntAppDef_oaOccInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaIntAppDef_oaOccInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccInstTerm v1;
    PyParamoaIntAppDef_oaOccInstTerm v2;
    int convert_status1=PyoaIntAppDef_oaOccInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccInstTerm_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccInstTerm_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccInstTerm**) ((PyoaIntAppDef_oaOccInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(oaIntAppDef_oaOccInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccInstTerm* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaIntAppDef_oaOccInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccInstTermObject* self = (PyoaIntAppDef_oaOccInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(oaIntAppDef_oaOccInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaIntAppDef_oaOccInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccInstTermObject* self = (PyoaIntAppDef_oaOccInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstTerm_get_doc[] = 
"Class: oaIntAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaOccInstTerm)\n"
"    Calls: oaInt4 get(const oaOccInstTerm* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccInstTerm,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInstTerm data;
    int convert_status=PyoaIntAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstTermObject* self=(PyoaIntAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstTerm_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccInstTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInstTerm data;
    int convert_status=PyoaIntAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstTermObject* self=(PyoaIntAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstTerm_set_doc[] = 
"Class: oaIntAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaOccInstTerm,oaInt4)\n"
"    Calls: void set(oaOccInstTerm* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccInstTerm,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccInstTerm data;
    int convert_status=PyoaIntAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccInstTermObject* self=(PyoaIntAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstTerm_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstTerm_isNull_doc[] =
"Class: oaIntAppDef_oaOccInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccInstTerm data;
    int convert_status=PyoaIntAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccInstTerm_assign_doc[] = 
"Class: oaIntAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccInstTerm data;
  int convert_status=PyoaIntAppDef_oaOccInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccInstTerm_get,METH_VARARGS,oaIntAppDef_oaOccInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccInstTerm_getDefault,METH_VARARGS,oaIntAppDef_oaOccInstTerm_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccInstTerm_set,METH_VARARGS,oaIntAppDef_oaOccInstTerm_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccInstTerm_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccInstTerm_tp_assign,METH_VARARGS,oaIntAppDef_oaOccInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstTerm_doc[] = 
"Class: oaIntAppDef_oaOccInstTerm\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccInstTerm)\n"
"    Calls: (const oaIntAppDef_oaOccInstTerm&)\n"
"    Signature: oaIntAppDef_oaOccInstTerm||cref-oaIntAppDef_oaOccInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccInstTerm",
    sizeof(PyoaIntAppDef_oaOccInstTermObject),
    0,
    (destructor)oaIntAppDef_oaOccInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstTerm_static_find_doc[] = 
"Class: oaIntAppDef_oaOccInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::find(p1.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccInstTerm_static_get_doc[] = 
"Class: oaIntAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::get(p1.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccInstTermp result= (oaIntAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccInstTerm_FromoaIntAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccInstTerm_static_find,METH_VARARGS,oaIntAppDef_oaOccInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccInstTerm_static_get,METH_VARARGS,oaIntAppDef_oaOccInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccInstTerm",
           (PyObject*)(&PyoaIntAppDef_oaOccInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccInstTerm_Type.tp_dict;
    for(method=oaIntAppDef_oaOccInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccModuleInstHeaderObject* self = (PyoaIntAppDef_oaOccModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccModuleInstHeader)
    {
        PyParamoaIntAppDef_oaOccModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccModuleInstHeader, Choices are:\n"
        "    (oaIntAppDef_oaOccModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccModuleInstHeader_tp_dealloc(PyoaIntAppDef_oaOccModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccModuleInstHeader value;
    int convert_status=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntAppDef_oaOccModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccModuleInstHeader v1;
    PyParamoaIntAppDef_oaOccModuleInstHeader v2;
    int convert_status1=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccModuleInstHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccModuleInstHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccModuleInstHeader**) ((PyoaIntAppDef_oaOccModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(oaIntAppDef_oaOccModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccModuleInstHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaOccModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccModuleInstHeaderObject* self = (PyoaIntAppDef_oaOccModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(oaIntAppDef_oaOccModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaIntAppDef_oaOccModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccModuleInstHeaderObject* self = (PyoaIntAppDef_oaOccModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccModuleInstHeader_get_doc[] = 
"Class: oaIntAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaOccModuleInstHeader)\n"
"    Calls: oaInt4 get(const oaOccModuleInstHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccModuleInstHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccModuleInstHeaderObject* self=(PyoaIntAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccModuleInstHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccModuleInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccModuleInstHeaderObject* self=(PyoaIntAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccModuleInstHeader_set_doc[] = 
"Class: oaIntAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaOccModuleInstHeader,oaInt4)\n"
"    Calls: void set(oaOccModuleInstHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccModuleInstHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccModuleInstHeaderObject* self=(PyoaIntAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccModuleInstHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccModuleInstHeader_isNull_doc[] =
"Class: oaIntAppDef_oaOccModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccModuleInstHeader_assign_doc[] = 
"Class: oaIntAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccModuleInstHeader data;
  int convert_status=PyoaIntAppDef_oaOccModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccModuleInstHeader_get,METH_VARARGS,oaIntAppDef_oaOccModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccModuleInstHeader_getDefault,METH_VARARGS,oaIntAppDef_oaOccModuleInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccModuleInstHeader_set,METH_VARARGS,oaIntAppDef_oaOccModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccModuleInstHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccModuleInstHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaOccModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccModuleInstHeader_doc[] = 
"Class: oaIntAppDef_oaOccModuleInstHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccModuleInstHeader)\n"
"    Calls: (const oaIntAppDef_oaOccModuleInstHeader&)\n"
"    Signature: oaIntAppDef_oaOccModuleInstHeader||cref-oaIntAppDef_oaOccModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccModuleInstHeader",
    sizeof(PyoaIntAppDef_oaOccModuleInstHeaderObject),
    0,
    (destructor)oaIntAppDef_oaOccModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccModuleInstHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaOccModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::find(p1.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccModuleInstHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::get(p1.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccModuleInstHeaderp result= (oaIntAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccModuleInstHeader_FromoaIntAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccModuleInstHeader_static_find,METH_VARARGS,oaIntAppDef_oaOccModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccModuleInstHeader_static_get,METH_VARARGS,oaIntAppDef_oaOccModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccModuleInstHeader",
           (PyObject*)(&PyoaIntAppDef_oaOccModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccModuleInstHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaOccModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccNetObject* self = (PyoaIntAppDef_oaOccNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccNet)
    {
        PyParamoaIntAppDef_oaOccNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccNet, Choices are:\n"
        "    (oaIntAppDef_oaOccNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccNet_tp_dealloc(PyoaIntAppDef_oaOccNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccNet_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccNet value;
    int convert_status=PyoaIntAppDef_oaOccNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaIntAppDef_oaOccNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccNet v1;
    PyParamoaIntAppDef_oaOccNet v2;
    int convert_status1=PyoaIntAppDef_oaOccNet_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccNet_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccNet_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccNet**) ((PyoaIntAppDef_oaOccNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(oaIntAppDef_oaOccNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccNet* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccNet_Type.tp_alloc(&PyoaIntAppDef_oaOccNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccNetObject* self = (PyoaIntAppDef_oaOccNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(oaIntAppDef_oaOccNet* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccNet_Type.tp_alloc(&PyoaIntAppDef_oaOccNet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccNetObject* self = (PyoaIntAppDef_oaOccNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccNet_get_doc[] = 
"Class: oaIntAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaOccNet)\n"
"    Calls: oaInt4 get(const oaOccNet* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccNet,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccNet data;
    int convert_status=PyoaIntAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccNetObject* self=(PyoaIntAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccNet_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccNet data;
    int convert_status=PyoaIntAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccNetObject* self=(PyoaIntAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccNet_set_doc[] = 
"Class: oaIntAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaOccNet,oaInt4)\n"
"    Calls: void set(oaOccNet* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccNet,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccNet data;
    int convert_status=PyoaIntAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccNetObject* self=(PyoaIntAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccNet_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccNet_isNull_doc[] =
"Class: oaIntAppDef_oaOccNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccNet data;
    int convert_status=PyoaIntAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccNet_assign_doc[] = 
"Class: oaIntAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccNet data;
  int convert_status=PyoaIntAppDef_oaOccNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccNet_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccNet_get,METH_VARARGS,oaIntAppDef_oaOccNet_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccNet_getDefault,METH_VARARGS,oaIntAppDef_oaOccNet_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccNet_set,METH_VARARGS,oaIntAppDef_oaOccNet_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccNet_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccNet_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccNet_tp_assign,METH_VARARGS,oaIntAppDef_oaOccNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccNet_doc[] = 
"Class: oaIntAppDef_oaOccNet\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccNet)\n"
"    Calls: (const oaIntAppDef_oaOccNet&)\n"
"    Signature: oaIntAppDef_oaOccNet||cref-oaIntAppDef_oaOccNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccNet",
    sizeof(PyoaIntAppDef_oaOccNetObject),
    0,
    (destructor)oaIntAppDef_oaOccNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccNet_static_find_doc[] = 
"Class: oaIntAppDef_oaOccNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccNet|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::find(p1.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccNet_static_get_doc[] = 
"Class: oaIntAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccNet* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccNet* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccNet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::get(p1.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccNetp result= (oaIntAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccNet_FromoaIntAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccNet_static_find,METH_VARARGS,oaIntAppDef_oaOccNet_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccNet_static_get,METH_VARARGS,oaIntAppDef_oaOccNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccNet",
           (PyObject*)(&PyoaIntAppDef_oaOccNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccNet_Type.tp_dict;
    for(method=oaIntAppDef_oaOccNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccShapeObject* self = (PyoaIntAppDef_oaOccShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccShape)
    {
        PyParamoaIntAppDef_oaOccShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccShape, Choices are:\n"
        "    (oaIntAppDef_oaOccShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccShape_tp_dealloc(PyoaIntAppDef_oaOccShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccShape_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccShape value;
    int convert_status=PyoaIntAppDef_oaOccShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaIntAppDef_oaOccShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccShape v1;
    PyParamoaIntAppDef_oaOccShape v2;
    int convert_status1=PyoaIntAppDef_oaOccShape_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccShape_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccShape_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccShape**) ((PyoaIntAppDef_oaOccShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(oaIntAppDef_oaOccShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccShape* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccShape_Type.tp_alloc(&PyoaIntAppDef_oaOccShape_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccShapeObject* self = (PyoaIntAppDef_oaOccShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(oaIntAppDef_oaOccShape* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccShape_Type.tp_alloc(&PyoaIntAppDef_oaOccShape_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccShapeObject* self = (PyoaIntAppDef_oaOccShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccShape_get_doc[] = 
"Class: oaIntAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaOccShape)\n"
"    Calls: oaInt4 get(const oaOccShape* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccShape,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccShape data;
    int convert_status=PyoaIntAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccShapeObject* self=(PyoaIntAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccShape_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccShape, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccShape_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccShape data;
    int convert_status=PyoaIntAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccShapeObject* self=(PyoaIntAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccShape_set_doc[] = 
"Class: oaIntAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaOccShape,oaInt4)\n"
"    Calls: void set(oaOccShape* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccShape,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccShape data;
    int convert_status=PyoaIntAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccShapeObject* self=(PyoaIntAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccShape_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccShape_isNull_doc[] =
"Class: oaIntAppDef_oaOccShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccShape data;
    int convert_status=PyoaIntAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccShape_assign_doc[] = 
"Class: oaIntAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccShape data;
  int convert_status=PyoaIntAppDef_oaOccShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccShape_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccShape_get,METH_VARARGS,oaIntAppDef_oaOccShape_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccShape_getDefault,METH_VARARGS,oaIntAppDef_oaOccShape_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccShape_set,METH_VARARGS,oaIntAppDef_oaOccShape_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccShape_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccShape_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccShape_tp_assign,METH_VARARGS,oaIntAppDef_oaOccShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccShape_doc[] = 
"Class: oaIntAppDef_oaOccShape\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccShape)\n"
"    Calls: (const oaIntAppDef_oaOccShape&)\n"
"    Signature: oaIntAppDef_oaOccShape||cref-oaIntAppDef_oaOccShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccShape",
    sizeof(PyoaIntAppDef_oaOccShapeObject),
    0,
    (destructor)oaIntAppDef_oaOccShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccShape_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccShape_static_find_doc[] = 
"Class: oaIntAppDef_oaOccShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccShape|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::find(p1.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccShape_static_get_doc[] = 
"Class: oaIntAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccShape|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccShape* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccShape|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccShape* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccShape|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::get(p1.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccShapep result= (oaIntAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccShape_FromoaIntAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccShape_static_find,METH_VARARGS,oaIntAppDef_oaOccShape_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccShape_static_get,METH_VARARGS,oaIntAppDef_oaOccShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccShape_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccShape",
           (PyObject*)(&PyoaIntAppDef_oaOccShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccShape_Type.tp_dict;
    for(method=oaIntAppDef_oaOccShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccTermObject* self = (PyoaIntAppDef_oaOccTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccTerm)
    {
        PyParamoaIntAppDef_oaOccTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccTerm, Choices are:\n"
        "    (oaIntAppDef_oaOccTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccTerm_tp_dealloc(PyoaIntAppDef_oaOccTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccTerm value;
    int convert_status=PyoaIntAppDef_oaOccTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaOccTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccTerm v1;
    PyParamoaIntAppDef_oaOccTerm v2;
    int convert_status1=PyoaIntAppDef_oaOccTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccTerm_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccTerm_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccTerm**) ((PyoaIntAppDef_oaOccTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(oaIntAppDef_oaOccTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccTerm* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccTerm_Type.tp_alloc(&PyoaIntAppDef_oaOccTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccTermObject* self = (PyoaIntAppDef_oaOccTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(oaIntAppDef_oaOccTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccTerm_Type.tp_alloc(&PyoaIntAppDef_oaOccTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccTermObject* self = (PyoaIntAppDef_oaOccTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccTerm_get_doc[] = 
"Class: oaIntAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaOccTerm)\n"
"    Calls: oaInt4 get(const oaOccTerm* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccTerm,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccTerm data;
    int convert_status=PyoaIntAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccTermObject* self=(PyoaIntAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccTerm_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccTerm data;
    int convert_status=PyoaIntAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccTermObject* self=(PyoaIntAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccTerm_set_doc[] = 
"Class: oaIntAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaOccTerm,oaInt4)\n"
"    Calls: void set(oaOccTerm* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccTerm,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccTerm data;
    int convert_status=PyoaIntAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccTermObject* self=(PyoaIntAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccTerm_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccTerm_isNull_doc[] =
"Class: oaIntAppDef_oaOccTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccTerm data;
    int convert_status=PyoaIntAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccTerm_assign_doc[] = 
"Class: oaIntAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccTerm data;
  int convert_status=PyoaIntAppDef_oaOccTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccTerm_get,METH_VARARGS,oaIntAppDef_oaOccTerm_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccTerm_getDefault,METH_VARARGS,oaIntAppDef_oaOccTerm_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccTerm_set,METH_VARARGS,oaIntAppDef_oaOccTerm_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccTerm_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccTerm_tp_assign,METH_VARARGS,oaIntAppDef_oaOccTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccTerm_doc[] = 
"Class: oaIntAppDef_oaOccTerm\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccTerm)\n"
"    Calls: (const oaIntAppDef_oaOccTerm&)\n"
"    Signature: oaIntAppDef_oaOccTerm||cref-oaIntAppDef_oaOccTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccTerm",
    sizeof(PyoaIntAppDef_oaOccTermObject),
    0,
    (destructor)oaIntAppDef_oaOccTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccTerm_static_find_doc[] = 
"Class: oaIntAppDef_oaOccTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccTerm|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::find(p1.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccTerm_static_get_doc[] = 
"Class: oaIntAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccTerm* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccTerm* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::get(p1.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccTermp result= (oaIntAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccTerm_FromoaIntAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccTerm_static_find,METH_VARARGS,oaIntAppDef_oaOccTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccTerm_static_get,METH_VARARGS,oaIntAppDef_oaOccTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccTerm",
           (PyObject*)(&PyoaIntAppDef_oaOccTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccTerm_Type.tp_dict;
    for(method=oaIntAppDef_oaOccTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccVectorInstDefObject* self = (PyoaIntAppDef_oaOccVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccVectorInstDef)
    {
        PyParamoaIntAppDef_oaOccVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccVectorInstDef, Choices are:\n"
        "    (oaIntAppDef_oaOccVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccVectorInstDef_tp_dealloc(PyoaIntAppDef_oaOccVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccVectorInstDef value;
    int convert_status=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntAppDef_oaOccVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccVectorInstDef v1;
    PyParamoaIntAppDef_oaOccVectorInstDef v2;
    int convert_status1=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccVectorInstDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccVectorInstDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccVectorInstDef**) ((PyoaIntAppDef_oaOccVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(oaIntAppDef_oaOccVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccVectorInstDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaIntAppDef_oaOccVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccVectorInstDefObject* self = (PyoaIntAppDef_oaOccVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(oaIntAppDef_oaOccVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaIntAppDef_oaOccVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccVectorInstDefObject* self = (PyoaIntAppDef_oaOccVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccVectorInstDef_get_doc[] = 
"Class: oaIntAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaOccVectorInstDef)\n"
"    Calls: oaInt4 get(const oaOccVectorInstDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccVectorInstDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccVectorInstDefObject* self=(PyoaIntAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccVectorInstDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccVectorInstDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccVectorInstDefObject* self=(PyoaIntAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccVectorInstDef_set_doc[] = 
"Class: oaIntAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaOccVectorInstDef,oaInt4)\n"
"    Calls: void set(oaOccVectorInstDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccVectorInstDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccVectorInstDefObject* self=(PyoaIntAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccVectorInstDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccVectorInstDef_isNull_doc[] =
"Class: oaIntAppDef_oaOccVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccVectorInstDef_assign_doc[] = 
"Class: oaIntAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccVectorInstDef data;
  int convert_status=PyoaIntAppDef_oaOccVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccVectorInstDef_get,METH_VARARGS,oaIntAppDef_oaOccVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccVectorInstDef_getDefault,METH_VARARGS,oaIntAppDef_oaOccVectorInstDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccVectorInstDef_set,METH_VARARGS,oaIntAppDef_oaOccVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccVectorInstDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccVectorInstDef_tp_assign,METH_VARARGS,oaIntAppDef_oaOccVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccVectorInstDef_doc[] = 
"Class: oaIntAppDef_oaOccVectorInstDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccVectorInstDef)\n"
"    Calls: (const oaIntAppDef_oaOccVectorInstDef&)\n"
"    Signature: oaIntAppDef_oaOccVectorInstDef||cref-oaIntAppDef_oaOccVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccVectorInstDef",
    sizeof(PyoaIntAppDef_oaOccVectorInstDefObject),
    0,
    (destructor)oaIntAppDef_oaOccVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccVectorInstDef_static_find_doc[] = 
"Class: oaIntAppDef_oaOccVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::find(p1.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccVectorInstDef_static_get_doc[] = 
"Class: oaIntAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::get(p1.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccVectorInstDefp result= (oaIntAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccVectorInstDef_FromoaIntAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccVectorInstDef_static_find,METH_VARARGS,oaIntAppDef_oaOccVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccVectorInstDef_static_get,METH_VARARGS,oaIntAppDef_oaOccVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccVectorInstDef",
           (PyObject*)(&PyoaIntAppDef_oaOccVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccVectorInstDef_Type.tp_dict;
    for(method=oaIntAppDef_oaOccVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOccurrence
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccurrence_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOccurrence_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOccurrenceObject* self = (PyoaIntAppDef_oaOccurrenceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOccurrence)
    {
        PyParamoaIntAppDef_oaOccurrence p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOccurrence_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOccurrence, Choices are:\n"
        "    (oaIntAppDef_oaOccurrence)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOccurrence_tp_dealloc(PyoaIntAppDef_oaOccurrenceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOccurrence_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOccurrence value;
    int convert_status=PyoaIntAppDef_oaOccurrence_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaIntAppDef_oaOccurrence::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOccurrence_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOccurrence v1;
    PyParamoaIntAppDef_oaOccurrence v2;
    int convert_status1=PyoaIntAppDef_oaOccurrence_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOccurrence_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOccurrence_Convert(PyObject* ob,PyParamoaIntAppDef_oaOccurrence* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOccurrence_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOccurrence**) ((PyoaIntAppDef_oaOccurrenceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOccurrence Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(oaIntAppDef_oaOccurrence** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOccurrence* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOccurrence_Type.tp_alloc(&PyoaIntAppDef_oaOccurrence_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOccurrenceObject* self = (PyoaIntAppDef_oaOccurrenceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(oaIntAppDef_oaOccurrence* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOccurrence_Type.tp_alloc(&PyoaIntAppDef_oaOccurrence_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOccurrenceObject* self = (PyoaIntAppDef_oaOccurrenceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccurrence_get_doc[] = 
"Class: oaIntAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaOccurrence)\n"
"    Calls: oaInt4 get(const oaOccurrence* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOccurrence,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccurrence_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccurrence data;
    int convert_status=PyoaIntAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccurrenceObject* self=(PyoaIntAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccurrence_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccurrence_getDefault_doc[] = 
"Class: oaIntAppDef_oaOccurrence, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOccurrence_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccurrence data;
    int convert_status=PyoaIntAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccurrenceObject* self=(PyoaIntAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccurrence_set_doc[] = 
"Class: oaIntAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaOccurrence,oaInt4)\n"
"    Calls: void set(oaOccurrence* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOccurrence,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOccurrence_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOccurrence data;
    int convert_status=PyoaIntAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOccurrenceObject* self=(PyoaIntAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccurrence_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccurrence_isNull_doc[] =
"Class: oaIntAppDef_oaOccurrence, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOccurrence_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOccurrence data;
    int convert_status=PyoaIntAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOccurrence_assign_doc[] = 
"Class: oaIntAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOccurrence_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOccurrence data;
  int convert_status=PyoaIntAppDef_oaOccurrence_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOccurrence p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOccurrence_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOccurrence_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOccurrence_get,METH_VARARGS,oaIntAppDef_oaOccurrence_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOccurrence_getDefault,METH_VARARGS,oaIntAppDef_oaOccurrence_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOccurrence_set,METH_VARARGS,oaIntAppDef_oaOccurrence_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOccurrence_tp_isNull,METH_VARARGS,oaIntAppDef_oaOccurrence_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOccurrence_tp_assign,METH_VARARGS,oaIntAppDef_oaOccurrence_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccurrence_doc[] = 
"Class: oaIntAppDef_oaOccurrence\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOccurrence)\n"
"    Calls: (const oaIntAppDef_oaOccurrence&)\n"
"    Signature: oaIntAppDef_oaOccurrence||cref-oaIntAppDef_oaOccurrence,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOccurrence_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOccurrence",
    sizeof(PyoaIntAppDef_oaOccurrenceObject),
    0,
    (destructor)oaIntAppDef_oaOccurrence_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOccurrence_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOccurrence_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOccurrence_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOccurrence_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOccurrence_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccurrence_static_find_doc[] = 
"Class: oaIntAppDef_oaOccurrence, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccurrence* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccurrence|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccurrence* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOccurrence_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::find(p1.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccurrence, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOccurrence_static_get_doc[] = 
"Class: oaIntAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOccurrence* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccurrence|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccurrence* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccurrence|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccurrence* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccurrence|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOccurrence_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::get(p1.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOccurrencep result= (oaIntAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOccurrence_FromoaIntAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOccurrence, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOccurrence_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOccurrence_static_find,METH_VARARGS,oaIntAppDef_oaOccurrence_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOccurrence_static_get,METH_VARARGS,oaIntAppDef_oaOccurrence_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOccurrence_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOccurrence_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOccurrence\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOccurrence",
           (PyObject*)(&PyoaIntAppDef_oaOccurrence_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOccurrence\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOccurrence_Type.tp_dict;
    for(method=oaIntAppDef_oaOccurrence_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaOpPointHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOpPointHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaOpPointHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaOpPointHeaderObject* self = (PyoaIntAppDef_oaOpPointHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaOpPointHeader)
    {
        PyParamoaIntAppDef_oaOpPointHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaOpPointHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaOpPointHeader, Choices are:\n"
        "    (oaIntAppDef_oaOpPointHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaOpPointHeader_tp_dealloc(PyoaIntAppDef_oaOpPointHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaOpPointHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaOpPointHeader value;
    int convert_status=PyoaIntAppDef_oaOpPointHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaOpPointHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaOpPointHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaOpPointHeader v1;
    PyParamoaIntAppDef_oaOpPointHeader v2;
    int convert_status1=PyoaIntAppDef_oaOpPointHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaOpPointHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaOpPointHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaOpPointHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaOpPointHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaOpPointHeader**) ((PyoaIntAppDef_oaOpPointHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaOpPointHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(oaIntAppDef_oaOpPointHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaOpPointHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaIntAppDef_oaOpPointHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaOpPointHeaderObject* self = (PyoaIntAppDef_oaOpPointHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(oaIntAppDef_oaOpPointHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaIntAppDef_oaOpPointHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaOpPointHeaderObject* self = (PyoaIntAppDef_oaOpPointHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOpPointHeader_get_doc[] = 
"Class: oaIntAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaOpPointHeader)\n"
"    Calls: oaInt4 get(const oaOpPointHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaOpPointHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOpPointHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOpPointHeader data;
    int convert_status=PyoaIntAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOpPointHeaderObject* self=(PyoaIntAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOpPointHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOpPointHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaOpPointHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaOpPointHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOpPointHeader data;
    int convert_status=PyoaIntAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOpPointHeaderObject* self=(PyoaIntAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOpPointHeader_set_doc[] = 
"Class: oaIntAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaOpPointHeader,oaInt4)\n"
"    Calls: void set(oaOpPointHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaOpPointHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaOpPointHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaOpPointHeader data;
    int convert_status=PyoaIntAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaOpPointHeaderObject* self=(PyoaIntAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOpPointHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOpPointHeader_isNull_doc[] =
"Class: oaIntAppDef_oaOpPointHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaOpPointHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaOpPointHeader data;
    int convert_status=PyoaIntAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaOpPointHeader_assign_doc[] = 
"Class: oaIntAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaOpPointHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaOpPointHeader data;
  int convert_status=PyoaIntAppDef_oaOpPointHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaOpPointHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaOpPointHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaOpPointHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaOpPointHeader_get,METH_VARARGS,oaIntAppDef_oaOpPointHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaOpPointHeader_getDefault,METH_VARARGS,oaIntAppDef_oaOpPointHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaOpPointHeader_set,METH_VARARGS,oaIntAppDef_oaOpPointHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaOpPointHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaOpPointHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaOpPointHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaOpPointHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOpPointHeader_doc[] = 
"Class: oaIntAppDef_oaOpPointHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaOpPointHeader)\n"
"    Calls: (const oaIntAppDef_oaOpPointHeader&)\n"
"    Signature: oaIntAppDef_oaOpPointHeader||cref-oaIntAppDef_oaOpPointHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaOpPointHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaOpPointHeader",
    sizeof(PyoaIntAppDef_oaOpPointHeaderObject),
    0,
    (destructor)oaIntAppDef_oaOpPointHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaOpPointHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaOpPointHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaOpPointHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaOpPointHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaOpPointHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaOpPointHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaOpPointHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaOpPointHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::find(p1.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOpPointHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaOpPointHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaOpPointHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::get(p1.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaOpPointHeaderp result= (oaIntAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaOpPointHeader_FromoaIntAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaOpPointHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaOpPointHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaOpPointHeader_static_find,METH_VARARGS,oaIntAppDef_oaOpPointHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaOpPointHeader_static_get,METH_VARARGS,oaIntAppDef_oaOpPointHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaOpPointHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaOpPointHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaOpPointHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaOpPointHeader",
           (PyObject*)(&PyoaIntAppDef_oaOpPointHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaOpPointHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaOpPointHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaOpPointHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaParasiticNetwork
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaParasiticNetwork_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaParasiticNetwork_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaParasiticNetworkObject* self = (PyoaIntAppDef_oaParasiticNetworkObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaParasiticNetwork)
    {
        PyParamoaIntAppDef_oaParasiticNetwork p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaParasiticNetwork_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaParasiticNetwork, Choices are:\n"
        "    (oaIntAppDef_oaParasiticNetwork)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaParasiticNetwork_tp_dealloc(PyoaIntAppDef_oaParasiticNetworkObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaParasiticNetwork_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaParasiticNetwork value;
    int convert_status=PyoaIntAppDef_oaParasiticNetwork_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntAppDef_oaParasiticNetwork::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaParasiticNetwork_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaParasiticNetwork v1;
    PyParamoaIntAppDef_oaParasiticNetwork v2;
    int convert_status1=PyoaIntAppDef_oaParasiticNetwork_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaParasiticNetwork_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaParasiticNetwork_Convert(PyObject* ob,PyParamoaIntAppDef_oaParasiticNetwork* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaParasiticNetwork_Check(ob)) {
        result->SetData( (oaIntAppDef_oaParasiticNetwork**) ((PyoaIntAppDef_oaParasiticNetworkObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaParasiticNetwork Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(oaIntAppDef_oaParasiticNetwork** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaParasiticNetwork* data=*value;
        PyObject* bself = PyoaIntAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaIntAppDef_oaParasiticNetwork_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaParasiticNetworkObject* self = (PyoaIntAppDef_oaParasiticNetworkObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(oaIntAppDef_oaParasiticNetwork* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaIntAppDef_oaParasiticNetwork_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaParasiticNetworkObject* self = (PyoaIntAppDef_oaParasiticNetworkObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaParasiticNetwork_get_doc[] = 
"Class: oaIntAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaParasiticNetwork)\n"
"    Calls: oaInt4 get(const oaParasiticNetwork* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaParasiticNetwork,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaParasiticNetwork_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaParasiticNetwork data;
    int convert_status=PyoaIntAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaParasiticNetworkObject* self=(PyoaIntAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaParasiticNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaParasiticNetwork_getDefault_doc[] = 
"Class: oaIntAppDef_oaParasiticNetwork, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaParasiticNetwork_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaParasiticNetwork data;
    int convert_status=PyoaIntAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaParasiticNetworkObject* self=(PyoaIntAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaParasiticNetwork_set_doc[] = 
"Class: oaIntAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaParasiticNetwork,oaInt4)\n"
"    Calls: void set(oaParasiticNetwork* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaParasiticNetwork,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaParasiticNetwork_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaParasiticNetwork data;
    int convert_status=PyoaIntAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaParasiticNetworkObject* self=(PyoaIntAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaParasiticNetwork_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaParasiticNetwork_isNull_doc[] =
"Class: oaIntAppDef_oaParasiticNetwork, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaParasiticNetwork_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaParasiticNetwork data;
    int convert_status=PyoaIntAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaParasiticNetwork_assign_doc[] = 
"Class: oaIntAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaParasiticNetwork_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaParasiticNetwork data;
  int convert_status=PyoaIntAppDef_oaParasiticNetwork_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaParasiticNetwork_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaParasiticNetwork_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaParasiticNetwork_get,METH_VARARGS,oaIntAppDef_oaParasiticNetwork_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaParasiticNetwork_getDefault,METH_VARARGS,oaIntAppDef_oaParasiticNetwork_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaParasiticNetwork_set,METH_VARARGS,oaIntAppDef_oaParasiticNetwork_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaParasiticNetwork_tp_isNull,METH_VARARGS,oaIntAppDef_oaParasiticNetwork_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaParasiticNetwork_tp_assign,METH_VARARGS,oaIntAppDef_oaParasiticNetwork_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaParasiticNetwork_doc[] = 
"Class: oaIntAppDef_oaParasiticNetwork\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaParasiticNetwork)\n"
"    Calls: (const oaIntAppDef_oaParasiticNetwork&)\n"
"    Signature: oaIntAppDef_oaParasiticNetwork||cref-oaIntAppDef_oaParasiticNetwork,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaParasiticNetwork_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaParasiticNetwork",
    sizeof(PyoaIntAppDef_oaParasiticNetworkObject),
    0,
    (destructor)oaIntAppDef_oaParasiticNetwork_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaParasiticNetwork_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaParasiticNetwork_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaParasiticNetwork_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaParasiticNetwork_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaParasiticNetwork_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaParasiticNetwork_static_find_doc[] = 
"Class: oaIntAppDef_oaParasiticNetwork, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaParasiticNetwork_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::find(p1.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaParasiticNetwork, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaParasiticNetwork_static_get_doc[] = 
"Class: oaIntAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaParasiticNetwork_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::get(p1.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaParasiticNetworkp result= (oaIntAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaParasiticNetwork_FromoaIntAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaParasiticNetwork, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaParasiticNetwork_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaParasiticNetwork_static_find,METH_VARARGS,oaIntAppDef_oaParasiticNetwork_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaParasiticNetwork_static_get,METH_VARARGS,oaIntAppDef_oaParasiticNetwork_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaParasiticNetwork_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaParasiticNetwork_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaParasiticNetwork\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaParasiticNetwork",
           (PyObject*)(&PyoaIntAppDef_oaParasiticNetwork_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaParasiticNetwork\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaParasiticNetwork_Type.tp_dict;
    for(method=oaIntAppDef_oaParasiticNetwork_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaPin
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaPin_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaPin_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaPinObject* self = (PyoaIntAppDef_oaPinObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaPin)
    {
        PyParamoaIntAppDef_oaPin p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaPin_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaPin, Choices are:\n"
        "    (oaIntAppDef_oaPin)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaPin_tp_dealloc(PyoaIntAppDef_oaPinObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaPin_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaPin value;
    int convert_status=PyoaIntAppDef_oaPin_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[39];
    sprintf(buffer,"<oaIntAppDef_oaPin::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaPin_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaPin v1;
    PyParamoaIntAppDef_oaPin v2;
    int convert_status1=PyoaIntAppDef_oaPin_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaPin_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaPin_Convert(PyObject* ob,PyParamoaIntAppDef_oaPin* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaPin_Check(ob)) {
        result->SetData( (oaIntAppDef_oaPin**) ((PyoaIntAppDef_oaPinObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaPin Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(oaIntAppDef_oaPin** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaPin* data=*value;
        PyObject* bself = PyoaIntAppDef_oaPin_Type.tp_alloc(&PyoaIntAppDef_oaPin_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaPinObject* self = (PyoaIntAppDef_oaPinObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(oaIntAppDef_oaPin* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaPin_Type.tp_alloc(&PyoaIntAppDef_oaPin_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaPinObject* self = (PyoaIntAppDef_oaPinObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPin_get_doc[] = 
"Class: oaIntAppDef_oaPin, Function: get\n"
"  Paramegers: (oaPin)\n"
"    Calls: oaInt4 get(const oaPin* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaPin,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaPin_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPin data;
    int convert_status=PyoaIntAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPinObject* self=(PyoaIntAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPin_getDefault_doc[] = 
"Class: oaIntAppDef_oaPin, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaPin_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPin data;
    int convert_status=PyoaIntAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPinObject* self=(PyoaIntAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPin_set_doc[] = 
"Class: oaIntAppDef_oaPin, Function: set\n"
"  Paramegers: (oaPin,oaInt4)\n"
"    Calls: void set(oaPin* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaPin,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaPin_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPin data;
    int convert_status=PyoaIntAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPinObject* self=(PyoaIntAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPin_isNull_doc[] =
"Class: oaIntAppDef_oaPin, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaPin_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaPin data;
    int convert_status=PyoaIntAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaPin_assign_doc[] = 
"Class: oaIntAppDef_oaPin, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaPin_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaPin data;
  int convert_status=PyoaIntAppDef_oaPin_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaPin p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaPin_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaPin_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaPin_get,METH_VARARGS,oaIntAppDef_oaPin_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaPin_getDefault,METH_VARARGS,oaIntAppDef_oaPin_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaPin_set,METH_VARARGS,oaIntAppDef_oaPin_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaPin_tp_isNull,METH_VARARGS,oaIntAppDef_oaPin_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaPin_tp_assign,METH_VARARGS,oaIntAppDef_oaPin_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPin_doc[] = 
"Class: oaIntAppDef_oaPin\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaPin)\n"
"    Calls: (const oaIntAppDef_oaPin&)\n"
"    Signature: oaIntAppDef_oaPin||cref-oaIntAppDef_oaPin,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaPin_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaPin",
    sizeof(PyoaIntAppDef_oaPinObject),
    0,
    (destructor)oaIntAppDef_oaPin_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaPin_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaPin_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaPin_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaPin_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaPin_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPin_static_find_doc[] = 
"Class: oaIntAppDef_oaPin, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaPin* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaPin|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaPin* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaPin_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::find(p1.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaPin, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPin_static_get_doc[] = 
"Class: oaIntAppDef_oaPin, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaPin* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaPin|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaPin* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaPin|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaPin* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaPin|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaPin_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::get(p1.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPinp result= (oaIntAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaPin_FromoaIntAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaPin, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaPin_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaPin_static_find,METH_VARARGS,oaIntAppDef_oaPin_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaPin_static_get,METH_VARARGS,oaIntAppDef_oaPin_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaPin_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaPin_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaPin\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaPin",
           (PyObject*)(&PyoaIntAppDef_oaPin_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaPin\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaPin_Type.tp_dict;
    for(method=oaIntAppDef_oaPin_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaPoleResidue
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaPoleResidue_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaPoleResidue_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaPoleResidueObject* self = (PyoaIntAppDef_oaPoleResidueObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaPoleResidue)
    {
        PyParamoaIntAppDef_oaPoleResidue p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaPoleResidue_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaPoleResidue, Choices are:\n"
        "    (oaIntAppDef_oaPoleResidue)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaPoleResidue_tp_dealloc(PyoaIntAppDef_oaPoleResidueObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaPoleResidue_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaPoleResidue value;
    int convert_status=PyoaIntAppDef_oaPoleResidue_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaIntAppDef_oaPoleResidue::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaPoleResidue_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaPoleResidue v1;
    PyParamoaIntAppDef_oaPoleResidue v2;
    int convert_status1=PyoaIntAppDef_oaPoleResidue_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaPoleResidue_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaPoleResidue_Convert(PyObject* ob,PyParamoaIntAppDef_oaPoleResidue* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaPoleResidue_Check(ob)) {
        result->SetData( (oaIntAppDef_oaPoleResidue**) ((PyoaIntAppDef_oaPoleResidueObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaPoleResidue Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(oaIntAppDef_oaPoleResidue** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaPoleResidue* data=*value;
        PyObject* bself = PyoaIntAppDef_oaPoleResidue_Type.tp_alloc(&PyoaIntAppDef_oaPoleResidue_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaPoleResidueObject* self = (PyoaIntAppDef_oaPoleResidueObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(oaIntAppDef_oaPoleResidue* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaPoleResidue_Type.tp_alloc(&PyoaIntAppDef_oaPoleResidue_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaPoleResidueObject* self = (PyoaIntAppDef_oaPoleResidueObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPoleResidue_get_doc[] = 
"Class: oaIntAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: oaInt4 get(const oaPoleResidue* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaPoleResidue,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaPoleResidue_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPoleResidue data;
    int convert_status=PyoaIntAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPoleResidueObject* self=(PyoaIntAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPoleResidue_getDefault_doc[] = 
"Class: oaIntAppDef_oaPoleResidue, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaPoleResidue_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPoleResidue data;
    int convert_status=PyoaIntAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPoleResidueObject* self=(PyoaIntAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPoleResidue_set_doc[] = 
"Class: oaIntAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaPoleResidue,oaInt4)\n"
"    Calls: void set(oaPoleResidue* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaPoleResidue,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaPoleResidue_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPoleResidue data;
    int convert_status=PyoaIntAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPoleResidueObject* self=(PyoaIntAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPoleResidue_isNull_doc[] =
"Class: oaIntAppDef_oaPoleResidue, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaPoleResidue_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaPoleResidue data;
    int convert_status=PyoaIntAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaPoleResidue_assign_doc[] = 
"Class: oaIntAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaPoleResidue_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaPoleResidue data;
  int convert_status=PyoaIntAppDef_oaPoleResidue_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaPoleResidue p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaPoleResidue_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaPoleResidue_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaPoleResidue_get,METH_VARARGS,oaIntAppDef_oaPoleResidue_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaPoleResidue_getDefault,METH_VARARGS,oaIntAppDef_oaPoleResidue_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaPoleResidue_set,METH_VARARGS,oaIntAppDef_oaPoleResidue_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaPoleResidue_tp_isNull,METH_VARARGS,oaIntAppDef_oaPoleResidue_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaPoleResidue_tp_assign,METH_VARARGS,oaIntAppDef_oaPoleResidue_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPoleResidue_doc[] = 
"Class: oaIntAppDef_oaPoleResidue\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaPoleResidue)\n"
"    Calls: (const oaIntAppDef_oaPoleResidue&)\n"
"    Signature: oaIntAppDef_oaPoleResidue||cref-oaIntAppDef_oaPoleResidue,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaPoleResidue_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaPoleResidue",
    sizeof(PyoaIntAppDef_oaPoleResidueObject),
    0,
    (destructor)oaIntAppDef_oaPoleResidue_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaPoleResidue_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaPoleResidue_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaPoleResidue_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaPoleResidue_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaPoleResidue_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPoleResidue_static_find_doc[] = 
"Class: oaIntAppDef_oaPoleResidue, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaPoleResidue* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaPoleResidue* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaPoleResidue_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::find(p1.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaPoleResidue, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPoleResidue_static_get_doc[] = 
"Class: oaIntAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaPoleResidue* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaPoleResidue* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaPoleResidue* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaPoleResidue_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::get(p1.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPoleResiduep result= (oaIntAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaPoleResidue_FromoaIntAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaPoleResidue, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaPoleResidue_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaPoleResidue_static_find,METH_VARARGS,oaIntAppDef_oaPoleResidue_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaPoleResidue_static_get,METH_VARARGS,oaIntAppDef_oaPoleResidue_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaPoleResidue_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaPoleResidue_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaPoleResidue\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaPoleResidue",
           (PyObject*)(&PyoaIntAppDef_oaPoleResidue_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaPoleResidue\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaPoleResidue_Type.tp_dict;
    for(method=oaIntAppDef_oaPoleResidue_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaProp
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaProp_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaProp_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaPropObject* self = (PyoaIntAppDef_oaPropObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaProp)
    {
        PyParamoaIntAppDef_oaProp p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaProp_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaProp, Choices are:\n"
        "    (oaIntAppDef_oaProp)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaProp_tp_dealloc(PyoaIntAppDef_oaPropObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaProp_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaProp value;
    int convert_status=PyoaIntAppDef_oaProp_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaIntAppDef_oaProp::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaProp_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaProp v1;
    PyParamoaIntAppDef_oaProp v2;
    int convert_status1=PyoaIntAppDef_oaProp_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaProp_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaProp_Convert(PyObject* ob,PyParamoaIntAppDef_oaProp* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaProp_Check(ob)) {
        result->SetData( (oaIntAppDef_oaProp**) ((PyoaIntAppDef_oaPropObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaProp Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(oaIntAppDef_oaProp** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaProp* data=*value;
        PyObject* bself = PyoaIntAppDef_oaProp_Type.tp_alloc(&PyoaIntAppDef_oaProp_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaPropObject* self = (PyoaIntAppDef_oaPropObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(oaIntAppDef_oaProp* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaProp_Type.tp_alloc(&PyoaIntAppDef_oaProp_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaPropObject* self = (PyoaIntAppDef_oaPropObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaProp_get_doc[] = 
"Class: oaIntAppDef_oaProp, Function: get\n"
"  Paramegers: (oaProp)\n"
"    Calls: oaInt4 get(const oaProp* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaProp,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaProp_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaProp data;
    int convert_status=PyoaIntAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPropObject* self=(PyoaIntAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaProp_getDefault_doc[] = 
"Class: oaIntAppDef_oaProp, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaProp_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaProp data;
    int convert_status=PyoaIntAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPropObject* self=(PyoaIntAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaProp_set_doc[] = 
"Class: oaIntAppDef_oaProp, Function: set\n"
"  Paramegers: (oaProp,oaInt4)\n"
"    Calls: void set(oaProp* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaProp,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaProp_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaProp data;
    int convert_status=PyoaIntAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPropObject* self=(PyoaIntAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaProp_isNull_doc[] =
"Class: oaIntAppDef_oaProp, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaProp_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaProp data;
    int convert_status=PyoaIntAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaProp_assign_doc[] = 
"Class: oaIntAppDef_oaProp, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaProp_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaProp data;
  int convert_status=PyoaIntAppDef_oaProp_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaProp p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaProp_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaProp_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaProp_get,METH_VARARGS,oaIntAppDef_oaProp_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaProp_getDefault,METH_VARARGS,oaIntAppDef_oaProp_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaProp_set,METH_VARARGS,oaIntAppDef_oaProp_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaProp_tp_isNull,METH_VARARGS,oaIntAppDef_oaProp_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaProp_tp_assign,METH_VARARGS,oaIntAppDef_oaProp_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaProp_doc[] = 
"Class: oaIntAppDef_oaProp\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaProp)\n"
"    Calls: (const oaIntAppDef_oaProp&)\n"
"    Signature: oaIntAppDef_oaProp||cref-oaIntAppDef_oaProp,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaProp_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaProp",
    sizeof(PyoaIntAppDef_oaPropObject),
    0,
    (destructor)oaIntAppDef_oaProp_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaProp_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaProp_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaProp_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaProp_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaProp_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaProp_static_find_doc[] = 
"Class: oaIntAppDef_oaProp, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaProp* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaProp|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaProp* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaProp_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::find(p1.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaProp, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaProp_static_get_doc[] = 
"Class: oaIntAppDef_oaProp, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaProp* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaProp|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaProp* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaProp|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaProp* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaProp|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaProp_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::get(p1.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPropp result= (oaIntAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaProp_FromoaIntAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaProp, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaProp_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaProp_static_find,METH_VARARGS,oaIntAppDef_oaProp_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaProp_static_get,METH_VARARGS,oaIntAppDef_oaProp_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaProp_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaProp_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaProp\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaProp",
           (PyObject*)(&PyoaIntAppDef_oaProp_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaProp\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaProp_Type.tp_dict;
    for(method=oaIntAppDef_oaProp_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaPurpose
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaPurpose_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaPurpose_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaPurposeObject* self = (PyoaIntAppDef_oaPurposeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaPurpose)
    {
        PyParamoaIntAppDef_oaPurpose p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaPurpose_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaPurpose, Choices are:\n"
        "    (oaIntAppDef_oaPurpose)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaPurpose_tp_dealloc(PyoaIntAppDef_oaPurposeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaPurpose_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaPurpose value;
    int convert_status=PyoaIntAppDef_oaPurpose_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaPurpose::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaPurpose_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaPurpose v1;
    PyParamoaIntAppDef_oaPurpose v2;
    int convert_status1=PyoaIntAppDef_oaPurpose_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaPurpose_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaPurpose_Convert(PyObject* ob,PyParamoaIntAppDef_oaPurpose* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaPurpose_Check(ob)) {
        result->SetData( (oaIntAppDef_oaPurpose**) ((PyoaIntAppDef_oaPurposeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaPurpose Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(oaIntAppDef_oaPurpose** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaPurpose* data=*value;
        PyObject* bself = PyoaIntAppDef_oaPurpose_Type.tp_alloc(&PyoaIntAppDef_oaPurpose_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaPurposeObject* self = (PyoaIntAppDef_oaPurposeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(oaIntAppDef_oaPurpose* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaPurpose_Type.tp_alloc(&PyoaIntAppDef_oaPurpose_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaPurposeObject* self = (PyoaIntAppDef_oaPurposeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPurpose_get_doc[] = 
"Class: oaIntAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: oaInt4 get(const oaPurpose* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaPurpose,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaPurpose_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPurpose data;
    int convert_status=PyoaIntAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPurposeObject* self=(PyoaIntAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPurpose_getDefault_doc[] = 
"Class: oaIntAppDef_oaPurpose, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaPurpose_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPurpose data;
    int convert_status=PyoaIntAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPurposeObject* self=(PyoaIntAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPurpose_set_doc[] = 
"Class: oaIntAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaPurpose,oaInt4)\n"
"    Calls: void set(oaPurpose* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaPurpose,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaPurpose_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaPurpose data;
    int convert_status=PyoaIntAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaPurposeObject* self=(PyoaIntAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPurpose_isNull_doc[] =
"Class: oaIntAppDef_oaPurpose, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaPurpose_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaPurpose data;
    int convert_status=PyoaIntAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaPurpose_assign_doc[] = 
"Class: oaIntAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaPurpose_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaPurpose data;
  int convert_status=PyoaIntAppDef_oaPurpose_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaPurpose p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaPurpose_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaPurpose_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaPurpose_get,METH_VARARGS,oaIntAppDef_oaPurpose_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaPurpose_getDefault,METH_VARARGS,oaIntAppDef_oaPurpose_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaPurpose_set,METH_VARARGS,oaIntAppDef_oaPurpose_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaPurpose_tp_isNull,METH_VARARGS,oaIntAppDef_oaPurpose_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaPurpose_tp_assign,METH_VARARGS,oaIntAppDef_oaPurpose_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPurpose_doc[] = 
"Class: oaIntAppDef_oaPurpose\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaPurpose)\n"
"    Calls: (const oaIntAppDef_oaPurpose&)\n"
"    Signature: oaIntAppDef_oaPurpose||cref-oaIntAppDef_oaPurpose,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaPurpose_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaPurpose",
    sizeof(PyoaIntAppDef_oaPurposeObject),
    0,
    (destructor)oaIntAppDef_oaPurpose_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaPurpose_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaPurpose_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaPurpose_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaPurpose_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaPurpose_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaPurpose_static_find_doc[] = 
"Class: oaIntAppDef_oaPurpose, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaPurpose* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaPurpose|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaPurpose* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaPurpose_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::find(p1.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaPurpose, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaPurpose_static_get_doc[] = 
"Class: oaIntAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaPurpose* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaPurpose|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaPurpose* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaPurpose|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaPurpose* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaPurpose|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaPurpose_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::get(p1.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaPurposep result= (oaIntAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaPurpose_FromoaIntAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaPurpose, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaPurpose_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaPurpose_static_find,METH_VARARGS,oaIntAppDef_oaPurpose_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaPurpose_static_get,METH_VARARGS,oaIntAppDef_oaPurpose_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaPurpose_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaPurpose_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaPurpose\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaPurpose",
           (PyObject*)(&PyoaIntAppDef_oaPurpose_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaPurpose\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaPurpose_Type.tp_dict;
    for(method=oaIntAppDef_oaPurpose_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaReducedModel
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaReducedModel_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaReducedModel_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaReducedModelObject* self = (PyoaIntAppDef_oaReducedModelObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaReducedModel)
    {
        PyParamoaIntAppDef_oaReducedModel p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaReducedModel_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaReducedModel, Choices are:\n"
        "    (oaIntAppDef_oaReducedModel)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaReducedModel_tp_dealloc(PyoaIntAppDef_oaReducedModelObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaReducedModel_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaReducedModel value;
    int convert_status=PyoaIntAppDef_oaReducedModel_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntAppDef_oaReducedModel::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaReducedModel_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaReducedModel v1;
    PyParamoaIntAppDef_oaReducedModel v2;
    int convert_status1=PyoaIntAppDef_oaReducedModel_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaReducedModel_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaReducedModel_Convert(PyObject* ob,PyParamoaIntAppDef_oaReducedModel* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaReducedModel_Check(ob)) {
        result->SetData( (oaIntAppDef_oaReducedModel**) ((PyoaIntAppDef_oaReducedModelObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaReducedModel Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(oaIntAppDef_oaReducedModel** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaReducedModel* data=*value;
        PyObject* bself = PyoaIntAppDef_oaReducedModel_Type.tp_alloc(&PyoaIntAppDef_oaReducedModel_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaReducedModelObject* self = (PyoaIntAppDef_oaReducedModelObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(oaIntAppDef_oaReducedModel* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaReducedModel_Type.tp_alloc(&PyoaIntAppDef_oaReducedModel_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaReducedModelObject* self = (PyoaIntAppDef_oaReducedModelObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReducedModel_get_doc[] = 
"Class: oaIntAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: oaInt4 get(const oaReducedModel* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaReducedModel,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaReducedModel_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReducedModel data;
    int convert_status=PyoaIntAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReducedModelObject* self=(PyoaIntAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReducedModel_getDefault_doc[] = 
"Class: oaIntAppDef_oaReducedModel, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaReducedModel_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReducedModel data;
    int convert_status=PyoaIntAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReducedModelObject* self=(PyoaIntAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReducedModel_set_doc[] = 
"Class: oaIntAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaReducedModel,oaInt4)\n"
"    Calls: void set(oaReducedModel* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaReducedModel,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaReducedModel_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReducedModel data;
    int convert_status=PyoaIntAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReducedModelObject* self=(PyoaIntAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReducedModel_isNull_doc[] =
"Class: oaIntAppDef_oaReducedModel, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaReducedModel_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaReducedModel data;
    int convert_status=PyoaIntAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaReducedModel_assign_doc[] = 
"Class: oaIntAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaReducedModel_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaReducedModel data;
  int convert_status=PyoaIntAppDef_oaReducedModel_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaReducedModel p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaReducedModel_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaReducedModel_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaReducedModel_get,METH_VARARGS,oaIntAppDef_oaReducedModel_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaReducedModel_getDefault,METH_VARARGS,oaIntAppDef_oaReducedModel_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaReducedModel_set,METH_VARARGS,oaIntAppDef_oaReducedModel_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaReducedModel_tp_isNull,METH_VARARGS,oaIntAppDef_oaReducedModel_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaReducedModel_tp_assign,METH_VARARGS,oaIntAppDef_oaReducedModel_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReducedModel_doc[] = 
"Class: oaIntAppDef_oaReducedModel\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaReducedModel)\n"
"    Calls: (const oaIntAppDef_oaReducedModel&)\n"
"    Signature: oaIntAppDef_oaReducedModel||cref-oaIntAppDef_oaReducedModel,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaReducedModel_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaReducedModel",
    sizeof(PyoaIntAppDef_oaReducedModelObject),
    0,
    (destructor)oaIntAppDef_oaReducedModel_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaReducedModel_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaReducedModel_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaReducedModel_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaReducedModel_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaReducedModel_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReducedModel_static_find_doc[] = 
"Class: oaIntAppDef_oaReducedModel, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaReducedModel* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaReducedModel|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaReducedModel* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaReducedModel_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::find(p1.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaReducedModel, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReducedModel_static_get_doc[] = 
"Class: oaIntAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaReducedModel* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaReducedModel|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaReducedModel* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaReducedModel|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaReducedModel* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaReducedModel|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaReducedModel_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::get(p1.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReducedModelp result= (oaIntAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaReducedModel_FromoaIntAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaReducedModel, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaReducedModel_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaReducedModel_static_find,METH_VARARGS,oaIntAppDef_oaReducedModel_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaReducedModel_static_get,METH_VARARGS,oaIntAppDef_oaReducedModel_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaReducedModel_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaReducedModel_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaReducedModel\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaReducedModel",
           (PyObject*)(&PyoaIntAppDef_oaReducedModel_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaReducedModel\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaReducedModel_Type.tp_dict;
    for(method=oaIntAppDef_oaReducedModel_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaReticle
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaReticle_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaReticle_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaReticleObject* self = (PyoaIntAppDef_oaReticleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaReticle)
    {
        PyParamoaIntAppDef_oaReticle p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaReticle_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaReticle, Choices are:\n"
        "    (oaIntAppDef_oaReticle)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaReticle_tp_dealloc(PyoaIntAppDef_oaReticleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaReticle_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaReticle value;
    int convert_status=PyoaIntAppDef_oaReticle_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaReticle::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaReticle_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaReticle v1;
    PyParamoaIntAppDef_oaReticle v2;
    int convert_status1=PyoaIntAppDef_oaReticle_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaReticle_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaReticle_Convert(PyObject* ob,PyParamoaIntAppDef_oaReticle* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaReticle_Check(ob)) {
        result->SetData( (oaIntAppDef_oaReticle**) ((PyoaIntAppDef_oaReticleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaReticle Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(oaIntAppDef_oaReticle** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaReticle* data=*value;
        PyObject* bself = PyoaIntAppDef_oaReticle_Type.tp_alloc(&PyoaIntAppDef_oaReticle_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaReticleObject* self = (PyoaIntAppDef_oaReticleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(oaIntAppDef_oaReticle* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaReticle_Type.tp_alloc(&PyoaIntAppDef_oaReticle_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaReticleObject* self = (PyoaIntAppDef_oaReticleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticle_get_doc[] = 
"Class: oaIntAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaReticle)\n"
"    Calls: oaInt4 get(const oaReticle* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaReticle,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaReticle_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReticle data;
    int convert_status=PyoaIntAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReticleObject* self=(PyoaIntAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticle_getDefault_doc[] = 
"Class: oaIntAppDef_oaReticle, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaReticle_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReticle data;
    int convert_status=PyoaIntAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReticleObject* self=(PyoaIntAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticle_set_doc[] = 
"Class: oaIntAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaReticle,oaInt4)\n"
"    Calls: void set(oaReticle* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaReticle,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaReticle_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReticle data;
    int convert_status=PyoaIntAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReticleObject* self=(PyoaIntAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticle_isNull_doc[] =
"Class: oaIntAppDef_oaReticle, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaReticle_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaReticle data;
    int convert_status=PyoaIntAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaReticle_assign_doc[] = 
"Class: oaIntAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaReticle_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaReticle data;
  int convert_status=PyoaIntAppDef_oaReticle_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaReticle p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaReticle_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaReticle_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaReticle_get,METH_VARARGS,oaIntAppDef_oaReticle_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaReticle_getDefault,METH_VARARGS,oaIntAppDef_oaReticle_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaReticle_set,METH_VARARGS,oaIntAppDef_oaReticle_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaReticle_tp_isNull,METH_VARARGS,oaIntAppDef_oaReticle_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaReticle_tp_assign,METH_VARARGS,oaIntAppDef_oaReticle_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticle_doc[] = 
"Class: oaIntAppDef_oaReticle\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaReticle)\n"
"    Calls: (const oaIntAppDef_oaReticle&)\n"
"    Signature: oaIntAppDef_oaReticle||cref-oaIntAppDef_oaReticle,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaReticle_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaReticle",
    sizeof(PyoaIntAppDef_oaReticleObject),
    0,
    (destructor)oaIntAppDef_oaReticle_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaReticle_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaReticle_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaReticle_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaReticle_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaReticle_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticle_static_find_doc[] = 
"Class: oaIntAppDef_oaReticle, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaReticle* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaReticle|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaReticle* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaReticle_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::find(p1.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaReticle, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticle_static_get_doc[] = 
"Class: oaIntAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaReticle* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticle|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaReticle* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticle|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaReticle* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticle|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaReticle_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::get(p1.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticlep result= (oaIntAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaReticle_FromoaIntAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaReticle, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaReticle_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaReticle_static_find,METH_VARARGS,oaIntAppDef_oaReticle_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaReticle_static_get,METH_VARARGS,oaIntAppDef_oaReticle_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaReticle_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaReticle_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaReticle\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaReticle",
           (PyObject*)(&PyoaIntAppDef_oaReticle_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaReticle\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaReticle_Type.tp_dict;
    for(method=oaIntAppDef_oaReticle_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaReticleRef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaReticleRef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaReticleRef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaReticleRefObject* self = (PyoaIntAppDef_oaReticleRefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaReticleRef)
    {
        PyParamoaIntAppDef_oaReticleRef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaReticleRef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaReticleRef, Choices are:\n"
        "    (oaIntAppDef_oaReticleRef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaReticleRef_tp_dealloc(PyoaIntAppDef_oaReticleRefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaReticleRef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaReticleRef value;
    int convert_status=PyoaIntAppDef_oaReticleRef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaIntAppDef_oaReticleRef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaReticleRef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaReticleRef v1;
    PyParamoaIntAppDef_oaReticleRef v2;
    int convert_status1=PyoaIntAppDef_oaReticleRef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaReticleRef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaReticleRef_Convert(PyObject* ob,PyParamoaIntAppDef_oaReticleRef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaReticleRef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaReticleRef**) ((PyoaIntAppDef_oaReticleRefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaReticleRef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(oaIntAppDef_oaReticleRef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaReticleRef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaReticleRef_Type.tp_alloc(&PyoaIntAppDef_oaReticleRef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaReticleRefObject* self = (PyoaIntAppDef_oaReticleRefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(oaIntAppDef_oaReticleRef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaReticleRef_Type.tp_alloc(&PyoaIntAppDef_oaReticleRef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaReticleRefObject* self = (PyoaIntAppDef_oaReticleRefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticleRef_get_doc[] = 
"Class: oaIntAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: oaInt4 get(const oaReticleRef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaReticleRef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaReticleRef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReticleRef data;
    int convert_status=PyoaIntAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReticleRefObject* self=(PyoaIntAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticleRef_getDefault_doc[] = 
"Class: oaIntAppDef_oaReticleRef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaReticleRef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReticleRef data;
    int convert_status=PyoaIntAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReticleRefObject* self=(PyoaIntAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticleRef_set_doc[] = 
"Class: oaIntAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaReticleRef,oaInt4)\n"
"    Calls: void set(oaReticleRef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaReticleRef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaReticleRef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaReticleRef data;
    int convert_status=PyoaIntAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaReticleRefObject* self=(PyoaIntAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticleRef_isNull_doc[] =
"Class: oaIntAppDef_oaReticleRef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaReticleRef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaReticleRef data;
    int convert_status=PyoaIntAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaReticleRef_assign_doc[] = 
"Class: oaIntAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaReticleRef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaReticleRef data;
  int convert_status=PyoaIntAppDef_oaReticleRef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaReticleRef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaReticleRef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaReticleRef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaReticleRef_get,METH_VARARGS,oaIntAppDef_oaReticleRef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaReticleRef_getDefault,METH_VARARGS,oaIntAppDef_oaReticleRef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaReticleRef_set,METH_VARARGS,oaIntAppDef_oaReticleRef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaReticleRef_tp_isNull,METH_VARARGS,oaIntAppDef_oaReticleRef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaReticleRef_tp_assign,METH_VARARGS,oaIntAppDef_oaReticleRef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticleRef_doc[] = 
"Class: oaIntAppDef_oaReticleRef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaReticleRef)\n"
"    Calls: (const oaIntAppDef_oaReticleRef&)\n"
"    Signature: oaIntAppDef_oaReticleRef||cref-oaIntAppDef_oaReticleRef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaReticleRef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaReticleRef",
    sizeof(PyoaIntAppDef_oaReticleRefObject),
    0,
    (destructor)oaIntAppDef_oaReticleRef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaReticleRef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaReticleRef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaReticleRef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaReticleRef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaReticleRef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticleRef_static_find_doc[] = 
"Class: oaIntAppDef_oaReticleRef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaReticleRef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaReticleRef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaReticleRef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaReticleRef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::find(p1.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaReticleRef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaReticleRef_static_get_doc[] = 
"Class: oaIntAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaReticleRef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticleRef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaReticleRef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticleRef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaReticleRef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticleRef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaReticleRef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::get(p1.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaReticleRefp result= (oaIntAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaReticleRef_FromoaIntAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaReticleRef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaReticleRef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaReticleRef_static_find,METH_VARARGS,oaIntAppDef_oaReticleRef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaReticleRef_static_get,METH_VARARGS,oaIntAppDef_oaReticleRef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaReticleRef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaReticleRef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaReticleRef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaReticleRef",
           (PyObject*)(&PyoaIntAppDef_oaReticleRef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaReticleRef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaReticleRef_Type.tp_dict;
    for(method=oaIntAppDef_oaReticleRef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaRoute
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaRoute_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaRoute_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaRouteObject* self = (PyoaIntAppDef_oaRouteObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaRoute)
    {
        PyParamoaIntAppDef_oaRoute p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaRoute_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaRoute, Choices are:\n"
        "    (oaIntAppDef_oaRoute)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaRoute_tp_dealloc(PyoaIntAppDef_oaRouteObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaRoute_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaRoute value;
    int convert_status=PyoaIntAppDef_oaRoute_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[41];
    sprintf(buffer,"<oaIntAppDef_oaRoute::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaRoute_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaRoute v1;
    PyParamoaIntAppDef_oaRoute v2;
    int convert_status1=PyoaIntAppDef_oaRoute_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaRoute_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaRoute_Convert(PyObject* ob,PyParamoaIntAppDef_oaRoute* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaRoute_Check(ob)) {
        result->SetData( (oaIntAppDef_oaRoute**) ((PyoaIntAppDef_oaRouteObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaRoute Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(oaIntAppDef_oaRoute** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaRoute* data=*value;
        PyObject* bself = PyoaIntAppDef_oaRoute_Type.tp_alloc(&PyoaIntAppDef_oaRoute_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaRouteObject* self = (PyoaIntAppDef_oaRouteObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(oaIntAppDef_oaRoute* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaRoute_Type.tp_alloc(&PyoaIntAppDef_oaRoute_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaRouteObject* self = (PyoaIntAppDef_oaRouteObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRoute_get_doc[] = 
"Class: oaIntAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaRoute)\n"
"    Calls: oaInt4 get(const oaRoute* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaRoute,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaRoute_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRoute data;
    int convert_status=PyoaIntAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRouteObject* self=(PyoaIntAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRoute_getDefault_doc[] = 
"Class: oaIntAppDef_oaRoute, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaRoute_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRoute data;
    int convert_status=PyoaIntAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRouteObject* self=(PyoaIntAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRoute_set_doc[] = 
"Class: oaIntAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaRoute,oaInt4)\n"
"    Calls: void set(oaRoute* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaRoute,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaRoute_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRoute data;
    int convert_status=PyoaIntAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRouteObject* self=(PyoaIntAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRoute_isNull_doc[] =
"Class: oaIntAppDef_oaRoute, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaRoute_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaRoute data;
    int convert_status=PyoaIntAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaRoute_assign_doc[] = 
"Class: oaIntAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaRoute_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaRoute data;
  int convert_status=PyoaIntAppDef_oaRoute_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaRoute p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaRoute_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaRoute_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaRoute_get,METH_VARARGS,oaIntAppDef_oaRoute_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaRoute_getDefault,METH_VARARGS,oaIntAppDef_oaRoute_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaRoute_set,METH_VARARGS,oaIntAppDef_oaRoute_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaRoute_tp_isNull,METH_VARARGS,oaIntAppDef_oaRoute_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaRoute_tp_assign,METH_VARARGS,oaIntAppDef_oaRoute_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRoute_doc[] = 
"Class: oaIntAppDef_oaRoute\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaRoute)\n"
"    Calls: (const oaIntAppDef_oaRoute&)\n"
"    Signature: oaIntAppDef_oaRoute||cref-oaIntAppDef_oaRoute,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaRoute_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaRoute",
    sizeof(PyoaIntAppDef_oaRouteObject),
    0,
    (destructor)oaIntAppDef_oaRoute_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaRoute_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaRoute_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaRoute_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaRoute_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaRoute_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRoute_static_find_doc[] = 
"Class: oaIntAppDef_oaRoute, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaRoute* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaRoute|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaRoute* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaRoute_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::find(p1.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaRoute, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRoute_static_get_doc[] = 
"Class: oaIntAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaRoute* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaRoute|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaRoute* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaRoute|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaRoute* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaRoute|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaRoute_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::get(p1.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRoutep result= (oaIntAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaRoute_FromoaIntAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaRoute, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaRoute_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaRoute_static_find,METH_VARARGS,oaIntAppDef_oaRoute_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaRoute_static_get,METH_VARARGS,oaIntAppDef_oaRoute_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaRoute_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaRoute_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaRoute\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaRoute",
           (PyObject*)(&PyoaIntAppDef_oaRoute_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaRoute\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaRoute_Type.tp_dict;
    for(method=oaIntAppDef_oaRoute_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaRow
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaRow_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaRow_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaRowObject* self = (PyoaIntAppDef_oaRowObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaRow)
    {
        PyParamoaIntAppDef_oaRow p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaRow_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaRow, Choices are:\n"
        "    (oaIntAppDef_oaRow)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaRow_tp_dealloc(PyoaIntAppDef_oaRowObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaRow_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaRow value;
    int convert_status=PyoaIntAppDef_oaRow_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[39];
    sprintf(buffer,"<oaIntAppDef_oaRow::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaRow_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaRow v1;
    PyParamoaIntAppDef_oaRow v2;
    int convert_status1=PyoaIntAppDef_oaRow_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaRow_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaRow_Convert(PyObject* ob,PyParamoaIntAppDef_oaRow* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaRow_Check(ob)) {
        result->SetData( (oaIntAppDef_oaRow**) ((PyoaIntAppDef_oaRowObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaRow Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(oaIntAppDef_oaRow** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaRow* data=*value;
        PyObject* bself = PyoaIntAppDef_oaRow_Type.tp_alloc(&PyoaIntAppDef_oaRow_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaRowObject* self = (PyoaIntAppDef_oaRowObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(oaIntAppDef_oaRow* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaRow_Type.tp_alloc(&PyoaIntAppDef_oaRow_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaRowObject* self = (PyoaIntAppDef_oaRowObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRow_get_doc[] = 
"Class: oaIntAppDef_oaRow, Function: get\n"
"  Paramegers: (oaRow)\n"
"    Calls: oaInt4 get(const oaRow* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaRow,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaRow_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRow data;
    int convert_status=PyoaIntAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRowObject* self=(PyoaIntAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRow_getDefault_doc[] = 
"Class: oaIntAppDef_oaRow, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaRow_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRow data;
    int convert_status=PyoaIntAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRowObject* self=(PyoaIntAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRow_set_doc[] = 
"Class: oaIntAppDef_oaRow, Function: set\n"
"  Paramegers: (oaRow,oaInt4)\n"
"    Calls: void set(oaRow* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaRow,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaRow_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRow data;
    int convert_status=PyoaIntAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRowObject* self=(PyoaIntAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRow_isNull_doc[] =
"Class: oaIntAppDef_oaRow, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaRow_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaRow data;
    int convert_status=PyoaIntAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaRow_assign_doc[] = 
"Class: oaIntAppDef_oaRow, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaRow_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaRow data;
  int convert_status=PyoaIntAppDef_oaRow_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaRow p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaRow_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaRow_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaRow_get,METH_VARARGS,oaIntAppDef_oaRow_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaRow_getDefault,METH_VARARGS,oaIntAppDef_oaRow_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaRow_set,METH_VARARGS,oaIntAppDef_oaRow_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaRow_tp_isNull,METH_VARARGS,oaIntAppDef_oaRow_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaRow_tp_assign,METH_VARARGS,oaIntAppDef_oaRow_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRow_doc[] = 
"Class: oaIntAppDef_oaRow\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaRow)\n"
"    Calls: (const oaIntAppDef_oaRow&)\n"
"    Signature: oaIntAppDef_oaRow||cref-oaIntAppDef_oaRow,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaRow_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaRow",
    sizeof(PyoaIntAppDef_oaRowObject),
    0,
    (destructor)oaIntAppDef_oaRow_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaRow_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaRow_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaRow_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaRow_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaRow_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRow_static_find_doc[] = 
"Class: oaIntAppDef_oaRow, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaRow* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaRow|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaRow* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaRow_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::find(p1.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaRow, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRow_static_get_doc[] = 
"Class: oaIntAppDef_oaRow, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaRow* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaRow|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaRow* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaRow|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaRow* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaRow|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaRow_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::get(p1.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowp result= (oaIntAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaRow_FromoaIntAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaRow, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaRow_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaRow_static_find,METH_VARARGS,oaIntAppDef_oaRow_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaRow_static_get,METH_VARARGS,oaIntAppDef_oaRow_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaRow_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaRow_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaRow\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaRow",
           (PyObject*)(&PyoaIntAppDef_oaRow_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaRow\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaRow_Type.tp_dict;
    for(method=oaIntAppDef_oaRow_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaRowHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaRowHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaRowHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaRowHeaderObject* self = (PyoaIntAppDef_oaRowHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaRowHeader)
    {
        PyParamoaIntAppDef_oaRowHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaRowHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaRowHeader, Choices are:\n"
        "    (oaIntAppDef_oaRowHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaRowHeader_tp_dealloc(PyoaIntAppDef_oaRowHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaRowHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaRowHeader value;
    int convert_status=PyoaIntAppDef_oaRowHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaIntAppDef_oaRowHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaRowHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaRowHeader v1;
    PyParamoaIntAppDef_oaRowHeader v2;
    int convert_status1=PyoaIntAppDef_oaRowHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaRowHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaRowHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaRowHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaRowHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaRowHeader**) ((PyoaIntAppDef_oaRowHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaRowHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(oaIntAppDef_oaRowHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaRowHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaRowHeader_Type.tp_alloc(&PyoaIntAppDef_oaRowHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaRowHeaderObject* self = (PyoaIntAppDef_oaRowHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(oaIntAppDef_oaRowHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaRowHeader_Type.tp_alloc(&PyoaIntAppDef_oaRowHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaRowHeaderObject* self = (PyoaIntAppDef_oaRowHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRowHeader_get_doc[] = 
"Class: oaIntAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: oaInt4 get(const oaRowHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaRowHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaRowHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRowHeader data;
    int convert_status=PyoaIntAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRowHeaderObject* self=(PyoaIntAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRowHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaRowHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaRowHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRowHeader data;
    int convert_status=PyoaIntAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRowHeaderObject* self=(PyoaIntAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRowHeader_set_doc[] = 
"Class: oaIntAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaRowHeader,oaInt4)\n"
"    Calls: void set(oaRowHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaRowHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaRowHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaRowHeader data;
    int convert_status=PyoaIntAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaRowHeaderObject* self=(PyoaIntAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRowHeader_isNull_doc[] =
"Class: oaIntAppDef_oaRowHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaRowHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaRowHeader data;
    int convert_status=PyoaIntAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaRowHeader_assign_doc[] = 
"Class: oaIntAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaRowHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaRowHeader data;
  int convert_status=PyoaIntAppDef_oaRowHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaRowHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaRowHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaRowHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaRowHeader_get,METH_VARARGS,oaIntAppDef_oaRowHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaRowHeader_getDefault,METH_VARARGS,oaIntAppDef_oaRowHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaRowHeader_set,METH_VARARGS,oaIntAppDef_oaRowHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaRowHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaRowHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaRowHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaRowHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRowHeader_doc[] = 
"Class: oaIntAppDef_oaRowHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaRowHeader)\n"
"    Calls: (const oaIntAppDef_oaRowHeader&)\n"
"    Signature: oaIntAppDef_oaRowHeader||cref-oaIntAppDef_oaRowHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaRowHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaRowHeader",
    sizeof(PyoaIntAppDef_oaRowHeaderObject),
    0,
    (destructor)oaIntAppDef_oaRowHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaRowHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaRowHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaRowHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaRowHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaRowHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaRowHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaRowHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaRowHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaRowHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaRowHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaRowHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::find(p1.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaRowHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaRowHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaRowHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaRowHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaRowHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaRowHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaRowHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaRowHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaRowHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::get(p1.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaRowHeaderp result= (oaIntAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaRowHeader_FromoaIntAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaRowHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaRowHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaRowHeader_static_find,METH_VARARGS,oaIntAppDef_oaRowHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaRowHeader_static_get,METH_VARARGS,oaIntAppDef_oaRowHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaRowHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaRowHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaRowHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaRowHeader",
           (PyObject*)(&PyoaIntAppDef_oaRowHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaRowHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaRowHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaRowHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaScanChain
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaScanChain_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaScanChain_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaScanChainObject* self = (PyoaIntAppDef_oaScanChainObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaScanChain)
    {
        PyParamoaIntAppDef_oaScanChain p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaScanChain_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaScanChain, Choices are:\n"
        "    (oaIntAppDef_oaScanChain)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaScanChain_tp_dealloc(PyoaIntAppDef_oaScanChainObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaScanChain_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaScanChain value;
    int convert_status=PyoaIntAppDef_oaScanChain_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaIntAppDef_oaScanChain::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaScanChain_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaScanChain v1;
    PyParamoaIntAppDef_oaScanChain v2;
    int convert_status1=PyoaIntAppDef_oaScanChain_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaScanChain_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaScanChain_Convert(PyObject* ob,PyParamoaIntAppDef_oaScanChain* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaScanChain_Check(ob)) {
        result->SetData( (oaIntAppDef_oaScanChain**) ((PyoaIntAppDef_oaScanChainObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaScanChain Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(oaIntAppDef_oaScanChain** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaScanChain* data=*value;
        PyObject* bself = PyoaIntAppDef_oaScanChain_Type.tp_alloc(&PyoaIntAppDef_oaScanChain_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaScanChainObject* self = (PyoaIntAppDef_oaScanChainObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(oaIntAppDef_oaScanChain* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaScanChain_Type.tp_alloc(&PyoaIntAppDef_oaScanChain_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaScanChainObject* self = (PyoaIntAppDef_oaScanChainObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChain_get_doc[] = 
"Class: oaIntAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: oaInt4 get(const oaScanChain* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaScanChain,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaScanChain_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChain data;
    int convert_status=PyoaIntAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainObject* self=(PyoaIntAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChain_getDefault_doc[] = 
"Class: oaIntAppDef_oaScanChain, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaScanChain_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChain data;
    int convert_status=PyoaIntAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainObject* self=(PyoaIntAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChain_set_doc[] = 
"Class: oaIntAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaScanChain,oaInt4)\n"
"    Calls: void set(oaScanChain* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaScanChain,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaScanChain_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChain data;
    int convert_status=PyoaIntAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainObject* self=(PyoaIntAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChain_isNull_doc[] =
"Class: oaIntAppDef_oaScanChain, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaScanChain_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaScanChain data;
    int convert_status=PyoaIntAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaScanChain_assign_doc[] = 
"Class: oaIntAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaScanChain_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaScanChain data;
  int convert_status=PyoaIntAppDef_oaScanChain_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaScanChain p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaScanChain_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaScanChain_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaScanChain_get,METH_VARARGS,oaIntAppDef_oaScanChain_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaScanChain_getDefault,METH_VARARGS,oaIntAppDef_oaScanChain_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaScanChain_set,METH_VARARGS,oaIntAppDef_oaScanChain_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaScanChain_tp_isNull,METH_VARARGS,oaIntAppDef_oaScanChain_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaScanChain_tp_assign,METH_VARARGS,oaIntAppDef_oaScanChain_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChain_doc[] = 
"Class: oaIntAppDef_oaScanChain\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaScanChain)\n"
"    Calls: (const oaIntAppDef_oaScanChain&)\n"
"    Signature: oaIntAppDef_oaScanChain||cref-oaIntAppDef_oaScanChain,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaScanChain_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaScanChain",
    sizeof(PyoaIntAppDef_oaScanChainObject),
    0,
    (destructor)oaIntAppDef_oaScanChain_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaScanChain_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaScanChain_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaScanChain_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaScanChain_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaScanChain_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChain_static_find_doc[] = 
"Class: oaIntAppDef_oaScanChain, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaScanChain* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaScanChain|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaScanChain* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaScanChain_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::find(p1.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaScanChain, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChain_static_get_doc[] = 
"Class: oaIntAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaScanChain* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChain|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaScanChain* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChain|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaScanChain* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChain|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaScanChain_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::get(p1.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainp result= (oaIntAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaScanChain_FromoaIntAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaScanChain, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaScanChain_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaScanChain_static_find,METH_VARARGS,oaIntAppDef_oaScanChain_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaScanChain_static_get,METH_VARARGS,oaIntAppDef_oaScanChain_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaScanChain_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaScanChain_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaScanChain\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaScanChain",
           (PyObject*)(&PyoaIntAppDef_oaScanChain_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaScanChain\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaScanChain_Type.tp_dict;
    for(method=oaIntAppDef_oaScanChain_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaScanChainInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaScanChainInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaScanChainInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaScanChainInstObject* self = (PyoaIntAppDef_oaScanChainInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaScanChainInst)
    {
        PyParamoaIntAppDef_oaScanChainInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaScanChainInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaScanChainInst, Choices are:\n"
        "    (oaIntAppDef_oaScanChainInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaScanChainInst_tp_dealloc(PyoaIntAppDef_oaScanChainInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaScanChainInst_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaScanChainInst value;
    int convert_status=PyoaIntAppDef_oaScanChainInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntAppDef_oaScanChainInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaScanChainInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaScanChainInst v1;
    PyParamoaIntAppDef_oaScanChainInst v2;
    int convert_status1=PyoaIntAppDef_oaScanChainInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaScanChainInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaScanChainInst_Convert(PyObject* ob,PyParamoaIntAppDef_oaScanChainInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaScanChainInst_Check(ob)) {
        result->SetData( (oaIntAppDef_oaScanChainInst**) ((PyoaIntAppDef_oaScanChainInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaScanChainInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(oaIntAppDef_oaScanChainInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaScanChainInst* data=*value;
        PyObject* bself = PyoaIntAppDef_oaScanChainInst_Type.tp_alloc(&PyoaIntAppDef_oaScanChainInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaScanChainInstObject* self = (PyoaIntAppDef_oaScanChainInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(oaIntAppDef_oaScanChainInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaScanChainInst_Type.tp_alloc(&PyoaIntAppDef_oaScanChainInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaScanChainInstObject* self = (PyoaIntAppDef_oaScanChainInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainInst_get_doc[] = 
"Class: oaIntAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: oaInt4 get(const oaScanChainInst* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaScanChainInst,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaScanChainInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChainInst data;
    int convert_status=PyoaIntAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainInstObject* self=(PyoaIntAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainInst_getDefault_doc[] = 
"Class: oaIntAppDef_oaScanChainInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaScanChainInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChainInst data;
    int convert_status=PyoaIntAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainInstObject* self=(PyoaIntAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainInst_set_doc[] = 
"Class: oaIntAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaScanChainInst,oaInt4)\n"
"    Calls: void set(oaScanChainInst* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaScanChainInst,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaScanChainInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChainInst data;
    int convert_status=PyoaIntAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainInstObject* self=(PyoaIntAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainInst_isNull_doc[] =
"Class: oaIntAppDef_oaScanChainInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaScanChainInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaScanChainInst data;
    int convert_status=PyoaIntAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaScanChainInst_assign_doc[] = 
"Class: oaIntAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaScanChainInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaScanChainInst data;
  int convert_status=PyoaIntAppDef_oaScanChainInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaScanChainInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaScanChainInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaScanChainInst_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaScanChainInst_get,METH_VARARGS,oaIntAppDef_oaScanChainInst_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaScanChainInst_getDefault,METH_VARARGS,oaIntAppDef_oaScanChainInst_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaScanChainInst_set,METH_VARARGS,oaIntAppDef_oaScanChainInst_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaScanChainInst_tp_isNull,METH_VARARGS,oaIntAppDef_oaScanChainInst_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaScanChainInst_tp_assign,METH_VARARGS,oaIntAppDef_oaScanChainInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainInst_doc[] = 
"Class: oaIntAppDef_oaScanChainInst\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaScanChainInst)\n"
"    Calls: (const oaIntAppDef_oaScanChainInst&)\n"
"    Signature: oaIntAppDef_oaScanChainInst||cref-oaIntAppDef_oaScanChainInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaScanChainInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaScanChainInst",
    sizeof(PyoaIntAppDef_oaScanChainInstObject),
    0,
    (destructor)oaIntAppDef_oaScanChainInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaScanChainInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaScanChainInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaScanChainInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaScanChainInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaScanChainInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainInst_static_find_doc[] = 
"Class: oaIntAppDef_oaScanChainInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaScanChainInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaScanChainInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaScanChainInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::find(p1.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaScanChainInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainInst_static_get_doc[] = 
"Class: oaIntAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaScanChainInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaScanChainInst* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaScanChainInst* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaScanChainInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::get(p1.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainInstp result= (oaIntAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaScanChainInst_FromoaIntAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaScanChainInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaScanChainInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaScanChainInst_static_find,METH_VARARGS,oaIntAppDef_oaScanChainInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaScanChainInst_static_get,METH_VARARGS,oaIntAppDef_oaScanChainInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaScanChainInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaScanChainInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaScanChainInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaScanChainInst",
           (PyObject*)(&PyoaIntAppDef_oaScanChainInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaScanChainInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaScanChainInst_Type.tp_dict;
    for(method=oaIntAppDef_oaScanChainInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaScanChainSet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaScanChainSet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaScanChainSet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaScanChainSetObject* self = (PyoaIntAppDef_oaScanChainSetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaScanChainSet)
    {
        PyParamoaIntAppDef_oaScanChainSet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaScanChainSet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaScanChainSet, Choices are:\n"
        "    (oaIntAppDef_oaScanChainSet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaScanChainSet_tp_dealloc(PyoaIntAppDef_oaScanChainSetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaScanChainSet_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaScanChainSet value;
    int convert_status=PyoaIntAppDef_oaScanChainSet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntAppDef_oaScanChainSet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaScanChainSet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaScanChainSet v1;
    PyParamoaIntAppDef_oaScanChainSet v2;
    int convert_status1=PyoaIntAppDef_oaScanChainSet_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaScanChainSet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaScanChainSet_Convert(PyObject* ob,PyParamoaIntAppDef_oaScanChainSet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaScanChainSet_Check(ob)) {
        result->SetData( (oaIntAppDef_oaScanChainSet**) ((PyoaIntAppDef_oaScanChainSetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaScanChainSet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(oaIntAppDef_oaScanChainSet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaScanChainSet* data=*value;
        PyObject* bself = PyoaIntAppDef_oaScanChainSet_Type.tp_alloc(&PyoaIntAppDef_oaScanChainSet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaScanChainSetObject* self = (PyoaIntAppDef_oaScanChainSetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(oaIntAppDef_oaScanChainSet* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaScanChainSet_Type.tp_alloc(&PyoaIntAppDef_oaScanChainSet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaScanChainSetObject* self = (PyoaIntAppDef_oaScanChainSetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainSet_get_doc[] = 
"Class: oaIntAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: oaInt4 get(const oaScanChainSet* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaScanChainSet,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaScanChainSet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChainSet data;
    int convert_status=PyoaIntAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainSetObject* self=(PyoaIntAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainSet_getDefault_doc[] = 
"Class: oaIntAppDef_oaScanChainSet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaScanChainSet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChainSet data;
    int convert_status=PyoaIntAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainSetObject* self=(PyoaIntAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainSet_set_doc[] = 
"Class: oaIntAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaScanChainSet,oaInt4)\n"
"    Calls: void set(oaScanChainSet* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaScanChainSet,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaScanChainSet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaScanChainSet data;
    int convert_status=PyoaIntAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaScanChainSetObject* self=(PyoaIntAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainSet_isNull_doc[] =
"Class: oaIntAppDef_oaScanChainSet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaScanChainSet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaScanChainSet data;
    int convert_status=PyoaIntAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaScanChainSet_assign_doc[] = 
"Class: oaIntAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaScanChainSet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaScanChainSet data;
  int convert_status=PyoaIntAppDef_oaScanChainSet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaScanChainSet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaScanChainSet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaScanChainSet_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaScanChainSet_get,METH_VARARGS,oaIntAppDef_oaScanChainSet_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaScanChainSet_getDefault,METH_VARARGS,oaIntAppDef_oaScanChainSet_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaScanChainSet_set,METH_VARARGS,oaIntAppDef_oaScanChainSet_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaScanChainSet_tp_isNull,METH_VARARGS,oaIntAppDef_oaScanChainSet_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaScanChainSet_tp_assign,METH_VARARGS,oaIntAppDef_oaScanChainSet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainSet_doc[] = 
"Class: oaIntAppDef_oaScanChainSet\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaScanChainSet)\n"
"    Calls: (const oaIntAppDef_oaScanChainSet&)\n"
"    Signature: oaIntAppDef_oaScanChainSet||cref-oaIntAppDef_oaScanChainSet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaScanChainSet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaScanChainSet",
    sizeof(PyoaIntAppDef_oaScanChainSetObject),
    0,
    (destructor)oaIntAppDef_oaScanChainSet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaScanChainSet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaScanChainSet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaScanChainSet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaScanChainSet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaScanChainSet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainSet_static_find_doc[] = 
"Class: oaIntAppDef_oaScanChainSet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaScanChainSet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaScanChainSet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaScanChainSet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::find(p1.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaScanChainSet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaScanChainSet_static_get_doc[] = 
"Class: oaIntAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaScanChainSet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaScanChainSet* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaScanChainSet* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaScanChainSet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::get(p1.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaScanChainSetp result= (oaIntAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaScanChainSet_FromoaIntAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaScanChainSet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaScanChainSet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaScanChainSet_static_find,METH_VARARGS,oaIntAppDef_oaScanChainSet_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaScanChainSet_static_get,METH_VARARGS,oaIntAppDef_oaScanChainSet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaScanChainSet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaScanChainSet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaScanChainSet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaScanChainSet",
           (PyObject*)(&PyoaIntAppDef_oaScanChainSet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaScanChainSet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaScanChainSet_Type.tp_dict;
    for(method=oaIntAppDef_oaScanChainSet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaShapeObject* self = (PyoaIntAppDef_oaShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaShape)
    {
        PyParamoaIntAppDef_oaShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaShape, Choices are:\n"
        "    (oaIntAppDef_oaShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaShape_tp_dealloc(PyoaIntAppDef_oaShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaShape_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaShape value;
    int convert_status=PyoaIntAppDef_oaShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[41];
    sprintf(buffer,"<oaIntAppDef_oaShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaShape v1;
    PyParamoaIntAppDef_oaShape v2;
    int convert_status1=PyoaIntAppDef_oaShape_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaShape_Convert(PyObject* ob,PyParamoaIntAppDef_oaShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaShape_Check(ob)) {
        result->SetData( (oaIntAppDef_oaShape**) ((PyoaIntAppDef_oaShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(oaIntAppDef_oaShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaShape* data=*value;
        PyObject* bself = PyoaIntAppDef_oaShape_Type.tp_alloc(&PyoaIntAppDef_oaShape_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaShapeObject* self = (PyoaIntAppDef_oaShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(oaIntAppDef_oaShape* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaShape_Type.tp_alloc(&PyoaIntAppDef_oaShape_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaShapeObject* self = (PyoaIntAppDef_oaShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaShape_get_doc[] = 
"Class: oaIntAppDef_oaShape, Function: get\n"
"  Paramegers: (oaShape)\n"
"    Calls: oaInt4 get(const oaShape* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaShape,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaShape data;
    int convert_status=PyoaIntAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaShapeObject* self=(PyoaIntAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaShape_getDefault_doc[] = 
"Class: oaIntAppDef_oaShape, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaShape_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaShape data;
    int convert_status=PyoaIntAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaShapeObject* self=(PyoaIntAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaShape_set_doc[] = 
"Class: oaIntAppDef_oaShape, Function: set\n"
"  Paramegers: (oaShape,oaInt4)\n"
"    Calls: void set(oaShape* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaShape,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaShape data;
    int convert_status=PyoaIntAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaShapeObject* self=(PyoaIntAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaShape_isNull_doc[] =
"Class: oaIntAppDef_oaShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaShape data;
    int convert_status=PyoaIntAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaShape_assign_doc[] = 
"Class: oaIntAppDef_oaShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaShape data;
  int convert_status=PyoaIntAppDef_oaShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaShape_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaShape_get,METH_VARARGS,oaIntAppDef_oaShape_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaShape_getDefault,METH_VARARGS,oaIntAppDef_oaShape_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaShape_set,METH_VARARGS,oaIntAppDef_oaShape_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaShape_tp_isNull,METH_VARARGS,oaIntAppDef_oaShape_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaShape_tp_assign,METH_VARARGS,oaIntAppDef_oaShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaShape_doc[] = 
"Class: oaIntAppDef_oaShape\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaShape)\n"
"    Calls: (const oaIntAppDef_oaShape&)\n"
"    Signature: oaIntAppDef_oaShape||cref-oaIntAppDef_oaShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaShape",
    sizeof(PyoaIntAppDef_oaShapeObject),
    0,
    (destructor)oaIntAppDef_oaShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaShape_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaShape_static_find_doc[] = 
"Class: oaIntAppDef_oaShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaShape|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::find(p1.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaShape_static_get_doc[] = 
"Class: oaIntAppDef_oaShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaShape|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaShape* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaShape|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaShape* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaShape|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::get(p1.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaShapep result= (oaIntAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaShape_FromoaIntAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaShape_static_find,METH_VARARGS,oaIntAppDef_oaShape_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaShape_static_get,METH_VARARGS,oaIntAppDef_oaShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaShape_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaShape",
           (PyObject*)(&PyoaIntAppDef_oaShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaShape_Type.tp_dict;
    for(method=oaIntAppDef_oaShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaSiteDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaSiteDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaSiteDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaSiteDefObject* self = (PyoaIntAppDef_oaSiteDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaSiteDef)
    {
        PyParamoaIntAppDef_oaSiteDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaSiteDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaSiteDef, Choices are:\n"
        "    (oaIntAppDef_oaSiteDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaSiteDef_tp_dealloc(PyoaIntAppDef_oaSiteDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaSiteDef_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaSiteDef value;
    int convert_status=PyoaIntAppDef_oaSiteDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaSiteDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaSiteDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaSiteDef v1;
    PyParamoaIntAppDef_oaSiteDef v2;
    int convert_status1=PyoaIntAppDef_oaSiteDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaSiteDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaSiteDef_Convert(PyObject* ob,PyParamoaIntAppDef_oaSiteDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaSiteDef_Check(ob)) {
        result->SetData( (oaIntAppDef_oaSiteDef**) ((PyoaIntAppDef_oaSiteDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaSiteDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(oaIntAppDef_oaSiteDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaSiteDef* data=*value;
        PyObject* bself = PyoaIntAppDef_oaSiteDef_Type.tp_alloc(&PyoaIntAppDef_oaSiteDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaSiteDefObject* self = (PyoaIntAppDef_oaSiteDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(oaIntAppDef_oaSiteDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaSiteDef_Type.tp_alloc(&PyoaIntAppDef_oaSiteDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaSiteDefObject* self = (PyoaIntAppDef_oaSiteDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaSiteDef_get_doc[] = 
"Class: oaIntAppDef_oaSiteDef, Function: get\n"
"  Paramegers: (oaSiteDef)\n"
"    Calls: oaInt4 get(const oaSiteDef* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaSiteDef,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaSiteDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaSiteDef data;
    int convert_status=PyoaIntAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaSiteDefObject* self=(PyoaIntAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSiteDef_getDefault_doc[] = 
"Class: oaIntAppDef_oaSiteDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaSiteDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaSiteDef data;
    int convert_status=PyoaIntAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaSiteDefObject* self=(PyoaIntAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSiteDef_set_doc[] = 
"Class: oaIntAppDef_oaSiteDef, Function: set\n"
"  Paramegers: (oaSiteDef,oaInt4)\n"
"    Calls: void set(oaSiteDef* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaSiteDef,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaSiteDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaSiteDef data;
    int convert_status=PyoaIntAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaSiteDefObject* self=(PyoaIntAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSiteDef p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSiteDef_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSiteDef_isNull_doc[] =
"Class: oaIntAppDef_oaSiteDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaSiteDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaSiteDef data;
    int convert_status=PyoaIntAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaSiteDef_assign_doc[] = 
"Class: oaIntAppDef_oaSiteDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaSiteDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaSiteDef data;
  int convert_status=PyoaIntAppDef_oaSiteDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaSiteDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaSiteDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaSiteDef_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaSiteDef_get,METH_VARARGS,oaIntAppDef_oaSiteDef_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaSiteDef_getDefault,METH_VARARGS,oaIntAppDef_oaSiteDef_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaSiteDef_set,METH_VARARGS,oaIntAppDef_oaSiteDef_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaSiteDef_tp_isNull,METH_VARARGS,oaIntAppDef_oaSiteDef_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaSiteDef_tp_assign,METH_VARARGS,oaIntAppDef_oaSiteDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaSiteDef_doc[] = 
"Class: oaIntAppDef_oaSiteDef\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaSiteDef)\n"
"    Calls: (const oaIntAppDef_oaSiteDef&)\n"
"    Signature: oaIntAppDef_oaSiteDef||cref-oaIntAppDef_oaSiteDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaSiteDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaSiteDef",
    sizeof(PyoaIntAppDef_oaSiteDefObject),
    0,
    (destructor)oaIntAppDef_oaSiteDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaSiteDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaSiteDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaSiteDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaSiteDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaSiteDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaSiteDef_static_find_doc[] = 
"Class: oaIntAppDef_oaSiteDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaSiteDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaSiteDef|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaSiteDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaSiteDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::find(p1.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaSiteDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSiteDef_static_get_doc[] = 
"Class: oaIntAppDef_oaSiteDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaSiteDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaSiteDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaSiteDef* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaSiteDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaSiteDef* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaSiteDef|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaSiteDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::get(p1.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSiteDefp result= (oaIntAppDef_oaSiteDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaSiteDef_FromoaIntAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaSiteDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaSiteDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaSiteDef_static_find,METH_VARARGS,oaIntAppDef_oaSiteDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaSiteDef_static_get,METH_VARARGS,oaIntAppDef_oaSiteDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaSiteDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaSiteDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaSiteDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaSiteDef",
           (PyObject*)(&PyoaIntAppDef_oaSiteDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaSiteDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaSiteDef_Type.tp_dict;
    for(method=oaIntAppDef_oaSiteDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaSteiner
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaSteiner_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaSteiner_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaSteinerObject* self = (PyoaIntAppDef_oaSteinerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaSteiner)
    {
        PyParamoaIntAppDef_oaSteiner p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaSteiner_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaSteiner, Choices are:\n"
        "    (oaIntAppDef_oaSteiner)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaSteiner_tp_dealloc(PyoaIntAppDef_oaSteinerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaSteiner_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaSteiner value;
    int convert_status=PyoaIntAppDef_oaSteiner_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIntAppDef_oaSteiner::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaSteiner_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaSteiner v1;
    PyParamoaIntAppDef_oaSteiner v2;
    int convert_status1=PyoaIntAppDef_oaSteiner_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaSteiner_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaSteiner_Convert(PyObject* ob,PyParamoaIntAppDef_oaSteiner* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaSteiner_Check(ob)) {
        result->SetData( (oaIntAppDef_oaSteiner**) ((PyoaIntAppDef_oaSteinerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaSteiner Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(oaIntAppDef_oaSteiner** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaSteiner* data=*value;
        PyObject* bself = PyoaIntAppDef_oaSteiner_Type.tp_alloc(&PyoaIntAppDef_oaSteiner_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaSteinerObject* self = (PyoaIntAppDef_oaSteinerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(oaIntAppDef_oaSteiner* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaSteiner_Type.tp_alloc(&PyoaIntAppDef_oaSteiner_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaSteinerObject* self = (PyoaIntAppDef_oaSteinerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaSteiner_get_doc[] = 
"Class: oaIntAppDef_oaSteiner, Function: get\n"
"  Paramegers: (oaSteiner)\n"
"    Calls: oaInt4 get(const oaSteiner* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaSteiner,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaSteiner_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaSteiner data;
    int convert_status=PyoaIntAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaSteinerObject* self=(PyoaIntAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSteiner p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSteiner_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSteiner_getDefault_doc[] = 
"Class: oaIntAppDef_oaSteiner, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaSteiner_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaSteiner data;
    int convert_status=PyoaIntAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaSteinerObject* self=(PyoaIntAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSteiner_set_doc[] = 
"Class: oaIntAppDef_oaSteiner, Function: set\n"
"  Paramegers: (oaSteiner,oaInt4)\n"
"    Calls: void set(oaSteiner* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaSteiner,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaSteiner_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaSteiner data;
    int convert_status=PyoaIntAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaSteinerObject* self=(PyoaIntAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSteiner p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSteiner_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSteiner_isNull_doc[] =
"Class: oaIntAppDef_oaSteiner, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaSteiner_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaSteiner data;
    int convert_status=PyoaIntAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaSteiner_assign_doc[] = 
"Class: oaIntAppDef_oaSteiner, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaSteiner_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaSteiner data;
  int convert_status=PyoaIntAppDef_oaSteiner_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaSteiner p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaSteiner_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaSteiner_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaSteiner_get,METH_VARARGS,oaIntAppDef_oaSteiner_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaSteiner_getDefault,METH_VARARGS,oaIntAppDef_oaSteiner_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaSteiner_set,METH_VARARGS,oaIntAppDef_oaSteiner_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaSteiner_tp_isNull,METH_VARARGS,oaIntAppDef_oaSteiner_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaSteiner_tp_assign,METH_VARARGS,oaIntAppDef_oaSteiner_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaSteiner_doc[] = 
"Class: oaIntAppDef_oaSteiner\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaSteiner)\n"
"    Calls: (const oaIntAppDef_oaSteiner&)\n"
"    Signature: oaIntAppDef_oaSteiner||cref-oaIntAppDef_oaSteiner,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaSteiner_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaSteiner",
    sizeof(PyoaIntAppDef_oaSteinerObject),
    0,
    (destructor)oaIntAppDef_oaSteiner_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaSteiner_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaSteiner_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaSteiner_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaSteiner_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaSteiner_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaSteiner_static_find_doc[] = 
"Class: oaIntAppDef_oaSteiner, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaSteiner* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaSteiner|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaSteiner* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaSteiner_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::find(p1.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaSteiner, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaSteiner_static_get_doc[] = 
"Class: oaIntAppDef_oaSteiner, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaSteiner* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaSteiner|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaSteiner* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaSteiner|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaSteiner* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaSteiner|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaSteiner_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::get(p1.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaSteinerp result= (oaIntAppDef_oaSteiner::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaSteiner_FromoaIntAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaSteiner, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaSteiner_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaSteiner_static_find,METH_VARARGS,oaIntAppDef_oaSteiner_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaSteiner_static_get,METH_VARARGS,oaIntAppDef_oaSteiner_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaSteiner_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaSteiner_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaSteiner\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaSteiner",
           (PyObject*)(&PyoaIntAppDef_oaSteiner_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaSteiner\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaSteiner_Type.tp_dict;
    for(method=oaIntAppDef_oaSteiner_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaStepperMap
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaStepperMap_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaStepperMap_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaStepperMapObject* self = (PyoaIntAppDef_oaStepperMapObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaStepperMap)
    {
        PyParamoaIntAppDef_oaStepperMap p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaStepperMap_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaStepperMap, Choices are:\n"
        "    (oaIntAppDef_oaStepperMap)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaStepperMap_tp_dealloc(PyoaIntAppDef_oaStepperMapObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaStepperMap_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaStepperMap value;
    int convert_status=PyoaIntAppDef_oaStepperMap_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaIntAppDef_oaStepperMap::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaStepperMap_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaStepperMap v1;
    PyParamoaIntAppDef_oaStepperMap v2;
    int convert_status1=PyoaIntAppDef_oaStepperMap_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaStepperMap_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaStepperMap_Convert(PyObject* ob,PyParamoaIntAppDef_oaStepperMap* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaStepperMap_Check(ob)) {
        result->SetData( (oaIntAppDef_oaStepperMap**) ((PyoaIntAppDef_oaStepperMapObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaStepperMap Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(oaIntAppDef_oaStepperMap** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaStepperMap* data=*value;
        PyObject* bself = PyoaIntAppDef_oaStepperMap_Type.tp_alloc(&PyoaIntAppDef_oaStepperMap_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaStepperMapObject* self = (PyoaIntAppDef_oaStepperMapObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(oaIntAppDef_oaStepperMap* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaStepperMap_Type.tp_alloc(&PyoaIntAppDef_oaStepperMap_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaStepperMapObject* self = (PyoaIntAppDef_oaStepperMapObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaStepperMap_get_doc[] = 
"Class: oaIntAppDef_oaStepperMap, Function: get\n"
"  Paramegers: (oaStepperMap)\n"
"    Calls: oaInt4 get(const oaStepperMap* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaStepperMap,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaStepperMap_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaStepperMap data;
    int convert_status=PyoaIntAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaStepperMapObject* self=(PyoaIntAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaStepperMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStepperMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaStepperMap_getDefault_doc[] = 
"Class: oaIntAppDef_oaStepperMap, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaStepperMap_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaStepperMap data;
    int convert_status=PyoaIntAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaStepperMapObject* self=(PyoaIntAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaStepperMap_set_doc[] = 
"Class: oaIntAppDef_oaStepperMap, Function: set\n"
"  Paramegers: (oaStepperMap,oaInt4)\n"
"    Calls: void set(oaStepperMap* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaStepperMap,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaStepperMap_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaStepperMap data;
    int convert_status=PyoaIntAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaStepperMapObject* self=(PyoaIntAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaStepperMap p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStepperMap_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaStepperMap_isNull_doc[] =
"Class: oaIntAppDef_oaStepperMap, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaStepperMap_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaStepperMap data;
    int convert_status=PyoaIntAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaStepperMap_assign_doc[] = 
"Class: oaIntAppDef_oaStepperMap, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaStepperMap_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaStepperMap data;
  int convert_status=PyoaIntAppDef_oaStepperMap_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaStepperMap p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaStepperMap_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaStepperMap_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaStepperMap_get,METH_VARARGS,oaIntAppDef_oaStepperMap_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaStepperMap_getDefault,METH_VARARGS,oaIntAppDef_oaStepperMap_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaStepperMap_set,METH_VARARGS,oaIntAppDef_oaStepperMap_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaStepperMap_tp_isNull,METH_VARARGS,oaIntAppDef_oaStepperMap_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaStepperMap_tp_assign,METH_VARARGS,oaIntAppDef_oaStepperMap_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaStepperMap_doc[] = 
"Class: oaIntAppDef_oaStepperMap\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaStepperMap)\n"
"    Calls: (const oaIntAppDef_oaStepperMap&)\n"
"    Signature: oaIntAppDef_oaStepperMap||cref-oaIntAppDef_oaStepperMap,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaStepperMap_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaStepperMap",
    sizeof(PyoaIntAppDef_oaStepperMapObject),
    0,
    (destructor)oaIntAppDef_oaStepperMap_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaStepperMap_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaStepperMap_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaStepperMap_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaStepperMap_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaStepperMap_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaStepperMap_static_find_doc[] = 
"Class: oaIntAppDef_oaStepperMap, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaStepperMap* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaStepperMap|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaStepperMap* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaStepperMap_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::find(p1.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaStepperMap, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaStepperMap_static_get_doc[] = 
"Class: oaIntAppDef_oaStepperMap, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaStepperMap* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaStepperMap|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaStepperMap* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaStepperMap|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaStepperMap* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaStepperMap|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaStepperMap_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::get(p1.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaStepperMapp result= (oaIntAppDef_oaStepperMap::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaStepperMap_FromoaIntAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaStepperMap, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaStepperMap_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaStepperMap_static_find,METH_VARARGS,oaIntAppDef_oaStepperMap_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaStepperMap_static_get,METH_VARARGS,oaIntAppDef_oaStepperMap_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaStepperMap_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaStepperMap_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaStepperMap\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaStepperMap",
           (PyObject*)(&PyoaIntAppDef_oaStepperMap_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaStepperMap\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaStepperMap_Type.tp_dict;
    for(method=oaIntAppDef_oaStepperMap_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaTech
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTech_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaTech_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaTechObject* self = (PyoaIntAppDef_oaTechObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaTech)
    {
        PyParamoaIntAppDef_oaTech p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaTech_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaTech, Choices are:\n"
        "    (oaIntAppDef_oaTech)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaTech_tp_dealloc(PyoaIntAppDef_oaTechObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTech_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaTech value;
    int convert_status=PyoaIntAppDef_oaTech_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaIntAppDef_oaTech::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaTech_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaTech v1;
    PyParamoaIntAppDef_oaTech v2;
    int convert_status1=PyoaIntAppDef_oaTech_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaTech_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaTech_Convert(PyObject* ob,PyParamoaIntAppDef_oaTech* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaTech_Check(ob)) {
        result->SetData( (oaIntAppDef_oaTech**) ((PyoaIntAppDef_oaTechObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaTech Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(oaIntAppDef_oaTech** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaTech* data=*value;
        PyObject* bself = PyoaIntAppDef_oaTech_Type.tp_alloc(&PyoaIntAppDef_oaTech_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaTechObject* self = (PyoaIntAppDef_oaTechObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(oaIntAppDef_oaTech* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaTech_Type.tp_alloc(&PyoaIntAppDef_oaTech_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaTechObject* self = (PyoaIntAppDef_oaTechObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTech_get_doc[] = 
"Class: oaIntAppDef_oaTech, Function: get\n"
"  Paramegers: (oaTech)\n"
"    Calls: oaInt4 get(const oaTech* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaTech,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTech_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTech data;
    int convert_status=PyoaIntAppDef_oaTech_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechObject* self=(PyoaIntAppDef_oaTechObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTech p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTech_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTech_getDefault_doc[] = 
"Class: oaIntAppDef_oaTech, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaTech_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTech data;
    int convert_status=PyoaIntAppDef_oaTech_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechObject* self=(PyoaIntAppDef_oaTechObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTech_set_doc[] = 
"Class: oaIntAppDef_oaTech, Function: set\n"
"  Paramegers: (oaTech,oaInt4)\n"
"    Calls: void set(oaTech* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaTech,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTech_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTech data;
    int convert_status=PyoaIntAppDef_oaTech_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechObject* self=(PyoaIntAppDef_oaTechObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTech p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTech_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTech_isNull_doc[] =
"Class: oaIntAppDef_oaTech, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaTech_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaTech data;
    int convert_status=PyoaIntAppDef_oaTech_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaTech_assign_doc[] = 
"Class: oaIntAppDef_oaTech, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaTech_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaTech data;
  int convert_status=PyoaIntAppDef_oaTech_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaTech p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaTech_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaTech_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaTech_get,METH_VARARGS,oaIntAppDef_oaTech_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaTech_getDefault,METH_VARARGS,oaIntAppDef_oaTech_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaTech_set,METH_VARARGS,oaIntAppDef_oaTech_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaTech_tp_isNull,METH_VARARGS,oaIntAppDef_oaTech_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaTech_tp_assign,METH_VARARGS,oaIntAppDef_oaTech_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTech_doc[] = 
"Class: oaIntAppDef_oaTech\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaTech)\n"
"    Calls: (const oaIntAppDef_oaTech&)\n"
"    Signature: oaIntAppDef_oaTech||cref-oaIntAppDef_oaTech,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaTech_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaTech",
    sizeof(PyoaIntAppDef_oaTechObject),
    0,
    (destructor)oaIntAppDef_oaTech_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaTech_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaTech_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaTech_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaTech_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaTech_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTech_static_find_doc[] = 
"Class: oaIntAppDef_oaTech, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTech* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaTech|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTech* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaTech|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaTech_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::find(p1.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTech, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTech_static_get_doc[] = 
"Class: oaIntAppDef_oaTech, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTech* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaTech|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaTech* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTech|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTech* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTech|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTech* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaTech|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaTech* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTech|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTech* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTech|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaTech_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::get(p1.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechp result= (oaIntAppDef_oaTech::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaTech_FromoaIntAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTech, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaTech_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaTech_static_find,METH_VARARGS,oaIntAppDef_oaTech_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaTech_static_get,METH_VARARGS,oaIntAppDef_oaTech_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaTech_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaTech_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaTech\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaTech",
           (PyObject*)(&PyoaIntAppDef_oaTech_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaTech\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaTech_Type.tp_dict;
    for(method=oaIntAppDef_oaTech_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaTechHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTechHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaTechHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaTechHeaderObject* self = (PyoaIntAppDef_oaTechHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaTechHeader)
    {
        PyParamoaIntAppDef_oaTechHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaTechHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaTechHeader, Choices are:\n"
        "    (oaIntAppDef_oaTechHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaTechHeader_tp_dealloc(PyoaIntAppDef_oaTechHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTechHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaTechHeader value;
    int convert_status=PyoaIntAppDef_oaTechHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaIntAppDef_oaTechHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaTechHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaTechHeader v1;
    PyParamoaIntAppDef_oaTechHeader v2;
    int convert_status1=PyoaIntAppDef_oaTechHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaTechHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaTechHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaTechHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaTechHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaTechHeader**) ((PyoaIntAppDef_oaTechHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaTechHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(oaIntAppDef_oaTechHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaTechHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaTechHeader_Type.tp_alloc(&PyoaIntAppDef_oaTechHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaTechHeaderObject* self = (PyoaIntAppDef_oaTechHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(oaIntAppDef_oaTechHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaTechHeader_Type.tp_alloc(&PyoaIntAppDef_oaTechHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaTechHeaderObject* self = (PyoaIntAppDef_oaTechHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechHeader_get_doc[] = 
"Class: oaIntAppDef_oaTechHeader, Function: get\n"
"  Paramegers: (oaTechHeader)\n"
"    Calls: oaInt4 get(const oaTechHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaTechHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTechHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechHeader data;
    int convert_status=PyoaIntAppDef_oaTechHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechHeaderObject* self=(PyoaIntAppDef_oaTechHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaTechHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaTechHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechHeader data;
    int convert_status=PyoaIntAppDef_oaTechHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechHeaderObject* self=(PyoaIntAppDef_oaTechHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechHeader_set_doc[] = 
"Class: oaIntAppDef_oaTechHeader, Function: set\n"
"  Paramegers: (oaTechHeader,oaInt4)\n"
"    Calls: void set(oaTechHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaTechHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTechHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechHeader data;
    int convert_status=PyoaIntAppDef_oaTechHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechHeaderObject* self=(PyoaIntAppDef_oaTechHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechHeader_isNull_doc[] =
"Class: oaIntAppDef_oaTechHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaTechHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaTechHeader data;
    int convert_status=PyoaIntAppDef_oaTechHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaTechHeader_assign_doc[] = 
"Class: oaIntAppDef_oaTechHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaTechHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaTechHeader data;
  int convert_status=PyoaIntAppDef_oaTechHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaTechHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaTechHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaTechHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaTechHeader_get,METH_VARARGS,oaIntAppDef_oaTechHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaTechHeader_getDefault,METH_VARARGS,oaIntAppDef_oaTechHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaTechHeader_set,METH_VARARGS,oaIntAppDef_oaTechHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaTechHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaTechHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaTechHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaTechHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechHeader_doc[] = 
"Class: oaIntAppDef_oaTechHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaTechHeader)\n"
"    Calls: (const oaIntAppDef_oaTechHeader&)\n"
"    Signature: oaIntAppDef_oaTechHeader||cref-oaIntAppDef_oaTechHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaTechHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaTechHeader",
    sizeof(PyoaIntAppDef_oaTechHeaderObject),
    0,
    (destructor)oaIntAppDef_oaTechHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaTechHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaTechHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaTechHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaTechHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaTechHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaTechHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTechHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaTechHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTechHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaTechHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaTechHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::find(p1.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTechHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaTechHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTechHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaTechHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTechHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTechHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaTechHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTechHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaTechHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::get(p1.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechHeaderp result= (oaIntAppDef_oaTechHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaTechHeader_FromoaIntAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTechHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaTechHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaTechHeader_static_find,METH_VARARGS,oaIntAppDef_oaTechHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaTechHeader_static_get,METH_VARARGS,oaIntAppDef_oaTechHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaTechHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaTechHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaTechHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaTechHeader",
           (PyObject*)(&PyoaIntAppDef_oaTechHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaTechHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaTechHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaTechHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaTechLayerHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTechLayerHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaTechLayerHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaTechLayerHeaderObject* self = (PyoaIntAppDef_oaTechLayerHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaTechLayerHeader)
    {
        PyParamoaIntAppDef_oaTechLayerHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaTechLayerHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaTechLayerHeader, Choices are:\n"
        "    (oaIntAppDef_oaTechLayerHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaTechLayerHeader_tp_dealloc(PyoaIntAppDef_oaTechLayerHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTechLayerHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaTechLayerHeader value;
    int convert_status=PyoaIntAppDef_oaTechLayerHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntAppDef_oaTechLayerHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaTechLayerHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaTechLayerHeader v1;
    PyParamoaIntAppDef_oaTechLayerHeader v2;
    int convert_status1=PyoaIntAppDef_oaTechLayerHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaTechLayerHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaTechLayerHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaTechLayerHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaTechLayerHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaTechLayerHeader**) ((PyoaIntAppDef_oaTechLayerHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaTechLayerHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(oaIntAppDef_oaTechLayerHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaTechLayerHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaTechLayerHeader_Type.tp_alloc(&PyoaIntAppDef_oaTechLayerHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaTechLayerHeaderObject* self = (PyoaIntAppDef_oaTechLayerHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(oaIntAppDef_oaTechLayerHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaTechLayerHeader_Type.tp_alloc(&PyoaIntAppDef_oaTechLayerHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaTechLayerHeaderObject* self = (PyoaIntAppDef_oaTechLayerHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechLayerHeader_get_doc[] = 
"Class: oaIntAppDef_oaTechLayerHeader, Function: get\n"
"  Paramegers: (oaTechLayerHeader)\n"
"    Calls: oaInt4 get(const oaTechLayerHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaTechLayerHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTechLayerHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechLayerHeader data;
    int convert_status=PyoaIntAppDef_oaTechLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechLayerHeaderObject* self=(PyoaIntAppDef_oaTechLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechLayerHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaTechLayerHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaTechLayerHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechLayerHeader data;
    int convert_status=PyoaIntAppDef_oaTechLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechLayerHeaderObject* self=(PyoaIntAppDef_oaTechLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechLayerHeader_set_doc[] = 
"Class: oaIntAppDef_oaTechLayerHeader, Function: set\n"
"  Paramegers: (oaTechLayerHeader,oaInt4)\n"
"    Calls: void set(oaTechLayerHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaTechLayerHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTechLayerHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechLayerHeader data;
    int convert_status=PyoaIntAppDef_oaTechLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechLayerHeaderObject* self=(PyoaIntAppDef_oaTechLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechLayerHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechLayerHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechLayerHeader_isNull_doc[] =
"Class: oaIntAppDef_oaTechLayerHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaTechLayerHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaTechLayerHeader data;
    int convert_status=PyoaIntAppDef_oaTechLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaTechLayerHeader_assign_doc[] = 
"Class: oaIntAppDef_oaTechLayerHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaTechLayerHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaTechLayerHeader data;
  int convert_status=PyoaIntAppDef_oaTechLayerHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaTechLayerHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaTechLayerHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaTechLayerHeader_get,METH_VARARGS,oaIntAppDef_oaTechLayerHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaTechLayerHeader_getDefault,METH_VARARGS,oaIntAppDef_oaTechLayerHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaTechLayerHeader_set,METH_VARARGS,oaIntAppDef_oaTechLayerHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaTechLayerHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaTechLayerHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaTechLayerHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaTechLayerHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechLayerHeader_doc[] = 
"Class: oaIntAppDef_oaTechLayerHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaTechLayerHeader)\n"
"    Calls: (const oaIntAppDef_oaTechLayerHeader&)\n"
"    Signature: oaIntAppDef_oaTechLayerHeader||cref-oaIntAppDef_oaTechLayerHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaTechLayerHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaTechLayerHeader",
    sizeof(PyoaIntAppDef_oaTechLayerHeaderObject),
    0,
    (destructor)oaIntAppDef_oaTechLayerHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaTechLayerHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaTechLayerHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaTechLayerHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaTechLayerHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaTechLayerHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechLayerHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaTechLayerHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaTechLayerHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::find(p1.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTechLayerHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechLayerHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaTechLayerHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTechLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaTechLayerHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::get(p1.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechLayerHeaderp result= (oaIntAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaTechLayerHeader_FromoaIntAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTechLayerHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaTechLayerHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaTechLayerHeader_static_find,METH_VARARGS,oaIntAppDef_oaTechLayerHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaTechLayerHeader_static_get,METH_VARARGS,oaIntAppDef_oaTechLayerHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaTechLayerHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaTechLayerHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaTechLayerHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaTechLayerHeader",
           (PyObject*)(&PyoaIntAppDef_oaTechLayerHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaTechLayerHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaTechLayerHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaTechLayerHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaTechViaDefHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTechViaDefHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaTechViaDefHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaTechViaDefHeaderObject* self = (PyoaIntAppDef_oaTechViaDefHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaTechViaDefHeader)
    {
        PyParamoaIntAppDef_oaTechViaDefHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaTechViaDefHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaTechViaDefHeader, Choices are:\n"
        "    (oaIntAppDef_oaTechViaDefHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaTechViaDefHeader_tp_dealloc(PyoaIntAppDef_oaTechViaDefHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTechViaDefHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaTechViaDefHeader value;
    int convert_status=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntAppDef_oaTechViaDefHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaTechViaDefHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaTechViaDefHeader v1;
    PyParamoaIntAppDef_oaTechViaDefHeader v2;
    int convert_status1=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaTechViaDefHeader_Convert(PyObject* ob,PyParamoaIntAppDef_oaTechViaDefHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaTechViaDefHeader_Check(ob)) {
        result->SetData( (oaIntAppDef_oaTechViaDefHeader**) ((PyoaIntAppDef_oaTechViaDefHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaTechViaDefHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(oaIntAppDef_oaTechViaDefHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaTechViaDefHeader* data=*value;
        PyObject* bself = PyoaIntAppDef_oaTechViaDefHeader_Type.tp_alloc(&PyoaIntAppDef_oaTechViaDefHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaTechViaDefHeaderObject* self = (PyoaIntAppDef_oaTechViaDefHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(oaIntAppDef_oaTechViaDefHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaTechViaDefHeader_Type.tp_alloc(&PyoaIntAppDef_oaTechViaDefHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaTechViaDefHeaderObject* self = (PyoaIntAppDef_oaTechViaDefHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechViaDefHeader_get_doc[] = 
"Class: oaIntAppDef_oaTechViaDefHeader, Function: get\n"
"  Paramegers: (oaTechViaDefHeader)\n"
"    Calls: oaInt4 get(const oaTechViaDefHeader* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaTechViaDefHeader,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTechViaDefHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechViaDefHeader data;
    int convert_status=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechViaDefHeaderObject* self=(PyoaIntAppDef_oaTechViaDefHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechViaDefHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechViaDefHeader_getDefault_doc[] = 
"Class: oaIntAppDef_oaTechViaDefHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaTechViaDefHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechViaDefHeader data;
    int convert_status=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechViaDefHeaderObject* self=(PyoaIntAppDef_oaTechViaDefHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechViaDefHeader_set_doc[] = 
"Class: oaIntAppDef_oaTechViaDefHeader, Function: set\n"
"  Paramegers: (oaTechViaDefHeader,oaInt4)\n"
"    Calls: void set(oaTechViaDefHeader* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaTechViaDefHeader,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTechViaDefHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTechViaDefHeader data;
    int convert_status=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTechViaDefHeaderObject* self=(PyoaIntAppDef_oaTechViaDefHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechViaDefHeader p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechViaDefHeader_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechViaDefHeader_isNull_doc[] =
"Class: oaIntAppDef_oaTechViaDefHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaTechViaDefHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaTechViaDefHeader data;
    int convert_status=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaTechViaDefHeader_assign_doc[] = 
"Class: oaIntAppDef_oaTechViaDefHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaTechViaDefHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaTechViaDefHeader data;
  int convert_status=PyoaIntAppDef_oaTechViaDefHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaTechViaDefHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaTechViaDefHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaTechViaDefHeader_get,METH_VARARGS,oaIntAppDef_oaTechViaDefHeader_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaTechViaDefHeader_getDefault,METH_VARARGS,oaIntAppDef_oaTechViaDefHeader_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaTechViaDefHeader_set,METH_VARARGS,oaIntAppDef_oaTechViaDefHeader_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaTechViaDefHeader_tp_isNull,METH_VARARGS,oaIntAppDef_oaTechViaDefHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaTechViaDefHeader_tp_assign,METH_VARARGS,oaIntAppDef_oaTechViaDefHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechViaDefHeader_doc[] = 
"Class: oaIntAppDef_oaTechViaDefHeader\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaTechViaDefHeader)\n"
"    Calls: (const oaIntAppDef_oaTechViaDefHeader&)\n"
"    Signature: oaIntAppDef_oaTechViaDefHeader||cref-oaIntAppDef_oaTechViaDefHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaTechViaDefHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaTechViaDefHeader",
    sizeof(PyoaIntAppDef_oaTechViaDefHeaderObject),
    0,
    (destructor)oaIntAppDef_oaTechViaDefHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaTechViaDefHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaTechViaDefHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaTechViaDefHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaTechViaDefHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaTechViaDefHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechViaDefHeader_static_find_doc[] = 
"Class: oaIntAppDef_oaTechViaDefHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaTechViaDefHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::find(p1.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTechViaDefHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTechViaDefHeader_static_get_doc[] = 
"Class: oaIntAppDef_oaTechViaDefHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTechViaDefHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTechViaDefHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaTechViaDefHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::get(p1.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTechViaDefHeaderp result= (oaIntAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaTechViaDefHeader_FromoaIntAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTechViaDefHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaTechViaDefHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaTechViaDefHeader_static_find,METH_VARARGS,oaIntAppDef_oaTechViaDefHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaTechViaDefHeader_static_get,METH_VARARGS,oaIntAppDef_oaTechViaDefHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaTechViaDefHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaTechViaDefHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaTechViaDefHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaTechViaDefHeader",
           (PyObject*)(&PyoaIntAppDef_oaTechViaDefHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaTechViaDefHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaTechViaDefHeader_Type.tp_dict;
    for(method=oaIntAppDef_oaTechViaDefHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntAppDef_oaTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntAppDef_oaTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntAppDef_oaTermObject* self = (PyoaIntAppDef_oaTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntAppDef_oaTerm)
    {
        PyParamoaIntAppDef_oaTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntAppDef_oaTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntAppDef_oaTerm, Choices are:\n"
        "    (oaIntAppDef_oaTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntAppDef_oaTerm_tp_dealloc(PyoaIntAppDef_oaTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntAppDef_oaTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntAppDef_oaTerm value;
    int convert_status=PyoaIntAppDef_oaTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaIntAppDef_oaTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntAppDef_oaTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntAppDef_oaTerm v1;
    PyParamoaIntAppDef_oaTerm v2;
    int convert_status1=PyoaIntAppDef_oaTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntAppDef_oaTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntAppDef_oaTerm_Convert(PyObject* ob,PyParamoaIntAppDef_oaTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntAppDef_oaTerm_Check(ob)) {
        result->SetData( (oaIntAppDef_oaTerm**) ((PyoaIntAppDef_oaTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntAppDef_oaTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(oaIntAppDef_oaTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntAppDef_oaTerm* data=*value;
        PyObject* bself = PyoaIntAppDef_oaTerm_Type.tp_alloc(&PyoaIntAppDef_oaTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntAppDef_oaTermObject* self = (PyoaIntAppDef_oaTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(oaIntAppDef_oaTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntAppDef_oaTerm_Type.tp_alloc(&PyoaIntAppDef_oaTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntAppDef_oaTermObject* self = (PyoaIntAppDef_oaTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTerm_get_doc[] = 
"Class: oaIntAppDef_oaTerm, Function: get\n"
"  Paramegers: (oaTerm)\n"
"    Calls: oaInt4 get(const oaTerm* object)\n"
"    Signature: get|simple-oaInt4|cptr-oaTerm,\n"
"    This function returns the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTerm data;
    int convert_status=PyoaIntAppDef_oaTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTermObject* self=(PyoaIntAppDef_oaTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaInt4 result= (data.DataCall()->get(p1.Data()));
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTerm_getDefault_doc[] = 
"Class: oaIntAppDef_oaTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaInt4 getDefault() const\n"
"    Signature: getDefault|simple-oaInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this integer extension.\n"
;

static PyObject*
oaIntAppDef_oaTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTerm data;
    int convert_status=PyoaIntAppDef_oaTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTermObject* self=(PyoaIntAppDef_oaTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaInt4 result= (data.DataCall()->getDefault());
        return PyoaInt4_FromoaInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTerm_set_doc[] = 
"Class: oaIntAppDef_oaTerm, Function: set\n"
"  Paramegers: (oaTerm,oaInt4)\n"
"    Calls: void set(oaTerm* object,oaInt4 value)\n"
"    Signature: set|void-void|ptr-oaTerm,simple-oaInt4,\n"
"    This function sets the value of this integer extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntAppDef_oaTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntAppDef_oaTerm data;
    int convert_status=PyoaIntAppDef_oaTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntAppDef_oaTermObject* self=(PyoaIntAppDef_oaTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTerm p1;
    PyParamoaInt4 p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTerm_Convert,&p1,
          &PyoaInt4_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTerm_isNull_doc[] =
"Class: oaIntAppDef_oaTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntAppDef_oaTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntAppDef_oaTerm data;
    int convert_status=PyoaIntAppDef_oaTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntAppDef_oaTerm_assign_doc[] = 
"Class: oaIntAppDef_oaTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntAppDef_oaTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntAppDef_oaTerm data;
  int convert_status=PyoaIntAppDef_oaTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntAppDef_oaTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntAppDef_oaTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntAppDef_oaTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntAppDef_oaTerm_get,METH_VARARGS,oaIntAppDef_oaTerm_get_doc},
    {"getDefault",(PyCFunction)oaIntAppDef_oaTerm_getDefault,METH_VARARGS,oaIntAppDef_oaTerm_getDefault_doc},
    {"set",(PyCFunction)oaIntAppDef_oaTerm_set,METH_VARARGS,oaIntAppDef_oaTerm_set_doc},
    {"isNull",(PyCFunction)oaIntAppDef_oaTerm_tp_isNull,METH_VARARGS,oaIntAppDef_oaTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntAppDef_oaTerm_tp_assign,METH_VARARGS,oaIntAppDef_oaTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTerm_doc[] = 
"Class: oaIntAppDef_oaTerm\n"
"  The oaIntAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, an integer field is added to each object of the specified dataType. The default value for this extension is INT_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntAppDef_oaTerm)\n"
"    Calls: (const oaIntAppDef_oaTerm&)\n"
"    Signature: oaIntAppDef_oaTerm||cref-oaIntAppDef_oaTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntAppDef_oaTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntAppDef_oaTerm",
    sizeof(PyoaIntAppDef_oaTermObject),
    0,
    (destructor)oaIntAppDef_oaTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntAppDef_oaTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntAppDef_oaTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntAppDef_oaTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntAppDef_oaTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntAppDef_oaTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntAppDef_oaTerm_static_find_doc[] = 
"Class: oaIntAppDef_oaTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntAppDef_oaTerm|cref-oaString,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntAppDef_oaTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntAppDef_oaTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::find(p1.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::find(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntAppDef_oaTerm_static_get_doc[] = 
"Class: oaIntAppDef_oaTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntAppDef_oaTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntAppDef_oaTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4)\n"
"    Calls: oaIntAppDef_oaTerm* get(const oaString& name,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTerm* get(const oaString& name,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTerm|cref-oaString,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name . You can create an integer extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntAppDef_oaTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntAppDef_oaTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4)\n"
"    Calls: oaIntAppDef_oaTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue)\n"
"    Signature: get|ptr-oaIntAppDef_oaTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
"    Calls: oaIntAppDef_oaTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaInt4 defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntAppDef_oaTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaInt4,simple-oaBoolean,\n"
"    This function constructs an oaIntAppDef object, creating an integer extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaIntAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    persist\n"
"    Saves the oaIntAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntAppDef_oaTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::get(p1.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2)) {
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaInt4 p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaInt4_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::get(p1.Data(),p2.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaInt4,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaInt4 p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaInt4_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntAppDef_oaTermp result= (oaIntAppDef_oaTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaIntAppDef_oaTerm_FromoaIntAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntAppDef_oaTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaInt4)\n"
        "    (oaString,oaInt4,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaInt4)\n"
        "    (oaString,oaAppObjectDef,oaInt4,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntAppDef_oaTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntAppDef_oaTerm_static_find,METH_VARARGS,oaIntAppDef_oaTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntAppDef_oaTerm_static_get,METH_VARARGS,oaIntAppDef_oaTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntAppDef_oaTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntAppDef_oaTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntAppDef_oaTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntAppDef_oaTerm",
           (PyObject*)(&PyoaIntAppDef_oaTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntAppDef_oaTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntAppDef_oaTerm_Type.tp_dict;
    for(method=oaIntAppDef_oaTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

