
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaLayer
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaLayer_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaLayer_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaLayerObject* self = (PyoaDoubleAppDef_oaLayerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaLayer)
    {
        PyParamoaDoubleAppDef_oaLayer p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaLayer_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaLayer, Choices are:\n"
        "    (oaDoubleAppDef_oaLayer)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaLayer_tp_dealloc(PyoaDoubleAppDef_oaLayerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaLayer_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaLayer value;
    int convert_status=PyoaDoubleAppDef_oaLayer_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaDoubleAppDef_oaLayer::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaLayer_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaLayer v1;
    PyParamoaDoubleAppDef_oaLayer v2;
    int convert_status1=PyoaDoubleAppDef_oaLayer_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaLayer_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaLayer_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaLayer* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaLayer_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaLayer**) ((PyoaDoubleAppDef_oaLayerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaLayer Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(oaDoubleAppDef_oaLayer** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaLayer* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaLayer_Type.tp_alloc(&PyoaDoubleAppDef_oaLayer_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaLayerObject* self = (PyoaDoubleAppDef_oaLayerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(oaDoubleAppDef_oaLayer* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaLayer_Type.tp_alloc(&PyoaDoubleAppDef_oaLayer_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaLayerObject* self = (PyoaDoubleAppDef_oaLayerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayer_get_doc[] = 
"Class: oaDoubleAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaLayer)\n"
"    Calls: oaDouble get(const oaLayer* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaLayer,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaLayer_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLayer data;
    int convert_status=PyoaDoubleAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLayerObject* self=(PyoaDoubleAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayer_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaLayer, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaLayer_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLayer data;
    int convert_status=PyoaDoubleAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLayerObject* self=(PyoaDoubleAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayer_set_doc[] = 
"Class: oaDoubleAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaLayer,oaDouble)\n"
"    Calls: void set(oaLayer* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaLayer,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaLayer_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLayer data;
    int convert_status=PyoaDoubleAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLayerObject* self=(PyoaDoubleAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayer_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayer_isNull_doc[] =
"Class: oaDoubleAppDef_oaLayer, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaLayer_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaLayer data;
    int convert_status=PyoaDoubleAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaLayer_assign_doc[] = 
"Class: oaDoubleAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaLayer_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaLayer data;
  int convert_status=PyoaDoubleAppDef_oaLayer_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaLayer p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaLayer_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaLayer_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaLayer_get,METH_VARARGS,oaDoubleAppDef_oaLayer_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaLayer_getDefault,METH_VARARGS,oaDoubleAppDef_oaLayer_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaLayer_set,METH_VARARGS,oaDoubleAppDef_oaLayer_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaLayer_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaLayer_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaLayer_tp_assign,METH_VARARGS,oaDoubleAppDef_oaLayer_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayer_doc[] = 
"Class: oaDoubleAppDef_oaLayer\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaLayer)\n"
"    Calls: (const oaDoubleAppDef_oaLayer&)\n"
"    Signature: oaDoubleAppDef_oaLayer||cref-oaDoubleAppDef_oaLayer,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaLayer_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaLayer",
    sizeof(PyoaDoubleAppDef_oaLayerObject),
    0,
    (destructor)oaDoubleAppDef_oaLayer_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaLayer_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaLayer_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaLayer_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaLayer_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaLayer_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayer_static_find_doc[] = 
"Class: oaDoubleAppDef_oaLayer, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaLayer* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaLayer|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaLayer* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaLayer_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::find(p1.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaLayer, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayer_static_get_doc[] = 
"Class: oaDoubleAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaLayer* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayer|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaLayer* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayer|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaLayer* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayer|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaLayer_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::get(p1.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerp result= (oaDoubleAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaLayer_FromoaDoubleAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaLayer, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaLayer_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaLayer_static_find,METH_VARARGS,oaDoubleAppDef_oaLayer_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaLayer_static_get,METH_VARARGS,oaDoubleAppDef_oaLayer_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaLayer_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaLayer_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaLayer\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaLayer",
           (PyObject*)(&PyoaDoubleAppDef_oaLayer_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaLayer\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaLayer_Type.tp_dict;
    for(method=oaDoubleAppDef_oaLayer_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaLayerHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaLayerHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaLayerHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaLayerHeaderObject* self = (PyoaDoubleAppDef_oaLayerHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaLayerHeader)
    {
        PyParamoaDoubleAppDef_oaLayerHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaLayerHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaLayerHeader, Choices are:\n"
        "    (oaDoubleAppDef_oaLayerHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaLayerHeader_tp_dealloc(PyoaDoubleAppDef_oaLayerHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaLayerHeader_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaLayerHeader value;
    int convert_status=PyoaDoubleAppDef_oaLayerHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaDoubleAppDef_oaLayerHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaLayerHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaLayerHeader v1;
    PyParamoaDoubleAppDef_oaLayerHeader v2;
    int convert_status1=PyoaDoubleAppDef_oaLayerHeader_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaLayerHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaLayerHeader_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaLayerHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaLayerHeader_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaLayerHeader**) ((PyoaDoubleAppDef_oaLayerHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaLayerHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(oaDoubleAppDef_oaLayerHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaLayerHeader* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaLayerHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaLayerHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaLayerHeaderObject* self = (PyoaDoubleAppDef_oaLayerHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(oaDoubleAppDef_oaLayerHeader* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaLayerHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaLayerHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaLayerHeaderObject* self = (PyoaDoubleAppDef_oaLayerHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayerHeader_get_doc[] = 
"Class: oaDoubleAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaLayerHeader)\n"
"    Calls: oaDouble get(const oaLayerHeader* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaLayerHeader,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaLayerHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLayerHeader data;
    int convert_status=PyoaDoubleAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLayerHeaderObject* self=(PyoaDoubleAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayerHeader_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaLayerHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaLayerHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLayerHeader data;
    int convert_status=PyoaDoubleAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLayerHeaderObject* self=(PyoaDoubleAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayerHeader_set_doc[] = 
"Class: oaDoubleAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaLayerHeader,oaDouble)\n"
"    Calls: void set(oaLayerHeader* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaLayerHeader,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaLayerHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLayerHeader data;
    int convert_status=PyoaDoubleAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLayerHeaderObject* self=(PyoaDoubleAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayerHeader_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayerHeader_isNull_doc[] =
"Class: oaDoubleAppDef_oaLayerHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaLayerHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaLayerHeader data;
    int convert_status=PyoaDoubleAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaLayerHeader_assign_doc[] = 
"Class: oaDoubleAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaLayerHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaLayerHeader data;
  int convert_status=PyoaDoubleAppDef_oaLayerHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaLayerHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaLayerHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaLayerHeader_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaLayerHeader_get,METH_VARARGS,oaDoubleAppDef_oaLayerHeader_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaLayerHeader_getDefault,METH_VARARGS,oaDoubleAppDef_oaLayerHeader_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaLayerHeader_set,METH_VARARGS,oaDoubleAppDef_oaLayerHeader_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaLayerHeader_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaLayerHeader_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaLayerHeader_tp_assign,METH_VARARGS,oaDoubleAppDef_oaLayerHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayerHeader_doc[] = 
"Class: oaDoubleAppDef_oaLayerHeader\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaLayerHeader)\n"
"    Calls: (const oaDoubleAppDef_oaLayerHeader&)\n"
"    Signature: oaDoubleAppDef_oaLayerHeader||cref-oaDoubleAppDef_oaLayerHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaLayerHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaLayerHeader",
    sizeof(PyoaDoubleAppDef_oaLayerHeaderObject),
    0,
    (destructor)oaDoubleAppDef_oaLayerHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaLayerHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaLayerHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaLayerHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaLayerHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaLayerHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayerHeader_static_find_doc[] = 
"Class: oaDoubleAppDef_oaLayerHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaLayerHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::find(p1.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaLayerHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLayerHeader_static_get_doc[] = 
"Class: oaDoubleAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaLayerHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::get(p1.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLayerHeaderp result= (oaDoubleAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaLayerHeader_FromoaDoubleAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaLayerHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaLayerHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaLayerHeader_static_find,METH_VARARGS,oaDoubleAppDef_oaLayerHeader_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaLayerHeader_static_get,METH_VARARGS,oaDoubleAppDef_oaLayerHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaLayerHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaLayerHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaLayerHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaLayerHeader",
           (PyObject*)(&PyoaDoubleAppDef_oaLayerHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaLayerHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaLayerHeader_Type.tp_dict;
    for(method=oaDoubleAppDef_oaLayerHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaLib
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaLib_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaLib_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaLibObject* self = (PyoaDoubleAppDef_oaLibObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaLib)
    {
        PyParamoaDoubleAppDef_oaLib p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaLib_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaLib, Choices are:\n"
        "    (oaDoubleAppDef_oaLib)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaLib_tp_dealloc(PyoaDoubleAppDef_oaLibObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaLib_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaLib value;
    int convert_status=PyoaDoubleAppDef_oaLib_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaDoubleAppDef_oaLib::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaLib_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaLib v1;
    PyParamoaDoubleAppDef_oaLib v2;
    int convert_status1=PyoaDoubleAppDef_oaLib_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaLib_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaLib_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaLib* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaLib_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaLib**) ((PyoaDoubleAppDef_oaLibObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaLib Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(oaDoubleAppDef_oaLib** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaLib* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaLib_Type.tp_alloc(&PyoaDoubleAppDef_oaLib_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaLibObject* self = (PyoaDoubleAppDef_oaLibObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(oaDoubleAppDef_oaLib* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaLib_Type.tp_alloc(&PyoaDoubleAppDef_oaLib_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaLibObject* self = (PyoaDoubleAppDef_oaLibObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLib_get_doc[] = 
"Class: oaDoubleAppDef_oaLib, Function: get\n"
"  Paramegers: (oaLib)\n"
"    Calls: oaDouble get(const oaLib* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaLib,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaLib_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLib data;
    int convert_status=PyoaDoubleAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLibObject* self=(PyoaDoubleAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLib_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLib_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaLib, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaLib_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLib data;
    int convert_status=PyoaDoubleAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLibObject* self=(PyoaDoubleAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLib_set_doc[] = 
"Class: oaDoubleAppDef_oaLib, Function: set\n"
"  Paramegers: (oaLib,oaDouble)\n"
"    Calls: void set(oaLib* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaLib,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaLib_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaLib data;
    int convert_status=PyoaDoubleAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaLibObject* self=(PyoaDoubleAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLib_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLib_isNull_doc[] =
"Class: oaDoubleAppDef_oaLib, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaLib_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaLib data;
    int convert_status=PyoaDoubleAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaLib_assign_doc[] = 
"Class: oaDoubleAppDef_oaLib, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaLib_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaLib data;
  int convert_status=PyoaDoubleAppDef_oaLib_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaLib p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaLib_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaLib_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaLib_get,METH_VARARGS,oaDoubleAppDef_oaLib_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaLib_getDefault,METH_VARARGS,oaDoubleAppDef_oaLib_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaLib_set,METH_VARARGS,oaDoubleAppDef_oaLib_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaLib_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaLib_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaLib_tp_assign,METH_VARARGS,oaDoubleAppDef_oaLib_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLib_doc[] = 
"Class: oaDoubleAppDef_oaLib\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaLib)\n"
"    Calls: (const oaDoubleAppDef_oaLib&)\n"
"    Signature: oaDoubleAppDef_oaLib||cref-oaDoubleAppDef_oaLib,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaLib_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaLib",
    sizeof(PyoaDoubleAppDef_oaLibObject),
    0,
    (destructor)oaDoubleAppDef_oaLib_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaLib_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaLib_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaLib_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaLib_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaLib_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLib_static_find_doc[] = 
"Class: oaDoubleAppDef_oaLib, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaLib* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaLib|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaLib* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaLib_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::find(p1.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaLib, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaLib_static_get_doc[] = 
"Class: oaDoubleAppDef_oaLib, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaLib* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLib|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaLib* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLib|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaLib* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLib|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaLib_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::get(p1.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaLibp result= (oaDoubleAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaLib_FromoaDoubleAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaLib, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaLib_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaLib_static_find,METH_VARARGS,oaDoubleAppDef_oaLib_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaLib_static_get,METH_VARARGS,oaDoubleAppDef_oaLib_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaLib_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaLib_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaLib\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaLib",
           (PyObject*)(&PyoaDoubleAppDef_oaLib_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaLib\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaLib_Type.tp_dict;
    for(method=oaDoubleAppDef_oaLib_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaMarker
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaMarker_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaMarker_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaMarkerObject* self = (PyoaDoubleAppDef_oaMarkerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaMarker)
    {
        PyParamoaDoubleAppDef_oaMarker p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaMarker_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaMarker, Choices are:\n"
        "    (oaDoubleAppDef_oaMarker)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaMarker_tp_dealloc(PyoaDoubleAppDef_oaMarkerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaMarker_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaMarker value;
    int convert_status=PyoaDoubleAppDef_oaMarker_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaDoubleAppDef_oaMarker::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaMarker_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaMarker v1;
    PyParamoaDoubleAppDef_oaMarker v2;
    int convert_status1=PyoaDoubleAppDef_oaMarker_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaMarker_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaMarker_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaMarker* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaMarker_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaMarker**) ((PyoaDoubleAppDef_oaMarkerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaMarker Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(oaDoubleAppDef_oaMarker** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaMarker* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaMarker_Type.tp_alloc(&PyoaDoubleAppDef_oaMarker_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaMarkerObject* self = (PyoaDoubleAppDef_oaMarkerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(oaDoubleAppDef_oaMarker* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaMarker_Type.tp_alloc(&PyoaDoubleAppDef_oaMarker_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaMarkerObject* self = (PyoaDoubleAppDef_oaMarkerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaMarker_get_doc[] = 
"Class: oaDoubleAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaMarker)\n"
"    Calls: oaDouble get(const oaMarker* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaMarker,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaMarker_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaMarker data;
    int convert_status=PyoaDoubleAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaMarkerObject* self=(PyoaDoubleAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaMarker_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaMarker_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaMarker, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaMarker_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaMarker data;
    int convert_status=PyoaDoubleAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaMarkerObject* self=(PyoaDoubleAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaMarker_set_doc[] = 
"Class: oaDoubleAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaMarker,oaDouble)\n"
"    Calls: void set(oaMarker* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaMarker,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaMarker_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaMarker data;
    int convert_status=PyoaDoubleAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaMarkerObject* self=(PyoaDoubleAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaMarker_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaMarker_isNull_doc[] =
"Class: oaDoubleAppDef_oaMarker, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaMarker_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaMarker data;
    int convert_status=PyoaDoubleAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaMarker_assign_doc[] = 
"Class: oaDoubleAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaMarker_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaMarker data;
  int convert_status=PyoaDoubleAppDef_oaMarker_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaMarker p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaMarker_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaMarker_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaMarker_get,METH_VARARGS,oaDoubleAppDef_oaMarker_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaMarker_getDefault,METH_VARARGS,oaDoubleAppDef_oaMarker_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaMarker_set,METH_VARARGS,oaDoubleAppDef_oaMarker_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaMarker_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaMarker_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaMarker_tp_assign,METH_VARARGS,oaDoubleAppDef_oaMarker_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaMarker_doc[] = 
"Class: oaDoubleAppDef_oaMarker\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaMarker)\n"
"    Calls: (const oaDoubleAppDef_oaMarker&)\n"
"    Signature: oaDoubleAppDef_oaMarker||cref-oaDoubleAppDef_oaMarker,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaMarker_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaMarker",
    sizeof(PyoaDoubleAppDef_oaMarkerObject),
    0,
    (destructor)oaDoubleAppDef_oaMarker_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaMarker_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaMarker_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaMarker_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaMarker_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaMarker_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaMarker_static_find_doc[] = 
"Class: oaDoubleAppDef_oaMarker, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaMarker* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaMarker|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaMarker* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaMarker_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::find(p1.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaMarker, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaMarker_static_get_doc[] = 
"Class: oaDoubleAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaMarker* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaMarker|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaMarker* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaMarker|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaMarker* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaMarker|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaMarker_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::get(p1.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaMarkerp result= (oaDoubleAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaMarker_FromoaDoubleAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaMarker, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaMarker_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaMarker_static_find,METH_VARARGS,oaDoubleAppDef_oaMarker_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaMarker_static_get,METH_VARARGS,oaDoubleAppDef_oaMarker_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaMarker_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaMarker_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaMarker\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaMarker",
           (PyObject*)(&PyoaDoubleAppDef_oaMarker_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaMarker\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaMarker_Type.tp_dict;
    for(method=oaDoubleAppDef_oaMarker_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModAssignmentObject* self = (PyoaDoubleAppDef_oaModAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModAssignment)
    {
        PyParamoaDoubleAppDef_oaModAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModAssignment, Choices are:\n"
        "    (oaDoubleAppDef_oaModAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModAssignment_tp_dealloc(PyoaDoubleAppDef_oaModAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModAssignment_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModAssignment value;
    int convert_status=PyoaDoubleAppDef_oaModAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaModAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModAssignment v1;
    PyParamoaDoubleAppDef_oaModAssignment v2;
    int convert_status1=PyoaDoubleAppDef_oaModAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModAssignment_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModAssignment_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModAssignment**) ((PyoaDoubleAppDef_oaModAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(oaDoubleAppDef_oaModAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModAssignment* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModAssignment_Type.tp_alloc(&PyoaDoubleAppDef_oaModAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModAssignmentObject* self = (PyoaDoubleAppDef_oaModAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(oaDoubleAppDef_oaModAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModAssignment_Type.tp_alloc(&PyoaDoubleAppDef_oaModAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModAssignmentObject* self = (PyoaDoubleAppDef_oaModAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModAssignment_get_doc[] = 
"Class: oaDoubleAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaModAssignment)\n"
"    Calls: oaDouble get(const oaModAssignment* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModAssignment,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModAssignment data;
    int convert_status=PyoaDoubleAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModAssignmentObject* self=(PyoaDoubleAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModAssignment_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModAssignment, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModAssignment data;
    int convert_status=PyoaDoubleAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModAssignmentObject* self=(PyoaDoubleAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModAssignment_set_doc[] = 
"Class: oaDoubleAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaModAssignment,oaDouble)\n"
"    Calls: void set(oaModAssignment* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModAssignment,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModAssignment data;
    int convert_status=PyoaDoubleAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModAssignmentObject* self=(PyoaDoubleAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModAssignment_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModAssignment_isNull_doc[] =
"Class: oaDoubleAppDef_oaModAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModAssignment data;
    int convert_status=PyoaDoubleAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModAssignment_assign_doc[] = 
"Class: oaDoubleAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModAssignment data;
  int convert_status=PyoaDoubleAppDef_oaModAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModAssignment_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModAssignment_get,METH_VARARGS,oaDoubleAppDef_oaModAssignment_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModAssignment_getDefault,METH_VARARGS,oaDoubleAppDef_oaModAssignment_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModAssignment_set,METH_VARARGS,oaDoubleAppDef_oaModAssignment_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModAssignment_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModAssignment_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModAssignment_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModAssignment_doc[] = 
"Class: oaDoubleAppDef_oaModAssignment\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModAssignment)\n"
"    Calls: (const oaDoubleAppDef_oaModAssignment&)\n"
"    Signature: oaDoubleAppDef_oaModAssignment||cref-oaDoubleAppDef_oaModAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModAssignment",
    sizeof(PyoaDoubleAppDef_oaModAssignmentObject),
    0,
    (destructor)oaDoubleAppDef_oaModAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModAssignment_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::find(p1.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModAssignment_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::get(p1.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModAssignmentp result= (oaDoubleAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModAssignment_FromoaDoubleAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModAssignment_static_find,METH_VARARGS,oaDoubleAppDef_oaModAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModAssignment_static_get,METH_VARARGS,oaDoubleAppDef_oaModAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModAssignment",
           (PyObject*)(&PyoaDoubleAppDef_oaModAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModAssignment_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModBusNetDefObject* self = (PyoaDoubleAppDef_oaModBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModBusNetDef)
    {
        PyParamoaDoubleAppDef_oaModBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModBusNetDef, Choices are:\n"
        "    (oaDoubleAppDef_oaModBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModBusNetDef_tp_dealloc(PyoaDoubleAppDef_oaModBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModBusNetDef value;
    int convert_status=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaDoubleAppDef_oaModBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModBusNetDef v1;
    PyParamoaDoubleAppDef_oaModBusNetDef v2;
    int convert_status1=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModBusNetDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModBusNetDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModBusNetDef**) ((PyoaDoubleAppDef_oaModBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(oaDoubleAppDef_oaModBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModBusNetDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModBusNetDefObject* self = (PyoaDoubleAppDef_oaModBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(oaDoubleAppDef_oaModBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModBusNetDefObject* self = (PyoaDoubleAppDef_oaModBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusNetDef_get_doc[] = 
"Class: oaDoubleAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaModBusNetDef)\n"
"    Calls: oaDouble get(const oaModBusNetDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModBusNetDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModBusNetDefObject* self=(PyoaDoubleAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusNetDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModBusNetDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModBusNetDefObject* self=(PyoaDoubleAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusNetDef_set_doc[] = 
"Class: oaDoubleAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaModBusNetDef,oaDouble)\n"
"    Calls: void set(oaModBusNetDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModBusNetDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModBusNetDefObject* self=(PyoaDoubleAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusNetDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusNetDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaModBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModBusNetDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModBusNetDef data;
  int convert_status=PyoaDoubleAppDef_oaModBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModBusNetDef_get,METH_VARARGS,oaDoubleAppDef_oaModBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModBusNetDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaModBusNetDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModBusNetDef_set,METH_VARARGS,oaDoubleAppDef_oaModBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModBusNetDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModBusNetDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusNetDef_doc[] = 
"Class: oaDoubleAppDef_oaModBusNetDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModBusNetDef)\n"
"    Calls: (const oaDoubleAppDef_oaModBusNetDef&)\n"
"    Signature: oaDoubleAppDef_oaModBusNetDef||cref-oaDoubleAppDef_oaModBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModBusNetDef",
    sizeof(PyoaDoubleAppDef_oaModBusNetDefObject),
    0,
    (destructor)oaDoubleAppDef_oaModBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusNetDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusNetDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusNetDefp result= (oaDoubleAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModBusNetDef_FromoaDoubleAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModBusNetDef_static_find,METH_VARARGS,oaDoubleAppDef_oaModBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModBusNetDef_static_get,METH_VARARGS,oaDoubleAppDef_oaModBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModBusNetDef",
           (PyObject*)(&PyoaDoubleAppDef_oaModBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModBusNetDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModBusTermDefObject* self = (PyoaDoubleAppDef_oaModBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModBusTermDef)
    {
        PyParamoaDoubleAppDef_oaModBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModBusTermDef, Choices are:\n"
        "    (oaDoubleAppDef_oaModBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModBusTermDef_tp_dealloc(PyoaDoubleAppDef_oaModBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModBusTermDef value;
    int convert_status=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaModBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModBusTermDef v1;
    PyParamoaDoubleAppDef_oaModBusTermDef v2;
    int convert_status1=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModBusTermDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModBusTermDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModBusTermDef**) ((PyoaDoubleAppDef_oaModBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(oaDoubleAppDef_oaModBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModBusTermDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModBusTermDefObject* self = (PyoaDoubleAppDef_oaModBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(oaDoubleAppDef_oaModBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModBusTermDefObject* self = (PyoaDoubleAppDef_oaModBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusTermDef_get_doc[] = 
"Class: oaDoubleAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaModBusTermDef)\n"
"    Calls: oaDouble get(const oaModBusTermDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModBusTermDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModBusTermDefObject* self=(PyoaDoubleAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusTermDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModBusTermDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModBusTermDefObject* self=(PyoaDoubleAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusTermDef_set_doc[] = 
"Class: oaDoubleAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaModBusTermDef,oaDouble)\n"
"    Calls: void set(oaModBusTermDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModBusTermDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModBusTermDefObject* self=(PyoaDoubleAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusTermDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusTermDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaModBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModBusTermDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModBusTermDef data;
  int convert_status=PyoaDoubleAppDef_oaModBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModBusTermDef_get,METH_VARARGS,oaDoubleAppDef_oaModBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModBusTermDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaModBusTermDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModBusTermDef_set,METH_VARARGS,oaDoubleAppDef_oaModBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModBusTermDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModBusTermDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusTermDef_doc[] = 
"Class: oaDoubleAppDef_oaModBusTermDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModBusTermDef)\n"
"    Calls: (const oaDoubleAppDef_oaModBusTermDef&)\n"
"    Signature: oaDoubleAppDef_oaModBusTermDef||cref-oaDoubleAppDef_oaModBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModBusTermDef",
    sizeof(PyoaDoubleAppDef_oaModBusTermDefObject),
    0,
    (destructor)oaDoubleAppDef_oaModBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusTermDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModBusTermDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModBusTermDefp result= (oaDoubleAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModBusTermDef_FromoaDoubleAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModBusTermDef_static_find,METH_VARARGS,oaDoubleAppDef_oaModBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModBusTermDef_static_get,METH_VARARGS,oaDoubleAppDef_oaModBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModBusTermDef",
           (PyObject*)(&PyoaDoubleAppDef_oaModBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModBusTermDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModConnectDefObject* self = (PyoaDoubleAppDef_oaModConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModConnectDef)
    {
        PyParamoaDoubleAppDef_oaModConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModConnectDef, Choices are:\n"
        "    (oaDoubleAppDef_oaModConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModConnectDef_tp_dealloc(PyoaDoubleAppDef_oaModConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModConnectDef value;
    int convert_status=PyoaDoubleAppDef_oaModConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaModConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModConnectDef v1;
    PyParamoaDoubleAppDef_oaModConnectDef v2;
    int convert_status1=PyoaDoubleAppDef_oaModConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModConnectDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModConnectDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModConnectDef**) ((PyoaDoubleAppDef_oaModConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(oaDoubleAppDef_oaModConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModConnectDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModConnectDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModConnectDefObject* self = (PyoaDoubleAppDef_oaModConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(oaDoubleAppDef_oaModConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModConnectDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModConnectDefObject* self = (PyoaDoubleAppDef_oaModConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModConnectDef_get_doc[] = 
"Class: oaDoubleAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaModConnectDef)\n"
"    Calls: oaDouble get(const oaModConnectDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModConnectDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModConnectDefObject* self=(PyoaDoubleAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModConnectDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModConnectDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModConnectDefObject* self=(PyoaDoubleAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModConnectDef_set_doc[] = 
"Class: oaDoubleAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaModConnectDef,oaDouble)\n"
"    Calls: void set(oaModConnectDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModConnectDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModConnectDefObject* self=(PyoaDoubleAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModConnectDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModConnectDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaModConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModConnectDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModConnectDef data;
  int convert_status=PyoaDoubleAppDef_oaModConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModConnectDef_get,METH_VARARGS,oaDoubleAppDef_oaModConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModConnectDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaModConnectDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModConnectDef_set,METH_VARARGS,oaDoubleAppDef_oaModConnectDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModConnectDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModConnectDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModConnectDef_doc[] = 
"Class: oaDoubleAppDef_oaModConnectDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModConnectDef)\n"
"    Calls: (const oaDoubleAppDef_oaModConnectDef&)\n"
"    Signature: oaDoubleAppDef_oaModConnectDef||cref-oaDoubleAppDef_oaModConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModConnectDef",
    sizeof(PyoaDoubleAppDef_oaModConnectDefObject),
    0,
    (destructor)oaDoubleAppDef_oaModConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModConnectDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModConnectDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModConnectDefp result= (oaDoubleAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModConnectDef_FromoaDoubleAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModConnectDef_static_find,METH_VARARGS,oaDoubleAppDef_oaModConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModConnectDef_static_get,METH_VARARGS,oaDoubleAppDef_oaModConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModConnectDef",
           (PyObject*)(&PyoaDoubleAppDef_oaModConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModConnectDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModInstObject* self = (PyoaDoubleAppDef_oaModInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModInst)
    {
        PyParamoaDoubleAppDef_oaModInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModInst, Choices are:\n"
        "    (oaDoubleAppDef_oaModInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModInst_tp_dealloc(PyoaDoubleAppDef_oaModInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModInst_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModInst value;
    int convert_status=PyoaDoubleAppDef_oaModInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaModInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModInst v1;
    PyParamoaDoubleAppDef_oaModInst v2;
    int convert_status1=PyoaDoubleAppDef_oaModInst_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModInst_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModInst_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModInst**) ((PyoaDoubleAppDef_oaModInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(oaDoubleAppDef_oaModInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModInst* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModInst_Type.tp_alloc(&PyoaDoubleAppDef_oaModInst_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModInstObject* self = (PyoaDoubleAppDef_oaModInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(oaDoubleAppDef_oaModInst* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModInst_Type.tp_alloc(&PyoaDoubleAppDef_oaModInst_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModInstObject* self = (PyoaDoubleAppDef_oaModInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInst_get_doc[] = 
"Class: oaDoubleAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaModInst)\n"
"    Calls: oaDouble get(const oaModInst* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModInst,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInst data;
    int convert_status=PyoaDoubleAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstObject* self=(PyoaDoubleAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInst_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInst data;
    int convert_status=PyoaDoubleAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstObject* self=(PyoaDoubleAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInst_set_doc[] = 
"Class: oaDoubleAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaModInst,oaDouble)\n"
"    Calls: void set(oaModInst* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModInst,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInst data;
    int convert_status=PyoaDoubleAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstObject* self=(PyoaDoubleAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInst_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInst_isNull_doc[] =
"Class: oaDoubleAppDef_oaModInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModInst data;
    int convert_status=PyoaDoubleAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModInst_assign_doc[] = 
"Class: oaDoubleAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModInst data;
  int convert_status=PyoaDoubleAppDef_oaModInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModInst_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModInst_get,METH_VARARGS,oaDoubleAppDef_oaModInst_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModInst_getDefault,METH_VARARGS,oaDoubleAppDef_oaModInst_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModInst_set,METH_VARARGS,oaDoubleAppDef_oaModInst_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModInst_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModInst_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModInst_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInst_doc[] = 
"Class: oaDoubleAppDef_oaModInst\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModInst)\n"
"    Calls: (const oaDoubleAppDef_oaModInst&)\n"
"    Signature: oaDoubleAppDef_oaModInst||cref-oaDoubleAppDef_oaModInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModInst",
    sizeof(PyoaDoubleAppDef_oaModInstObject),
    0,
    (destructor)oaDoubleAppDef_oaModInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModInst_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInst_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModInst|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::find(p1.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInst_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModInst* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModInst* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::get(p1.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstp result= (oaDoubleAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModInst_FromoaDoubleAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModInst_static_find,METH_VARARGS,oaDoubleAppDef_oaModInst_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModInst_static_get,METH_VARARGS,oaDoubleAppDef_oaModInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModInst_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModInst",
           (PyObject*)(&PyoaDoubleAppDef_oaModInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModInst_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModInstHeaderObject* self = (PyoaDoubleAppDef_oaModInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModInstHeader)
    {
        PyParamoaDoubleAppDef_oaModInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModInstHeader, Choices are:\n"
        "    (oaDoubleAppDef_oaModInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModInstHeader_tp_dealloc(PyoaDoubleAppDef_oaModInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModInstHeader value;
    int convert_status=PyoaDoubleAppDef_oaModInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaModInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModInstHeader v1;
    PyParamoaDoubleAppDef_oaModInstHeader v2;
    int convert_status1=PyoaDoubleAppDef_oaModInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModInstHeader_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModInstHeader_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModInstHeader**) ((PyoaDoubleAppDef_oaModInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(oaDoubleAppDef_oaModInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModInstHeader* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaModInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModInstHeaderObject* self = (PyoaDoubleAppDef_oaModInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(oaDoubleAppDef_oaModInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaModInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModInstHeaderObject* self = (PyoaDoubleAppDef_oaModInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstHeader_get_doc[] = 
"Class: oaDoubleAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaModInstHeader)\n"
"    Calls: oaDouble get(const oaModInstHeader* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModInstHeader,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstHeaderObject* self=(PyoaDoubleAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstHeader_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstHeaderObject* self=(PyoaDoubleAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstHeader_set_doc[] = 
"Class: oaDoubleAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaModInstHeader,oaDouble)\n"
"    Calls: void set(oaModInstHeader* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModInstHeader,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstHeaderObject* self=(PyoaDoubleAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstHeader_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstHeader_isNull_doc[] =
"Class: oaDoubleAppDef_oaModInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModInstHeader_assign_doc[] = 
"Class: oaDoubleAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModInstHeader data;
  int convert_status=PyoaDoubleAppDef_oaModInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModInstHeader_get,METH_VARARGS,oaDoubleAppDef_oaModInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModInstHeader_getDefault,METH_VARARGS,oaDoubleAppDef_oaModInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModInstHeader_set,METH_VARARGS,oaDoubleAppDef_oaModInstHeader_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModInstHeader_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModInstHeader_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstHeader_doc[] = 
"Class: oaDoubleAppDef_oaModInstHeader\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModInstHeader)\n"
"    Calls: (const oaDoubleAppDef_oaModInstHeader&)\n"
"    Signature: oaDoubleAppDef_oaModInstHeader||cref-oaDoubleAppDef_oaModInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModInstHeader",
    sizeof(PyoaDoubleAppDef_oaModInstHeaderObject),
    0,
    (destructor)oaDoubleAppDef_oaModInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstHeader_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::find(p1.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstHeader_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::get(p1.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstHeaderp result= (oaDoubleAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModInstHeader_FromoaDoubleAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModInstHeader_static_find,METH_VARARGS,oaDoubleAppDef_oaModInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModInstHeader_static_get,METH_VARARGS,oaDoubleAppDef_oaModInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModInstHeader",
           (PyObject*)(&PyoaDoubleAppDef_oaModInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModInstHeader_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModInstTermObject* self = (PyoaDoubleAppDef_oaModInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModInstTerm)
    {
        PyParamoaDoubleAppDef_oaModInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModInstTerm, Choices are:\n"
        "    (oaDoubleAppDef_oaModInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModInstTerm_tp_dealloc(PyoaDoubleAppDef_oaModInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModInstTerm value;
    int convert_status=PyoaDoubleAppDef_oaModInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaDoubleAppDef_oaModInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModInstTerm v1;
    PyParamoaDoubleAppDef_oaModInstTerm v2;
    int convert_status1=PyoaDoubleAppDef_oaModInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModInstTerm_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModInstTerm_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModInstTerm**) ((PyoaDoubleAppDef_oaModInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(oaDoubleAppDef_oaModInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModInstTerm* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModInstTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaModInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModInstTermObject* self = (PyoaDoubleAppDef_oaModInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(oaDoubleAppDef_oaModInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModInstTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaModInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModInstTermObject* self = (PyoaDoubleAppDef_oaModInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstTerm_get_doc[] = 
"Class: oaDoubleAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaModInstTerm)\n"
"    Calls: oaDouble get(const oaModInstTerm* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModInstTerm,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstTermObject* self=(PyoaDoubleAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstTerm_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModInstTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstTermObject* self=(PyoaDoubleAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstTerm_set_doc[] = 
"Class: oaDoubleAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaModInstTerm,oaDouble)\n"
"    Calls: void set(oaModInstTerm* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModInstTerm,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModInstTermObject* self=(PyoaDoubleAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstTerm_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstTerm_isNull_doc[] =
"Class: oaDoubleAppDef_oaModInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModInstTerm_assign_doc[] = 
"Class: oaDoubleAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModInstTerm data;
  int convert_status=PyoaDoubleAppDef_oaModInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModInstTerm_get,METH_VARARGS,oaDoubleAppDef_oaModInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModInstTerm_getDefault,METH_VARARGS,oaDoubleAppDef_oaModInstTerm_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModInstTerm_set,METH_VARARGS,oaDoubleAppDef_oaModInstTerm_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModInstTerm_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModInstTerm_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstTerm_doc[] = 
"Class: oaDoubleAppDef_oaModInstTerm\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModInstTerm)\n"
"    Calls: (const oaDoubleAppDef_oaModInstTerm&)\n"
"    Signature: oaDoubleAppDef_oaModInstTerm||cref-oaDoubleAppDef_oaModInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModInstTerm",
    sizeof(PyoaDoubleAppDef_oaModInstTermObject),
    0,
    (destructor)oaDoubleAppDef_oaModInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstTerm_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::find(p1.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModInstTerm_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::get(p1.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModInstTermp result= (oaDoubleAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModInstTerm_FromoaDoubleAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModInstTerm_static_find,METH_VARARGS,oaDoubleAppDef_oaModInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModInstTerm_static_get,METH_VARARGS,oaDoubleAppDef_oaModInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModInstTerm",
           (PyObject*)(&PyoaDoubleAppDef_oaModInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModInstTerm_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModModuleInstHeaderObject* self = (PyoaDoubleAppDef_oaModModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModModuleInstHeader)
    {
        PyParamoaDoubleAppDef_oaModModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModModuleInstHeader, Choices are:\n"
        "    (oaDoubleAppDef_oaModModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModModuleInstHeader_tp_dealloc(PyoaDoubleAppDef_oaModModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModModuleInstHeader value;
    int convert_status=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaDoubleAppDef_oaModModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModModuleInstHeader v1;
    PyParamoaDoubleAppDef_oaModModuleInstHeader v2;
    int convert_status1=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModModuleInstHeader_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModModuleInstHeader_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModModuleInstHeader**) ((PyoaDoubleAppDef_oaModModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(oaDoubleAppDef_oaModModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModModuleInstHeader* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaModModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModModuleInstHeaderObject* self = (PyoaDoubleAppDef_oaModModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(oaDoubleAppDef_oaModModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaModModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModModuleInstHeaderObject* self = (PyoaDoubleAppDef_oaModModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModModuleInstHeader_get_doc[] = 
"Class: oaDoubleAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaModModuleInstHeader)\n"
"    Calls: oaDouble get(const oaModModuleInstHeader* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModModuleInstHeader,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModModuleInstHeaderObject* self=(PyoaDoubleAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModModuleInstHeader_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModModuleInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModModuleInstHeaderObject* self=(PyoaDoubleAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModModuleInstHeader_set_doc[] = 
"Class: oaDoubleAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaModModuleInstHeader,oaDouble)\n"
"    Calls: void set(oaModModuleInstHeader* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModModuleInstHeader,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModModuleInstHeaderObject* self=(PyoaDoubleAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModModuleInstHeader_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModModuleInstHeader_isNull_doc[] =
"Class: oaDoubleAppDef_oaModModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModModuleInstHeader_assign_doc[] = 
"Class: oaDoubleAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModModuleInstHeader data;
  int convert_status=PyoaDoubleAppDef_oaModModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModModuleInstHeader_get,METH_VARARGS,oaDoubleAppDef_oaModModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModModuleInstHeader_getDefault,METH_VARARGS,oaDoubleAppDef_oaModModuleInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModModuleInstHeader_set,METH_VARARGS,oaDoubleAppDef_oaModModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModModuleInstHeader_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModModuleInstHeader_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModModuleInstHeader_doc[] = 
"Class: oaDoubleAppDef_oaModModuleInstHeader\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModModuleInstHeader)\n"
"    Calls: (const oaDoubleAppDef_oaModModuleInstHeader&)\n"
"    Signature: oaDoubleAppDef_oaModModuleInstHeader||cref-oaDoubleAppDef_oaModModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModModuleInstHeader",
    sizeof(PyoaDoubleAppDef_oaModModuleInstHeaderObject),
    0,
    (destructor)oaDoubleAppDef_oaModModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModModuleInstHeader_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::find(p1.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModModuleInstHeader_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::get(p1.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModModuleInstHeaderp result= (oaDoubleAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModModuleInstHeader_FromoaDoubleAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModModuleInstHeader_static_find,METH_VARARGS,oaDoubleAppDef_oaModModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModModuleInstHeader_static_get,METH_VARARGS,oaDoubleAppDef_oaModModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModModuleInstHeader",
           (PyObject*)(&PyoaDoubleAppDef_oaModModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModModuleInstHeader_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModNetObject* self = (PyoaDoubleAppDef_oaModNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModNet)
    {
        PyParamoaDoubleAppDef_oaModNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModNet, Choices are:\n"
        "    (oaDoubleAppDef_oaModNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModNet_tp_dealloc(PyoaDoubleAppDef_oaModNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModNet_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModNet value;
    int convert_status=PyoaDoubleAppDef_oaModNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaDoubleAppDef_oaModNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModNet v1;
    PyParamoaDoubleAppDef_oaModNet v2;
    int convert_status1=PyoaDoubleAppDef_oaModNet_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModNet_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModNet_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModNet**) ((PyoaDoubleAppDef_oaModNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(oaDoubleAppDef_oaModNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModNet* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModNet_Type.tp_alloc(&PyoaDoubleAppDef_oaModNet_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModNetObject* self = (PyoaDoubleAppDef_oaModNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(oaDoubleAppDef_oaModNet* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModNet_Type.tp_alloc(&PyoaDoubleAppDef_oaModNet_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModNetObject* self = (PyoaDoubleAppDef_oaModNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModNet_get_doc[] = 
"Class: oaDoubleAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaModNet)\n"
"    Calls: oaDouble get(const oaModNet* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModNet,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModNet data;
    int convert_status=PyoaDoubleAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModNetObject* self=(PyoaDoubleAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModNet_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModNet data;
    int convert_status=PyoaDoubleAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModNetObject* self=(PyoaDoubleAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModNet_set_doc[] = 
"Class: oaDoubleAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaModNet,oaDouble)\n"
"    Calls: void set(oaModNet* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModNet,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModNet data;
    int convert_status=PyoaDoubleAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModNetObject* self=(PyoaDoubleAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModNet_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModNet_isNull_doc[] =
"Class: oaDoubleAppDef_oaModNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModNet data;
    int convert_status=PyoaDoubleAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModNet_assign_doc[] = 
"Class: oaDoubleAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModNet data;
  int convert_status=PyoaDoubleAppDef_oaModNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModNet_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModNet_get,METH_VARARGS,oaDoubleAppDef_oaModNet_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModNet_getDefault,METH_VARARGS,oaDoubleAppDef_oaModNet_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModNet_set,METH_VARARGS,oaDoubleAppDef_oaModNet_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModNet_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModNet_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModNet_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModNet_doc[] = 
"Class: oaDoubleAppDef_oaModNet\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModNet)\n"
"    Calls: (const oaDoubleAppDef_oaModNet&)\n"
"    Signature: oaDoubleAppDef_oaModNet||cref-oaDoubleAppDef_oaModNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModNet",
    sizeof(PyoaDoubleAppDef_oaModNetObject),
    0,
    (destructor)oaDoubleAppDef_oaModNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModNet_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModNet_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModNet|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::find(p1.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModNet_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModNet* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModNet* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::get(p1.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModNetp result= (oaDoubleAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModNet_FromoaDoubleAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModNet_static_find,METH_VARARGS,oaDoubleAppDef_oaModNet_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModNet_static_get,METH_VARARGS,oaDoubleAppDef_oaModNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModNet_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModNet",
           (PyObject*)(&PyoaDoubleAppDef_oaModNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModNet_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModTermObject* self = (PyoaDoubleAppDef_oaModTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModTerm)
    {
        PyParamoaDoubleAppDef_oaModTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModTerm, Choices are:\n"
        "    (oaDoubleAppDef_oaModTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModTerm_tp_dealloc(PyoaDoubleAppDef_oaModTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModTerm_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModTerm value;
    int convert_status=PyoaDoubleAppDef_oaModTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaModTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModTerm v1;
    PyParamoaDoubleAppDef_oaModTerm v2;
    int convert_status1=PyoaDoubleAppDef_oaModTerm_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModTerm_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModTerm_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModTerm**) ((PyoaDoubleAppDef_oaModTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(oaDoubleAppDef_oaModTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModTerm* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaModTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModTermObject* self = (PyoaDoubleAppDef_oaModTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(oaDoubleAppDef_oaModTerm* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaModTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModTermObject* self = (PyoaDoubleAppDef_oaModTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModTerm_get_doc[] = 
"Class: oaDoubleAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaModTerm)\n"
"    Calls: oaDouble get(const oaModTerm* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModTerm,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModTerm data;
    int convert_status=PyoaDoubleAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModTermObject* self=(PyoaDoubleAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModTerm_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModTerm data;
    int convert_status=PyoaDoubleAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModTermObject* self=(PyoaDoubleAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModTerm_set_doc[] = 
"Class: oaDoubleAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaModTerm,oaDouble)\n"
"    Calls: void set(oaModTerm* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModTerm,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModTerm data;
    int convert_status=PyoaDoubleAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModTermObject* self=(PyoaDoubleAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModTerm_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModTerm_isNull_doc[] =
"Class: oaDoubleAppDef_oaModTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModTerm data;
    int convert_status=PyoaDoubleAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModTerm_assign_doc[] = 
"Class: oaDoubleAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModTerm data;
  int convert_status=PyoaDoubleAppDef_oaModTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModTerm_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModTerm_get,METH_VARARGS,oaDoubleAppDef_oaModTerm_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModTerm_getDefault,METH_VARARGS,oaDoubleAppDef_oaModTerm_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModTerm_set,METH_VARARGS,oaDoubleAppDef_oaModTerm_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModTerm_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModTerm_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModTerm_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModTerm_doc[] = 
"Class: oaDoubleAppDef_oaModTerm\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModTerm)\n"
"    Calls: (const oaDoubleAppDef_oaModTerm&)\n"
"    Signature: oaDoubleAppDef_oaModTerm||cref-oaDoubleAppDef_oaModTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModTerm",
    sizeof(PyoaDoubleAppDef_oaModTermObject),
    0,
    (destructor)oaDoubleAppDef_oaModTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModTerm_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::find(p1.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModTerm_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModTerm* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModTerm* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::get(p1.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModTermp result= (oaDoubleAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModTerm_FromoaDoubleAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModTerm_static_find,METH_VARARGS,oaDoubleAppDef_oaModTerm_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModTerm_static_get,METH_VARARGS,oaDoubleAppDef_oaModTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModTerm",
           (PyObject*)(&PyoaDoubleAppDef_oaModTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModTerm_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModVectorInstDefObject* self = (PyoaDoubleAppDef_oaModVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModVectorInstDef)
    {
        PyParamoaDoubleAppDef_oaModVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModVectorInstDef, Choices are:\n"
        "    (oaDoubleAppDef_oaModVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModVectorInstDef_tp_dealloc(PyoaDoubleAppDef_oaModVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModVectorInstDef value;
    int convert_status=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaDoubleAppDef_oaModVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModVectorInstDef v1;
    PyParamoaDoubleAppDef_oaModVectorInstDef v2;
    int convert_status1=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModVectorInstDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModVectorInstDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModVectorInstDef**) ((PyoaDoubleAppDef_oaModVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(oaDoubleAppDef_oaModVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModVectorInstDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModVectorInstDefObject* self = (PyoaDoubleAppDef_oaModVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(oaDoubleAppDef_oaModVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaDoubleAppDef_oaModVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModVectorInstDefObject* self = (PyoaDoubleAppDef_oaModVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModVectorInstDef_get_doc[] = 
"Class: oaDoubleAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaModVectorInstDef)\n"
"    Calls: oaDouble get(const oaModVectorInstDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModVectorInstDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModVectorInstDefObject* self=(PyoaDoubleAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModVectorInstDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModVectorInstDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModVectorInstDefObject* self=(PyoaDoubleAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModVectorInstDef_set_doc[] = 
"Class: oaDoubleAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaModVectorInstDef,oaDouble)\n"
"    Calls: void set(oaModVectorInstDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModVectorInstDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModVectorInstDefObject* self=(PyoaDoubleAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModVectorInstDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModVectorInstDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaModVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModVectorInstDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModVectorInstDef data;
  int convert_status=PyoaDoubleAppDef_oaModVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModVectorInstDef_get,METH_VARARGS,oaDoubleAppDef_oaModVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModVectorInstDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaModVectorInstDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModVectorInstDef_set,METH_VARARGS,oaDoubleAppDef_oaModVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModVectorInstDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModVectorInstDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModVectorInstDef_doc[] = 
"Class: oaDoubleAppDef_oaModVectorInstDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModVectorInstDef)\n"
"    Calls: (const oaDoubleAppDef_oaModVectorInstDef&)\n"
"    Signature: oaDoubleAppDef_oaModVectorInstDef||cref-oaDoubleAppDef_oaModVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModVectorInstDef",
    sizeof(PyoaDoubleAppDef_oaModVectorInstDefObject),
    0,
    (destructor)oaDoubleAppDef_oaModVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModVectorInstDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModVectorInstDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModVectorInstDefp result= (oaDoubleAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModVectorInstDef_FromoaDoubleAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModVectorInstDef_static_find,METH_VARARGS,oaDoubleAppDef_oaModVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModVectorInstDef_static_get,METH_VARARGS,oaDoubleAppDef_oaModVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModVectorInstDef",
           (PyObject*)(&PyoaDoubleAppDef_oaModVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModVectorInstDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaModule
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModule_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaModule_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaModuleObject* self = (PyoaDoubleAppDef_oaModuleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaModule)
    {
        PyParamoaDoubleAppDef_oaModule p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaModule_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaModule, Choices are:\n"
        "    (oaDoubleAppDef_oaModule)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaModule_tp_dealloc(PyoaDoubleAppDef_oaModuleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaModule_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaModule value;
    int convert_status=PyoaDoubleAppDef_oaModule_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaDoubleAppDef_oaModule::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaModule_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaModule v1;
    PyParamoaDoubleAppDef_oaModule v2;
    int convert_status1=PyoaDoubleAppDef_oaModule_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaModule_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaModule_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaModule* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaModule_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaModule**) ((PyoaDoubleAppDef_oaModuleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaModule Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(oaDoubleAppDef_oaModule** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaModule* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaModule_Type.tp_alloc(&PyoaDoubleAppDef_oaModule_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaModuleObject* self = (PyoaDoubleAppDef_oaModuleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(oaDoubleAppDef_oaModule* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaModule_Type.tp_alloc(&PyoaDoubleAppDef_oaModule_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaModuleObject* self = (PyoaDoubleAppDef_oaModuleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModule_get_doc[] = 
"Class: oaDoubleAppDef_oaModule, Function: get\n"
"  Paramegers: (oaModule)\n"
"    Calls: oaDouble get(const oaModule* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaModule,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaModule_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModule data;
    int convert_status=PyoaDoubleAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModuleObject* self=(PyoaDoubleAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModule_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModule_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaModule, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaModule_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModule data;
    int convert_status=PyoaDoubleAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModuleObject* self=(PyoaDoubleAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModule_set_doc[] = 
"Class: oaDoubleAppDef_oaModule, Function: set\n"
"  Paramegers: (oaModule,oaDouble)\n"
"    Calls: void set(oaModule* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaModule,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaModule_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaModule data;
    int convert_status=PyoaDoubleAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaModuleObject* self=(PyoaDoubleAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModule_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModule_isNull_doc[] =
"Class: oaDoubleAppDef_oaModule, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaModule_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaModule data;
    int convert_status=PyoaDoubleAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaModule_assign_doc[] = 
"Class: oaDoubleAppDef_oaModule, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaModule_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaModule data;
  int convert_status=PyoaDoubleAppDef_oaModule_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaModule p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaModule_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaModule_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaModule_get,METH_VARARGS,oaDoubleAppDef_oaModule_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaModule_getDefault,METH_VARARGS,oaDoubleAppDef_oaModule_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaModule_set,METH_VARARGS,oaDoubleAppDef_oaModule_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaModule_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaModule_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaModule_tp_assign,METH_VARARGS,oaDoubleAppDef_oaModule_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModule_doc[] = 
"Class: oaDoubleAppDef_oaModule\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaModule)\n"
"    Calls: (const oaDoubleAppDef_oaModule&)\n"
"    Signature: oaDoubleAppDef_oaModule||cref-oaDoubleAppDef_oaModule,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaModule_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaModule",
    sizeof(PyoaDoubleAppDef_oaModuleObject),
    0,
    (destructor)oaDoubleAppDef_oaModule_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaModule_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaModule_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaModule_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaModule_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaModule_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModule_static_find_doc[] = 
"Class: oaDoubleAppDef_oaModule, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModule* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModule|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModule* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaModule_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::find(p1.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModule, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaModule_static_get_doc[] = 
"Class: oaDoubleAppDef_oaModule, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaModule* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModule|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModule* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModule|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModule* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModule|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaModule_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::get(p1.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaModulep result= (oaDoubleAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaModule_FromoaDoubleAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaModule, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaModule_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaModule_static_find,METH_VARARGS,oaDoubleAppDef_oaModule_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaModule_static_get,METH_VARARGS,oaDoubleAppDef_oaModule_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaModule_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaModule_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaModule\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaModule",
           (PyObject*)(&PyoaDoubleAppDef_oaModule_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaModule\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaModule_Type.tp_dict;
    for(method=oaDoubleAppDef_oaModule_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaNetObject* self = (PyoaDoubleAppDef_oaNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaNet)
    {
        PyParamoaDoubleAppDef_oaNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaNet, Choices are:\n"
        "    (oaDoubleAppDef_oaNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaNet_tp_dealloc(PyoaDoubleAppDef_oaNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaNet_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaNet value;
    int convert_status=PyoaDoubleAppDef_oaNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaDoubleAppDef_oaNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaNet v1;
    PyParamoaDoubleAppDef_oaNet v2;
    int convert_status1=PyoaDoubleAppDef_oaNet_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaNet_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaNet_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaNet**) ((PyoaDoubleAppDef_oaNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(oaDoubleAppDef_oaNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaNet* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaNet_Type.tp_alloc(&PyoaDoubleAppDef_oaNet_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaNetObject* self = (PyoaDoubleAppDef_oaNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(oaDoubleAppDef_oaNet* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaNet_Type.tp_alloc(&PyoaDoubleAppDef_oaNet_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaNetObject* self = (PyoaDoubleAppDef_oaNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNet_get_doc[] = 
"Class: oaDoubleAppDef_oaNet, Function: get\n"
"  Paramegers: (oaNet)\n"
"    Calls: oaDouble get(const oaNet* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaNet,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaNet data;
    int convert_status=PyoaDoubleAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaNetObject* self=(PyoaDoubleAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNet_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaNet data;
    int convert_status=PyoaDoubleAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaNetObject* self=(PyoaDoubleAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNet_set_doc[] = 
"Class: oaDoubleAppDef_oaNet, Function: set\n"
"  Paramegers: (oaNet,oaDouble)\n"
"    Calls: void set(oaNet* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaNet,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaNet data;
    int convert_status=PyoaDoubleAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaNetObject* self=(PyoaDoubleAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNet_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNet_isNull_doc[] =
"Class: oaDoubleAppDef_oaNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaNet data;
    int convert_status=PyoaDoubleAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaNet_assign_doc[] = 
"Class: oaDoubleAppDef_oaNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaNet data;
  int convert_status=PyoaDoubleAppDef_oaNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaNet_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaNet_get,METH_VARARGS,oaDoubleAppDef_oaNet_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaNet_getDefault,METH_VARARGS,oaDoubleAppDef_oaNet_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaNet_set,METH_VARARGS,oaDoubleAppDef_oaNet_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaNet_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaNet_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaNet_tp_assign,METH_VARARGS,oaDoubleAppDef_oaNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNet_doc[] = 
"Class: oaDoubleAppDef_oaNet\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaNet)\n"
"    Calls: (const oaDoubleAppDef_oaNet&)\n"
"    Signature: oaDoubleAppDef_oaNet||cref-oaDoubleAppDef_oaNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaNet",
    sizeof(PyoaDoubleAppDef_oaNetObject),
    0,
    (destructor)oaDoubleAppDef_oaNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaNet_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNet_static_find_doc[] = 
"Class: oaDoubleAppDef_oaNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaNet|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::find(p1.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNet_static_get_doc[] = 
"Class: oaDoubleAppDef_oaNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaNet* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaNet* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::get(p1.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNetp result= (oaDoubleAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaNet_FromoaDoubleAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaNet_static_find,METH_VARARGS,oaDoubleAppDef_oaNet_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaNet_static_get,METH_VARARGS,oaDoubleAppDef_oaNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaNet_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaNet",
           (PyObject*)(&PyoaDoubleAppDef_oaNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaNet_Type.tp_dict;
    for(method=oaDoubleAppDef_oaNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaNode
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaNode_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaNode_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaNodeObject* self = (PyoaDoubleAppDef_oaNodeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaNode)
    {
        PyParamoaDoubleAppDef_oaNode p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaNode_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaNode, Choices are:\n"
        "    (oaDoubleAppDef_oaNode)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaNode_tp_dealloc(PyoaDoubleAppDef_oaNodeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaNode_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaNode value;
    int convert_status=PyoaDoubleAppDef_oaNode_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaDoubleAppDef_oaNode::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaNode_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaNode v1;
    PyParamoaDoubleAppDef_oaNode v2;
    int convert_status1=PyoaDoubleAppDef_oaNode_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaNode_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaNode_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaNode* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaNode_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaNode**) ((PyoaDoubleAppDef_oaNodeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaNode Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(oaDoubleAppDef_oaNode** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaNode* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaNode_Type.tp_alloc(&PyoaDoubleAppDef_oaNode_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaNodeObject* self = (PyoaDoubleAppDef_oaNodeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(oaDoubleAppDef_oaNode* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaNode_Type.tp_alloc(&PyoaDoubleAppDef_oaNode_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaNodeObject* self = (PyoaDoubleAppDef_oaNodeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNode_get_doc[] = 
"Class: oaDoubleAppDef_oaNode, Function: get\n"
"  Paramegers: (oaNode)\n"
"    Calls: oaDouble get(const oaNode* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaNode,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaNode_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaNode data;
    int convert_status=PyoaDoubleAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaNodeObject* self=(PyoaDoubleAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNode_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNode_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaNode, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaNode_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaNode data;
    int convert_status=PyoaDoubleAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaNodeObject* self=(PyoaDoubleAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNode_set_doc[] = 
"Class: oaDoubleAppDef_oaNode, Function: set\n"
"  Paramegers: (oaNode,oaDouble)\n"
"    Calls: void set(oaNode* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaNode,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaNode_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaNode data;
    int convert_status=PyoaDoubleAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaNodeObject* self=(PyoaDoubleAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNode_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNode_isNull_doc[] =
"Class: oaDoubleAppDef_oaNode, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaNode_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaNode data;
    int convert_status=PyoaDoubleAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaNode_assign_doc[] = 
"Class: oaDoubleAppDef_oaNode, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaNode_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaNode data;
  int convert_status=PyoaDoubleAppDef_oaNode_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaNode p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaNode_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaNode_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaNode_get,METH_VARARGS,oaDoubleAppDef_oaNode_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaNode_getDefault,METH_VARARGS,oaDoubleAppDef_oaNode_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaNode_set,METH_VARARGS,oaDoubleAppDef_oaNode_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaNode_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaNode_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaNode_tp_assign,METH_VARARGS,oaDoubleAppDef_oaNode_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNode_doc[] = 
"Class: oaDoubleAppDef_oaNode\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaNode)\n"
"    Calls: (const oaDoubleAppDef_oaNode&)\n"
"    Signature: oaDoubleAppDef_oaNode||cref-oaDoubleAppDef_oaNode,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaNode_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaNode",
    sizeof(PyoaDoubleAppDef_oaNodeObject),
    0,
    (destructor)oaDoubleAppDef_oaNode_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaNode_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaNode_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaNode_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaNode_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaNode_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNode_static_find_doc[] = 
"Class: oaDoubleAppDef_oaNode, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaNode* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaNode|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaNode* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaNode_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::find(p1.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaNode, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaNode_static_get_doc[] = 
"Class: oaDoubleAppDef_oaNode, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaNode* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNode|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaNode* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNode|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaNode* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNode|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaNode_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::get(p1.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaNodep result= (oaDoubleAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaNode_FromoaDoubleAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaNode, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaNode_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaNode_static_find,METH_VARARGS,oaDoubleAppDef_oaNode_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaNode_static_get,METH_VARARGS,oaDoubleAppDef_oaNode_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaNode_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaNode_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaNode\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaNode",
           (PyObject*)(&PyoaDoubleAppDef_oaNode_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaNode\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaNode_Type.tp_dict;
    for(method=oaDoubleAppDef_oaNode_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccAssignmentObject* self = (PyoaDoubleAppDef_oaOccAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccAssignment)
    {
        PyParamoaDoubleAppDef_oaOccAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccAssignment, Choices are:\n"
        "    (oaDoubleAppDef_oaOccAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccAssignment_tp_dealloc(PyoaDoubleAppDef_oaOccAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccAssignment_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccAssignment value;
    int convert_status=PyoaDoubleAppDef_oaOccAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaOccAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccAssignment v1;
    PyParamoaDoubleAppDef_oaOccAssignment v2;
    int convert_status1=PyoaDoubleAppDef_oaOccAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccAssignment_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccAssignment_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccAssignment**) ((PyoaDoubleAppDef_oaOccAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(oaDoubleAppDef_oaOccAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccAssignment* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccAssignment_Type.tp_alloc(&PyoaDoubleAppDef_oaOccAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccAssignmentObject* self = (PyoaDoubleAppDef_oaOccAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(oaDoubleAppDef_oaOccAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccAssignment_Type.tp_alloc(&PyoaDoubleAppDef_oaOccAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccAssignmentObject* self = (PyoaDoubleAppDef_oaOccAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccAssignment_get_doc[] = 
"Class: oaDoubleAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaOccAssignment)\n"
"    Calls: oaDouble get(const oaOccAssignment* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccAssignment,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccAssignment data;
    int convert_status=PyoaDoubleAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccAssignmentObject* self=(PyoaDoubleAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccAssignment_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccAssignment, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccAssignment data;
    int convert_status=PyoaDoubleAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccAssignmentObject* self=(PyoaDoubleAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccAssignment_set_doc[] = 
"Class: oaDoubleAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaOccAssignment,oaDouble)\n"
"    Calls: void set(oaOccAssignment* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccAssignment,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccAssignment data;
    int convert_status=PyoaDoubleAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccAssignmentObject* self=(PyoaDoubleAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccAssignment_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccAssignment_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccAssignment data;
    int convert_status=PyoaDoubleAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccAssignment_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccAssignment data;
  int convert_status=PyoaDoubleAppDef_oaOccAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccAssignment_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccAssignment_get,METH_VARARGS,oaDoubleAppDef_oaOccAssignment_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccAssignment_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccAssignment_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccAssignment_set,METH_VARARGS,oaDoubleAppDef_oaOccAssignment_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccAssignment_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccAssignment_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccAssignment_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccAssignment_doc[] = 
"Class: oaDoubleAppDef_oaOccAssignment\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccAssignment)\n"
"    Calls: (const oaDoubleAppDef_oaOccAssignment&)\n"
"    Signature: oaDoubleAppDef_oaOccAssignment||cref-oaDoubleAppDef_oaOccAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccAssignment",
    sizeof(PyoaDoubleAppDef_oaOccAssignmentObject),
    0,
    (destructor)oaDoubleAppDef_oaOccAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccAssignment_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccAssignment_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccAssignmentp result= (oaDoubleAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccAssignment_FromoaDoubleAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccAssignment_static_find,METH_VARARGS,oaDoubleAppDef_oaOccAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccAssignment_static_get,METH_VARARGS,oaDoubleAppDef_oaOccAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccAssignment",
           (PyObject*)(&PyoaDoubleAppDef_oaOccAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccAssignment_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccBusNetDefObject* self = (PyoaDoubleAppDef_oaOccBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccBusNetDef)
    {
        PyParamoaDoubleAppDef_oaOccBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccBusNetDef, Choices are:\n"
        "    (oaDoubleAppDef_oaOccBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccBusNetDef_tp_dealloc(PyoaDoubleAppDef_oaOccBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccBusNetDef value;
    int convert_status=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaDoubleAppDef_oaOccBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccBusNetDef v1;
    PyParamoaDoubleAppDef_oaOccBusNetDef v2;
    int convert_status1=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccBusNetDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccBusNetDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccBusNetDef**) ((PyoaDoubleAppDef_oaOccBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(oaDoubleAppDef_oaOccBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccBusNetDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccBusNetDefObject* self = (PyoaDoubleAppDef_oaOccBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(oaDoubleAppDef_oaOccBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccBusNetDefObject* self = (PyoaDoubleAppDef_oaOccBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusNetDef_get_doc[] = 
"Class: oaDoubleAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaOccBusNetDef)\n"
"    Calls: oaDouble get(const oaOccBusNetDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccBusNetDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccBusNetDefObject* self=(PyoaDoubleAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusNetDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccBusNetDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccBusNetDefObject* self=(PyoaDoubleAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusNetDef_set_doc[] = 
"Class: oaDoubleAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaOccBusNetDef,oaDouble)\n"
"    Calls: void set(oaOccBusNetDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccBusNetDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccBusNetDefObject* self=(PyoaDoubleAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusNetDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusNetDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccBusNetDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccBusNetDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccBusNetDef data;
  int convert_status=PyoaDoubleAppDef_oaOccBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccBusNetDef_get,METH_VARARGS,oaDoubleAppDef_oaOccBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccBusNetDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccBusNetDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccBusNetDef_set,METH_VARARGS,oaDoubleAppDef_oaOccBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccBusNetDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccBusNetDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusNetDef_doc[] = 
"Class: oaDoubleAppDef_oaOccBusNetDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccBusNetDef)\n"
"    Calls: (const oaDoubleAppDef_oaOccBusNetDef&)\n"
"    Signature: oaDoubleAppDef_oaOccBusNetDef||cref-oaDoubleAppDef_oaOccBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccBusNetDef",
    sizeof(PyoaDoubleAppDef_oaOccBusNetDefObject),
    0,
    (destructor)oaDoubleAppDef_oaOccBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusNetDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusNetDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusNetDefp result= (oaDoubleAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccBusNetDef_FromoaDoubleAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccBusNetDef_static_find,METH_VARARGS,oaDoubleAppDef_oaOccBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccBusNetDef_static_get,METH_VARARGS,oaDoubleAppDef_oaOccBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccBusNetDef",
           (PyObject*)(&PyoaDoubleAppDef_oaOccBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccBusNetDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccBusTermDefObject* self = (PyoaDoubleAppDef_oaOccBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccBusTermDef)
    {
        PyParamoaDoubleAppDef_oaOccBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccBusTermDef, Choices are:\n"
        "    (oaDoubleAppDef_oaOccBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccBusTermDef_tp_dealloc(PyoaDoubleAppDef_oaOccBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccBusTermDef value;
    int convert_status=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaOccBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccBusTermDef v1;
    PyParamoaDoubleAppDef_oaOccBusTermDef v2;
    int convert_status1=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccBusTermDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccBusTermDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccBusTermDef**) ((PyoaDoubleAppDef_oaOccBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(oaDoubleAppDef_oaOccBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccBusTermDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccBusTermDefObject* self = (PyoaDoubleAppDef_oaOccBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(oaDoubleAppDef_oaOccBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccBusTermDefObject* self = (PyoaDoubleAppDef_oaOccBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusTermDef_get_doc[] = 
"Class: oaDoubleAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaOccBusTermDef)\n"
"    Calls: oaDouble get(const oaOccBusTermDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccBusTermDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccBusTermDefObject* self=(PyoaDoubleAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusTermDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccBusTermDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccBusTermDefObject* self=(PyoaDoubleAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusTermDef_set_doc[] = 
"Class: oaDoubleAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaOccBusTermDef,oaDouble)\n"
"    Calls: void set(oaOccBusTermDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccBusTermDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccBusTermDefObject* self=(PyoaDoubleAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusTermDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusTermDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccBusTermDef data;
    int convert_status=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccBusTermDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccBusTermDef data;
  int convert_status=PyoaDoubleAppDef_oaOccBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccBusTermDef_get,METH_VARARGS,oaDoubleAppDef_oaOccBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccBusTermDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccBusTermDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccBusTermDef_set,METH_VARARGS,oaDoubleAppDef_oaOccBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccBusTermDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccBusTermDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusTermDef_doc[] = 
"Class: oaDoubleAppDef_oaOccBusTermDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccBusTermDef)\n"
"    Calls: (const oaDoubleAppDef_oaOccBusTermDef&)\n"
"    Signature: oaDoubleAppDef_oaOccBusTermDef||cref-oaDoubleAppDef_oaOccBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccBusTermDef",
    sizeof(PyoaDoubleAppDef_oaOccBusTermDefObject),
    0,
    (destructor)oaDoubleAppDef_oaOccBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusTermDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccBusTermDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccBusTermDefp result= (oaDoubleAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccBusTermDef_FromoaDoubleAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccBusTermDef_static_find,METH_VARARGS,oaDoubleAppDef_oaOccBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccBusTermDef_static_get,METH_VARARGS,oaDoubleAppDef_oaOccBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccBusTermDef",
           (PyObject*)(&PyoaDoubleAppDef_oaOccBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccBusTermDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccConnectDefObject* self = (PyoaDoubleAppDef_oaOccConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccConnectDef)
    {
        PyParamoaDoubleAppDef_oaOccConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccConnectDef, Choices are:\n"
        "    (oaDoubleAppDef_oaOccConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccConnectDef_tp_dealloc(PyoaDoubleAppDef_oaOccConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccConnectDef value;
    int convert_status=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaOccConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccConnectDef v1;
    PyParamoaDoubleAppDef_oaOccConnectDef v2;
    int convert_status1=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccConnectDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccConnectDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccConnectDef**) ((PyoaDoubleAppDef_oaOccConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(oaDoubleAppDef_oaOccConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccConnectDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccConnectDefObject* self = (PyoaDoubleAppDef_oaOccConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(oaDoubleAppDef_oaOccConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccConnectDefObject* self = (PyoaDoubleAppDef_oaOccConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccConnectDef_get_doc[] = 
"Class: oaDoubleAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaOccConnectDef)\n"
"    Calls: oaDouble get(const oaOccConnectDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccConnectDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccConnectDefObject* self=(PyoaDoubleAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccConnectDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccConnectDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccConnectDefObject* self=(PyoaDoubleAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccConnectDef_set_doc[] = 
"Class: oaDoubleAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaOccConnectDef,oaDouble)\n"
"    Calls: void set(oaOccConnectDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccConnectDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccConnectDefObject* self=(PyoaDoubleAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccConnectDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccConnectDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccConnectDef data;
    int convert_status=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccConnectDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccConnectDef data;
  int convert_status=PyoaDoubleAppDef_oaOccConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccConnectDef_get,METH_VARARGS,oaDoubleAppDef_oaOccConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccConnectDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccConnectDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccConnectDef_set,METH_VARARGS,oaDoubleAppDef_oaOccConnectDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccConnectDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccConnectDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccConnectDef_doc[] = 
"Class: oaDoubleAppDef_oaOccConnectDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccConnectDef)\n"
"    Calls: (const oaDoubleAppDef_oaOccConnectDef&)\n"
"    Signature: oaDoubleAppDef_oaOccConnectDef||cref-oaDoubleAppDef_oaOccConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccConnectDef",
    sizeof(PyoaDoubleAppDef_oaOccConnectDefObject),
    0,
    (destructor)oaDoubleAppDef_oaOccConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccConnectDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccConnectDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccConnectDefp result= (oaDoubleAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccConnectDef_FromoaDoubleAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccConnectDef_static_find,METH_VARARGS,oaDoubleAppDef_oaOccConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccConnectDef_static_get,METH_VARARGS,oaDoubleAppDef_oaOccConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccConnectDef",
           (PyObject*)(&PyoaDoubleAppDef_oaOccConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccConnectDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccInstObject* self = (PyoaDoubleAppDef_oaOccInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccInst)
    {
        PyParamoaDoubleAppDef_oaOccInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccInst, Choices are:\n"
        "    (oaDoubleAppDef_oaOccInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccInst_tp_dealloc(PyoaDoubleAppDef_oaOccInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccInst_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccInst value;
    int convert_status=PyoaDoubleAppDef_oaOccInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaOccInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccInst v1;
    PyParamoaDoubleAppDef_oaOccInst v2;
    int convert_status1=PyoaDoubleAppDef_oaOccInst_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccInst_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccInst_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccInst**) ((PyoaDoubleAppDef_oaOccInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(oaDoubleAppDef_oaOccInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccInst* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccInst_Type.tp_alloc(&PyoaDoubleAppDef_oaOccInst_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccInstObject* self = (PyoaDoubleAppDef_oaOccInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(oaDoubleAppDef_oaOccInst* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccInst_Type.tp_alloc(&PyoaDoubleAppDef_oaOccInst_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccInstObject* self = (PyoaDoubleAppDef_oaOccInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInst_get_doc[] = 
"Class: oaDoubleAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaOccInst)\n"
"    Calls: oaDouble get(const oaOccInst* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccInst,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInst data;
    int convert_status=PyoaDoubleAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstObject* self=(PyoaDoubleAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInst_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInst data;
    int convert_status=PyoaDoubleAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstObject* self=(PyoaDoubleAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInst_set_doc[] = 
"Class: oaDoubleAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaOccInst,oaDouble)\n"
"    Calls: void set(oaOccInst* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccInst,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInst data;
    int convert_status=PyoaDoubleAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstObject* self=(PyoaDoubleAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInst_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInst_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccInst data;
    int convert_status=PyoaDoubleAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccInst_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccInst data;
  int convert_status=PyoaDoubleAppDef_oaOccInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccInst_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccInst_get,METH_VARARGS,oaDoubleAppDef_oaOccInst_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccInst_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccInst_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccInst_set,METH_VARARGS,oaDoubleAppDef_oaOccInst_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccInst_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccInst_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccInst_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInst_doc[] = 
"Class: oaDoubleAppDef_oaOccInst\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccInst)\n"
"    Calls: (const oaDoubleAppDef_oaOccInst&)\n"
"    Signature: oaDoubleAppDef_oaOccInst||cref-oaDoubleAppDef_oaOccInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccInst",
    sizeof(PyoaDoubleAppDef_oaOccInstObject),
    0,
    (destructor)oaDoubleAppDef_oaOccInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccInst_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInst_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInst_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccInst* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccInst* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstp result= (oaDoubleAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccInst_FromoaDoubleAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccInst_static_find,METH_VARARGS,oaDoubleAppDef_oaOccInst_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccInst_static_get,METH_VARARGS,oaDoubleAppDef_oaOccInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccInst_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccInst",
           (PyObject*)(&PyoaDoubleAppDef_oaOccInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccInst_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccInstHeaderObject* self = (PyoaDoubleAppDef_oaOccInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccInstHeader)
    {
        PyParamoaDoubleAppDef_oaOccInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccInstHeader, Choices are:\n"
        "    (oaDoubleAppDef_oaOccInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccInstHeader_tp_dealloc(PyoaDoubleAppDef_oaOccInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccInstHeader value;
    int convert_status=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaOccInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccInstHeader v1;
    PyParamoaDoubleAppDef_oaOccInstHeader v2;
    int convert_status1=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccInstHeader_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccInstHeader_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccInstHeader**) ((PyoaDoubleAppDef_oaOccInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(oaDoubleAppDef_oaOccInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccInstHeader* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaOccInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccInstHeaderObject* self = (PyoaDoubleAppDef_oaOccInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(oaDoubleAppDef_oaOccInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaOccInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccInstHeaderObject* self = (PyoaDoubleAppDef_oaOccInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstHeader_get_doc[] = 
"Class: oaDoubleAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaOccInstHeader)\n"
"    Calls: oaDouble get(const oaOccInstHeader* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccInstHeader,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstHeaderObject* self=(PyoaDoubleAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstHeader_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstHeaderObject* self=(PyoaDoubleAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstHeader_set_doc[] = 
"Class: oaDoubleAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaOccInstHeader,oaDouble)\n"
"    Calls: void set(oaOccInstHeader* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccInstHeader,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstHeaderObject* self=(PyoaDoubleAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstHeader_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstHeader_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccInstHeader_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccInstHeader data;
  int convert_status=PyoaDoubleAppDef_oaOccInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccInstHeader_get,METH_VARARGS,oaDoubleAppDef_oaOccInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccInstHeader_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccInstHeader_set,METH_VARARGS,oaDoubleAppDef_oaOccInstHeader_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccInstHeader_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccInstHeader_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstHeader_doc[] = 
"Class: oaDoubleAppDef_oaOccInstHeader\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccInstHeader)\n"
"    Calls: (const oaDoubleAppDef_oaOccInstHeader&)\n"
"    Signature: oaDoubleAppDef_oaOccInstHeader||cref-oaDoubleAppDef_oaOccInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccInstHeader",
    sizeof(PyoaDoubleAppDef_oaOccInstHeaderObject),
    0,
    (destructor)oaDoubleAppDef_oaOccInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstHeader_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstHeader_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstHeaderp result= (oaDoubleAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccInstHeader_FromoaDoubleAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccInstHeader_static_find,METH_VARARGS,oaDoubleAppDef_oaOccInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccInstHeader_static_get,METH_VARARGS,oaDoubleAppDef_oaOccInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccInstHeader",
           (PyObject*)(&PyoaDoubleAppDef_oaOccInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccInstHeader_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccInstTermObject* self = (PyoaDoubleAppDef_oaOccInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccInstTerm)
    {
        PyParamoaDoubleAppDef_oaOccInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccInstTerm, Choices are:\n"
        "    (oaDoubleAppDef_oaOccInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccInstTerm_tp_dealloc(PyoaDoubleAppDef_oaOccInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccInstTerm value;
    int convert_status=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaDoubleAppDef_oaOccInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccInstTerm v1;
    PyParamoaDoubleAppDef_oaOccInstTerm v2;
    int convert_status1=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccInstTerm_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccInstTerm_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccInstTerm**) ((PyoaDoubleAppDef_oaOccInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(oaDoubleAppDef_oaOccInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccInstTerm* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaOccInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccInstTermObject* self = (PyoaDoubleAppDef_oaOccInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(oaDoubleAppDef_oaOccInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaOccInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccInstTermObject* self = (PyoaDoubleAppDef_oaOccInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstTerm_get_doc[] = 
"Class: oaDoubleAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaOccInstTerm)\n"
"    Calls: oaDouble get(const oaOccInstTerm* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccInstTerm,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstTermObject* self=(PyoaDoubleAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstTerm_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccInstTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstTermObject* self=(PyoaDoubleAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstTerm_set_doc[] = 
"Class: oaDoubleAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaOccInstTerm,oaDouble)\n"
"    Calls: void set(oaOccInstTerm* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccInstTerm,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccInstTermObject* self=(PyoaDoubleAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstTerm_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstTerm_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccInstTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccInstTerm_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccInstTerm data;
  int convert_status=PyoaDoubleAppDef_oaOccInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccInstTerm_get,METH_VARARGS,oaDoubleAppDef_oaOccInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccInstTerm_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccInstTerm_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccInstTerm_set,METH_VARARGS,oaDoubleAppDef_oaOccInstTerm_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccInstTerm_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccInstTerm_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstTerm_doc[] = 
"Class: oaDoubleAppDef_oaOccInstTerm\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccInstTerm)\n"
"    Calls: (const oaDoubleAppDef_oaOccInstTerm&)\n"
"    Signature: oaDoubleAppDef_oaOccInstTerm||cref-oaDoubleAppDef_oaOccInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccInstTerm",
    sizeof(PyoaDoubleAppDef_oaOccInstTermObject),
    0,
    (destructor)oaDoubleAppDef_oaOccInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstTerm_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccInstTerm_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccInstTermp result= (oaDoubleAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccInstTerm_FromoaDoubleAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccInstTerm_static_find,METH_VARARGS,oaDoubleAppDef_oaOccInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccInstTerm_static_get,METH_VARARGS,oaDoubleAppDef_oaOccInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccInstTerm",
           (PyObject*)(&PyoaDoubleAppDef_oaOccInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccInstTerm_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccModuleInstHeaderObject* self = (PyoaDoubleAppDef_oaOccModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccModuleInstHeader)
    {
        PyParamoaDoubleAppDef_oaOccModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccModuleInstHeader, Choices are:\n"
        "    (oaDoubleAppDef_oaOccModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccModuleInstHeader_tp_dealloc(PyoaDoubleAppDef_oaOccModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccModuleInstHeader value;
    int convert_status=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaDoubleAppDef_oaOccModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccModuleInstHeader v1;
    PyParamoaDoubleAppDef_oaOccModuleInstHeader v2;
    int convert_status1=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccModuleInstHeader_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccModuleInstHeader**) ((PyoaDoubleAppDef_oaOccModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(oaDoubleAppDef_oaOccModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccModuleInstHeader* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaOccModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccModuleInstHeaderObject* self = (PyoaDoubleAppDef_oaOccModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(oaDoubleAppDef_oaOccModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaOccModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccModuleInstHeaderObject* self = (PyoaDoubleAppDef_oaOccModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccModuleInstHeader_get_doc[] = 
"Class: oaDoubleAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaOccModuleInstHeader)\n"
"    Calls: oaDouble get(const oaOccModuleInstHeader* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccModuleInstHeader,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccModuleInstHeaderObject* self=(PyoaDoubleAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccModuleInstHeader_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccModuleInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccModuleInstHeaderObject* self=(PyoaDoubleAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccModuleInstHeader_set_doc[] = 
"Class: oaDoubleAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaOccModuleInstHeader,oaDouble)\n"
"    Calls: void set(oaOccModuleInstHeader* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccModuleInstHeader,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccModuleInstHeaderObject* self=(PyoaDoubleAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccModuleInstHeader_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccModuleInstHeader_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccModuleInstHeader_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccModuleInstHeader data;
  int convert_status=PyoaDoubleAppDef_oaOccModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccModuleInstHeader_get,METH_VARARGS,oaDoubleAppDef_oaOccModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccModuleInstHeader_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccModuleInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccModuleInstHeader_set,METH_VARARGS,oaDoubleAppDef_oaOccModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccModuleInstHeader_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccModuleInstHeader_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccModuleInstHeader_doc[] = 
"Class: oaDoubleAppDef_oaOccModuleInstHeader\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccModuleInstHeader)\n"
"    Calls: (const oaDoubleAppDef_oaOccModuleInstHeader&)\n"
"    Signature: oaDoubleAppDef_oaOccModuleInstHeader||cref-oaDoubleAppDef_oaOccModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccModuleInstHeader",
    sizeof(PyoaDoubleAppDef_oaOccModuleInstHeaderObject),
    0,
    (destructor)oaDoubleAppDef_oaOccModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccModuleInstHeader_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccModuleInstHeader_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccModuleInstHeaderp result= (oaDoubleAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccModuleInstHeader_FromoaDoubleAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccModuleInstHeader_static_find,METH_VARARGS,oaDoubleAppDef_oaOccModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccModuleInstHeader_static_get,METH_VARARGS,oaDoubleAppDef_oaOccModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccModuleInstHeader",
           (PyObject*)(&PyoaDoubleAppDef_oaOccModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccModuleInstHeader_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccNetObject* self = (PyoaDoubleAppDef_oaOccNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccNet)
    {
        PyParamoaDoubleAppDef_oaOccNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccNet, Choices are:\n"
        "    (oaDoubleAppDef_oaOccNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccNet_tp_dealloc(PyoaDoubleAppDef_oaOccNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccNet_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccNet value;
    int convert_status=PyoaDoubleAppDef_oaOccNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaDoubleAppDef_oaOccNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccNet v1;
    PyParamoaDoubleAppDef_oaOccNet v2;
    int convert_status1=PyoaDoubleAppDef_oaOccNet_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccNet_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccNet_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccNet**) ((PyoaDoubleAppDef_oaOccNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(oaDoubleAppDef_oaOccNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccNet* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccNet_Type.tp_alloc(&PyoaDoubleAppDef_oaOccNet_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccNetObject* self = (PyoaDoubleAppDef_oaOccNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(oaDoubleAppDef_oaOccNet* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccNet_Type.tp_alloc(&PyoaDoubleAppDef_oaOccNet_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccNetObject* self = (PyoaDoubleAppDef_oaOccNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccNet_get_doc[] = 
"Class: oaDoubleAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaOccNet)\n"
"    Calls: oaDouble get(const oaOccNet* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccNet,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccNet data;
    int convert_status=PyoaDoubleAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccNetObject* self=(PyoaDoubleAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccNet_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccNet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccNet data;
    int convert_status=PyoaDoubleAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccNetObject* self=(PyoaDoubleAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccNet_set_doc[] = 
"Class: oaDoubleAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaOccNet,oaDouble)\n"
"    Calls: void set(oaOccNet* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccNet,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccNet data;
    int convert_status=PyoaDoubleAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccNetObject* self=(PyoaDoubleAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccNet_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccNet_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccNet data;
    int convert_status=PyoaDoubleAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccNet_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccNet data;
  int convert_status=PyoaDoubleAppDef_oaOccNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccNet_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccNet_get,METH_VARARGS,oaDoubleAppDef_oaOccNet_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccNet_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccNet_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccNet_set,METH_VARARGS,oaDoubleAppDef_oaOccNet_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccNet_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccNet_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccNet_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccNet_doc[] = 
"Class: oaDoubleAppDef_oaOccNet\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccNet)\n"
"    Calls: (const oaDoubleAppDef_oaOccNet&)\n"
"    Signature: oaDoubleAppDef_oaOccNet||cref-oaDoubleAppDef_oaOccNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccNet",
    sizeof(PyoaDoubleAppDef_oaOccNetObject),
    0,
    (destructor)oaDoubleAppDef_oaOccNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccNet_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccNet_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccNet_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccNet* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccNet* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccNetp result= (oaDoubleAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccNet_FromoaDoubleAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccNet_static_find,METH_VARARGS,oaDoubleAppDef_oaOccNet_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccNet_static_get,METH_VARARGS,oaDoubleAppDef_oaOccNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccNet_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccNet",
           (PyObject*)(&PyoaDoubleAppDef_oaOccNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccNet_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccShapeObject* self = (PyoaDoubleAppDef_oaOccShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccShape)
    {
        PyParamoaDoubleAppDef_oaOccShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccShape, Choices are:\n"
        "    (oaDoubleAppDef_oaOccShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccShape_tp_dealloc(PyoaDoubleAppDef_oaOccShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccShape_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccShape value;
    int convert_status=PyoaDoubleAppDef_oaOccShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaDoubleAppDef_oaOccShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccShape v1;
    PyParamoaDoubleAppDef_oaOccShape v2;
    int convert_status1=PyoaDoubleAppDef_oaOccShape_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccShape_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccShape_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccShape**) ((PyoaDoubleAppDef_oaOccShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(oaDoubleAppDef_oaOccShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccShape* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccShape_Type.tp_alloc(&PyoaDoubleAppDef_oaOccShape_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccShapeObject* self = (PyoaDoubleAppDef_oaOccShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(oaDoubleAppDef_oaOccShape* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccShape_Type.tp_alloc(&PyoaDoubleAppDef_oaOccShape_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccShapeObject* self = (PyoaDoubleAppDef_oaOccShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccShape_get_doc[] = 
"Class: oaDoubleAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaOccShape)\n"
"    Calls: oaDouble get(const oaOccShape* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccShape,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccShape data;
    int convert_status=PyoaDoubleAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccShapeObject* self=(PyoaDoubleAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccShape_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccShape, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccShape_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccShape data;
    int convert_status=PyoaDoubleAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccShapeObject* self=(PyoaDoubleAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccShape_set_doc[] = 
"Class: oaDoubleAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaOccShape,oaDouble)\n"
"    Calls: void set(oaOccShape* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccShape,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccShape data;
    int convert_status=PyoaDoubleAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccShapeObject* self=(PyoaDoubleAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccShape_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccShape_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccShape data;
    int convert_status=PyoaDoubleAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccShape_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccShape data;
  int convert_status=PyoaDoubleAppDef_oaOccShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccShape_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccShape_get,METH_VARARGS,oaDoubleAppDef_oaOccShape_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccShape_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccShape_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccShape_set,METH_VARARGS,oaDoubleAppDef_oaOccShape_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccShape_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccShape_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccShape_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccShape_doc[] = 
"Class: oaDoubleAppDef_oaOccShape\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccShape)\n"
"    Calls: (const oaDoubleAppDef_oaOccShape&)\n"
"    Signature: oaDoubleAppDef_oaOccShape||cref-oaDoubleAppDef_oaOccShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccShape",
    sizeof(PyoaDoubleAppDef_oaOccShapeObject),
    0,
    (destructor)oaDoubleAppDef_oaOccShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccShape_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccShape_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccShape_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccShape* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccShape* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccShapep result= (oaDoubleAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccShape_FromoaDoubleAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccShape_static_find,METH_VARARGS,oaDoubleAppDef_oaOccShape_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccShape_static_get,METH_VARARGS,oaDoubleAppDef_oaOccShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccShape_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccShape",
           (PyObject*)(&PyoaDoubleAppDef_oaOccShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccShape_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccTermObject* self = (PyoaDoubleAppDef_oaOccTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccTerm)
    {
        PyParamoaDoubleAppDef_oaOccTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccTerm, Choices are:\n"
        "    (oaDoubleAppDef_oaOccTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccTerm_tp_dealloc(PyoaDoubleAppDef_oaOccTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccTerm_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccTerm value;
    int convert_status=PyoaDoubleAppDef_oaOccTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaOccTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccTerm v1;
    PyParamoaDoubleAppDef_oaOccTerm v2;
    int convert_status1=PyoaDoubleAppDef_oaOccTerm_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccTerm_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccTerm_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccTerm**) ((PyoaDoubleAppDef_oaOccTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(oaDoubleAppDef_oaOccTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccTerm* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaOccTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccTermObject* self = (PyoaDoubleAppDef_oaOccTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(oaDoubleAppDef_oaOccTerm* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccTerm_Type.tp_alloc(&PyoaDoubleAppDef_oaOccTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccTermObject* self = (PyoaDoubleAppDef_oaOccTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccTerm_get_doc[] = 
"Class: oaDoubleAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaOccTerm)\n"
"    Calls: oaDouble get(const oaOccTerm* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccTerm,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccTermObject* self=(PyoaDoubleAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccTerm_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccTerm, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccTermObject* self=(PyoaDoubleAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccTerm_set_doc[] = 
"Class: oaDoubleAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaOccTerm,oaDouble)\n"
"    Calls: void set(oaOccTerm* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccTerm,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccTermObject* self=(PyoaDoubleAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccTerm_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccTerm_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccTerm data;
    int convert_status=PyoaDoubleAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccTerm_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccTerm data;
  int convert_status=PyoaDoubleAppDef_oaOccTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccTerm_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccTerm_get,METH_VARARGS,oaDoubleAppDef_oaOccTerm_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccTerm_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccTerm_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccTerm_set,METH_VARARGS,oaDoubleAppDef_oaOccTerm_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccTerm_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccTerm_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccTerm_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccTerm_doc[] = 
"Class: oaDoubleAppDef_oaOccTerm\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccTerm)\n"
"    Calls: (const oaDoubleAppDef_oaOccTerm&)\n"
"    Signature: oaDoubleAppDef_oaOccTerm||cref-oaDoubleAppDef_oaOccTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccTerm",
    sizeof(PyoaDoubleAppDef_oaOccTermObject),
    0,
    (destructor)oaDoubleAppDef_oaOccTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccTerm_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccTerm_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccTermp result= (oaDoubleAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccTerm_FromoaDoubleAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccTerm_static_find,METH_VARARGS,oaDoubleAppDef_oaOccTerm_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccTerm_static_get,METH_VARARGS,oaDoubleAppDef_oaOccTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccTerm",
           (PyObject*)(&PyoaDoubleAppDef_oaOccTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccTerm_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccVectorInstDefObject* self = (PyoaDoubleAppDef_oaOccVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccVectorInstDef)
    {
        PyParamoaDoubleAppDef_oaOccVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccVectorInstDef, Choices are:\n"
        "    (oaDoubleAppDef_oaOccVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccVectorInstDef_tp_dealloc(PyoaDoubleAppDef_oaOccVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccVectorInstDef value;
    int convert_status=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaDoubleAppDef_oaOccVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccVectorInstDef v1;
    PyParamoaDoubleAppDef_oaOccVectorInstDef v2;
    int convert_status1=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccVectorInstDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccVectorInstDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccVectorInstDef**) ((PyoaDoubleAppDef_oaOccVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(oaDoubleAppDef_oaOccVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccVectorInstDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccVectorInstDefObject* self = (PyoaDoubleAppDef_oaOccVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(oaDoubleAppDef_oaOccVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaDoubleAppDef_oaOccVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccVectorInstDefObject* self = (PyoaDoubleAppDef_oaOccVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccVectorInstDef_get_doc[] = 
"Class: oaDoubleAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaOccVectorInstDef)\n"
"    Calls: oaDouble get(const oaOccVectorInstDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccVectorInstDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccVectorInstDefObject* self=(PyoaDoubleAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccVectorInstDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccVectorInstDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccVectorInstDefObject* self=(PyoaDoubleAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccVectorInstDef_set_doc[] = 
"Class: oaDoubleAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaOccVectorInstDef,oaDouble)\n"
"    Calls: void set(oaOccVectorInstDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccVectorInstDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccVectorInstDefObject* self=(PyoaDoubleAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccVectorInstDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccVectorInstDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccVectorInstDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccVectorInstDef data;
  int convert_status=PyoaDoubleAppDef_oaOccVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccVectorInstDef_get,METH_VARARGS,oaDoubleAppDef_oaOccVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccVectorInstDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccVectorInstDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccVectorInstDef_set,METH_VARARGS,oaDoubleAppDef_oaOccVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccVectorInstDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccVectorInstDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccVectorInstDef_doc[] = 
"Class: oaDoubleAppDef_oaOccVectorInstDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccVectorInstDef)\n"
"    Calls: (const oaDoubleAppDef_oaOccVectorInstDef&)\n"
"    Signature: oaDoubleAppDef_oaOccVectorInstDef||cref-oaDoubleAppDef_oaOccVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccVectorInstDef",
    sizeof(PyoaDoubleAppDef_oaOccVectorInstDefObject),
    0,
    (destructor)oaDoubleAppDef_oaOccVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccVectorInstDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccVectorInstDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccVectorInstDefp result= (oaDoubleAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccVectorInstDef_FromoaDoubleAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccVectorInstDef_static_find,METH_VARARGS,oaDoubleAppDef_oaOccVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccVectorInstDef_static_get,METH_VARARGS,oaDoubleAppDef_oaOccVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccVectorInstDef",
           (PyObject*)(&PyoaDoubleAppDef_oaOccVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccVectorInstDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOccurrence
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccurrence_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOccurrence_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOccurrenceObject* self = (PyoaDoubleAppDef_oaOccurrenceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOccurrence)
    {
        PyParamoaDoubleAppDef_oaOccurrence p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOccurrence_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOccurrence, Choices are:\n"
        "    (oaDoubleAppDef_oaOccurrence)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOccurrence_tp_dealloc(PyoaDoubleAppDef_oaOccurrenceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOccurrence_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOccurrence value;
    int convert_status=PyoaDoubleAppDef_oaOccurrence_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaDoubleAppDef_oaOccurrence::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOccurrence_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOccurrence v1;
    PyParamoaDoubleAppDef_oaOccurrence v2;
    int convert_status1=PyoaDoubleAppDef_oaOccurrence_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOccurrence_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOccurrence_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOccurrence* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOccurrence_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOccurrence**) ((PyoaDoubleAppDef_oaOccurrenceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOccurrence Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(oaDoubleAppDef_oaOccurrence** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOccurrence* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOccurrence_Type.tp_alloc(&PyoaDoubleAppDef_oaOccurrence_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOccurrenceObject* self = (PyoaDoubleAppDef_oaOccurrenceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(oaDoubleAppDef_oaOccurrence* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOccurrence_Type.tp_alloc(&PyoaDoubleAppDef_oaOccurrence_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOccurrenceObject* self = (PyoaDoubleAppDef_oaOccurrenceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccurrence_get_doc[] = 
"Class: oaDoubleAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaOccurrence)\n"
"    Calls: oaDouble get(const oaOccurrence* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOccurrence,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOccurrence_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccurrence data;
    int convert_status=PyoaDoubleAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccurrenceObject* self=(PyoaDoubleAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccurrence_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccurrence_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOccurrence, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOccurrence_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccurrence data;
    int convert_status=PyoaDoubleAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccurrenceObject* self=(PyoaDoubleAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccurrence_set_doc[] = 
"Class: oaDoubleAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaOccurrence,oaDouble)\n"
"    Calls: void set(oaOccurrence* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOccurrence,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOccurrence_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOccurrence data;
    int convert_status=PyoaDoubleAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOccurrenceObject* self=(PyoaDoubleAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccurrence_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccurrence_isNull_doc[] =
"Class: oaDoubleAppDef_oaOccurrence, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOccurrence_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOccurrence data;
    int convert_status=PyoaDoubleAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOccurrence_assign_doc[] = 
"Class: oaDoubleAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOccurrence_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOccurrence data;
  int convert_status=PyoaDoubleAppDef_oaOccurrence_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOccurrence p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOccurrence_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOccurrence_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOccurrence_get,METH_VARARGS,oaDoubleAppDef_oaOccurrence_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOccurrence_getDefault,METH_VARARGS,oaDoubleAppDef_oaOccurrence_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOccurrence_set,METH_VARARGS,oaDoubleAppDef_oaOccurrence_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOccurrence_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOccurrence_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOccurrence_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOccurrence_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccurrence_doc[] = 
"Class: oaDoubleAppDef_oaOccurrence\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOccurrence)\n"
"    Calls: (const oaDoubleAppDef_oaOccurrence&)\n"
"    Signature: oaDoubleAppDef_oaOccurrence||cref-oaDoubleAppDef_oaOccurrence,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOccurrence_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOccurrence",
    sizeof(PyoaDoubleAppDef_oaOccurrenceObject),
    0,
    (destructor)oaDoubleAppDef_oaOccurrence_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOccurrence_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOccurrence_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOccurrence_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOccurrence_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOccurrence_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccurrence_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOccurrence, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOccurrence_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::find(p1.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccurrence, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOccurrence_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOccurrence_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::get(p1.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOccurrencep result= (oaDoubleAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOccurrence_FromoaDoubleAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOccurrence, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOccurrence_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOccurrence_static_find,METH_VARARGS,oaDoubleAppDef_oaOccurrence_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOccurrence_static_get,METH_VARARGS,oaDoubleAppDef_oaOccurrence_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOccurrence_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOccurrence_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOccurrence\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOccurrence",
           (PyObject*)(&PyoaDoubleAppDef_oaOccurrence_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOccurrence\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOccurrence_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOccurrence_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaOpPointHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOpPointHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaOpPointHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaOpPointHeaderObject* self = (PyoaDoubleAppDef_oaOpPointHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaOpPointHeader)
    {
        PyParamoaDoubleAppDef_oaOpPointHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaOpPointHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaOpPointHeader, Choices are:\n"
        "    (oaDoubleAppDef_oaOpPointHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaOpPointHeader_tp_dealloc(PyoaDoubleAppDef_oaOpPointHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaOpPointHeader_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaOpPointHeader value;
    int convert_status=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaOpPointHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaOpPointHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaOpPointHeader v1;
    PyParamoaDoubleAppDef_oaOpPointHeader v2;
    int convert_status1=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaOpPointHeader_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaOpPointHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaOpPointHeader_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaOpPointHeader**) ((PyoaDoubleAppDef_oaOpPointHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaOpPointHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(oaDoubleAppDef_oaOpPointHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaOpPointHeader* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaOpPointHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaOpPointHeaderObject* self = (PyoaDoubleAppDef_oaOpPointHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(oaDoubleAppDef_oaOpPointHeader* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaOpPointHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaOpPointHeaderObject* self = (PyoaDoubleAppDef_oaOpPointHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOpPointHeader_get_doc[] = 
"Class: oaDoubleAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaOpPointHeader)\n"
"    Calls: oaDouble get(const oaOpPointHeader* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaOpPointHeader,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaOpPointHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOpPointHeader data;
    int convert_status=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOpPointHeaderObject* self=(PyoaDoubleAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOpPointHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOpPointHeader_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaOpPointHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaOpPointHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOpPointHeader data;
    int convert_status=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOpPointHeaderObject* self=(PyoaDoubleAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOpPointHeader_set_doc[] = 
"Class: oaDoubleAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaOpPointHeader,oaDouble)\n"
"    Calls: void set(oaOpPointHeader* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaOpPointHeader,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaOpPointHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaOpPointHeader data;
    int convert_status=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaOpPointHeaderObject* self=(PyoaDoubleAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOpPointHeader_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOpPointHeader_isNull_doc[] =
"Class: oaDoubleAppDef_oaOpPointHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaOpPointHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaOpPointHeader data;
    int convert_status=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaOpPointHeader_assign_doc[] = 
"Class: oaDoubleAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaOpPointHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaOpPointHeader data;
  int convert_status=PyoaDoubleAppDef_oaOpPointHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaOpPointHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaOpPointHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaOpPointHeader_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaOpPointHeader_get,METH_VARARGS,oaDoubleAppDef_oaOpPointHeader_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaOpPointHeader_getDefault,METH_VARARGS,oaDoubleAppDef_oaOpPointHeader_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaOpPointHeader_set,METH_VARARGS,oaDoubleAppDef_oaOpPointHeader_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaOpPointHeader_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaOpPointHeader_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaOpPointHeader_tp_assign,METH_VARARGS,oaDoubleAppDef_oaOpPointHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOpPointHeader_doc[] = 
"Class: oaDoubleAppDef_oaOpPointHeader\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaOpPointHeader)\n"
"    Calls: (const oaDoubleAppDef_oaOpPointHeader&)\n"
"    Signature: oaDoubleAppDef_oaOpPointHeader||cref-oaDoubleAppDef_oaOpPointHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaOpPointHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaOpPointHeader",
    sizeof(PyoaDoubleAppDef_oaOpPointHeaderObject),
    0,
    (destructor)oaDoubleAppDef_oaOpPointHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaOpPointHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaOpPointHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaOpPointHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaOpPointHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaOpPointHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOpPointHeader_static_find_doc[] = 
"Class: oaDoubleAppDef_oaOpPointHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaOpPointHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::find(p1.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOpPointHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaOpPointHeader_static_get_doc[] = 
"Class: oaDoubleAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaOpPointHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::get(p1.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaOpPointHeaderp result= (oaDoubleAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaOpPointHeader_FromoaDoubleAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaOpPointHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaOpPointHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaOpPointHeader_static_find,METH_VARARGS,oaDoubleAppDef_oaOpPointHeader_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaOpPointHeader_static_get,METH_VARARGS,oaDoubleAppDef_oaOpPointHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaOpPointHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaOpPointHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaOpPointHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaOpPointHeader",
           (PyObject*)(&PyoaDoubleAppDef_oaOpPointHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaOpPointHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaOpPointHeader_Type.tp_dict;
    for(method=oaDoubleAppDef_oaOpPointHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaParasiticNetwork
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaParasiticNetwork_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaParasiticNetwork_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaParasiticNetworkObject* self = (PyoaDoubleAppDef_oaParasiticNetworkObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaParasiticNetwork)
    {
        PyParamoaDoubleAppDef_oaParasiticNetwork p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaParasiticNetwork_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaParasiticNetwork, Choices are:\n"
        "    (oaDoubleAppDef_oaParasiticNetwork)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaParasiticNetwork_tp_dealloc(PyoaDoubleAppDef_oaParasiticNetworkObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaParasiticNetwork_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaParasiticNetwork value;
    int convert_status=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaDoubleAppDef_oaParasiticNetwork::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaParasiticNetwork_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaParasiticNetwork v1;
    PyParamoaDoubleAppDef_oaParasiticNetwork v2;
    int convert_status1=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaParasiticNetwork_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaParasiticNetwork* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaParasiticNetwork_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaParasiticNetwork**) ((PyoaDoubleAppDef_oaParasiticNetworkObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaParasiticNetwork Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(oaDoubleAppDef_oaParasiticNetwork** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaParasiticNetwork* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaDoubleAppDef_oaParasiticNetwork_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaParasiticNetworkObject* self = (PyoaDoubleAppDef_oaParasiticNetworkObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(oaDoubleAppDef_oaParasiticNetwork* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaDoubleAppDef_oaParasiticNetwork_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaParasiticNetworkObject* self = (PyoaDoubleAppDef_oaParasiticNetworkObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaParasiticNetwork_get_doc[] = 
"Class: oaDoubleAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaParasiticNetwork)\n"
"    Calls: oaDouble get(const oaParasiticNetwork* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaParasiticNetwork,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaParasiticNetwork_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaParasiticNetwork data;
    int convert_status=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaParasiticNetworkObject* self=(PyoaDoubleAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaParasiticNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaParasiticNetwork_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaParasiticNetwork, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaParasiticNetwork_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaParasiticNetwork data;
    int convert_status=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaParasiticNetworkObject* self=(PyoaDoubleAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaParasiticNetwork_set_doc[] = 
"Class: oaDoubleAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaParasiticNetwork,oaDouble)\n"
"    Calls: void set(oaParasiticNetwork* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaParasiticNetwork,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaParasiticNetwork_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaParasiticNetwork data;
    int convert_status=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaParasiticNetworkObject* self=(PyoaDoubleAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaParasiticNetwork_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaParasiticNetwork_isNull_doc[] =
"Class: oaDoubleAppDef_oaParasiticNetwork, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaParasiticNetwork_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaParasiticNetwork data;
    int convert_status=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaParasiticNetwork_assign_doc[] = 
"Class: oaDoubleAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaParasiticNetwork_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaParasiticNetwork data;
  int convert_status=PyoaDoubleAppDef_oaParasiticNetwork_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaParasiticNetwork_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaParasiticNetwork_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaParasiticNetwork_get,METH_VARARGS,oaDoubleAppDef_oaParasiticNetwork_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaParasiticNetwork_getDefault,METH_VARARGS,oaDoubleAppDef_oaParasiticNetwork_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaParasiticNetwork_set,METH_VARARGS,oaDoubleAppDef_oaParasiticNetwork_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaParasiticNetwork_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaParasiticNetwork_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaParasiticNetwork_tp_assign,METH_VARARGS,oaDoubleAppDef_oaParasiticNetwork_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaParasiticNetwork_doc[] = 
"Class: oaDoubleAppDef_oaParasiticNetwork\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaParasiticNetwork)\n"
"    Calls: (const oaDoubleAppDef_oaParasiticNetwork&)\n"
"    Signature: oaDoubleAppDef_oaParasiticNetwork||cref-oaDoubleAppDef_oaParasiticNetwork,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaParasiticNetwork_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaParasiticNetwork",
    sizeof(PyoaDoubleAppDef_oaParasiticNetworkObject),
    0,
    (destructor)oaDoubleAppDef_oaParasiticNetwork_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaParasiticNetwork_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaParasiticNetwork_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaParasiticNetwork_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaParasiticNetwork_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaParasiticNetwork_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaParasiticNetwork_static_find_doc[] = 
"Class: oaDoubleAppDef_oaParasiticNetwork, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaParasiticNetwork_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::find(p1.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaParasiticNetwork, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaParasiticNetwork_static_get_doc[] = 
"Class: oaDoubleAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaParasiticNetwork_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::get(p1.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaParasiticNetworkp result= (oaDoubleAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaParasiticNetwork_FromoaDoubleAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaParasiticNetwork, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaParasiticNetwork_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaParasiticNetwork_static_find,METH_VARARGS,oaDoubleAppDef_oaParasiticNetwork_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaParasiticNetwork_static_get,METH_VARARGS,oaDoubleAppDef_oaParasiticNetwork_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaParasiticNetwork_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaParasiticNetwork_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaParasiticNetwork\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaParasiticNetwork",
           (PyObject*)(&PyoaDoubleAppDef_oaParasiticNetwork_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaParasiticNetwork\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaParasiticNetwork_Type.tp_dict;
    for(method=oaDoubleAppDef_oaParasiticNetwork_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaPin
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaPin_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaPin_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaPinObject* self = (PyoaDoubleAppDef_oaPinObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaPin)
    {
        PyParamoaDoubleAppDef_oaPin p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaPin_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaPin, Choices are:\n"
        "    (oaDoubleAppDef_oaPin)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaPin_tp_dealloc(PyoaDoubleAppDef_oaPinObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaPin_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaPin value;
    int convert_status=PyoaDoubleAppDef_oaPin_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaDoubleAppDef_oaPin::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaPin_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaPin v1;
    PyParamoaDoubleAppDef_oaPin v2;
    int convert_status1=PyoaDoubleAppDef_oaPin_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaPin_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaPin_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaPin* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaPin_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaPin**) ((PyoaDoubleAppDef_oaPinObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaPin Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(oaDoubleAppDef_oaPin** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaPin* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaPin_Type.tp_alloc(&PyoaDoubleAppDef_oaPin_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaPinObject* self = (PyoaDoubleAppDef_oaPinObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(oaDoubleAppDef_oaPin* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaPin_Type.tp_alloc(&PyoaDoubleAppDef_oaPin_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaPinObject* self = (PyoaDoubleAppDef_oaPinObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPin_get_doc[] = 
"Class: oaDoubleAppDef_oaPin, Function: get\n"
"  Paramegers: (oaPin)\n"
"    Calls: oaDouble get(const oaPin* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaPin,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaPin_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPin data;
    int convert_status=PyoaDoubleAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPinObject* self=(PyoaDoubleAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPin_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaPin, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaPin_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPin data;
    int convert_status=PyoaDoubleAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPinObject* self=(PyoaDoubleAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPin_set_doc[] = 
"Class: oaDoubleAppDef_oaPin, Function: set\n"
"  Paramegers: (oaPin,oaDouble)\n"
"    Calls: void set(oaPin* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaPin,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaPin_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPin data;
    int convert_status=PyoaDoubleAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPinObject* self=(PyoaDoubleAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPin_isNull_doc[] =
"Class: oaDoubleAppDef_oaPin, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaPin_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaPin data;
    int convert_status=PyoaDoubleAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaPin_assign_doc[] = 
"Class: oaDoubleAppDef_oaPin, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaPin_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaPin data;
  int convert_status=PyoaDoubleAppDef_oaPin_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaPin p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaPin_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaPin_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaPin_get,METH_VARARGS,oaDoubleAppDef_oaPin_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaPin_getDefault,METH_VARARGS,oaDoubleAppDef_oaPin_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaPin_set,METH_VARARGS,oaDoubleAppDef_oaPin_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaPin_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaPin_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaPin_tp_assign,METH_VARARGS,oaDoubleAppDef_oaPin_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPin_doc[] = 
"Class: oaDoubleAppDef_oaPin\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaPin)\n"
"    Calls: (const oaDoubleAppDef_oaPin&)\n"
"    Signature: oaDoubleAppDef_oaPin||cref-oaDoubleAppDef_oaPin,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaPin_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaPin",
    sizeof(PyoaDoubleAppDef_oaPinObject),
    0,
    (destructor)oaDoubleAppDef_oaPin_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaPin_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaPin_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaPin_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaPin_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaPin_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPin_static_find_doc[] = 
"Class: oaDoubleAppDef_oaPin, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaPin* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaPin|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaPin* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaPin_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::find(p1.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaPin, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPin_static_get_doc[] = 
"Class: oaDoubleAppDef_oaPin, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaPin* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPin|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaPin* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPin|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaPin* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPin|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaPin_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::get(p1.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPinp result= (oaDoubleAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaPin_FromoaDoubleAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaPin, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaPin_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaPin_static_find,METH_VARARGS,oaDoubleAppDef_oaPin_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaPin_static_get,METH_VARARGS,oaDoubleAppDef_oaPin_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaPin_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaPin_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaPin\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaPin",
           (PyObject*)(&PyoaDoubleAppDef_oaPin_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaPin\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaPin_Type.tp_dict;
    for(method=oaDoubleAppDef_oaPin_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaPoleResidue
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaPoleResidue_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaPoleResidue_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaPoleResidueObject* self = (PyoaDoubleAppDef_oaPoleResidueObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaPoleResidue)
    {
        PyParamoaDoubleAppDef_oaPoleResidue p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaPoleResidue_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaPoleResidue, Choices are:\n"
        "    (oaDoubleAppDef_oaPoleResidue)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaPoleResidue_tp_dealloc(PyoaDoubleAppDef_oaPoleResidueObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaPoleResidue_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaPoleResidue value;
    int convert_status=PyoaDoubleAppDef_oaPoleResidue_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaDoubleAppDef_oaPoleResidue::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaPoleResidue_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaPoleResidue v1;
    PyParamoaDoubleAppDef_oaPoleResidue v2;
    int convert_status1=PyoaDoubleAppDef_oaPoleResidue_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaPoleResidue_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaPoleResidue_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaPoleResidue* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaPoleResidue_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaPoleResidue**) ((PyoaDoubleAppDef_oaPoleResidueObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaPoleResidue Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(oaDoubleAppDef_oaPoleResidue** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaPoleResidue* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaPoleResidue_Type.tp_alloc(&PyoaDoubleAppDef_oaPoleResidue_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaPoleResidueObject* self = (PyoaDoubleAppDef_oaPoleResidueObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(oaDoubleAppDef_oaPoleResidue* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaPoleResidue_Type.tp_alloc(&PyoaDoubleAppDef_oaPoleResidue_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaPoleResidueObject* self = (PyoaDoubleAppDef_oaPoleResidueObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPoleResidue_get_doc[] = 
"Class: oaDoubleAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: oaDouble get(const oaPoleResidue* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaPoleResidue,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaPoleResidue_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPoleResidue data;
    int convert_status=PyoaDoubleAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPoleResidueObject* self=(PyoaDoubleAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPoleResidue_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaPoleResidue, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaPoleResidue_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPoleResidue data;
    int convert_status=PyoaDoubleAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPoleResidueObject* self=(PyoaDoubleAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPoleResidue_set_doc[] = 
"Class: oaDoubleAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaPoleResidue,oaDouble)\n"
"    Calls: void set(oaPoleResidue* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaPoleResidue,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaPoleResidue_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPoleResidue data;
    int convert_status=PyoaDoubleAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPoleResidueObject* self=(PyoaDoubleAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPoleResidue_isNull_doc[] =
"Class: oaDoubleAppDef_oaPoleResidue, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaPoleResidue_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaPoleResidue data;
    int convert_status=PyoaDoubleAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaPoleResidue_assign_doc[] = 
"Class: oaDoubleAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaPoleResidue_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaPoleResidue data;
  int convert_status=PyoaDoubleAppDef_oaPoleResidue_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaPoleResidue p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaPoleResidue_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaPoleResidue_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaPoleResidue_get,METH_VARARGS,oaDoubleAppDef_oaPoleResidue_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaPoleResidue_getDefault,METH_VARARGS,oaDoubleAppDef_oaPoleResidue_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaPoleResidue_set,METH_VARARGS,oaDoubleAppDef_oaPoleResidue_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaPoleResidue_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaPoleResidue_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaPoleResidue_tp_assign,METH_VARARGS,oaDoubleAppDef_oaPoleResidue_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPoleResidue_doc[] = 
"Class: oaDoubleAppDef_oaPoleResidue\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaPoleResidue)\n"
"    Calls: (const oaDoubleAppDef_oaPoleResidue&)\n"
"    Signature: oaDoubleAppDef_oaPoleResidue||cref-oaDoubleAppDef_oaPoleResidue,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaPoleResidue_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaPoleResidue",
    sizeof(PyoaDoubleAppDef_oaPoleResidueObject),
    0,
    (destructor)oaDoubleAppDef_oaPoleResidue_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaPoleResidue_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaPoleResidue_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaPoleResidue_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaPoleResidue_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaPoleResidue_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPoleResidue_static_find_doc[] = 
"Class: oaDoubleAppDef_oaPoleResidue, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaPoleResidue_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::find(p1.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaPoleResidue, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPoleResidue_static_get_doc[] = 
"Class: oaDoubleAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaPoleResidue_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::get(p1.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPoleResiduep result= (oaDoubleAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaPoleResidue_FromoaDoubleAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaPoleResidue, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaPoleResidue_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaPoleResidue_static_find,METH_VARARGS,oaDoubleAppDef_oaPoleResidue_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaPoleResidue_static_get,METH_VARARGS,oaDoubleAppDef_oaPoleResidue_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaPoleResidue_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaPoleResidue_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaPoleResidue\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaPoleResidue",
           (PyObject*)(&PyoaDoubleAppDef_oaPoleResidue_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaPoleResidue\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaPoleResidue_Type.tp_dict;
    for(method=oaDoubleAppDef_oaPoleResidue_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaProp
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaProp_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaProp_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaPropObject* self = (PyoaDoubleAppDef_oaPropObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaProp)
    {
        PyParamoaDoubleAppDef_oaProp p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaProp_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaProp, Choices are:\n"
        "    (oaDoubleAppDef_oaProp)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaProp_tp_dealloc(PyoaDoubleAppDef_oaPropObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaProp_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaProp value;
    int convert_status=PyoaDoubleAppDef_oaProp_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaDoubleAppDef_oaProp::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaProp_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaProp v1;
    PyParamoaDoubleAppDef_oaProp v2;
    int convert_status1=PyoaDoubleAppDef_oaProp_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaProp_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaProp_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaProp* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaProp_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaProp**) ((PyoaDoubleAppDef_oaPropObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaProp Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(oaDoubleAppDef_oaProp** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaProp* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaProp_Type.tp_alloc(&PyoaDoubleAppDef_oaProp_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaPropObject* self = (PyoaDoubleAppDef_oaPropObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(oaDoubleAppDef_oaProp* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaProp_Type.tp_alloc(&PyoaDoubleAppDef_oaProp_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaPropObject* self = (PyoaDoubleAppDef_oaPropObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaProp_get_doc[] = 
"Class: oaDoubleAppDef_oaProp, Function: get\n"
"  Paramegers: (oaProp)\n"
"    Calls: oaDouble get(const oaProp* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaProp,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaProp_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaProp data;
    int convert_status=PyoaDoubleAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPropObject* self=(PyoaDoubleAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaProp_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaProp, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaProp_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaProp data;
    int convert_status=PyoaDoubleAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPropObject* self=(PyoaDoubleAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaProp_set_doc[] = 
"Class: oaDoubleAppDef_oaProp, Function: set\n"
"  Paramegers: (oaProp,oaDouble)\n"
"    Calls: void set(oaProp* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaProp,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaProp_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaProp data;
    int convert_status=PyoaDoubleAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPropObject* self=(PyoaDoubleAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaProp_isNull_doc[] =
"Class: oaDoubleAppDef_oaProp, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaProp_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaProp data;
    int convert_status=PyoaDoubleAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaProp_assign_doc[] = 
"Class: oaDoubleAppDef_oaProp, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaProp_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaProp data;
  int convert_status=PyoaDoubleAppDef_oaProp_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaProp p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaProp_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaProp_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaProp_get,METH_VARARGS,oaDoubleAppDef_oaProp_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaProp_getDefault,METH_VARARGS,oaDoubleAppDef_oaProp_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaProp_set,METH_VARARGS,oaDoubleAppDef_oaProp_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaProp_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaProp_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaProp_tp_assign,METH_VARARGS,oaDoubleAppDef_oaProp_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaProp_doc[] = 
"Class: oaDoubleAppDef_oaProp\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaProp)\n"
"    Calls: (const oaDoubleAppDef_oaProp&)\n"
"    Signature: oaDoubleAppDef_oaProp||cref-oaDoubleAppDef_oaProp,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaProp_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaProp",
    sizeof(PyoaDoubleAppDef_oaPropObject),
    0,
    (destructor)oaDoubleAppDef_oaProp_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaProp_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaProp_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaProp_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaProp_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaProp_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaProp_static_find_doc[] = 
"Class: oaDoubleAppDef_oaProp, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaProp* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaProp|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaProp* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaProp_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::find(p1.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaProp, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaProp_static_get_doc[] = 
"Class: oaDoubleAppDef_oaProp, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaProp* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaProp|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaProp* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaProp|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaProp* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaProp|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaProp_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::get(p1.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPropp result= (oaDoubleAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaProp_FromoaDoubleAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaProp, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaProp_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaProp_static_find,METH_VARARGS,oaDoubleAppDef_oaProp_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaProp_static_get,METH_VARARGS,oaDoubleAppDef_oaProp_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaProp_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaProp_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaProp\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaProp",
           (PyObject*)(&PyoaDoubleAppDef_oaProp_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaProp\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaProp_Type.tp_dict;
    for(method=oaDoubleAppDef_oaProp_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaPurpose
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaPurpose_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaPurpose_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaPurposeObject* self = (PyoaDoubleAppDef_oaPurposeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaPurpose)
    {
        PyParamoaDoubleAppDef_oaPurpose p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaPurpose_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaPurpose, Choices are:\n"
        "    (oaDoubleAppDef_oaPurpose)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaPurpose_tp_dealloc(PyoaDoubleAppDef_oaPurposeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaPurpose_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaPurpose value;
    int convert_status=PyoaDoubleAppDef_oaPurpose_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaPurpose::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaPurpose_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaPurpose v1;
    PyParamoaDoubleAppDef_oaPurpose v2;
    int convert_status1=PyoaDoubleAppDef_oaPurpose_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaPurpose_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaPurpose_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaPurpose* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaPurpose_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaPurpose**) ((PyoaDoubleAppDef_oaPurposeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaPurpose Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(oaDoubleAppDef_oaPurpose** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaPurpose* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaPurpose_Type.tp_alloc(&PyoaDoubleAppDef_oaPurpose_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaPurposeObject* self = (PyoaDoubleAppDef_oaPurposeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(oaDoubleAppDef_oaPurpose* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaPurpose_Type.tp_alloc(&PyoaDoubleAppDef_oaPurpose_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaPurposeObject* self = (PyoaDoubleAppDef_oaPurposeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPurpose_get_doc[] = 
"Class: oaDoubleAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: oaDouble get(const oaPurpose* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaPurpose,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaPurpose_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPurpose data;
    int convert_status=PyoaDoubleAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPurposeObject* self=(PyoaDoubleAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPurpose_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaPurpose, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaPurpose_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPurpose data;
    int convert_status=PyoaDoubleAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPurposeObject* self=(PyoaDoubleAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPurpose_set_doc[] = 
"Class: oaDoubleAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaPurpose,oaDouble)\n"
"    Calls: void set(oaPurpose* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaPurpose,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaPurpose_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaPurpose data;
    int convert_status=PyoaDoubleAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaPurposeObject* self=(PyoaDoubleAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPurpose_isNull_doc[] =
"Class: oaDoubleAppDef_oaPurpose, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaPurpose_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaPurpose data;
    int convert_status=PyoaDoubleAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaPurpose_assign_doc[] = 
"Class: oaDoubleAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaPurpose_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaPurpose data;
  int convert_status=PyoaDoubleAppDef_oaPurpose_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaPurpose p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaPurpose_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaPurpose_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaPurpose_get,METH_VARARGS,oaDoubleAppDef_oaPurpose_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaPurpose_getDefault,METH_VARARGS,oaDoubleAppDef_oaPurpose_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaPurpose_set,METH_VARARGS,oaDoubleAppDef_oaPurpose_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaPurpose_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaPurpose_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaPurpose_tp_assign,METH_VARARGS,oaDoubleAppDef_oaPurpose_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPurpose_doc[] = 
"Class: oaDoubleAppDef_oaPurpose\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaPurpose)\n"
"    Calls: (const oaDoubleAppDef_oaPurpose&)\n"
"    Signature: oaDoubleAppDef_oaPurpose||cref-oaDoubleAppDef_oaPurpose,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaPurpose_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaPurpose",
    sizeof(PyoaDoubleAppDef_oaPurposeObject),
    0,
    (destructor)oaDoubleAppDef_oaPurpose_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaPurpose_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaPurpose_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaPurpose_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaPurpose_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaPurpose_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPurpose_static_find_doc[] = 
"Class: oaDoubleAppDef_oaPurpose, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaPurpose* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaPurpose* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaPurpose_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::find(p1.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaPurpose, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaPurpose_static_get_doc[] = 
"Class: oaDoubleAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaPurpose* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaPurpose* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaPurpose* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaPurpose_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::get(p1.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaPurposep result= (oaDoubleAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaPurpose_FromoaDoubleAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaPurpose, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaPurpose_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaPurpose_static_find,METH_VARARGS,oaDoubleAppDef_oaPurpose_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaPurpose_static_get,METH_VARARGS,oaDoubleAppDef_oaPurpose_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaPurpose_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaPurpose_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaPurpose\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaPurpose",
           (PyObject*)(&PyoaDoubleAppDef_oaPurpose_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaPurpose\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaPurpose_Type.tp_dict;
    for(method=oaDoubleAppDef_oaPurpose_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaReducedModel
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaReducedModel_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaReducedModel_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaReducedModelObject* self = (PyoaDoubleAppDef_oaReducedModelObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaReducedModel)
    {
        PyParamoaDoubleAppDef_oaReducedModel p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaReducedModel_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaReducedModel, Choices are:\n"
        "    (oaDoubleAppDef_oaReducedModel)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaReducedModel_tp_dealloc(PyoaDoubleAppDef_oaReducedModelObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaReducedModel_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaReducedModel value;
    int convert_status=PyoaDoubleAppDef_oaReducedModel_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaDoubleAppDef_oaReducedModel::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaReducedModel_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaReducedModel v1;
    PyParamoaDoubleAppDef_oaReducedModel v2;
    int convert_status1=PyoaDoubleAppDef_oaReducedModel_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaReducedModel_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaReducedModel_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaReducedModel* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaReducedModel_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaReducedModel**) ((PyoaDoubleAppDef_oaReducedModelObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaReducedModel Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(oaDoubleAppDef_oaReducedModel** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaReducedModel* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaReducedModel_Type.tp_alloc(&PyoaDoubleAppDef_oaReducedModel_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaReducedModelObject* self = (PyoaDoubleAppDef_oaReducedModelObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(oaDoubleAppDef_oaReducedModel* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaReducedModel_Type.tp_alloc(&PyoaDoubleAppDef_oaReducedModel_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaReducedModelObject* self = (PyoaDoubleAppDef_oaReducedModelObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReducedModel_get_doc[] = 
"Class: oaDoubleAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: oaDouble get(const oaReducedModel* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaReducedModel,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaReducedModel_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReducedModel data;
    int convert_status=PyoaDoubleAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReducedModelObject* self=(PyoaDoubleAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReducedModel_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaReducedModel, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaReducedModel_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReducedModel data;
    int convert_status=PyoaDoubleAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReducedModelObject* self=(PyoaDoubleAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReducedModel_set_doc[] = 
"Class: oaDoubleAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaReducedModel,oaDouble)\n"
"    Calls: void set(oaReducedModel* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaReducedModel,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaReducedModel_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReducedModel data;
    int convert_status=PyoaDoubleAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReducedModelObject* self=(PyoaDoubleAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReducedModel_isNull_doc[] =
"Class: oaDoubleAppDef_oaReducedModel, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaReducedModel_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaReducedModel data;
    int convert_status=PyoaDoubleAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaReducedModel_assign_doc[] = 
"Class: oaDoubleAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaReducedModel_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaReducedModel data;
  int convert_status=PyoaDoubleAppDef_oaReducedModel_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaReducedModel p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaReducedModel_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaReducedModel_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaReducedModel_get,METH_VARARGS,oaDoubleAppDef_oaReducedModel_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaReducedModel_getDefault,METH_VARARGS,oaDoubleAppDef_oaReducedModel_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaReducedModel_set,METH_VARARGS,oaDoubleAppDef_oaReducedModel_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaReducedModel_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaReducedModel_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaReducedModel_tp_assign,METH_VARARGS,oaDoubleAppDef_oaReducedModel_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReducedModel_doc[] = 
"Class: oaDoubleAppDef_oaReducedModel\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaReducedModel)\n"
"    Calls: (const oaDoubleAppDef_oaReducedModel&)\n"
"    Signature: oaDoubleAppDef_oaReducedModel||cref-oaDoubleAppDef_oaReducedModel,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaReducedModel_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaReducedModel",
    sizeof(PyoaDoubleAppDef_oaReducedModelObject),
    0,
    (destructor)oaDoubleAppDef_oaReducedModel_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaReducedModel_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaReducedModel_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaReducedModel_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaReducedModel_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaReducedModel_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReducedModel_static_find_doc[] = 
"Class: oaDoubleAppDef_oaReducedModel, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaReducedModel_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::find(p1.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaReducedModel, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReducedModel_static_get_doc[] = 
"Class: oaDoubleAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaReducedModel_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::get(p1.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReducedModelp result= (oaDoubleAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaReducedModel_FromoaDoubleAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaReducedModel, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaReducedModel_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaReducedModel_static_find,METH_VARARGS,oaDoubleAppDef_oaReducedModel_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaReducedModel_static_get,METH_VARARGS,oaDoubleAppDef_oaReducedModel_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaReducedModel_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaReducedModel_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaReducedModel\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaReducedModel",
           (PyObject*)(&PyoaDoubleAppDef_oaReducedModel_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaReducedModel\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaReducedModel_Type.tp_dict;
    for(method=oaDoubleAppDef_oaReducedModel_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaReticle
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaReticle_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaReticle_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaReticleObject* self = (PyoaDoubleAppDef_oaReticleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaReticle)
    {
        PyParamoaDoubleAppDef_oaReticle p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaReticle_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaReticle, Choices are:\n"
        "    (oaDoubleAppDef_oaReticle)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaReticle_tp_dealloc(PyoaDoubleAppDef_oaReticleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaReticle_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaReticle value;
    int convert_status=PyoaDoubleAppDef_oaReticle_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaReticle::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaReticle_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaReticle v1;
    PyParamoaDoubleAppDef_oaReticle v2;
    int convert_status1=PyoaDoubleAppDef_oaReticle_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaReticle_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaReticle_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaReticle* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaReticle_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaReticle**) ((PyoaDoubleAppDef_oaReticleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaReticle Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(oaDoubleAppDef_oaReticle** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaReticle* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaReticle_Type.tp_alloc(&PyoaDoubleAppDef_oaReticle_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaReticleObject* self = (PyoaDoubleAppDef_oaReticleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(oaDoubleAppDef_oaReticle* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaReticle_Type.tp_alloc(&PyoaDoubleAppDef_oaReticle_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaReticleObject* self = (PyoaDoubleAppDef_oaReticleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticle_get_doc[] = 
"Class: oaDoubleAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaReticle)\n"
"    Calls: oaDouble get(const oaReticle* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaReticle,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaReticle_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReticle data;
    int convert_status=PyoaDoubleAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReticleObject* self=(PyoaDoubleAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticle_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaReticle, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaReticle_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReticle data;
    int convert_status=PyoaDoubleAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReticleObject* self=(PyoaDoubleAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticle_set_doc[] = 
"Class: oaDoubleAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaReticle,oaDouble)\n"
"    Calls: void set(oaReticle* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaReticle,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaReticle_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReticle data;
    int convert_status=PyoaDoubleAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReticleObject* self=(PyoaDoubleAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticle_isNull_doc[] =
"Class: oaDoubleAppDef_oaReticle, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaReticle_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaReticle data;
    int convert_status=PyoaDoubleAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaReticle_assign_doc[] = 
"Class: oaDoubleAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaReticle_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaReticle data;
  int convert_status=PyoaDoubleAppDef_oaReticle_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaReticle p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaReticle_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaReticle_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaReticle_get,METH_VARARGS,oaDoubleAppDef_oaReticle_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaReticle_getDefault,METH_VARARGS,oaDoubleAppDef_oaReticle_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaReticle_set,METH_VARARGS,oaDoubleAppDef_oaReticle_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaReticle_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaReticle_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaReticle_tp_assign,METH_VARARGS,oaDoubleAppDef_oaReticle_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticle_doc[] = 
"Class: oaDoubleAppDef_oaReticle\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaReticle)\n"
"    Calls: (const oaDoubleAppDef_oaReticle&)\n"
"    Signature: oaDoubleAppDef_oaReticle||cref-oaDoubleAppDef_oaReticle,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaReticle_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaReticle",
    sizeof(PyoaDoubleAppDef_oaReticleObject),
    0,
    (destructor)oaDoubleAppDef_oaReticle_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaReticle_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaReticle_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaReticle_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaReticle_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaReticle_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticle_static_find_doc[] = 
"Class: oaDoubleAppDef_oaReticle, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaReticle* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaReticle|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaReticle* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaReticle_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::find(p1.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaReticle, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticle_static_get_doc[] = 
"Class: oaDoubleAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaReticle* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticle|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaReticle* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticle|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaReticle* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticle|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaReticle_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::get(p1.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticlep result= (oaDoubleAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaReticle_FromoaDoubleAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaReticle, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaReticle_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaReticle_static_find,METH_VARARGS,oaDoubleAppDef_oaReticle_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaReticle_static_get,METH_VARARGS,oaDoubleAppDef_oaReticle_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaReticle_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaReticle_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaReticle\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaReticle",
           (PyObject*)(&PyoaDoubleAppDef_oaReticle_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaReticle\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaReticle_Type.tp_dict;
    for(method=oaDoubleAppDef_oaReticle_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaReticleRef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaReticleRef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaReticleRef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaReticleRefObject* self = (PyoaDoubleAppDef_oaReticleRefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaReticleRef)
    {
        PyParamoaDoubleAppDef_oaReticleRef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaReticleRef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaReticleRef, Choices are:\n"
        "    (oaDoubleAppDef_oaReticleRef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaReticleRef_tp_dealloc(PyoaDoubleAppDef_oaReticleRefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaReticleRef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaReticleRef value;
    int convert_status=PyoaDoubleAppDef_oaReticleRef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaDoubleAppDef_oaReticleRef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaReticleRef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaReticleRef v1;
    PyParamoaDoubleAppDef_oaReticleRef v2;
    int convert_status1=PyoaDoubleAppDef_oaReticleRef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaReticleRef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaReticleRef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaReticleRef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaReticleRef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaReticleRef**) ((PyoaDoubleAppDef_oaReticleRefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaReticleRef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(oaDoubleAppDef_oaReticleRef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaReticleRef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaReticleRef_Type.tp_alloc(&PyoaDoubleAppDef_oaReticleRef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaReticleRefObject* self = (PyoaDoubleAppDef_oaReticleRefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(oaDoubleAppDef_oaReticleRef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaReticleRef_Type.tp_alloc(&PyoaDoubleAppDef_oaReticleRef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaReticleRefObject* self = (PyoaDoubleAppDef_oaReticleRefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticleRef_get_doc[] = 
"Class: oaDoubleAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: oaDouble get(const oaReticleRef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaReticleRef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaReticleRef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReticleRef data;
    int convert_status=PyoaDoubleAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReticleRefObject* self=(PyoaDoubleAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticleRef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaReticleRef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaReticleRef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReticleRef data;
    int convert_status=PyoaDoubleAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReticleRefObject* self=(PyoaDoubleAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticleRef_set_doc[] = 
"Class: oaDoubleAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaReticleRef,oaDouble)\n"
"    Calls: void set(oaReticleRef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaReticleRef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaReticleRef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaReticleRef data;
    int convert_status=PyoaDoubleAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaReticleRefObject* self=(PyoaDoubleAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticleRef_isNull_doc[] =
"Class: oaDoubleAppDef_oaReticleRef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaReticleRef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaReticleRef data;
    int convert_status=PyoaDoubleAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaReticleRef_assign_doc[] = 
"Class: oaDoubleAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaReticleRef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaReticleRef data;
  int convert_status=PyoaDoubleAppDef_oaReticleRef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaReticleRef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaReticleRef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaReticleRef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaReticleRef_get,METH_VARARGS,oaDoubleAppDef_oaReticleRef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaReticleRef_getDefault,METH_VARARGS,oaDoubleAppDef_oaReticleRef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaReticleRef_set,METH_VARARGS,oaDoubleAppDef_oaReticleRef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaReticleRef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaReticleRef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaReticleRef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaReticleRef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticleRef_doc[] = 
"Class: oaDoubleAppDef_oaReticleRef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaReticleRef)\n"
"    Calls: (const oaDoubleAppDef_oaReticleRef&)\n"
"    Signature: oaDoubleAppDef_oaReticleRef||cref-oaDoubleAppDef_oaReticleRef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaReticleRef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaReticleRef",
    sizeof(PyoaDoubleAppDef_oaReticleRefObject),
    0,
    (destructor)oaDoubleAppDef_oaReticleRef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaReticleRef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaReticleRef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaReticleRef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaReticleRef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaReticleRef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticleRef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaReticleRef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaReticleRef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::find(p1.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaReticleRef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaReticleRef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaReticleRef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::get(p1.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaReticleRefp result= (oaDoubleAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaReticleRef_FromoaDoubleAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaReticleRef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaReticleRef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaReticleRef_static_find,METH_VARARGS,oaDoubleAppDef_oaReticleRef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaReticleRef_static_get,METH_VARARGS,oaDoubleAppDef_oaReticleRef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaReticleRef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaReticleRef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaReticleRef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaReticleRef",
           (PyObject*)(&PyoaDoubleAppDef_oaReticleRef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaReticleRef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaReticleRef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaReticleRef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaRoute
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaRoute_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaRoute_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaRouteObject* self = (PyoaDoubleAppDef_oaRouteObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaRoute)
    {
        PyParamoaDoubleAppDef_oaRoute p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaRoute_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaRoute, Choices are:\n"
        "    (oaDoubleAppDef_oaRoute)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaRoute_tp_dealloc(PyoaDoubleAppDef_oaRouteObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaRoute_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaRoute value;
    int convert_status=PyoaDoubleAppDef_oaRoute_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaDoubleAppDef_oaRoute::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaRoute_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaRoute v1;
    PyParamoaDoubleAppDef_oaRoute v2;
    int convert_status1=PyoaDoubleAppDef_oaRoute_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaRoute_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaRoute_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaRoute* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaRoute_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaRoute**) ((PyoaDoubleAppDef_oaRouteObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaRoute Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(oaDoubleAppDef_oaRoute** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaRoute* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaRoute_Type.tp_alloc(&PyoaDoubleAppDef_oaRoute_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaRouteObject* self = (PyoaDoubleAppDef_oaRouteObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(oaDoubleAppDef_oaRoute* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaRoute_Type.tp_alloc(&PyoaDoubleAppDef_oaRoute_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaRouteObject* self = (PyoaDoubleAppDef_oaRouteObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRoute_get_doc[] = 
"Class: oaDoubleAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaRoute)\n"
"    Calls: oaDouble get(const oaRoute* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaRoute,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaRoute_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRoute data;
    int convert_status=PyoaDoubleAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRouteObject* self=(PyoaDoubleAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRoute_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaRoute, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaRoute_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRoute data;
    int convert_status=PyoaDoubleAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRouteObject* self=(PyoaDoubleAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRoute_set_doc[] = 
"Class: oaDoubleAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaRoute,oaDouble)\n"
"    Calls: void set(oaRoute* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaRoute,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaRoute_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRoute data;
    int convert_status=PyoaDoubleAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRouteObject* self=(PyoaDoubleAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRoute_isNull_doc[] =
"Class: oaDoubleAppDef_oaRoute, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaRoute_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaRoute data;
    int convert_status=PyoaDoubleAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaRoute_assign_doc[] = 
"Class: oaDoubleAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaRoute_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaRoute data;
  int convert_status=PyoaDoubleAppDef_oaRoute_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaRoute p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaRoute_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaRoute_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaRoute_get,METH_VARARGS,oaDoubleAppDef_oaRoute_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaRoute_getDefault,METH_VARARGS,oaDoubleAppDef_oaRoute_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaRoute_set,METH_VARARGS,oaDoubleAppDef_oaRoute_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaRoute_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaRoute_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaRoute_tp_assign,METH_VARARGS,oaDoubleAppDef_oaRoute_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRoute_doc[] = 
"Class: oaDoubleAppDef_oaRoute\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaRoute)\n"
"    Calls: (const oaDoubleAppDef_oaRoute&)\n"
"    Signature: oaDoubleAppDef_oaRoute||cref-oaDoubleAppDef_oaRoute,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaRoute_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaRoute",
    sizeof(PyoaDoubleAppDef_oaRouteObject),
    0,
    (destructor)oaDoubleAppDef_oaRoute_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaRoute_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaRoute_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaRoute_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaRoute_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaRoute_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRoute_static_find_doc[] = 
"Class: oaDoubleAppDef_oaRoute, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaRoute* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaRoute|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaRoute* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaRoute_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::find(p1.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaRoute, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRoute_static_get_doc[] = 
"Class: oaDoubleAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaRoute* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRoute|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaRoute* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRoute|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaRoute* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRoute|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaRoute_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::get(p1.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRoutep result= (oaDoubleAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaRoute_FromoaDoubleAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaRoute, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaRoute_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaRoute_static_find,METH_VARARGS,oaDoubleAppDef_oaRoute_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaRoute_static_get,METH_VARARGS,oaDoubleAppDef_oaRoute_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaRoute_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaRoute_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaRoute\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaRoute",
           (PyObject*)(&PyoaDoubleAppDef_oaRoute_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaRoute\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaRoute_Type.tp_dict;
    for(method=oaDoubleAppDef_oaRoute_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaRow
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaRow_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaRow_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaRowObject* self = (PyoaDoubleAppDef_oaRowObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaRow)
    {
        PyParamoaDoubleAppDef_oaRow p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaRow_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaRow, Choices are:\n"
        "    (oaDoubleAppDef_oaRow)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaRow_tp_dealloc(PyoaDoubleAppDef_oaRowObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaRow_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaRow value;
    int convert_status=PyoaDoubleAppDef_oaRow_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaDoubleAppDef_oaRow::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaRow_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaRow v1;
    PyParamoaDoubleAppDef_oaRow v2;
    int convert_status1=PyoaDoubleAppDef_oaRow_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaRow_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaRow_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaRow* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaRow_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaRow**) ((PyoaDoubleAppDef_oaRowObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaRow Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(oaDoubleAppDef_oaRow** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaRow* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaRow_Type.tp_alloc(&PyoaDoubleAppDef_oaRow_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaRowObject* self = (PyoaDoubleAppDef_oaRowObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(oaDoubleAppDef_oaRow* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaRow_Type.tp_alloc(&PyoaDoubleAppDef_oaRow_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaRowObject* self = (PyoaDoubleAppDef_oaRowObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRow_get_doc[] = 
"Class: oaDoubleAppDef_oaRow, Function: get\n"
"  Paramegers: (oaRow)\n"
"    Calls: oaDouble get(const oaRow* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaRow,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaRow_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRow data;
    int convert_status=PyoaDoubleAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRowObject* self=(PyoaDoubleAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRow_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaRow, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaRow_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRow data;
    int convert_status=PyoaDoubleAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRowObject* self=(PyoaDoubleAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRow_set_doc[] = 
"Class: oaDoubleAppDef_oaRow, Function: set\n"
"  Paramegers: (oaRow,oaDouble)\n"
"    Calls: void set(oaRow* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaRow,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaRow_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRow data;
    int convert_status=PyoaDoubleAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRowObject* self=(PyoaDoubleAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRow_isNull_doc[] =
"Class: oaDoubleAppDef_oaRow, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaRow_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaRow data;
    int convert_status=PyoaDoubleAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaRow_assign_doc[] = 
"Class: oaDoubleAppDef_oaRow, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaRow_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaRow data;
  int convert_status=PyoaDoubleAppDef_oaRow_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaRow p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaRow_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaRow_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaRow_get,METH_VARARGS,oaDoubleAppDef_oaRow_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaRow_getDefault,METH_VARARGS,oaDoubleAppDef_oaRow_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaRow_set,METH_VARARGS,oaDoubleAppDef_oaRow_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaRow_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaRow_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaRow_tp_assign,METH_VARARGS,oaDoubleAppDef_oaRow_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRow_doc[] = 
"Class: oaDoubleAppDef_oaRow\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaRow)\n"
"    Calls: (const oaDoubleAppDef_oaRow&)\n"
"    Signature: oaDoubleAppDef_oaRow||cref-oaDoubleAppDef_oaRow,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaRow_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaRow",
    sizeof(PyoaDoubleAppDef_oaRowObject),
    0,
    (destructor)oaDoubleAppDef_oaRow_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaRow_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaRow_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaRow_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaRow_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaRow_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRow_static_find_doc[] = 
"Class: oaDoubleAppDef_oaRow, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaRow* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaRow|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaRow* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaRow_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::find(p1.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaRow, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRow_static_get_doc[] = 
"Class: oaDoubleAppDef_oaRow, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaRow* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRow|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaRow* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRow|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaRow* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRow|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaRow_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::get(p1.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowp result= (oaDoubleAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaRow_FromoaDoubleAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaRow, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaRow_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaRow_static_find,METH_VARARGS,oaDoubleAppDef_oaRow_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaRow_static_get,METH_VARARGS,oaDoubleAppDef_oaRow_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaRow_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaRow_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaRow\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaRow",
           (PyObject*)(&PyoaDoubleAppDef_oaRow_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaRow\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaRow_Type.tp_dict;
    for(method=oaDoubleAppDef_oaRow_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaRowHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaRowHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaRowHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaRowHeaderObject* self = (PyoaDoubleAppDef_oaRowHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaRowHeader)
    {
        PyParamoaDoubleAppDef_oaRowHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaRowHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaRowHeader, Choices are:\n"
        "    (oaDoubleAppDef_oaRowHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaRowHeader_tp_dealloc(PyoaDoubleAppDef_oaRowHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaRowHeader_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaRowHeader value;
    int convert_status=PyoaDoubleAppDef_oaRowHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaDoubleAppDef_oaRowHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaRowHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaRowHeader v1;
    PyParamoaDoubleAppDef_oaRowHeader v2;
    int convert_status1=PyoaDoubleAppDef_oaRowHeader_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaRowHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaRowHeader_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaRowHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaRowHeader_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaRowHeader**) ((PyoaDoubleAppDef_oaRowHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaRowHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(oaDoubleAppDef_oaRowHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaRowHeader* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaRowHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaRowHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaRowHeaderObject* self = (PyoaDoubleAppDef_oaRowHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(oaDoubleAppDef_oaRowHeader* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaRowHeader_Type.tp_alloc(&PyoaDoubleAppDef_oaRowHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaRowHeaderObject* self = (PyoaDoubleAppDef_oaRowHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRowHeader_get_doc[] = 
"Class: oaDoubleAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: oaDouble get(const oaRowHeader* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaRowHeader,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaRowHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRowHeader data;
    int convert_status=PyoaDoubleAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRowHeaderObject* self=(PyoaDoubleAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRowHeader_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaRowHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaRowHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRowHeader data;
    int convert_status=PyoaDoubleAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRowHeaderObject* self=(PyoaDoubleAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRowHeader_set_doc[] = 
"Class: oaDoubleAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaRowHeader,oaDouble)\n"
"    Calls: void set(oaRowHeader* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaRowHeader,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaRowHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaRowHeader data;
    int convert_status=PyoaDoubleAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaRowHeaderObject* self=(PyoaDoubleAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRowHeader_isNull_doc[] =
"Class: oaDoubleAppDef_oaRowHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaRowHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaRowHeader data;
    int convert_status=PyoaDoubleAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaRowHeader_assign_doc[] = 
"Class: oaDoubleAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaRowHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaRowHeader data;
  int convert_status=PyoaDoubleAppDef_oaRowHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaRowHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaRowHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaRowHeader_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaRowHeader_get,METH_VARARGS,oaDoubleAppDef_oaRowHeader_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaRowHeader_getDefault,METH_VARARGS,oaDoubleAppDef_oaRowHeader_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaRowHeader_set,METH_VARARGS,oaDoubleAppDef_oaRowHeader_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaRowHeader_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaRowHeader_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaRowHeader_tp_assign,METH_VARARGS,oaDoubleAppDef_oaRowHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRowHeader_doc[] = 
"Class: oaDoubleAppDef_oaRowHeader\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaRowHeader)\n"
"    Calls: (const oaDoubleAppDef_oaRowHeader&)\n"
"    Signature: oaDoubleAppDef_oaRowHeader||cref-oaDoubleAppDef_oaRowHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaRowHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaRowHeader",
    sizeof(PyoaDoubleAppDef_oaRowHeaderObject),
    0,
    (destructor)oaDoubleAppDef_oaRowHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaRowHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaRowHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaRowHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaRowHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaRowHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRowHeader_static_find_doc[] = 
"Class: oaDoubleAppDef_oaRowHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaRowHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::find(p1.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaRowHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaRowHeader_static_get_doc[] = 
"Class: oaDoubleAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaRowHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::get(p1.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaRowHeaderp result= (oaDoubleAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaRowHeader_FromoaDoubleAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaRowHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaRowHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaRowHeader_static_find,METH_VARARGS,oaDoubleAppDef_oaRowHeader_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaRowHeader_static_get,METH_VARARGS,oaDoubleAppDef_oaRowHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaRowHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaRowHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaRowHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaRowHeader",
           (PyObject*)(&PyoaDoubleAppDef_oaRowHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaRowHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaRowHeader_Type.tp_dict;
    for(method=oaDoubleAppDef_oaRowHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaScanChain
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaScanChain_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaScanChain_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaScanChainObject* self = (PyoaDoubleAppDef_oaScanChainObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaScanChain)
    {
        PyParamoaDoubleAppDef_oaScanChain p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaScanChain_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaScanChain, Choices are:\n"
        "    (oaDoubleAppDef_oaScanChain)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaScanChain_tp_dealloc(PyoaDoubleAppDef_oaScanChainObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaScanChain_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaScanChain value;
    int convert_status=PyoaDoubleAppDef_oaScanChain_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaDoubleAppDef_oaScanChain::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaScanChain_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaScanChain v1;
    PyParamoaDoubleAppDef_oaScanChain v2;
    int convert_status1=PyoaDoubleAppDef_oaScanChain_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaScanChain_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaScanChain_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaScanChain* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaScanChain_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaScanChain**) ((PyoaDoubleAppDef_oaScanChainObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaScanChain Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(oaDoubleAppDef_oaScanChain** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaScanChain* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaScanChain_Type.tp_alloc(&PyoaDoubleAppDef_oaScanChain_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaScanChainObject* self = (PyoaDoubleAppDef_oaScanChainObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(oaDoubleAppDef_oaScanChain* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaScanChain_Type.tp_alloc(&PyoaDoubleAppDef_oaScanChain_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaScanChainObject* self = (PyoaDoubleAppDef_oaScanChainObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChain_get_doc[] = 
"Class: oaDoubleAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: oaDouble get(const oaScanChain* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaScanChain,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaScanChain_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChain data;
    int convert_status=PyoaDoubleAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainObject* self=(PyoaDoubleAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChain_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaScanChain, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChain_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChain data;
    int convert_status=PyoaDoubleAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainObject* self=(PyoaDoubleAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChain_set_doc[] = 
"Class: oaDoubleAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaScanChain,oaDouble)\n"
"    Calls: void set(oaScanChain* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaScanChain,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaScanChain_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChain data;
    int convert_status=PyoaDoubleAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainObject* self=(PyoaDoubleAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChain_isNull_doc[] =
"Class: oaDoubleAppDef_oaScanChain, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChain_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaScanChain data;
    int convert_status=PyoaDoubleAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaScanChain_assign_doc[] = 
"Class: oaDoubleAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChain_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaScanChain data;
  int convert_status=PyoaDoubleAppDef_oaScanChain_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaScanChain p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaScanChain_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaScanChain_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaScanChain_get,METH_VARARGS,oaDoubleAppDef_oaScanChain_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaScanChain_getDefault,METH_VARARGS,oaDoubleAppDef_oaScanChain_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaScanChain_set,METH_VARARGS,oaDoubleAppDef_oaScanChain_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaScanChain_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaScanChain_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaScanChain_tp_assign,METH_VARARGS,oaDoubleAppDef_oaScanChain_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChain_doc[] = 
"Class: oaDoubleAppDef_oaScanChain\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaScanChain)\n"
"    Calls: (const oaDoubleAppDef_oaScanChain&)\n"
"    Signature: oaDoubleAppDef_oaScanChain||cref-oaDoubleAppDef_oaScanChain,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaScanChain_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaScanChain",
    sizeof(PyoaDoubleAppDef_oaScanChainObject),
    0,
    (destructor)oaDoubleAppDef_oaScanChain_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaScanChain_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaScanChain_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaScanChain_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaScanChain_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaScanChain_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChain_static_find_doc[] = 
"Class: oaDoubleAppDef_oaScanChain, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaScanChain* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaScanChain* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaScanChain_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::find(p1.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaScanChain, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChain_static_get_doc[] = 
"Class: oaDoubleAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaScanChain* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaScanChain* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaScanChain* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaScanChain_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::get(p1.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainp result= (oaDoubleAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaScanChain_FromoaDoubleAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaScanChain, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaScanChain_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaScanChain_static_find,METH_VARARGS,oaDoubleAppDef_oaScanChain_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaScanChain_static_get,METH_VARARGS,oaDoubleAppDef_oaScanChain_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaScanChain_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaScanChain_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaScanChain\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaScanChain",
           (PyObject*)(&PyoaDoubleAppDef_oaScanChain_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaScanChain\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaScanChain_Type.tp_dict;
    for(method=oaDoubleAppDef_oaScanChain_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaScanChainInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaScanChainInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaScanChainInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaScanChainInstObject* self = (PyoaDoubleAppDef_oaScanChainInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaScanChainInst)
    {
        PyParamoaDoubleAppDef_oaScanChainInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaScanChainInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaScanChainInst, Choices are:\n"
        "    (oaDoubleAppDef_oaScanChainInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaScanChainInst_tp_dealloc(PyoaDoubleAppDef_oaScanChainInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaScanChainInst_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaScanChainInst value;
    int convert_status=PyoaDoubleAppDef_oaScanChainInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaDoubleAppDef_oaScanChainInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaScanChainInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaScanChainInst v1;
    PyParamoaDoubleAppDef_oaScanChainInst v2;
    int convert_status1=PyoaDoubleAppDef_oaScanChainInst_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaScanChainInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaScanChainInst_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaScanChainInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaScanChainInst_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaScanChainInst**) ((PyoaDoubleAppDef_oaScanChainInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaScanChainInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(oaDoubleAppDef_oaScanChainInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaScanChainInst* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaScanChainInst_Type.tp_alloc(&PyoaDoubleAppDef_oaScanChainInst_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaScanChainInstObject* self = (PyoaDoubleAppDef_oaScanChainInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(oaDoubleAppDef_oaScanChainInst* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaScanChainInst_Type.tp_alloc(&PyoaDoubleAppDef_oaScanChainInst_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaScanChainInstObject* self = (PyoaDoubleAppDef_oaScanChainInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainInst_get_doc[] = 
"Class: oaDoubleAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: oaDouble get(const oaScanChainInst* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaScanChainInst,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChainInst data;
    int convert_status=PyoaDoubleAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainInstObject* self=(PyoaDoubleAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainInst_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaScanChainInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChainInst data;
    int convert_status=PyoaDoubleAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainInstObject* self=(PyoaDoubleAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainInst_set_doc[] = 
"Class: oaDoubleAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaScanChainInst,oaDouble)\n"
"    Calls: void set(oaScanChainInst* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaScanChainInst,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChainInst data;
    int convert_status=PyoaDoubleAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainInstObject* self=(PyoaDoubleAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainInst_isNull_doc[] =
"Class: oaDoubleAppDef_oaScanChainInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaScanChainInst data;
    int convert_status=PyoaDoubleAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaScanChainInst_assign_doc[] = 
"Class: oaDoubleAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaScanChainInst data;
  int convert_status=PyoaDoubleAppDef_oaScanChainInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaScanChainInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaScanChainInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaScanChainInst_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaScanChainInst_get,METH_VARARGS,oaDoubleAppDef_oaScanChainInst_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaScanChainInst_getDefault,METH_VARARGS,oaDoubleAppDef_oaScanChainInst_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaScanChainInst_set,METH_VARARGS,oaDoubleAppDef_oaScanChainInst_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaScanChainInst_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaScanChainInst_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaScanChainInst_tp_assign,METH_VARARGS,oaDoubleAppDef_oaScanChainInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainInst_doc[] = 
"Class: oaDoubleAppDef_oaScanChainInst\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaScanChainInst)\n"
"    Calls: (const oaDoubleAppDef_oaScanChainInst&)\n"
"    Signature: oaDoubleAppDef_oaScanChainInst||cref-oaDoubleAppDef_oaScanChainInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaScanChainInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaScanChainInst",
    sizeof(PyoaDoubleAppDef_oaScanChainInstObject),
    0,
    (destructor)oaDoubleAppDef_oaScanChainInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaScanChainInst_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaScanChainInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaScanChainInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaScanChainInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaScanChainInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainInst_static_find_doc[] = 
"Class: oaDoubleAppDef_oaScanChainInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::find(p1.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaScanChainInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainInst_static_get_doc[] = 
"Class: oaDoubleAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::get(p1.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainInstp result= (oaDoubleAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaScanChainInst_FromoaDoubleAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaScanChainInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaScanChainInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaScanChainInst_static_find,METH_VARARGS,oaDoubleAppDef_oaScanChainInst_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaScanChainInst_static_get,METH_VARARGS,oaDoubleAppDef_oaScanChainInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaScanChainInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaScanChainInst_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaScanChainInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaScanChainInst",
           (PyObject*)(&PyoaDoubleAppDef_oaScanChainInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaScanChainInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaScanChainInst_Type.tp_dict;
    for(method=oaDoubleAppDef_oaScanChainInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaScanChainSet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaScanChainSet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaScanChainSet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaScanChainSetObject* self = (PyoaDoubleAppDef_oaScanChainSetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaScanChainSet)
    {
        PyParamoaDoubleAppDef_oaScanChainSet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaScanChainSet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaScanChainSet, Choices are:\n"
        "    (oaDoubleAppDef_oaScanChainSet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaScanChainSet_tp_dealloc(PyoaDoubleAppDef_oaScanChainSetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaScanChainSet_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaScanChainSet value;
    int convert_status=PyoaDoubleAppDef_oaScanChainSet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaDoubleAppDef_oaScanChainSet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaScanChainSet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaScanChainSet v1;
    PyParamoaDoubleAppDef_oaScanChainSet v2;
    int convert_status1=PyoaDoubleAppDef_oaScanChainSet_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaScanChainSet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaScanChainSet_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaScanChainSet* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaScanChainSet_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaScanChainSet**) ((PyoaDoubleAppDef_oaScanChainSetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaScanChainSet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(oaDoubleAppDef_oaScanChainSet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaScanChainSet* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaScanChainSet_Type.tp_alloc(&PyoaDoubleAppDef_oaScanChainSet_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaScanChainSetObject* self = (PyoaDoubleAppDef_oaScanChainSetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(oaDoubleAppDef_oaScanChainSet* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaScanChainSet_Type.tp_alloc(&PyoaDoubleAppDef_oaScanChainSet_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaScanChainSetObject* self = (PyoaDoubleAppDef_oaScanChainSetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainSet_get_doc[] = 
"Class: oaDoubleAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: oaDouble get(const oaScanChainSet* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaScanChainSet,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainSet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChainSet data;
    int convert_status=PyoaDoubleAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainSetObject* self=(PyoaDoubleAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainSet_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaScanChainSet, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainSet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChainSet data;
    int convert_status=PyoaDoubleAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainSetObject* self=(PyoaDoubleAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainSet_set_doc[] = 
"Class: oaDoubleAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaScanChainSet,oaDouble)\n"
"    Calls: void set(oaScanChainSet* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaScanChainSet,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainSet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaScanChainSet data;
    int convert_status=PyoaDoubleAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaScanChainSetObject* self=(PyoaDoubleAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainSet_isNull_doc[] =
"Class: oaDoubleAppDef_oaScanChainSet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainSet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaScanChainSet data;
    int convert_status=PyoaDoubleAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaScanChainSet_assign_doc[] = 
"Class: oaDoubleAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainSet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaScanChainSet data;
  int convert_status=PyoaDoubleAppDef_oaScanChainSet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaScanChainSet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaScanChainSet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaScanChainSet_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaScanChainSet_get,METH_VARARGS,oaDoubleAppDef_oaScanChainSet_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaScanChainSet_getDefault,METH_VARARGS,oaDoubleAppDef_oaScanChainSet_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaScanChainSet_set,METH_VARARGS,oaDoubleAppDef_oaScanChainSet_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaScanChainSet_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaScanChainSet_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaScanChainSet_tp_assign,METH_VARARGS,oaDoubleAppDef_oaScanChainSet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainSet_doc[] = 
"Class: oaDoubleAppDef_oaScanChainSet\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaScanChainSet)\n"
"    Calls: (const oaDoubleAppDef_oaScanChainSet&)\n"
"    Signature: oaDoubleAppDef_oaScanChainSet||cref-oaDoubleAppDef_oaScanChainSet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaScanChainSet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaScanChainSet",
    sizeof(PyoaDoubleAppDef_oaScanChainSetObject),
    0,
    (destructor)oaDoubleAppDef_oaScanChainSet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaScanChainSet_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaScanChainSet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaScanChainSet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaScanChainSet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaScanChainSet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainSet_static_find_doc[] = 
"Class: oaDoubleAppDef_oaScanChainSet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainSet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::find(p1.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaScanChainSet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaScanChainSet_static_get_doc[] = 
"Class: oaDoubleAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaScanChainSet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::get(p1.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaScanChainSetp result= (oaDoubleAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaScanChainSet_FromoaDoubleAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaScanChainSet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaScanChainSet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaScanChainSet_static_find,METH_VARARGS,oaDoubleAppDef_oaScanChainSet_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaScanChainSet_static_get,METH_VARARGS,oaDoubleAppDef_oaScanChainSet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaScanChainSet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaScanChainSet_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaScanChainSet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaScanChainSet",
           (PyObject*)(&PyoaDoubleAppDef_oaScanChainSet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaScanChainSet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaScanChainSet_Type.tp_dict;
    for(method=oaDoubleAppDef_oaScanChainSet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaShapeObject* self = (PyoaDoubleAppDef_oaShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaShape)
    {
        PyParamoaDoubleAppDef_oaShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaShape, Choices are:\n"
        "    (oaDoubleAppDef_oaShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaShape_tp_dealloc(PyoaDoubleAppDef_oaShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaShape_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaShape value;
    int convert_status=PyoaDoubleAppDef_oaShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaDoubleAppDef_oaShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaShape v1;
    PyParamoaDoubleAppDef_oaShape v2;
    int convert_status1=PyoaDoubleAppDef_oaShape_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaShape_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaShape_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaShape**) ((PyoaDoubleAppDef_oaShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(oaDoubleAppDef_oaShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaShape* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaShape_Type.tp_alloc(&PyoaDoubleAppDef_oaShape_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaShapeObject* self = (PyoaDoubleAppDef_oaShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(oaDoubleAppDef_oaShape* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaShape_Type.tp_alloc(&PyoaDoubleAppDef_oaShape_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaShapeObject* self = (PyoaDoubleAppDef_oaShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaShape_get_doc[] = 
"Class: oaDoubleAppDef_oaShape, Function: get\n"
"  Paramegers: (oaShape)\n"
"    Calls: oaDouble get(const oaShape* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaShape,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaShape data;
    int convert_status=PyoaDoubleAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaShapeObject* self=(PyoaDoubleAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaShape_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaShape, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaShape_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaShape data;
    int convert_status=PyoaDoubleAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaShapeObject* self=(PyoaDoubleAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaShape_set_doc[] = 
"Class: oaDoubleAppDef_oaShape, Function: set\n"
"  Paramegers: (oaShape,oaDouble)\n"
"    Calls: void set(oaShape* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaShape,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaShape data;
    int convert_status=PyoaDoubleAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaShapeObject* self=(PyoaDoubleAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaShape_isNull_doc[] =
"Class: oaDoubleAppDef_oaShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaShape data;
    int convert_status=PyoaDoubleAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaShape_assign_doc[] = 
"Class: oaDoubleAppDef_oaShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaShape data;
  int convert_status=PyoaDoubleAppDef_oaShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaShape_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaShape_get,METH_VARARGS,oaDoubleAppDef_oaShape_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaShape_getDefault,METH_VARARGS,oaDoubleAppDef_oaShape_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaShape_set,METH_VARARGS,oaDoubleAppDef_oaShape_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaShape_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaShape_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaShape_tp_assign,METH_VARARGS,oaDoubleAppDef_oaShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaShape_doc[] = 
"Class: oaDoubleAppDef_oaShape\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaShape)\n"
"    Calls: (const oaDoubleAppDef_oaShape&)\n"
"    Signature: oaDoubleAppDef_oaShape||cref-oaDoubleAppDef_oaShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaShape",
    sizeof(PyoaDoubleAppDef_oaShapeObject),
    0,
    (destructor)oaDoubleAppDef_oaShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaShape_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaShape_static_find_doc[] = 
"Class: oaDoubleAppDef_oaShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaShape|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::find(p1.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaShape_static_get_doc[] = 
"Class: oaDoubleAppDef_oaShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaShape|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaShape* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaShape|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaShape* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaShape|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::get(p1.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaShapep result= (oaDoubleAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaShape_FromoaDoubleAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaShape_static_find,METH_VARARGS,oaDoubleAppDef_oaShape_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaShape_static_get,METH_VARARGS,oaDoubleAppDef_oaShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaShape_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaShape",
           (PyObject*)(&PyoaDoubleAppDef_oaShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaShape_Type.tp_dict;
    for(method=oaDoubleAppDef_oaShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaSiteDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaSiteDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaSiteDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaSiteDefObject* self = (PyoaDoubleAppDef_oaSiteDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaSiteDef)
    {
        PyParamoaDoubleAppDef_oaSiteDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaSiteDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaSiteDef, Choices are:\n"
        "    (oaDoubleAppDef_oaSiteDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaSiteDef_tp_dealloc(PyoaDoubleAppDef_oaSiteDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaSiteDef_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaSiteDef value;
    int convert_status=PyoaDoubleAppDef_oaSiteDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaSiteDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaSiteDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaSiteDef v1;
    PyParamoaDoubleAppDef_oaSiteDef v2;
    int convert_status1=PyoaDoubleAppDef_oaSiteDef_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaSiteDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaSiteDef_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaSiteDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaSiteDef_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaSiteDef**) ((PyoaDoubleAppDef_oaSiteDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaSiteDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(oaDoubleAppDef_oaSiteDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaSiteDef* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaSiteDef_Type.tp_alloc(&PyoaDoubleAppDef_oaSiteDef_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaSiteDefObject* self = (PyoaDoubleAppDef_oaSiteDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(oaDoubleAppDef_oaSiteDef* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaSiteDef_Type.tp_alloc(&PyoaDoubleAppDef_oaSiteDef_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaSiteDefObject* self = (PyoaDoubleAppDef_oaSiteDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSiteDef_get_doc[] = 
"Class: oaDoubleAppDef_oaSiteDef, Function: get\n"
"  Paramegers: (oaSiteDef)\n"
"    Calls: oaDouble get(const oaSiteDef* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaSiteDef,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaSiteDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaSiteDef data;
    int convert_status=PyoaDoubleAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaSiteDefObject* self=(PyoaDoubleAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSiteDef_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaSiteDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaSiteDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaSiteDef data;
    int convert_status=PyoaDoubleAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaSiteDefObject* self=(PyoaDoubleAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSiteDef_set_doc[] = 
"Class: oaDoubleAppDef_oaSiteDef, Function: set\n"
"  Paramegers: (oaSiteDef,oaDouble)\n"
"    Calls: void set(oaSiteDef* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaSiteDef,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaSiteDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaSiteDef data;
    int convert_status=PyoaDoubleAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaSiteDefObject* self=(PyoaDoubleAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSiteDef p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSiteDef_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSiteDef_isNull_doc[] =
"Class: oaDoubleAppDef_oaSiteDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaSiteDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaSiteDef data;
    int convert_status=PyoaDoubleAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaSiteDef_assign_doc[] = 
"Class: oaDoubleAppDef_oaSiteDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaSiteDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaSiteDef data;
  int convert_status=PyoaDoubleAppDef_oaSiteDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaSiteDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaSiteDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaSiteDef_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaSiteDef_get,METH_VARARGS,oaDoubleAppDef_oaSiteDef_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaSiteDef_getDefault,METH_VARARGS,oaDoubleAppDef_oaSiteDef_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaSiteDef_set,METH_VARARGS,oaDoubleAppDef_oaSiteDef_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaSiteDef_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaSiteDef_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaSiteDef_tp_assign,METH_VARARGS,oaDoubleAppDef_oaSiteDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSiteDef_doc[] = 
"Class: oaDoubleAppDef_oaSiteDef\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaSiteDef)\n"
"    Calls: (const oaDoubleAppDef_oaSiteDef&)\n"
"    Signature: oaDoubleAppDef_oaSiteDef||cref-oaDoubleAppDef_oaSiteDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaSiteDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaSiteDef",
    sizeof(PyoaDoubleAppDef_oaSiteDefObject),
    0,
    (destructor)oaDoubleAppDef_oaSiteDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaSiteDef_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaSiteDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaSiteDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaSiteDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaSiteDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSiteDef_static_find_doc[] = 
"Class: oaDoubleAppDef_oaSiteDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaSiteDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::find(p1.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaSiteDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSiteDef_static_get_doc[] = 
"Class: oaDoubleAppDef_oaSiteDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaSiteDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::get(p1.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSiteDefp result= (oaDoubleAppDef_oaSiteDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaSiteDef_FromoaDoubleAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaSiteDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaSiteDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaSiteDef_static_find,METH_VARARGS,oaDoubleAppDef_oaSiteDef_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaSiteDef_static_get,METH_VARARGS,oaDoubleAppDef_oaSiteDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaSiteDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaSiteDef_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaSiteDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaSiteDef",
           (PyObject*)(&PyoaDoubleAppDef_oaSiteDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaSiteDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaSiteDef_Type.tp_dict;
    for(method=oaDoubleAppDef_oaSiteDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaSteiner
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaSteiner_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaSteiner_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaSteinerObject* self = (PyoaDoubleAppDef_oaSteinerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaSteiner)
    {
        PyParamoaDoubleAppDef_oaSteiner p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaSteiner_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaSteiner, Choices are:\n"
        "    (oaDoubleAppDef_oaSteiner)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaSteiner_tp_dealloc(PyoaDoubleAppDef_oaSteinerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaSteiner_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaSteiner value;
    int convert_status=PyoaDoubleAppDef_oaSteiner_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaDoubleAppDef_oaSteiner::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaSteiner_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaSteiner v1;
    PyParamoaDoubleAppDef_oaSteiner v2;
    int convert_status1=PyoaDoubleAppDef_oaSteiner_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaSteiner_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaSteiner_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaSteiner* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaSteiner_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaSteiner**) ((PyoaDoubleAppDef_oaSteinerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaSteiner Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(oaDoubleAppDef_oaSteiner** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaSteiner* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaSteiner_Type.tp_alloc(&PyoaDoubleAppDef_oaSteiner_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaSteinerObject* self = (PyoaDoubleAppDef_oaSteinerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(oaDoubleAppDef_oaSteiner* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaSteiner_Type.tp_alloc(&PyoaDoubleAppDef_oaSteiner_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaSteinerObject* self = (PyoaDoubleAppDef_oaSteinerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSteiner_get_doc[] = 
"Class: oaDoubleAppDef_oaSteiner, Function: get\n"
"  Paramegers: (oaSteiner)\n"
"    Calls: oaDouble get(const oaSteiner* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaSteiner,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaSteiner_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaSteiner data;
    int convert_status=PyoaDoubleAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaSteinerObject* self=(PyoaDoubleAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSteiner p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSteiner_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSteiner_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaSteiner, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaSteiner_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaSteiner data;
    int convert_status=PyoaDoubleAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaSteinerObject* self=(PyoaDoubleAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSteiner_set_doc[] = 
"Class: oaDoubleAppDef_oaSteiner, Function: set\n"
"  Paramegers: (oaSteiner,oaDouble)\n"
"    Calls: void set(oaSteiner* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaSteiner,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaSteiner_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaSteiner data;
    int convert_status=PyoaDoubleAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaSteinerObject* self=(PyoaDoubleAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSteiner p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSteiner_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSteiner_isNull_doc[] =
"Class: oaDoubleAppDef_oaSteiner, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaSteiner_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaSteiner data;
    int convert_status=PyoaDoubleAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaSteiner_assign_doc[] = 
"Class: oaDoubleAppDef_oaSteiner, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaSteiner_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaSteiner data;
  int convert_status=PyoaDoubleAppDef_oaSteiner_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaSteiner p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaSteiner_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaSteiner_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaSteiner_get,METH_VARARGS,oaDoubleAppDef_oaSteiner_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaSteiner_getDefault,METH_VARARGS,oaDoubleAppDef_oaSteiner_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaSteiner_set,METH_VARARGS,oaDoubleAppDef_oaSteiner_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaSteiner_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaSteiner_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaSteiner_tp_assign,METH_VARARGS,oaDoubleAppDef_oaSteiner_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSteiner_doc[] = 
"Class: oaDoubleAppDef_oaSteiner\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaSteiner)\n"
"    Calls: (const oaDoubleAppDef_oaSteiner&)\n"
"    Signature: oaDoubleAppDef_oaSteiner||cref-oaDoubleAppDef_oaSteiner,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaSteiner_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaSteiner",
    sizeof(PyoaDoubleAppDef_oaSteinerObject),
    0,
    (destructor)oaDoubleAppDef_oaSteiner_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaSteiner_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaSteiner_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaSteiner_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaSteiner_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaSteiner_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSteiner_static_find_doc[] = 
"Class: oaDoubleAppDef_oaSteiner, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaSteiner* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaSteiner* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaSteiner_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::find(p1.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaSteiner, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaSteiner_static_get_doc[] = 
"Class: oaDoubleAppDef_oaSteiner, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaSteiner* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaSteiner* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaSteiner* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaSteiner_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::get(p1.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaSteinerp result= (oaDoubleAppDef_oaSteiner::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaSteiner_FromoaDoubleAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaSteiner, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaSteiner_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaSteiner_static_find,METH_VARARGS,oaDoubleAppDef_oaSteiner_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaSteiner_static_get,METH_VARARGS,oaDoubleAppDef_oaSteiner_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaSteiner_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaSteiner_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaSteiner\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaSteiner",
           (PyObject*)(&PyoaDoubleAppDef_oaSteiner_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaSteiner\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaSteiner_Type.tp_dict;
    for(method=oaDoubleAppDef_oaSteiner_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaDoubleAppDef_oaStepperMap
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaStepperMap_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaDoubleAppDef_oaStepperMap_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaDoubleAppDef_oaStepperMapObject* self = (PyoaDoubleAppDef_oaStepperMapObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaDoubleAppDef_oaStepperMap)
    {
        PyParamoaDoubleAppDef_oaStepperMap p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaDoubleAppDef_oaStepperMap_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaDoubleAppDef_oaStepperMap, Choices are:\n"
        "    (oaDoubleAppDef_oaStepperMap)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaDoubleAppDef_oaStepperMap_tp_dealloc(PyoaDoubleAppDef_oaStepperMapObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaDoubleAppDef_oaStepperMap_tp_repr(PyObject *ob)
{
    PyParamoaDoubleAppDef_oaStepperMap value;
    int convert_status=PyoaDoubleAppDef_oaStepperMap_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaDoubleAppDef_oaStepperMap::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaDoubleAppDef_oaStepperMap_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaDoubleAppDef_oaStepperMap v1;
    PyParamoaDoubleAppDef_oaStepperMap v2;
    int convert_status1=PyoaDoubleAppDef_oaStepperMap_Convert(ob1,&v1);
    int convert_status2=PyoaDoubleAppDef_oaStepperMap_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaDoubleAppDef_oaStepperMap_Convert(PyObject* ob,PyParamoaDoubleAppDef_oaStepperMap* result)
{
    if (ob == NULL) return 1;
    if (PyoaDoubleAppDef_oaStepperMap_Check(ob)) {
        result->SetData( (oaDoubleAppDef_oaStepperMap**) ((PyoaDoubleAppDef_oaStepperMapObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaDoubleAppDef_oaStepperMap Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(oaDoubleAppDef_oaStepperMap** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaDoubleAppDef_oaStepperMap* data=*value;
        PyObject* bself = PyoaDoubleAppDef_oaStepperMap_Type.tp_alloc(&PyoaDoubleAppDef_oaStepperMap_Type,0);
        if (bself == NULL) return bself;
        PyoaDoubleAppDef_oaStepperMapObject* self = (PyoaDoubleAppDef_oaStepperMapObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(oaDoubleAppDef_oaStepperMap* data)
{
    if (data) {
       PyObject* bself = PyoaDoubleAppDef_oaStepperMap_Type.tp_alloc(&PyoaDoubleAppDef_oaStepperMap_Type,0);
       if (bself == NULL) return bself;
       PyoaDoubleAppDef_oaStepperMapObject* self = (PyoaDoubleAppDef_oaStepperMapObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaStepperMap_get_doc[] = 
"Class: oaDoubleAppDef_oaStepperMap, Function: get\n"
"  Paramegers: (oaStepperMap)\n"
"    Calls: oaDouble get(const oaStepperMap* object)\n"
"    Signature: get|simple-oaDouble|cptr-oaStepperMap,\n"
"    This function returns the value of this double extension.\n"
"    object\n"
"    The object for which to get the value\n"
;

static PyObject*
oaDoubleAppDef_oaStepperMap_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaStepperMap data;
    int convert_status=PyoaDoubleAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaStepperMapObject* self=(PyoaDoubleAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaStepperMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStepperMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaDouble result= (data.DataCall()->get(p1.Data()));
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaStepperMap_getDefault_doc[] = 
"Class: oaDoubleAppDef_oaStepperMap, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaDouble getDefault() const\n"
"    Signature: getDefault|simple-oaDouble|\n"
"    BrowseData: 1\n"
"    This function returns the default value of this double extension.\n"
;

static PyObject*
oaDoubleAppDef_oaStepperMap_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaStepperMap data;
    int convert_status=PyoaDoubleAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaStepperMapObject* self=(PyoaDoubleAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaDouble result= (data.DataCall()->getDefault());
        return PyoaDouble_FromoaDouble(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaStepperMap_set_doc[] = 
"Class: oaDoubleAppDef_oaStepperMap, Function: set\n"
"  Paramegers: (oaStepperMap,oaDouble)\n"
"    Calls: void set(oaStepperMap* object,oaDouble value)\n"
"    Signature: set|void-void|ptr-oaStepperMap,simple-oaDouble,\n"
"    This function sets the value of this double extension.\n"
"    object\n"
"    The object on which to set the value\n"
"    value\n"
"    The value to set on the object\n"
;

static PyObject*
oaDoubleAppDef_oaStepperMap_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaDoubleAppDef_oaStepperMap data;
    int convert_status=PyoaDoubleAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaDoubleAppDef_oaStepperMapObject* self=(PyoaDoubleAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaStepperMap p1;
    PyParamoaDouble p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStepperMap_Convert,&p1,
          &PyoaDouble_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaStepperMap_isNull_doc[] =
"Class: oaDoubleAppDef_oaStepperMap, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaDoubleAppDef_oaStepperMap_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaDoubleAppDef_oaStepperMap data;
    int convert_status=PyoaDoubleAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaDoubleAppDef_oaStepperMap_assign_doc[] = 
"Class: oaDoubleAppDef_oaStepperMap, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaDoubleAppDef_oaStepperMap_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaDoubleAppDef_oaStepperMap data;
  int convert_status=PyoaDoubleAppDef_oaStepperMap_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaDoubleAppDef_oaStepperMap p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaDoubleAppDef_oaStepperMap_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaDoubleAppDef_oaStepperMap_methodlist[] = {
    {"get",(PyCFunction)oaDoubleAppDef_oaStepperMap_get,METH_VARARGS,oaDoubleAppDef_oaStepperMap_get_doc},
    {"getDefault",(PyCFunction)oaDoubleAppDef_oaStepperMap_getDefault,METH_VARARGS,oaDoubleAppDef_oaStepperMap_getDefault_doc},
    {"set",(PyCFunction)oaDoubleAppDef_oaStepperMap_set,METH_VARARGS,oaDoubleAppDef_oaStepperMap_set_doc},
    {"isNull",(PyCFunction)oaDoubleAppDef_oaStepperMap_tp_isNull,METH_VARARGS,oaDoubleAppDef_oaStepperMap_isNull_doc},
    {"assign",(PyCFunction)oaDoubleAppDef_oaStepperMap_tp_assign,METH_VARARGS,oaDoubleAppDef_oaStepperMap_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaStepperMap_doc[] = 
"Class: oaDoubleAppDef_oaStepperMap\n"
"  The oaDoubleAppDef class implements an application-specific extension for a particular type of data in a database.\n"
"  Once created, a double field is added to each object of the specified dataType. The default value for this extension is DBL_MAX. Applications can use the new field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaDoubleAppDef_oaStepperMap)\n"
"    Calls: (const oaDoubleAppDef_oaStepperMap&)\n"
"    Signature: oaDoubleAppDef_oaStepperMap||cref-oaDoubleAppDef_oaStepperMap,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaDoubleAppDef_oaStepperMap_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaDoubleAppDef_oaStepperMap",
    sizeof(PyoaDoubleAppDef_oaStepperMapObject),
    0,
    (destructor)oaDoubleAppDef_oaStepperMap_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaDoubleAppDef_oaStepperMap_tp_compare,	/* tp_compare */
    (reprfunc)oaDoubleAppDef_oaStepperMap_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaDoubleAppDef_oaStepperMap_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaDoubleAppDef_oaStepperMap_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaDoubleAppDef_oaStepperMap_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaStepperMap_static_find_doc[] = 
"Class: oaDoubleAppDef_oaStepperMap, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* find(const oaString& name)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaDoubleAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaDoubleAppDef_oaStepperMap_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::find(p1.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::find(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaStepperMap, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaDoubleAppDef_oaStepperMap_static_get_doc[] = 
"Class: oaDoubleAppDef_oaStepperMap, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* get(const oaString& name)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* get(const oaString& name,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* get(const oaString& name,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name . You can create a double extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    defValue\n"
"    The default value for this extension\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
"    Calls: oaDoubleAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef,oaDouble defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaDoubleAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaDouble,simple-oaBoolean,\n"
"    This function constructs an oaDoubleAppDef object, creating a double extension with the specified name for the specified object type.\n"
"    name\n"
"    The name given to the oaDoubleAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    defValue\n"
"    An optional default value\n"
"    persist\n"
"    Saves the oaDoubleAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaDoubleAppDef_oaStepperMap_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::get(p1.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2)) {
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaDouble p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaDouble_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::get(p1.Data(),p2.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaDouble,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaDouble p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaDouble_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaDoubleAppDef_oaStepperMapp result= (oaDoubleAppDef_oaStepperMap::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaDoubleAppDef_oaStepperMap_FromoaDoubleAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaDoubleAppDef_oaStepperMap, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaDouble)\n"
        "    (oaString,oaDouble,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaDouble)\n"
        "    (oaString,oaAppObjectDef,oaDouble,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaDoubleAppDef_oaStepperMap_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaDoubleAppDef_oaStepperMap_static_find,METH_VARARGS,oaDoubleAppDef_oaStepperMap_static_find_doc},
    {"static_get",(PyCFunction)oaDoubleAppDef_oaStepperMap_static_get,METH_VARARGS,oaDoubleAppDef_oaStepperMap_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaDoubleAppDef_oaStepperMap_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaDoubleAppDef_oaStepperMap_Type)<0) {
      printf("** PyType_Ready failed for: oaDoubleAppDef_oaStepperMap\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaDoubleAppDef_oaStepperMap",
           (PyObject*)(&PyoaDoubleAppDef_oaStepperMap_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaDoubleAppDef_oaStepperMap\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaDoubleAppDef_oaStepperMap_Type.tp_dict;
    for(method=oaDoubleAppDef_oaStepperMap_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

