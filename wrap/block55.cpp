
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaInstHeaderObject* self = (PyoaVarDataAppDef_oaInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaInstHeader)
    {
        PyParamoaVarDataAppDef_oaInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaInstHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaInstHeader_tp_dealloc(PyoaVarDataAppDef_oaInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaInstHeader value;
    int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaVarDataAppDef_oaInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaInstHeader v1;
    PyParamoaVarDataAppDef_oaInstHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaInstHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaInstHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaInstHeader**) ((PyoaVarDataAppDef_oaInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(oaVarDataAppDef_oaInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaInstHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaInstHeaderObject* self = (PyoaVarDataAppDef_oaInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(oaVarDataAppDef_oaInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaInstHeaderObject* self = (PyoaVarDataAppDef_oaInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaInstHeader,[oaByte])\n"
"    Calls: void get(const oaInstHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaInstHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstHeaderObject* self=(PyoaVarDataAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstHeaderObject* self=(PyoaVarDataAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstHeaderObject* self=(PyoaVarDataAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: getSize\n"
"  Paramegers: (oaInstHeader)\n"
"    Calls: oaUInt4 getSize(const oaInstHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaInstHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstHeaderObject* self=(PyoaVarDataAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaInstHeader,[oaByte])\n"
"    Calls: void set(oaInstHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaInstHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstHeaderObject* self=(PyoaVarDataAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaInstHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaInstHeader data;
  int convert_status=PyoaVarDataAppDef_oaInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaInstHeader_get,METH_VARARGS,oaVarDataAppDef_oaInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaInstHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaInstHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaInstHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaInstHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaInstHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaInstHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaInstHeader_set,METH_VARARGS,oaVarDataAppDef_oaInstHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaInstHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaInstHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaInstHeader)\n"
"    Calls: (const oaVarDataAppDef_oaInstHeader&)\n"
"    Signature: oaVarDataAppDef_oaInstHeader||cref-oaVarDataAppDef_oaInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaInstHeader",
    sizeof(PyoaVarDataAppDef_oaInstHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstHeaderp result= (oaVarDataAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaInstHeader_FromoaVarDataAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaInstHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaInstHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaInstHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaInstHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaInstTermObject* self = (PyoaVarDataAppDef_oaInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaInstTerm)
    {
        PyParamoaVarDataAppDef_oaInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaInstTerm, Choices are:\n"
        "    (oaVarDataAppDef_oaInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaInstTerm_tp_dealloc(PyoaVarDataAppDef_oaInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaInstTerm value;
    int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaVarDataAppDef_oaInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaInstTerm v1;
    PyParamoaVarDataAppDef_oaInstTerm v2;
    int convert_status1=PyoaVarDataAppDef_oaInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaInstTerm_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaInstTerm_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaInstTerm**) ((PyoaVarDataAppDef_oaInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(oaVarDataAppDef_oaInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaInstTerm* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaInstTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaInstTermObject* self = (PyoaVarDataAppDef_oaInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(oaVarDataAppDef_oaInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaInstTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaInstTermObject* self = (PyoaVarDataAppDef_oaInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_get_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaInstTerm,[oaByte])\n"
"    Calls: void get(const oaInstTerm* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaInstTerm,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstTermObject* self=(PyoaVarDataAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstTermObject* self=(PyoaVarDataAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstTermObject* self=(PyoaVarDataAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_getSize_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: getSize\n"
"  Paramegers: (oaInstTerm)\n"
"    Calls: oaUInt4 getSize(const oaInstTerm* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaInstTerm,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstTermObject* self=(PyoaVarDataAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_set_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaInstTerm,[oaByte])\n"
"    Calls: void set(oaInstTerm* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaInstTerm,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaInstTermObject* self=(PyoaVarDataAppDef_oaInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_isNull_doc[] =
"Class: oaVarDataAppDef_oaInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaInstTerm_assign_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaInstTerm data;
  int convert_status=PyoaVarDataAppDef_oaInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaInstTerm_get,METH_VARARGS,oaVarDataAppDef_oaInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaInstTerm_getDefault,METH_VARARGS,oaVarDataAppDef_oaInstTerm_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaInstTerm_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaInstTerm_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaInstTerm_getSize,METH_VARARGS,oaVarDataAppDef_oaInstTerm_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaInstTerm_set,METH_VARARGS,oaVarDataAppDef_oaInstTerm_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaInstTerm_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaInstTerm_tp_assign,METH_VARARGS,oaVarDataAppDef_oaInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaInstTerm)\n"
"    Calls: (const oaVarDataAppDef_oaInstTerm&)\n"
"    Signature: oaVarDataAppDef_oaInstTerm||cref-oaVarDataAppDef_oaInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaInstTerm",
    sizeof(PyoaVarDataAppDef_oaInstTermObject),
    0,
    (destructor)oaVarDataAppDef_oaInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_static_find_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::find(p1.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaInstTerm_static_get_doc[] = 
"Class: oaVarDataAppDef_oaInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::get(p1.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaInstTermp result= (oaVarDataAppDef_oaInstTerm::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaInstTerm_FromoaVarDataAppDef_oaInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaInstTerm_static_find,METH_VARARGS,oaVarDataAppDef_oaInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaInstTerm_static_get,METH_VARARGS,oaVarDataAppDef_oaInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaInstTerm",
           (PyObject*)(&PyoaVarDataAppDef_oaInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaInstTerm_Type.tp_dict;
    for(method=oaVarDataAppDef_oaInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaLPPHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLPPHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaLPPHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaLPPHeaderObject* self = (PyoaVarDataAppDef_oaLPPHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaLPPHeader)
    {
        PyParamoaVarDataAppDef_oaLPPHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaLPPHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaLPPHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaLPPHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaLPPHeader_tp_dealloc(PyoaVarDataAppDef_oaLPPHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLPPHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaLPPHeader value;
    int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaVarDataAppDef_oaLPPHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaLPPHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaLPPHeader v1;
    PyParamoaVarDataAppDef_oaLPPHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaLPPHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaLPPHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaLPPHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaLPPHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaLPPHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaLPPHeader**) ((PyoaVarDataAppDef_oaLPPHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaLPPHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(oaVarDataAppDef_oaLPPHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaLPPHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaLPPHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaLPPHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaLPPHeaderObject* self = (PyoaVarDataAppDef_oaLPPHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(oaVarDataAppDef_oaLPPHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaLPPHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaLPPHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaLPPHeaderObject* self = (PyoaVarDataAppDef_oaLPPHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaLPPHeader,[oaByte])\n"
"    Calls: void get(const oaLPPHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaLPPHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLPPHeader data;
    int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLPPHeaderObject* self=(PyoaVarDataAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLPPHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLPPHeader data;
    int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLPPHeaderObject* self=(PyoaVarDataAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLPPHeader data;
    int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLPPHeaderObject* self=(PyoaVarDataAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: getSize\n"
"  Paramegers: (oaLPPHeader)\n"
"    Calls: oaUInt4 getSize(const oaLPPHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaLPPHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLPPHeader data;
    int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLPPHeaderObject* self=(PyoaVarDataAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLPPHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaLPPHeader,[oaByte])\n"
"    Calls: void set(oaLPPHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaLPPHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLPPHeader data;
    int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLPPHeaderObject* self=(PyoaVarDataAppDef_oaLPPHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLPPHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLPPHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaLPPHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaLPPHeader data;
    int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaLPPHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaLPPHeader data;
  int convert_status=PyoaVarDataAppDef_oaLPPHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaLPPHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaLPPHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaLPPHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaLPPHeader_get,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaLPPHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaLPPHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaLPPHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaLPPHeader_set,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaLPPHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaLPPHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaLPPHeader)\n"
"    Calls: (const oaVarDataAppDef_oaLPPHeader&)\n"
"    Signature: oaVarDataAppDef_oaLPPHeader||cref-oaVarDataAppDef_oaLPPHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaLPPHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaLPPHeader",
    sizeof(PyoaVarDataAppDef_oaLPPHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaLPPHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaLPPHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaLPPHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaLPPHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaLPPHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaLPPHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLPPHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLPPHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaLPPHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLPPHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLPPHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaLPPHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLPPHeaderp result= (oaVarDataAppDef_oaLPPHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaLPPHeader_FromoaVarDataAppDef_oaLPPHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLPPHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaLPPHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaLPPHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaLPPHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaLPPHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaLPPHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaLPPHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaLPPHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaLPPHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaLPPHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaLPPHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaLPPHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaLPPHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaLayer
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLayer_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaLayer_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaLayerObject* self = (PyoaVarDataAppDef_oaLayerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaLayer)
    {
        PyParamoaVarDataAppDef_oaLayer p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaLayer_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaLayer, Choices are:\n"
        "    (oaVarDataAppDef_oaLayer)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaLayer_tp_dealloc(PyoaVarDataAppDef_oaLayerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLayer_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaLayer value;
    int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaVarDataAppDef_oaLayer::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaLayer_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaLayer v1;
    PyParamoaVarDataAppDef_oaLayer v2;
    int convert_status1=PyoaVarDataAppDef_oaLayer_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaLayer_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaLayer_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaLayer* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaLayer_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaLayer**) ((PyoaVarDataAppDef_oaLayerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaLayer Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(oaVarDataAppDef_oaLayer** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaLayer* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaLayer_Type.tp_alloc(&PyoaVarDataAppDef_oaLayer_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaLayerObject* self = (PyoaVarDataAppDef_oaLayerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(oaVarDataAppDef_oaLayer* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaLayer_Type.tp_alloc(&PyoaVarDataAppDef_oaLayer_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaLayerObject* self = (PyoaVarDataAppDef_oaLayerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_get_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaLayer,[oaByte])\n"
"    Calls: void get(const oaLayer* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaLayer,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayer data;
    int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerObject* self=(PyoaVarDataAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayer_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayer data;
    int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerObject* self=(PyoaVarDataAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayer data;
    int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerObject* self=(PyoaVarDataAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_getSize_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: getSize\n"
"  Paramegers: (oaLayer)\n"
"    Calls: oaUInt4 getSize(const oaLayer* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaLayer,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayer data;
    int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerObject* self=(PyoaVarDataAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_set_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaLayer,[oaByte])\n"
"    Calls: void set(oaLayer* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaLayer,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayer data;
    int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerObject* self=(PyoaVarDataAppDef_oaLayerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayer p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayer_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_isNull_doc[] =
"Class: oaVarDataAppDef_oaLayer, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaLayer data;
    int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaLayer_assign_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaLayer data;
  int convert_status=PyoaVarDataAppDef_oaLayer_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaLayer p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaLayer_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaLayer_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaLayer_get,METH_VARARGS,oaVarDataAppDef_oaLayer_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaLayer_getDefault,METH_VARARGS,oaVarDataAppDef_oaLayer_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaLayer_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaLayer_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaLayer_getSize,METH_VARARGS,oaVarDataAppDef_oaLayer_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaLayer_set,METH_VARARGS,oaVarDataAppDef_oaLayer_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaLayer_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaLayer_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaLayer_tp_assign,METH_VARARGS,oaVarDataAppDef_oaLayer_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_doc[] = 
"Class: oaVarDataAppDef_oaLayer\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaLayer)\n"
"    Calls: (const oaVarDataAppDef_oaLayer&)\n"
"    Signature: oaVarDataAppDef_oaLayer||cref-oaVarDataAppDef_oaLayer,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaLayer_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaLayer",
    sizeof(PyoaVarDataAppDef_oaLayerObject),
    0,
    (destructor)oaVarDataAppDef_oaLayer_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaLayer_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaLayer_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaLayer_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaLayer_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaLayer_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_static_find_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLayer* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLayer|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLayer* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::find(p1.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLayer, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayer_static_get_doc[] = 
"Class: oaVarDataAppDef_oaLayer, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLayer* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayer* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayer* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayer|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayer* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayer|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaLayer_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::get(p1.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerp result= (oaVarDataAppDef_oaLayer::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaLayer_FromoaVarDataAppDef_oaLayer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLayer, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaLayer_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaLayer_static_find,METH_VARARGS,oaVarDataAppDef_oaLayer_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaLayer_static_get,METH_VARARGS,oaVarDataAppDef_oaLayer_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaLayer_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaLayer_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaLayer\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaLayer",
           (PyObject*)(&PyoaVarDataAppDef_oaLayer_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaLayer\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaLayer_Type.tp_dict;
    for(method=oaVarDataAppDef_oaLayer_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaLayerHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLayerHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaLayerHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaLayerHeaderObject* self = (PyoaVarDataAppDef_oaLayerHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaLayerHeader)
    {
        PyParamoaVarDataAppDef_oaLayerHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaLayerHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaLayerHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaLayerHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaLayerHeader_tp_dealloc(PyoaVarDataAppDef_oaLayerHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLayerHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaLayerHeader value;
    int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaVarDataAppDef_oaLayerHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaLayerHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaLayerHeader v1;
    PyParamoaVarDataAppDef_oaLayerHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaLayerHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaLayerHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaLayerHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaLayerHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaLayerHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaLayerHeader**) ((PyoaVarDataAppDef_oaLayerHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaLayerHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(oaVarDataAppDef_oaLayerHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaLayerHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaLayerHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaLayerHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaLayerHeaderObject* self = (PyoaVarDataAppDef_oaLayerHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(oaVarDataAppDef_oaLayerHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaLayerHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaLayerHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaLayerHeaderObject* self = (PyoaVarDataAppDef_oaLayerHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaLayerHeader,[oaByte])\n"
"    Calls: void get(const oaLayerHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaLayerHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayerHeader data;
    int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerHeaderObject* self=(PyoaVarDataAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayerHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayerHeader data;
    int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerHeaderObject* self=(PyoaVarDataAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayerHeader data;
    int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerHeaderObject* self=(PyoaVarDataAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: getSize\n"
"  Paramegers: (oaLayerHeader)\n"
"    Calls: oaUInt4 getSize(const oaLayerHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaLayerHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayerHeader data;
    int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerHeaderObject* self=(PyoaVarDataAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaLayerHeader,[oaByte])\n"
"    Calls: void set(oaLayerHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaLayerHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLayerHeader data;
    int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLayerHeaderObject* self=(PyoaVarDataAppDef_oaLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLayerHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLayerHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaLayerHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaLayerHeader data;
    int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaLayerHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaLayerHeader data;
  int convert_status=PyoaVarDataAppDef_oaLayerHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaLayerHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaLayerHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaLayerHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaLayerHeader_get,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaLayerHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaLayerHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaLayerHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaLayerHeader_set,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaLayerHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaLayerHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaLayerHeader)\n"
"    Calls: (const oaVarDataAppDef_oaLayerHeader&)\n"
"    Signature: oaVarDataAppDef_oaLayerHeader||cref-oaVarDataAppDef_oaLayerHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaLayerHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaLayerHeader",
    sizeof(PyoaVarDataAppDef_oaLayerHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaLayerHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaLayerHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaLayerHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaLayerHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaLayerHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaLayerHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLayerHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLayerHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaLayerHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaLayerHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLayerHeaderp result= (oaVarDataAppDef_oaLayerHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaLayerHeader_FromoaVarDataAppDef_oaLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLayerHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaLayerHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaLayerHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaLayerHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaLayerHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaLayerHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaLayerHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaLayerHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaLayerHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaLayerHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaLayerHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaLayerHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaLayerHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaLib
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLib_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaLib_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaLibObject* self = (PyoaVarDataAppDef_oaLibObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaLib)
    {
        PyParamoaVarDataAppDef_oaLib p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaLib_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaLib, Choices are:\n"
        "    (oaVarDataAppDef_oaLib)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaLib_tp_dealloc(PyoaVarDataAppDef_oaLibObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaLib_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaLib value;
    int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaVarDataAppDef_oaLib::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaLib_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaLib v1;
    PyParamoaVarDataAppDef_oaLib v2;
    int convert_status1=PyoaVarDataAppDef_oaLib_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaLib_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaLib_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaLib* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaLib_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaLib**) ((PyoaVarDataAppDef_oaLibObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaLib Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(oaVarDataAppDef_oaLib** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaLib* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaLib_Type.tp_alloc(&PyoaVarDataAppDef_oaLib_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaLibObject* self = (PyoaVarDataAppDef_oaLibObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(oaVarDataAppDef_oaLib* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaLib_Type.tp_alloc(&PyoaVarDataAppDef_oaLib_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaLibObject* self = (PyoaVarDataAppDef_oaLibObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_get_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: get\n"
"  Paramegers: (oaLib,[oaByte])\n"
"    Calls: void get(const oaLib* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaLib,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLib_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLib data;
    int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLibObject* self=(PyoaVarDataAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLib_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaLib_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLib data;
    int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLibObject* self=(PyoaVarDataAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaLib_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLib data;
    int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLibObject* self=(PyoaVarDataAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_getSize_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: getSize\n"
"  Paramegers: (oaLib)\n"
"    Calls: oaUInt4 getSize(const oaLib* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaLib,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLib_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLib data;
    int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLibObject* self=(PyoaVarDataAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaLib_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_set_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: set\n"
"  Paramegers: (oaLib,[oaByte])\n"
"    Calls: void set(oaLib* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaLib,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaLib_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaLib data;
    int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaLibObject* self=(PyoaVarDataAppDef_oaLibObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaLib p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaLib_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_isNull_doc[] =
"Class: oaVarDataAppDef_oaLib, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaLib_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaLib data;
    int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaLib_assign_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaLib_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaLib data;
  int convert_status=PyoaVarDataAppDef_oaLib_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaLib p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaLib_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaLib_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaLib_get,METH_VARARGS,oaVarDataAppDef_oaLib_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaLib_getDefault,METH_VARARGS,oaVarDataAppDef_oaLib_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaLib_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaLib_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaLib_getSize,METH_VARARGS,oaVarDataAppDef_oaLib_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaLib_set,METH_VARARGS,oaVarDataAppDef_oaLib_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaLib_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaLib_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaLib_tp_assign,METH_VARARGS,oaVarDataAppDef_oaLib_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_doc[] = 
"Class: oaVarDataAppDef_oaLib\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaLib)\n"
"    Calls: (const oaVarDataAppDef_oaLib&)\n"
"    Signature: oaVarDataAppDef_oaLib||cref-oaVarDataAppDef_oaLib,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaLib_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaLib",
    sizeof(PyoaVarDataAppDef_oaLibObject),
    0,
    (destructor)oaVarDataAppDef_oaLib_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaLib_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaLib_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaLib_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaLib_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaLib_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_static_find_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLib* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLib|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLib* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaLib_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::find(p1.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLib, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaLib_static_get_doc[] = 
"Class: oaVarDataAppDef_oaLib, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaLib* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLib|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLib* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLib|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLib* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLib|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaLib* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaLib|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaLib_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::get(p1.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaLibp result= (oaVarDataAppDef_oaLib::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaLib_FromoaVarDataAppDef_oaLib(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaLib, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaLib_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaLib_static_find,METH_VARARGS,oaVarDataAppDef_oaLib_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaLib_static_get,METH_VARARGS,oaVarDataAppDef_oaLib_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaLib_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaLib_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaLib\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaLib",
           (PyObject*)(&PyoaVarDataAppDef_oaLib_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaLib\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaLib_Type.tp_dict;
    for(method=oaVarDataAppDef_oaLib_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaMarker
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaMarker_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaMarker_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaMarkerObject* self = (PyoaVarDataAppDef_oaMarkerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaMarker)
    {
        PyParamoaVarDataAppDef_oaMarker p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaMarker_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaMarker, Choices are:\n"
        "    (oaVarDataAppDef_oaMarker)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaMarker_tp_dealloc(PyoaVarDataAppDef_oaMarkerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaMarker_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaMarker value;
    int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaVarDataAppDef_oaMarker::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaMarker_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaMarker v1;
    PyParamoaVarDataAppDef_oaMarker v2;
    int convert_status1=PyoaVarDataAppDef_oaMarker_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaMarker_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaMarker_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaMarker* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaMarker_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaMarker**) ((PyoaVarDataAppDef_oaMarkerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaMarker Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(oaVarDataAppDef_oaMarker** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaMarker* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaMarker_Type.tp_alloc(&PyoaVarDataAppDef_oaMarker_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaMarkerObject* self = (PyoaVarDataAppDef_oaMarkerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(oaVarDataAppDef_oaMarker* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaMarker_Type.tp_alloc(&PyoaVarDataAppDef_oaMarker_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaMarkerObject* self = (PyoaVarDataAppDef_oaMarkerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_get_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaMarker,[oaByte])\n"
"    Calls: void get(const oaMarker* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaMarker,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaMarker data;
    int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaMarkerObject* self=(PyoaVarDataAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaMarker_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaMarker data;
    int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaMarkerObject* self=(PyoaVarDataAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaMarker data;
    int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaMarkerObject* self=(PyoaVarDataAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_getSize_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: getSize\n"
"  Paramegers: (oaMarker)\n"
"    Calls: oaUInt4 getSize(const oaMarker* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaMarker,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaMarker data;
    int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaMarkerObject* self=(PyoaVarDataAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaMarker_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_set_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaMarker,[oaByte])\n"
"    Calls: void set(oaMarker* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaMarker,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaMarker data;
    int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaMarkerObject* self=(PyoaVarDataAppDef_oaMarkerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaMarker p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaMarker_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_isNull_doc[] =
"Class: oaVarDataAppDef_oaMarker, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaMarker data;
    int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaMarker_assign_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaMarker data;
  int convert_status=PyoaVarDataAppDef_oaMarker_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaMarker p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaMarker_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaMarker_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaMarker_get,METH_VARARGS,oaVarDataAppDef_oaMarker_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaMarker_getDefault,METH_VARARGS,oaVarDataAppDef_oaMarker_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaMarker_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaMarker_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaMarker_getSize,METH_VARARGS,oaVarDataAppDef_oaMarker_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaMarker_set,METH_VARARGS,oaVarDataAppDef_oaMarker_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaMarker_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaMarker_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaMarker_tp_assign,METH_VARARGS,oaVarDataAppDef_oaMarker_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_doc[] = 
"Class: oaVarDataAppDef_oaMarker\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaMarker)\n"
"    Calls: (const oaVarDataAppDef_oaMarker&)\n"
"    Signature: oaVarDataAppDef_oaMarker||cref-oaVarDataAppDef_oaMarker,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaMarker_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaMarker",
    sizeof(PyoaVarDataAppDef_oaMarkerObject),
    0,
    (destructor)oaVarDataAppDef_oaMarker_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaMarker_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaMarker_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaMarker_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaMarker_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaMarker_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_static_find_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaMarker* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaMarker|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaMarker* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::find(p1.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaMarker, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaMarker_static_get_doc[] = 
"Class: oaVarDataAppDef_oaMarker, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaMarker* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaMarker|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaMarker* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaMarker|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaMarker* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaMarker|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaMarker* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaMarker|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaMarker_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::get(p1.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaMarkerp result= (oaVarDataAppDef_oaMarker::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaMarker_FromoaVarDataAppDef_oaMarker(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaMarker, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaMarker_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaMarker_static_find,METH_VARARGS,oaVarDataAppDef_oaMarker_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaMarker_static_get,METH_VARARGS,oaVarDataAppDef_oaMarker_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaMarker_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaMarker_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaMarker\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaMarker",
           (PyObject*)(&PyoaVarDataAppDef_oaMarker_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaMarker\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaMarker_Type.tp_dict;
    for(method=oaVarDataAppDef_oaMarker_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModAssignmentObject* self = (PyoaVarDataAppDef_oaModAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModAssignment)
    {
        PyParamoaVarDataAppDef_oaModAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModAssignment, Choices are:\n"
        "    (oaVarDataAppDef_oaModAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModAssignment_tp_dealloc(PyoaVarDataAppDef_oaModAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModAssignment_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModAssignment value;
    int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaModAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModAssignment v1;
    PyParamoaVarDataAppDef_oaModAssignment v2;
    int convert_status1=PyoaVarDataAppDef_oaModAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModAssignment_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModAssignment_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModAssignment**) ((PyoaVarDataAppDef_oaModAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(oaVarDataAppDef_oaModAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModAssignment* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModAssignment_Type.tp_alloc(&PyoaVarDataAppDef_oaModAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModAssignmentObject* self = (PyoaVarDataAppDef_oaModAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(oaVarDataAppDef_oaModAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModAssignment_Type.tp_alloc(&PyoaVarDataAppDef_oaModAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModAssignmentObject* self = (PyoaVarDataAppDef_oaModAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_get_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaModAssignment,[oaByte])\n"
"    Calls: void get(const oaModAssignment* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModAssignment,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModAssignment data;
    int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModAssignmentObject* self=(PyoaVarDataAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModAssignment_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModAssignment data;
    int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModAssignmentObject* self=(PyoaVarDataAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModAssignment data;
    int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModAssignmentObject* self=(PyoaVarDataAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: getSize\n"
"  Paramegers: (oaModAssignment)\n"
"    Calls: oaUInt4 getSize(const oaModAssignment* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModAssignment,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModAssignment data;
    int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModAssignmentObject* self=(PyoaVarDataAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_set_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaModAssignment,[oaByte])\n"
"    Calls: void set(oaModAssignment* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModAssignment,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModAssignment data;
    int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModAssignmentObject* self=(PyoaVarDataAppDef_oaModAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModAssignment p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModAssignment_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_isNull_doc[] =
"Class: oaVarDataAppDef_oaModAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModAssignment data;
    int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModAssignment_assign_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModAssignment data;
  int convert_status=PyoaVarDataAppDef_oaModAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModAssignment_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModAssignment_get,METH_VARARGS,oaVarDataAppDef_oaModAssignment_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModAssignment_getDefault,METH_VARARGS,oaVarDataAppDef_oaModAssignment_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModAssignment_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModAssignment_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModAssignment_getSize,METH_VARARGS,oaVarDataAppDef_oaModAssignment_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModAssignment_set,METH_VARARGS,oaVarDataAppDef_oaModAssignment_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModAssignment_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModAssignment_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModAssignment_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModAssignment)\n"
"    Calls: (const oaVarDataAppDef_oaModAssignment&)\n"
"    Signature: oaVarDataAppDef_oaModAssignment||cref-oaVarDataAppDef_oaModAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModAssignment",
    sizeof(PyoaVarDataAppDef_oaModAssignmentObject),
    0,
    (destructor)oaVarDataAppDef_oaModAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::find(p1.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModAssignment_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModAssignment* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::get(p1.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModAssignmentp result= (oaVarDataAppDef_oaModAssignment::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModAssignment_FromoaVarDataAppDef_oaModAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModAssignment_static_find,METH_VARARGS,oaVarDataAppDef_oaModAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModAssignment_static_get,METH_VARARGS,oaVarDataAppDef_oaModAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModAssignment",
           (PyObject*)(&PyoaVarDataAppDef_oaModAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModAssignment_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModBusNetDefObject* self = (PyoaVarDataAppDef_oaModBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModBusNetDef)
    {
        PyParamoaVarDataAppDef_oaModBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModBusNetDef, Choices are:\n"
        "    (oaVarDataAppDef_oaModBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModBusNetDef_tp_dealloc(PyoaVarDataAppDef_oaModBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModBusNetDef value;
    int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaVarDataAppDef_oaModBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModBusNetDef v1;
    PyParamoaVarDataAppDef_oaModBusNetDef v2;
    int convert_status1=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModBusNetDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModBusNetDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModBusNetDef**) ((PyoaVarDataAppDef_oaModBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(oaVarDataAppDef_oaModBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModBusNetDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModBusNetDefObject* self = (PyoaVarDataAppDef_oaModBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(oaVarDataAppDef_oaModBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModBusNetDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModBusNetDefObject* self = (PyoaVarDataAppDef_oaModBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_get_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaModBusNetDef,[oaByte])\n"
"    Calls: void get(const oaModBusNetDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModBusNetDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusNetDefObject* self=(PyoaVarDataAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusNetDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusNetDefObject* self=(PyoaVarDataAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusNetDefObject* self=(PyoaVarDataAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: getSize\n"
"  Paramegers: (oaModBusNetDef)\n"
"    Calls: oaUInt4 getSize(const oaModBusNetDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModBusNetDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusNetDefObject* self=(PyoaVarDataAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_set_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaModBusNetDef,[oaByte])\n"
"    Calls: void set(oaModBusNetDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModBusNetDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusNetDefObject* self=(PyoaVarDataAppDef_oaModBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusNetDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusNetDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaModBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModBusNetDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModBusNetDef data;
  int convert_status=PyoaVarDataAppDef_oaModBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_get,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_getSize,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_set,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModBusNetDef)\n"
"    Calls: (const oaVarDataAppDef_oaModBusNetDef&)\n"
"    Signature: oaVarDataAppDef_oaModBusNetDef||cref-oaVarDataAppDef_oaModBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModBusNetDef",
    sizeof(PyoaVarDataAppDef_oaModBusNetDefObject),
    0,
    (destructor)oaVarDataAppDef_oaModBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusNetDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusNetDefp result= (oaVarDataAppDef_oaModBusNetDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModBusNetDef_FromoaVarDataAppDef_oaModBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_static_find,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModBusNetDef_static_get,METH_VARARGS,oaVarDataAppDef_oaModBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModBusNetDef",
           (PyObject*)(&PyoaVarDataAppDef_oaModBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModBusNetDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModBusTermDefObject* self = (PyoaVarDataAppDef_oaModBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModBusTermDef)
    {
        PyParamoaVarDataAppDef_oaModBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModBusTermDef, Choices are:\n"
        "    (oaVarDataAppDef_oaModBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModBusTermDef_tp_dealloc(PyoaVarDataAppDef_oaModBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModBusTermDef value;
    int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaModBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModBusTermDef v1;
    PyParamoaVarDataAppDef_oaModBusTermDef v2;
    int convert_status1=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModBusTermDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModBusTermDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModBusTermDef**) ((PyoaVarDataAppDef_oaModBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(oaVarDataAppDef_oaModBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModBusTermDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModBusTermDefObject* self = (PyoaVarDataAppDef_oaModBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(oaVarDataAppDef_oaModBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModBusTermDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModBusTermDefObject* self = (PyoaVarDataAppDef_oaModBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_get_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaModBusTermDef,[oaByte])\n"
"    Calls: void get(const oaModBusTermDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModBusTermDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusTermDefObject* self=(PyoaVarDataAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusTermDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusTermDefObject* self=(PyoaVarDataAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusTermDefObject* self=(PyoaVarDataAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: getSize\n"
"  Paramegers: (oaModBusTermDef)\n"
"    Calls: oaUInt4 getSize(const oaModBusTermDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModBusTermDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusTermDefObject* self=(PyoaVarDataAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_set_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaModBusTermDef,[oaByte])\n"
"    Calls: void set(oaModBusTermDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModBusTermDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModBusTermDefObject* self=(PyoaVarDataAppDef_oaModBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModBusTermDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModBusTermDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaModBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModBusTermDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModBusTermDef data;
  int convert_status=PyoaVarDataAppDef_oaModBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_get,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_getSize,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_set,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModBusTermDef)\n"
"    Calls: (const oaVarDataAppDef_oaModBusTermDef&)\n"
"    Signature: oaVarDataAppDef_oaModBusTermDef||cref-oaVarDataAppDef_oaModBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModBusTermDef",
    sizeof(PyoaVarDataAppDef_oaModBusTermDefObject),
    0,
    (destructor)oaVarDataAppDef_oaModBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModBusTermDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModBusTermDefp result= (oaVarDataAppDef_oaModBusTermDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModBusTermDef_FromoaVarDataAppDef_oaModBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_static_find,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModBusTermDef_static_get,METH_VARARGS,oaVarDataAppDef_oaModBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModBusTermDef",
           (PyObject*)(&PyoaVarDataAppDef_oaModBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModBusTermDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModConnectDefObject* self = (PyoaVarDataAppDef_oaModConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModConnectDef)
    {
        PyParamoaVarDataAppDef_oaModConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModConnectDef, Choices are:\n"
        "    (oaVarDataAppDef_oaModConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModConnectDef_tp_dealloc(PyoaVarDataAppDef_oaModConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModConnectDef value;
    int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaModConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModConnectDef v1;
    PyParamoaVarDataAppDef_oaModConnectDef v2;
    int convert_status1=PyoaVarDataAppDef_oaModConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModConnectDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModConnectDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModConnectDef**) ((PyoaVarDataAppDef_oaModConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(oaVarDataAppDef_oaModConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModConnectDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModConnectDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModConnectDefObject* self = (PyoaVarDataAppDef_oaModConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(oaVarDataAppDef_oaModConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModConnectDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModConnectDefObject* self = (PyoaVarDataAppDef_oaModConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_get_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaModConnectDef,[oaByte])\n"
"    Calls: void get(const oaModConnectDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModConnectDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModConnectDefObject* self=(PyoaVarDataAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModConnectDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModConnectDefObject* self=(PyoaVarDataAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModConnectDefObject* self=(PyoaVarDataAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: getSize\n"
"  Paramegers: (oaModConnectDef)\n"
"    Calls: oaUInt4 getSize(const oaModConnectDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModConnectDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModConnectDefObject* self=(PyoaVarDataAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_set_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaModConnectDef,[oaByte])\n"
"    Calls: void set(oaModConnectDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModConnectDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModConnectDefObject* self=(PyoaVarDataAppDef_oaModConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModConnectDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModConnectDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaModConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModConnectDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModConnectDef data;
  int convert_status=PyoaVarDataAppDef_oaModConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModConnectDef_get,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModConnectDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModConnectDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModConnectDef_getSize,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModConnectDef_set,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModConnectDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModConnectDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModConnectDef)\n"
"    Calls: (const oaVarDataAppDef_oaModConnectDef&)\n"
"    Signature: oaVarDataAppDef_oaModConnectDef||cref-oaVarDataAppDef_oaModConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModConnectDef",
    sizeof(PyoaVarDataAppDef_oaModConnectDefObject),
    0,
    (destructor)oaVarDataAppDef_oaModConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModConnectDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModConnectDefp result= (oaVarDataAppDef_oaModConnectDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModConnectDef_FromoaVarDataAppDef_oaModConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModConnectDef_static_find,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModConnectDef_static_get,METH_VARARGS,oaVarDataAppDef_oaModConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModConnectDef",
           (PyObject*)(&PyoaVarDataAppDef_oaModConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModConnectDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModInstObject* self = (PyoaVarDataAppDef_oaModInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModInst)
    {
        PyParamoaVarDataAppDef_oaModInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModInst, Choices are:\n"
        "    (oaVarDataAppDef_oaModInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModInst_tp_dealloc(PyoaVarDataAppDef_oaModInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModInst_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModInst value;
    int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaVarDataAppDef_oaModInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModInst v1;
    PyParamoaVarDataAppDef_oaModInst v2;
    int convert_status1=PyoaVarDataAppDef_oaModInst_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModInst_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModInst_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModInst**) ((PyoaVarDataAppDef_oaModInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(oaVarDataAppDef_oaModInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModInst* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModInst_Type.tp_alloc(&PyoaVarDataAppDef_oaModInst_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModInstObject* self = (PyoaVarDataAppDef_oaModInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(oaVarDataAppDef_oaModInst* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModInst_Type.tp_alloc(&PyoaVarDataAppDef_oaModInst_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModInstObject* self = (PyoaVarDataAppDef_oaModInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_get_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaModInst,[oaByte])\n"
"    Calls: void get(const oaModInst* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModInst,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInst data;
    int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstObject* self=(PyoaVarDataAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInst_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInst data;
    int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstObject* self=(PyoaVarDataAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInst data;
    int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstObject* self=(PyoaVarDataAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: getSize\n"
"  Paramegers: (oaModInst)\n"
"    Calls: oaUInt4 getSize(const oaModInst* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModInst,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInst data;
    int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstObject* self=(PyoaVarDataAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_set_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaModInst,[oaByte])\n"
"    Calls: void set(oaModInst* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModInst,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInst data;
    int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstObject* self=(PyoaVarDataAppDef_oaModInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInst p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInst_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_isNull_doc[] =
"Class: oaVarDataAppDef_oaModInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModInst data;
    int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModInst_assign_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModInst data;
  int convert_status=PyoaVarDataAppDef_oaModInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModInst_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModInst_get,METH_VARARGS,oaVarDataAppDef_oaModInst_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModInst_getDefault,METH_VARARGS,oaVarDataAppDef_oaModInst_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModInst_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModInst_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModInst_getSize,METH_VARARGS,oaVarDataAppDef_oaModInst_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModInst_set,METH_VARARGS,oaVarDataAppDef_oaModInst_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModInst_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModInst_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModInst_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_doc[] = 
"Class: oaVarDataAppDef_oaModInst\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModInst)\n"
"    Calls: (const oaVarDataAppDef_oaModInst&)\n"
"    Signature: oaVarDataAppDef_oaModInst||cref-oaVarDataAppDef_oaModInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModInst",
    sizeof(PyoaVarDataAppDef_oaModInstObject),
    0,
    (destructor)oaVarDataAppDef_oaModInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModInst_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModInst|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::find(p1.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInst_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInst* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInst|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInst* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInst|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::get(p1.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstp result= (oaVarDataAppDef_oaModInst::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModInst_FromoaVarDataAppDef_oaModInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModInst_static_find,METH_VARARGS,oaVarDataAppDef_oaModInst_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModInst_static_get,METH_VARARGS,oaVarDataAppDef_oaModInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModInst_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModInst",
           (PyObject*)(&PyoaVarDataAppDef_oaModInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModInst_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModInstHeaderObject* self = (PyoaVarDataAppDef_oaModInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModInstHeader)
    {
        PyParamoaVarDataAppDef_oaModInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModInstHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaModInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModInstHeader_tp_dealloc(PyoaVarDataAppDef_oaModInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModInstHeader value;
    int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaModInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModInstHeader v1;
    PyParamoaVarDataAppDef_oaModInstHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaModInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModInstHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModInstHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModInstHeader**) ((PyoaVarDataAppDef_oaModInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(oaVarDataAppDef_oaModInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModInstHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaModInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModInstHeaderObject* self = (PyoaVarDataAppDef_oaModInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(oaVarDataAppDef_oaModInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaModInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModInstHeaderObject* self = (PyoaVarDataAppDef_oaModInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaModInstHeader,[oaByte])\n"
"    Calls: void get(const oaModInstHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModInstHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstHeaderObject* self=(PyoaVarDataAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstHeaderObject* self=(PyoaVarDataAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstHeaderObject* self=(PyoaVarDataAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: getSize\n"
"  Paramegers: (oaModInstHeader)\n"
"    Calls: oaUInt4 getSize(const oaModInstHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModInstHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstHeaderObject* self=(PyoaVarDataAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaModInstHeader,[oaByte])\n"
"    Calls: void set(oaModInstHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModInstHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstHeaderObject* self=(PyoaVarDataAppDef_oaModInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaModInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModInstHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModInstHeader data;
  int convert_status=PyoaVarDataAppDef_oaModInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModInstHeader_get,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModInstHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModInstHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModInstHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModInstHeader_set,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModInstHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModInstHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModInstHeader)\n"
"    Calls: (const oaVarDataAppDef_oaModInstHeader&)\n"
"    Signature: oaVarDataAppDef_oaModInstHeader||cref-oaVarDataAppDef_oaModInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModInstHeader",
    sizeof(PyoaVarDataAppDef_oaModInstHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaModInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstHeaderp result= (oaVarDataAppDef_oaModInstHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModInstHeader_FromoaVarDataAppDef_oaModInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModInstHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModInstHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaModInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModInstHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaModInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModInstHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModInstTermObject* self = (PyoaVarDataAppDef_oaModInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModInstTerm)
    {
        PyParamoaVarDataAppDef_oaModInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModInstTerm, Choices are:\n"
        "    (oaVarDataAppDef_oaModInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModInstTerm_tp_dealloc(PyoaVarDataAppDef_oaModInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModInstTerm value;
    int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaVarDataAppDef_oaModInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModInstTerm v1;
    PyParamoaVarDataAppDef_oaModInstTerm v2;
    int convert_status1=PyoaVarDataAppDef_oaModInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModInstTerm_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModInstTerm_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModInstTerm**) ((PyoaVarDataAppDef_oaModInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(oaVarDataAppDef_oaModInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModInstTerm* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModInstTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaModInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModInstTermObject* self = (PyoaVarDataAppDef_oaModInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(oaVarDataAppDef_oaModInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModInstTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaModInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModInstTermObject* self = (PyoaVarDataAppDef_oaModInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_get_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaModInstTerm,[oaByte])\n"
"    Calls: void get(const oaModInstTerm* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModInstTerm,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstTermObject* self=(PyoaVarDataAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstTermObject* self=(PyoaVarDataAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstTermObject* self=(PyoaVarDataAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: getSize\n"
"  Paramegers: (oaModInstTerm)\n"
"    Calls: oaUInt4 getSize(const oaModInstTerm* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModInstTerm,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstTermObject* self=(PyoaVarDataAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_set_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaModInstTerm,[oaByte])\n"
"    Calls: void set(oaModInstTerm* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModInstTerm,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModInstTermObject* self=(PyoaVarDataAppDef_oaModInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModInstTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModInstTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_isNull_doc[] =
"Class: oaVarDataAppDef_oaModInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModInstTerm_assign_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModInstTerm data;
  int convert_status=PyoaVarDataAppDef_oaModInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModInstTerm_get,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModInstTerm_getDefault,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModInstTerm_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModInstTerm_getSize,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModInstTerm_set,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModInstTerm_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModInstTerm_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModInstTerm)\n"
"    Calls: (const oaVarDataAppDef_oaModInstTerm&)\n"
"    Signature: oaVarDataAppDef_oaModInstTerm||cref-oaVarDataAppDef_oaModInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModInstTerm",
    sizeof(PyoaVarDataAppDef_oaModInstTermObject),
    0,
    (destructor)oaVarDataAppDef_oaModInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::find(p1.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModInstTerm_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::get(p1.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModInstTermp result= (oaVarDataAppDef_oaModInstTerm::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModInstTerm_FromoaVarDataAppDef_oaModInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModInstTerm_static_find,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModInstTerm_static_get,METH_VARARGS,oaVarDataAppDef_oaModInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModInstTerm",
           (PyObject*)(&PyoaVarDataAppDef_oaModInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModInstTerm_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModModuleInstHeaderObject* self = (PyoaVarDataAppDef_oaModModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModModuleInstHeader)
    {
        PyParamoaVarDataAppDef_oaModModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModModuleInstHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaModModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModModuleInstHeader_tp_dealloc(PyoaVarDataAppDef_oaModModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModModuleInstHeader value;
    int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[59];
    sprintf(buffer,"<oaVarDataAppDef_oaModModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModModuleInstHeader v1;
    PyParamoaVarDataAppDef_oaModModuleInstHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModModuleInstHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModModuleInstHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModModuleInstHeader**) ((PyoaVarDataAppDef_oaModModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(oaVarDataAppDef_oaModModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModModuleInstHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaModModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModModuleInstHeaderObject* self = (PyoaVarDataAppDef_oaModModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(oaVarDataAppDef_oaModModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModModuleInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaModModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModModuleInstHeaderObject* self = (PyoaVarDataAppDef_oaModModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaModModuleInstHeader,[oaByte])\n"
"    Calls: void get(const oaModModuleInstHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModModuleInstHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModModuleInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: getSize\n"
"  Paramegers: (oaModModuleInstHeader)\n"
"    Calls: oaUInt4 getSize(const oaModModuleInstHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModModuleInstHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaModModuleInstHeader,[oaByte])\n"
"    Calls: void set(oaModModuleInstHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModModuleInstHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaModModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModModuleInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModModuleInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModModuleInstHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModModuleInstHeader data;
  int convert_status=PyoaVarDataAppDef_oaModModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_get,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_set,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModModuleInstHeader)\n"
"    Calls: (const oaVarDataAppDef_oaModModuleInstHeader&)\n"
"    Signature: oaVarDataAppDef_oaModModuleInstHeader||cref-oaVarDataAppDef_oaModModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModModuleInstHeader",
    sizeof(PyoaVarDataAppDef_oaModModuleInstHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaModModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModModuleInstHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModModuleInstHeaderp result= (oaVarDataAppDef_oaModModuleInstHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModModuleInstHeader_FromoaVarDataAppDef_oaModModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModModuleInstHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaModModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModModuleInstHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaModModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModModuleInstHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModNetObject* self = (PyoaVarDataAppDef_oaModNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModNet)
    {
        PyParamoaVarDataAppDef_oaModNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModNet, Choices are:\n"
        "    (oaVarDataAppDef_oaModNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModNet_tp_dealloc(PyoaVarDataAppDef_oaModNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModNet_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModNet value;
    int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaVarDataAppDef_oaModNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModNet v1;
    PyParamoaVarDataAppDef_oaModNet v2;
    int convert_status1=PyoaVarDataAppDef_oaModNet_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModNet_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModNet_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModNet**) ((PyoaVarDataAppDef_oaModNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(oaVarDataAppDef_oaModNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModNet* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModNet_Type.tp_alloc(&PyoaVarDataAppDef_oaModNet_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModNetObject* self = (PyoaVarDataAppDef_oaModNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(oaVarDataAppDef_oaModNet* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModNet_Type.tp_alloc(&PyoaVarDataAppDef_oaModNet_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModNetObject* self = (PyoaVarDataAppDef_oaModNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_get_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaModNet,[oaByte])\n"
"    Calls: void get(const oaModNet* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModNet,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModNet data;
    int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModNetObject* self=(PyoaVarDataAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModNet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModNet data;
    int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModNetObject* self=(PyoaVarDataAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModNet data;
    int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModNetObject* self=(PyoaVarDataAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: getSize\n"
"  Paramegers: (oaModNet)\n"
"    Calls: oaUInt4 getSize(const oaModNet* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModNet,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModNet data;
    int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModNetObject* self=(PyoaVarDataAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_set_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaModNet,[oaByte])\n"
"    Calls: void set(oaModNet* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModNet,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModNet data;
    int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModNetObject* self=(PyoaVarDataAppDef_oaModNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModNet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModNet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_isNull_doc[] =
"Class: oaVarDataAppDef_oaModNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModNet data;
    int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModNet_assign_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModNet data;
  int convert_status=PyoaVarDataAppDef_oaModNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModNet_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModNet_get,METH_VARARGS,oaVarDataAppDef_oaModNet_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModNet_getDefault,METH_VARARGS,oaVarDataAppDef_oaModNet_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModNet_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModNet_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModNet_getSize,METH_VARARGS,oaVarDataAppDef_oaModNet_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModNet_set,METH_VARARGS,oaVarDataAppDef_oaModNet_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModNet_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModNet_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModNet_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_doc[] = 
"Class: oaVarDataAppDef_oaModNet\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModNet)\n"
"    Calls: (const oaVarDataAppDef_oaModNet&)\n"
"    Signature: oaVarDataAppDef_oaModNet||cref-oaVarDataAppDef_oaModNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModNet",
    sizeof(PyoaVarDataAppDef_oaModNetObject),
    0,
    (destructor)oaVarDataAppDef_oaModNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModNet_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModNet|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::find(p1.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModNet_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModNet* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModNet|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModNet* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModNet|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::get(p1.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModNetp result= (oaVarDataAppDef_oaModNet::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModNet_FromoaVarDataAppDef_oaModNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModNet_static_find,METH_VARARGS,oaVarDataAppDef_oaModNet_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModNet_static_get,METH_VARARGS,oaVarDataAppDef_oaModNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModNet_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModNet",
           (PyObject*)(&PyoaVarDataAppDef_oaModNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModNet_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModTermObject* self = (PyoaVarDataAppDef_oaModTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModTerm)
    {
        PyParamoaVarDataAppDef_oaModTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModTerm, Choices are:\n"
        "    (oaVarDataAppDef_oaModTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModTerm_tp_dealloc(PyoaVarDataAppDef_oaModTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModTerm_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModTerm value;
    int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaVarDataAppDef_oaModTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModTerm v1;
    PyParamoaVarDataAppDef_oaModTerm v2;
    int convert_status1=PyoaVarDataAppDef_oaModTerm_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModTerm_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModTerm_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModTerm**) ((PyoaVarDataAppDef_oaModTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(oaVarDataAppDef_oaModTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModTerm* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaModTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModTermObject* self = (PyoaVarDataAppDef_oaModTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(oaVarDataAppDef_oaModTerm* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaModTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModTermObject* self = (PyoaVarDataAppDef_oaModTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_get_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaModTerm,[oaByte])\n"
"    Calls: void get(const oaModTerm* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModTerm,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModTerm data;
    int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModTermObject* self=(PyoaVarDataAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModTerm data;
    int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModTermObject* self=(PyoaVarDataAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModTerm data;
    int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModTermObject* self=(PyoaVarDataAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: getSize\n"
"  Paramegers: (oaModTerm)\n"
"    Calls: oaUInt4 getSize(const oaModTerm* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModTerm,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModTerm data;
    int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModTermObject* self=(PyoaVarDataAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_set_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaModTerm,[oaByte])\n"
"    Calls: void set(oaModTerm* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModTerm,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModTerm data;
    int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModTermObject* self=(PyoaVarDataAppDef_oaModTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_isNull_doc[] =
"Class: oaVarDataAppDef_oaModTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModTerm data;
    int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModTerm_assign_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModTerm data;
  int convert_status=PyoaVarDataAppDef_oaModTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModTerm_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModTerm_get,METH_VARARGS,oaVarDataAppDef_oaModTerm_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModTerm_getDefault,METH_VARARGS,oaVarDataAppDef_oaModTerm_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModTerm_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModTerm_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModTerm_getSize,METH_VARARGS,oaVarDataAppDef_oaModTerm_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModTerm_set,METH_VARARGS,oaVarDataAppDef_oaModTerm_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModTerm_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModTerm_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModTerm_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_doc[] = 
"Class: oaVarDataAppDef_oaModTerm\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModTerm)\n"
"    Calls: (const oaVarDataAppDef_oaModTerm&)\n"
"    Signature: oaVarDataAppDef_oaModTerm||cref-oaVarDataAppDef_oaModTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModTerm",
    sizeof(PyoaVarDataAppDef_oaModTermObject),
    0,
    (destructor)oaVarDataAppDef_oaModTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::find(p1.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModTerm_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModTerm* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModTerm* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::get(p1.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModTermp result= (oaVarDataAppDef_oaModTerm::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModTerm_FromoaVarDataAppDef_oaModTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModTerm_static_find,METH_VARARGS,oaVarDataAppDef_oaModTerm_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModTerm_static_get,METH_VARARGS,oaVarDataAppDef_oaModTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModTerm",
           (PyObject*)(&PyoaVarDataAppDef_oaModTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModTerm_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModVectorInstDefObject* self = (PyoaVarDataAppDef_oaModVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModVectorInstDef)
    {
        PyParamoaVarDataAppDef_oaModVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModVectorInstDef, Choices are:\n"
        "    (oaVarDataAppDef_oaModVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModVectorInstDef_tp_dealloc(PyoaVarDataAppDef_oaModVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModVectorInstDef value;
    int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaVarDataAppDef_oaModVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModVectorInstDef v1;
    PyParamoaVarDataAppDef_oaModVectorInstDef v2;
    int convert_status1=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModVectorInstDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModVectorInstDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModVectorInstDef**) ((PyoaVarDataAppDef_oaModVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(oaVarDataAppDef_oaModVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModVectorInstDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModVectorInstDefObject* self = (PyoaVarDataAppDef_oaModVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(oaVarDataAppDef_oaModVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModVectorInstDef_Type.tp_alloc(&PyoaVarDataAppDef_oaModVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModVectorInstDefObject* self = (PyoaVarDataAppDef_oaModVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_get_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaModVectorInstDef,[oaByte])\n"
"    Calls: void get(const oaModVectorInstDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModVectorInstDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModVectorInstDefObject* self=(PyoaVarDataAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModVectorInstDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModVectorInstDefObject* self=(PyoaVarDataAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModVectorInstDefObject* self=(PyoaVarDataAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: getSize\n"
"  Paramegers: (oaModVectorInstDef)\n"
"    Calls: oaUInt4 getSize(const oaModVectorInstDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModVectorInstDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModVectorInstDefObject* self=(PyoaVarDataAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_set_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaModVectorInstDef,[oaByte])\n"
"    Calls: void set(oaModVectorInstDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModVectorInstDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModVectorInstDefObject* self=(PyoaVarDataAppDef_oaModVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModVectorInstDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModVectorInstDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModVectorInstDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModVectorInstDef data;
  int convert_status=PyoaVarDataAppDef_oaModVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_get,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_getSize,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_set,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModVectorInstDef)\n"
"    Calls: (const oaVarDataAppDef_oaModVectorInstDef&)\n"
"    Signature: oaVarDataAppDef_oaModVectorInstDef||cref-oaVarDataAppDef_oaModVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModVectorInstDef",
    sizeof(PyoaVarDataAppDef_oaModVectorInstDefObject),
    0,
    (destructor)oaVarDataAppDef_oaModVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModVectorInstDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModVectorInstDefp result= (oaVarDataAppDef_oaModVectorInstDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModVectorInstDef_FromoaVarDataAppDef_oaModVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_static_find,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModVectorInstDef_static_get,METH_VARARGS,oaVarDataAppDef_oaModVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModVectorInstDef",
           (PyObject*)(&PyoaVarDataAppDef_oaModVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModVectorInstDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaModule
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModule_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaModule_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaModuleObject* self = (PyoaVarDataAppDef_oaModuleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaModule)
    {
        PyParamoaVarDataAppDef_oaModule p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaModule_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaModule, Choices are:\n"
        "    (oaVarDataAppDef_oaModule)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaModule_tp_dealloc(PyoaVarDataAppDef_oaModuleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaModule_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaModule value;
    int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaVarDataAppDef_oaModule::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaModule_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaModule v1;
    PyParamoaVarDataAppDef_oaModule v2;
    int convert_status1=PyoaVarDataAppDef_oaModule_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaModule_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaModule_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaModule* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaModule_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaModule**) ((PyoaVarDataAppDef_oaModuleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaModule Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(oaVarDataAppDef_oaModule** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaModule* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaModule_Type.tp_alloc(&PyoaVarDataAppDef_oaModule_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaModuleObject* self = (PyoaVarDataAppDef_oaModuleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(oaVarDataAppDef_oaModule* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaModule_Type.tp_alloc(&PyoaVarDataAppDef_oaModule_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaModuleObject* self = (PyoaVarDataAppDef_oaModuleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_get_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: get\n"
"  Paramegers: (oaModule,[oaByte])\n"
"    Calls: void get(const oaModule* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaModule,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModule_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModule data;
    int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModuleObject* self=(PyoaVarDataAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModule_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaModule_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModule data;
    int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModuleObject* self=(PyoaVarDataAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaModule_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModule data;
    int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModuleObject* self=(PyoaVarDataAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_getSize_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: getSize\n"
"  Paramegers: (oaModule)\n"
"    Calls: oaUInt4 getSize(const oaModule* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaModule,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModule_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModule data;
    int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModuleObject* self=(PyoaVarDataAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaModule_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_set_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: set\n"
"  Paramegers: (oaModule,[oaByte])\n"
"    Calls: void set(oaModule* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaModule,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaModule_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaModule data;
    int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaModuleObject* self=(PyoaVarDataAppDef_oaModuleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaModule p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaModule_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_isNull_doc[] =
"Class: oaVarDataAppDef_oaModule, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaModule_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaModule data;
    int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaModule_assign_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaModule_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaModule data;
  int convert_status=PyoaVarDataAppDef_oaModule_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaModule p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaModule_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaModule_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaModule_get,METH_VARARGS,oaVarDataAppDef_oaModule_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaModule_getDefault,METH_VARARGS,oaVarDataAppDef_oaModule_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaModule_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaModule_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaModule_getSize,METH_VARARGS,oaVarDataAppDef_oaModule_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaModule_set,METH_VARARGS,oaVarDataAppDef_oaModule_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaModule_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaModule_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaModule_tp_assign,METH_VARARGS,oaVarDataAppDef_oaModule_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_doc[] = 
"Class: oaVarDataAppDef_oaModule\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaModule)\n"
"    Calls: (const oaVarDataAppDef_oaModule&)\n"
"    Signature: oaVarDataAppDef_oaModule||cref-oaVarDataAppDef_oaModule,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaModule_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaModule",
    sizeof(PyoaVarDataAppDef_oaModuleObject),
    0,
    (destructor)oaVarDataAppDef_oaModule_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaModule_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaModule_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaModule_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaModule_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaModule_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_static_find_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModule* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModule|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModule* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaModule_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::find(p1.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModule, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaModule_static_get_doc[] = 
"Class: oaVarDataAppDef_oaModule, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaModule* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModule|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModule* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModule|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModule* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModule|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaModule* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaModule|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaModule_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::get(p1.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaModulep result= (oaVarDataAppDef_oaModule::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaModule_FromoaVarDataAppDef_oaModule(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaModule, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaModule_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaModule_static_find,METH_VARARGS,oaVarDataAppDef_oaModule_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaModule_static_get,METH_VARARGS,oaVarDataAppDef_oaModule_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaModule_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaModule_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaModule\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaModule",
           (PyObject*)(&PyoaVarDataAppDef_oaModule_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaModule\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaModule_Type.tp_dict;
    for(method=oaVarDataAppDef_oaModule_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaNetObject* self = (PyoaVarDataAppDef_oaNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaNet)
    {
        PyParamoaVarDataAppDef_oaNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaNet, Choices are:\n"
        "    (oaVarDataAppDef_oaNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaNet_tp_dealloc(PyoaVarDataAppDef_oaNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaNet_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaNet value;
    int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaVarDataAppDef_oaNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaNet v1;
    PyParamoaVarDataAppDef_oaNet v2;
    int convert_status1=PyoaVarDataAppDef_oaNet_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaNet_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaNet_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaNet**) ((PyoaVarDataAppDef_oaNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(oaVarDataAppDef_oaNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaNet* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaNet_Type.tp_alloc(&PyoaVarDataAppDef_oaNet_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaNetObject* self = (PyoaVarDataAppDef_oaNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(oaVarDataAppDef_oaNet* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaNet_Type.tp_alloc(&PyoaVarDataAppDef_oaNet_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaNetObject* self = (PyoaVarDataAppDef_oaNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_get_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: get\n"
"  Paramegers: (oaNet,[oaByte])\n"
"    Calls: void get(const oaNet* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaNet,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNet data;
    int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNetObject* self=(PyoaVarDataAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNet data;
    int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNetObject* self=(PyoaVarDataAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaNet_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNet data;
    int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNetObject* self=(PyoaVarDataAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_getSize_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: getSize\n"
"  Paramegers: (oaNet)\n"
"    Calls: oaUInt4 getSize(const oaNet* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaNet,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaNet_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNet data;
    int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNetObject* self=(PyoaVarDataAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_set_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: set\n"
"  Paramegers: (oaNet,[oaByte])\n"
"    Calls: void set(oaNet* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaNet,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNet data;
    int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNetObject* self=(PyoaVarDataAppDef_oaNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_isNull_doc[] =
"Class: oaVarDataAppDef_oaNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaNet data;
    int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaNet_assign_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaNet data;
  int convert_status=PyoaVarDataAppDef_oaNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaNet_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaNet_get,METH_VARARGS,oaVarDataAppDef_oaNet_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaNet_getDefault,METH_VARARGS,oaVarDataAppDef_oaNet_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaNet_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaNet_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaNet_getSize,METH_VARARGS,oaVarDataAppDef_oaNet_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaNet_set,METH_VARARGS,oaVarDataAppDef_oaNet_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaNet_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaNet_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaNet_tp_assign,METH_VARARGS,oaVarDataAppDef_oaNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_doc[] = 
"Class: oaVarDataAppDef_oaNet\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaNet)\n"
"    Calls: (const oaVarDataAppDef_oaNet&)\n"
"    Signature: oaVarDataAppDef_oaNet||cref-oaVarDataAppDef_oaNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaNet",
    sizeof(PyoaVarDataAppDef_oaNetObject),
    0,
    (destructor)oaVarDataAppDef_oaNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaNet_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_static_find_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaNet|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::find(p1.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNet_static_get_doc[] = 
"Class: oaVarDataAppDef_oaNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNet* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNet|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNet* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNet|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::get(p1.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNetp result= (oaVarDataAppDef_oaNet::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaNet_FromoaVarDataAppDef_oaNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaNet_static_find,METH_VARARGS,oaVarDataAppDef_oaNet_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaNet_static_get,METH_VARARGS,oaVarDataAppDef_oaNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaNet_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaNet",
           (PyObject*)(&PyoaVarDataAppDef_oaNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaNet_Type.tp_dict;
    for(method=oaVarDataAppDef_oaNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaNode
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaNode_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaNode_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaNodeObject* self = (PyoaVarDataAppDef_oaNodeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaNode)
    {
        PyParamoaVarDataAppDef_oaNode p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaNode_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaNode, Choices are:\n"
        "    (oaVarDataAppDef_oaNode)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaNode_tp_dealloc(PyoaVarDataAppDef_oaNodeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaNode_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaNode value;
    int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaVarDataAppDef_oaNode::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaNode_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaNode v1;
    PyParamoaVarDataAppDef_oaNode v2;
    int convert_status1=PyoaVarDataAppDef_oaNode_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaNode_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaNode_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaNode* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaNode_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaNode**) ((PyoaVarDataAppDef_oaNodeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaNode Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(oaVarDataAppDef_oaNode** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaNode* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaNode_Type.tp_alloc(&PyoaVarDataAppDef_oaNode_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaNodeObject* self = (PyoaVarDataAppDef_oaNodeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(oaVarDataAppDef_oaNode* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaNode_Type.tp_alloc(&PyoaVarDataAppDef_oaNode_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaNodeObject* self = (PyoaVarDataAppDef_oaNodeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_get_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: get\n"
"  Paramegers: (oaNode,[oaByte])\n"
"    Calls: void get(const oaNode* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaNode,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaNode_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNode data;
    int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNodeObject* self=(PyoaVarDataAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNode_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaNode_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNode data;
    int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNodeObject* self=(PyoaVarDataAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaNode_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNode data;
    int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNodeObject* self=(PyoaVarDataAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_getSize_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: getSize\n"
"  Paramegers: (oaNode)\n"
"    Calls: oaUInt4 getSize(const oaNode* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaNode,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaNode_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNode data;
    int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNodeObject* self=(PyoaVarDataAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaNode_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_set_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: set\n"
"  Paramegers: (oaNode,[oaByte])\n"
"    Calls: void set(oaNode* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaNode,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaNode_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaNode data;
    int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaNodeObject* self=(PyoaVarDataAppDef_oaNodeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaNode p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaNode_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_isNull_doc[] =
"Class: oaVarDataAppDef_oaNode, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaNode_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaNode data;
    int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaNode_assign_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaNode_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaNode data;
  int convert_status=PyoaVarDataAppDef_oaNode_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaNode p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaNode_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaNode_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaNode_get,METH_VARARGS,oaVarDataAppDef_oaNode_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaNode_getDefault,METH_VARARGS,oaVarDataAppDef_oaNode_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaNode_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaNode_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaNode_getSize,METH_VARARGS,oaVarDataAppDef_oaNode_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaNode_set,METH_VARARGS,oaVarDataAppDef_oaNode_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaNode_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaNode_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaNode_tp_assign,METH_VARARGS,oaVarDataAppDef_oaNode_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_doc[] = 
"Class: oaVarDataAppDef_oaNode\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaNode)\n"
"    Calls: (const oaVarDataAppDef_oaNode&)\n"
"    Signature: oaVarDataAppDef_oaNode||cref-oaVarDataAppDef_oaNode,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaNode_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaNode",
    sizeof(PyoaVarDataAppDef_oaNodeObject),
    0,
    (destructor)oaVarDataAppDef_oaNode_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaNode_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaNode_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaNode_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaNode_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaNode_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_static_find_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaNode* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaNode|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaNode* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaNode_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::find(p1.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaNode, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaNode_static_get_doc[] = 
"Class: oaVarDataAppDef_oaNode, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaNode* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNode|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNode* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNode|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNode* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNode|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaNode* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaNode|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaNode_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::get(p1.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaNodep result= (oaVarDataAppDef_oaNode::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaNode_FromoaVarDataAppDef_oaNode(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaNode, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaNode_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaNode_static_find,METH_VARARGS,oaVarDataAppDef_oaNode_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaNode_static_get,METH_VARARGS,oaVarDataAppDef_oaNode_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaNode_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaNode_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaNode\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaNode",
           (PyObject*)(&PyoaVarDataAppDef_oaNode_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaNode\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaNode_Type.tp_dict;
    for(method=oaVarDataAppDef_oaNode_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccAssignmentObject* self = (PyoaVarDataAppDef_oaOccAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccAssignment)
    {
        PyParamoaVarDataAppDef_oaOccAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccAssignment, Choices are:\n"
        "    (oaVarDataAppDef_oaOccAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccAssignment_tp_dealloc(PyoaVarDataAppDef_oaOccAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccAssignment_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccAssignment value;
    int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaOccAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccAssignment v1;
    PyParamoaVarDataAppDef_oaOccAssignment v2;
    int convert_status1=PyoaVarDataAppDef_oaOccAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccAssignment_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccAssignment_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccAssignment**) ((PyoaVarDataAppDef_oaOccAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(oaVarDataAppDef_oaOccAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccAssignment* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccAssignment_Type.tp_alloc(&PyoaVarDataAppDef_oaOccAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccAssignmentObject* self = (PyoaVarDataAppDef_oaOccAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(oaVarDataAppDef_oaOccAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccAssignment_Type.tp_alloc(&PyoaVarDataAppDef_oaOccAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccAssignmentObject* self = (PyoaVarDataAppDef_oaOccAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_get_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaOccAssignment,[oaByte])\n"
"    Calls: void get(const oaOccAssignment* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccAssignment,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccAssignment data;
    int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccAssignmentObject* self=(PyoaVarDataAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccAssignment_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccAssignment data;
    int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccAssignmentObject* self=(PyoaVarDataAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccAssignment data;
    int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccAssignmentObject* self=(PyoaVarDataAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: getSize\n"
"  Paramegers: (oaOccAssignment)\n"
"    Calls: oaUInt4 getSize(const oaOccAssignment* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccAssignment,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccAssignment data;
    int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccAssignmentObject* self=(PyoaVarDataAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_set_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaOccAssignment,[oaByte])\n"
"    Calls: void set(oaOccAssignment* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccAssignment,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccAssignment data;
    int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccAssignmentObject* self=(PyoaVarDataAppDef_oaOccAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccAssignment p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccAssignment_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccAssignment data;
    int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccAssignment_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccAssignment data;
  int convert_status=PyoaVarDataAppDef_oaOccAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccAssignment_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccAssignment_get,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccAssignment_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccAssignment_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccAssignment_getSize,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccAssignment_set,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccAssignment_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccAssignment_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccAssignment)\n"
"    Calls: (const oaVarDataAppDef_oaOccAssignment&)\n"
"    Signature: oaVarDataAppDef_oaOccAssignment||cref-oaVarDataAppDef_oaOccAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccAssignment",
    sizeof(PyoaVarDataAppDef_oaOccAssignmentObject),
    0,
    (destructor)oaVarDataAppDef_oaOccAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccAssignment_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccAssignment* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccAssignmentp result= (oaVarDataAppDef_oaOccAssignment::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccAssignment_FromoaVarDataAppDef_oaOccAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccAssignment_static_find,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccAssignment_static_get,METH_VARARGS,oaVarDataAppDef_oaOccAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccAssignment",
           (PyObject*)(&PyoaVarDataAppDef_oaOccAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccAssignment_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccBusNetDefObject* self = (PyoaVarDataAppDef_oaOccBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccBusNetDef)
    {
        PyParamoaVarDataAppDef_oaOccBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccBusNetDef, Choices are:\n"
        "    (oaVarDataAppDef_oaOccBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccBusNetDef_tp_dealloc(PyoaVarDataAppDef_oaOccBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccBusNetDef value;
    int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaVarDataAppDef_oaOccBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccBusNetDef v1;
    PyParamoaVarDataAppDef_oaOccBusNetDef v2;
    int convert_status1=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccBusNetDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccBusNetDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccBusNetDef**) ((PyoaVarDataAppDef_oaOccBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(oaVarDataAppDef_oaOccBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccBusNetDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccBusNetDefObject* self = (PyoaVarDataAppDef_oaOccBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(oaVarDataAppDef_oaOccBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccBusNetDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccBusNetDefObject* self = (PyoaVarDataAppDef_oaOccBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_get_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaOccBusNetDef,[oaByte])\n"
"    Calls: void get(const oaOccBusNetDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccBusNetDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusNetDefObject* self=(PyoaVarDataAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusNetDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusNetDefObject* self=(PyoaVarDataAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusNetDefObject* self=(PyoaVarDataAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: getSize\n"
"  Paramegers: (oaOccBusNetDef)\n"
"    Calls: oaUInt4 getSize(const oaOccBusNetDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccBusNetDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusNetDefObject* self=(PyoaVarDataAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_set_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaOccBusNetDef,[oaByte])\n"
"    Calls: void set(oaOccBusNetDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccBusNetDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusNetDefObject* self=(PyoaVarDataAppDef_oaOccBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusNetDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusNetDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccBusNetDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccBusNetDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccBusNetDef data;
  int convert_status=PyoaVarDataAppDef_oaOccBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_get,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_getSize,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_set,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccBusNetDef)\n"
"    Calls: (const oaVarDataAppDef_oaOccBusNetDef&)\n"
"    Signature: oaVarDataAppDef_oaOccBusNetDef||cref-oaVarDataAppDef_oaOccBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccBusNetDef",
    sizeof(PyoaVarDataAppDef_oaOccBusNetDefObject),
    0,
    (destructor)oaVarDataAppDef_oaOccBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusNetDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusNetDefp result= (oaVarDataAppDef_oaOccBusNetDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccBusNetDef_FromoaVarDataAppDef_oaOccBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_static_find,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccBusNetDef_static_get,METH_VARARGS,oaVarDataAppDef_oaOccBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccBusNetDef",
           (PyObject*)(&PyoaVarDataAppDef_oaOccBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccBusNetDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccBusTermDefObject* self = (PyoaVarDataAppDef_oaOccBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccBusTermDef)
    {
        PyParamoaVarDataAppDef_oaOccBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccBusTermDef, Choices are:\n"
        "    (oaVarDataAppDef_oaOccBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccBusTermDef_tp_dealloc(PyoaVarDataAppDef_oaOccBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccBusTermDef value;
    int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaOccBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccBusTermDef v1;
    PyParamoaVarDataAppDef_oaOccBusTermDef v2;
    int convert_status1=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccBusTermDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccBusTermDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccBusTermDef**) ((PyoaVarDataAppDef_oaOccBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(oaVarDataAppDef_oaOccBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccBusTermDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccBusTermDefObject* self = (PyoaVarDataAppDef_oaOccBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(oaVarDataAppDef_oaOccBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccBusTermDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccBusTermDefObject* self = (PyoaVarDataAppDef_oaOccBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_get_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaOccBusTermDef,[oaByte])\n"
"    Calls: void get(const oaOccBusTermDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccBusTermDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusTermDefObject* self=(PyoaVarDataAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusTermDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusTermDefObject* self=(PyoaVarDataAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusTermDefObject* self=(PyoaVarDataAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: getSize\n"
"  Paramegers: (oaOccBusTermDef)\n"
"    Calls: oaUInt4 getSize(const oaOccBusTermDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccBusTermDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusTermDefObject* self=(PyoaVarDataAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_set_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaOccBusTermDef,[oaByte])\n"
"    Calls: void set(oaOccBusTermDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccBusTermDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccBusTermDefObject* self=(PyoaVarDataAppDef_oaOccBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccBusTermDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccBusTermDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccBusTermDef data;
    int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccBusTermDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccBusTermDef data;
  int convert_status=PyoaVarDataAppDef_oaOccBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_get,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_getSize,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_set,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccBusTermDef)\n"
"    Calls: (const oaVarDataAppDef_oaOccBusTermDef&)\n"
"    Signature: oaVarDataAppDef_oaOccBusTermDef||cref-oaVarDataAppDef_oaOccBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccBusTermDef",
    sizeof(PyoaVarDataAppDef_oaOccBusTermDefObject),
    0,
    (destructor)oaVarDataAppDef_oaOccBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccBusTermDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccBusTermDefp result= (oaVarDataAppDef_oaOccBusTermDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccBusTermDef_FromoaVarDataAppDef_oaOccBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_static_find,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccBusTermDef_static_get,METH_VARARGS,oaVarDataAppDef_oaOccBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccBusTermDef",
           (PyObject*)(&PyoaVarDataAppDef_oaOccBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccBusTermDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccConnectDefObject* self = (PyoaVarDataAppDef_oaOccConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccConnectDef)
    {
        PyParamoaVarDataAppDef_oaOccConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccConnectDef, Choices are:\n"
        "    (oaVarDataAppDef_oaOccConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccConnectDef_tp_dealloc(PyoaVarDataAppDef_oaOccConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccConnectDef value;
    int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaOccConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccConnectDef v1;
    PyParamoaVarDataAppDef_oaOccConnectDef v2;
    int convert_status1=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccConnectDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccConnectDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccConnectDef**) ((PyoaVarDataAppDef_oaOccConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(oaVarDataAppDef_oaOccConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccConnectDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccConnectDefObject* self = (PyoaVarDataAppDef_oaOccConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(oaVarDataAppDef_oaOccConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccConnectDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccConnectDefObject* self = (PyoaVarDataAppDef_oaOccConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_get_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaOccConnectDef,[oaByte])\n"
"    Calls: void get(const oaOccConnectDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccConnectDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccConnectDefObject* self=(PyoaVarDataAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccConnectDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccConnectDefObject* self=(PyoaVarDataAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccConnectDefObject* self=(PyoaVarDataAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: getSize\n"
"  Paramegers: (oaOccConnectDef)\n"
"    Calls: oaUInt4 getSize(const oaOccConnectDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccConnectDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccConnectDefObject* self=(PyoaVarDataAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_set_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaOccConnectDef,[oaByte])\n"
"    Calls: void set(oaOccConnectDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccConnectDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccConnectDefObject* self=(PyoaVarDataAppDef_oaOccConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccConnectDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccConnectDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccConnectDef data;
    int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccConnectDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccConnectDef data;
  int convert_status=PyoaVarDataAppDef_oaOccConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_get,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_getSize,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_set,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccConnectDef)\n"
"    Calls: (const oaVarDataAppDef_oaOccConnectDef&)\n"
"    Signature: oaVarDataAppDef_oaOccConnectDef||cref-oaVarDataAppDef_oaOccConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccConnectDef",
    sizeof(PyoaVarDataAppDef_oaOccConnectDefObject),
    0,
    (destructor)oaVarDataAppDef_oaOccConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccConnectDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccConnectDefp result= (oaVarDataAppDef_oaOccConnectDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccConnectDef_FromoaVarDataAppDef_oaOccConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_static_find,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccConnectDef_static_get,METH_VARARGS,oaVarDataAppDef_oaOccConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccConnectDef",
           (PyObject*)(&PyoaVarDataAppDef_oaOccConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccConnectDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccInstObject* self = (PyoaVarDataAppDef_oaOccInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccInst)
    {
        PyParamoaVarDataAppDef_oaOccInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccInst, Choices are:\n"
        "    (oaVarDataAppDef_oaOccInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccInst_tp_dealloc(PyoaVarDataAppDef_oaOccInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccInst_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccInst value;
    int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaVarDataAppDef_oaOccInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccInst v1;
    PyParamoaVarDataAppDef_oaOccInst v2;
    int convert_status1=PyoaVarDataAppDef_oaOccInst_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccInst_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccInst_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccInst**) ((PyoaVarDataAppDef_oaOccInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(oaVarDataAppDef_oaOccInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccInst* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccInst_Type.tp_alloc(&PyoaVarDataAppDef_oaOccInst_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccInstObject* self = (PyoaVarDataAppDef_oaOccInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(oaVarDataAppDef_oaOccInst* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccInst_Type.tp_alloc(&PyoaVarDataAppDef_oaOccInst_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccInstObject* self = (PyoaVarDataAppDef_oaOccInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_get_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaOccInst,[oaByte])\n"
"    Calls: void get(const oaOccInst* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccInst,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInst data;
    int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstObject* self=(PyoaVarDataAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInst_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInst data;
    int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstObject* self=(PyoaVarDataAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInst data;
    int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstObject* self=(PyoaVarDataAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: getSize\n"
"  Paramegers: (oaOccInst)\n"
"    Calls: oaUInt4 getSize(const oaOccInst* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccInst,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInst data;
    int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstObject* self=(PyoaVarDataAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_set_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaOccInst,[oaByte])\n"
"    Calls: void set(oaOccInst* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccInst,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInst data;
    int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstObject* self=(PyoaVarDataAppDef_oaOccInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInst p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInst_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccInst data;
    int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccInst_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccInst data;
  int convert_status=PyoaVarDataAppDef_oaOccInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccInst_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccInst_get,METH_VARARGS,oaVarDataAppDef_oaOccInst_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccInst_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccInst_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccInst_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccInst_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccInst_getSize,METH_VARARGS,oaVarDataAppDef_oaOccInst_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccInst_set,METH_VARARGS,oaVarDataAppDef_oaOccInst_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccInst_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccInst_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccInst_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_doc[] = 
"Class: oaVarDataAppDef_oaOccInst\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccInst)\n"
"    Calls: (const oaVarDataAppDef_oaOccInst&)\n"
"    Signature: oaVarDataAppDef_oaOccInst||cref-oaVarDataAppDef_oaOccInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccInst",
    sizeof(PyoaVarDataAppDef_oaOccInstObject),
    0,
    (destructor)oaVarDataAppDef_oaOccInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccInst_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInst_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInst* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInst* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInst|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstp result= (oaVarDataAppDef_oaOccInst::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccInst_FromoaVarDataAppDef_oaOccInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccInst_static_find,METH_VARARGS,oaVarDataAppDef_oaOccInst_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccInst_static_get,METH_VARARGS,oaVarDataAppDef_oaOccInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccInst_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccInst",
           (PyObject*)(&PyoaVarDataAppDef_oaOccInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccInst_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccInstHeaderObject* self = (PyoaVarDataAppDef_oaOccInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccInstHeader)
    {
        PyParamoaVarDataAppDef_oaOccInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccInstHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaOccInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccInstHeader_tp_dealloc(PyoaVarDataAppDef_oaOccInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccInstHeader value;
    int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaOccInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccInstHeader v1;
    PyParamoaVarDataAppDef_oaOccInstHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccInstHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccInstHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccInstHeader**) ((PyoaVarDataAppDef_oaOccInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(oaVarDataAppDef_oaOccInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccInstHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaOccInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccInstHeaderObject* self = (PyoaVarDataAppDef_oaOccInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(oaVarDataAppDef_oaOccInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaOccInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccInstHeaderObject* self = (PyoaVarDataAppDef_oaOccInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaOccInstHeader,[oaByte])\n"
"    Calls: void get(const oaOccInstHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccInstHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstHeaderObject* self=(PyoaVarDataAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstHeaderObject* self=(PyoaVarDataAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstHeaderObject* self=(PyoaVarDataAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: getSize\n"
"  Paramegers: (oaOccInstHeader)\n"
"    Calls: oaUInt4 getSize(const oaOccInstHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccInstHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstHeaderObject* self=(PyoaVarDataAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaOccInstHeader,[oaByte])\n"
"    Calls: void set(oaOccInstHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccInstHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstHeaderObject* self=(PyoaVarDataAppDef_oaOccInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccInstHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccInstHeader data;
  int convert_status=PyoaVarDataAppDef_oaOccInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_get,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_set,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccInstHeader)\n"
"    Calls: (const oaVarDataAppDef_oaOccInstHeader&)\n"
"    Signature: oaVarDataAppDef_oaOccInstHeader||cref-oaVarDataAppDef_oaOccInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccInstHeader",
    sizeof(PyoaVarDataAppDef_oaOccInstHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaOccInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstHeaderp result= (oaVarDataAppDef_oaOccInstHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccInstHeader_FromoaVarDataAppDef_oaOccInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccInstHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaOccInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccInstHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaOccInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccInstHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccInstTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccInstTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccInstTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccInstTermObject* self = (PyoaVarDataAppDef_oaOccInstTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccInstTerm)
    {
        PyParamoaVarDataAppDef_oaOccInstTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccInstTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccInstTerm, Choices are:\n"
        "    (oaVarDataAppDef_oaOccInstTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccInstTerm_tp_dealloc(PyoaVarDataAppDef_oaOccInstTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccInstTerm_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccInstTerm value;
    int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaVarDataAppDef_oaOccInstTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccInstTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccInstTerm v1;
    PyParamoaVarDataAppDef_oaOccInstTerm v2;
    int convert_status1=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccInstTerm_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccInstTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccInstTerm_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccInstTerm**) ((PyoaVarDataAppDef_oaOccInstTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccInstTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(oaVarDataAppDef_oaOccInstTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccInstTerm* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaOccInstTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccInstTermObject* self = (PyoaVarDataAppDef_oaOccInstTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(oaVarDataAppDef_oaOccInstTerm* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccInstTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaOccInstTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccInstTermObject* self = (PyoaVarDataAppDef_oaOccInstTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_get_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaOccInstTerm,[oaByte])\n"
"    Calls: void get(const oaOccInstTerm* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccInstTerm,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstTermObject* self=(PyoaVarDataAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstTermObject* self=(PyoaVarDataAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstTermObject* self=(PyoaVarDataAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: getSize\n"
"  Paramegers: (oaOccInstTerm)\n"
"    Calls: oaUInt4 getSize(const oaOccInstTerm* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccInstTerm,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstTermObject* self=(PyoaVarDataAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccInstTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_set_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaOccInstTerm,[oaByte])\n"
"    Calls: void set(oaOccInstTerm* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccInstTerm,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccInstTermObject* self=(PyoaVarDataAppDef_oaOccInstTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccInstTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccInstTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccInstTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccInstTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccInstTerm_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccInstTerm data;
  int convert_status=PyoaVarDataAppDef_oaOccInstTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccInstTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccInstTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccInstTerm_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_get,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_getSize,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_set,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccInstTerm)\n"
"    Calls: (const oaVarDataAppDef_oaOccInstTerm&)\n"
"    Signature: oaVarDataAppDef_oaOccInstTerm||cref-oaVarDataAppDef_oaOccInstTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccInstTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccInstTerm",
    sizeof(PyoaVarDataAppDef_oaOccInstTermObject),
    0,
    (destructor)oaVarDataAppDef_oaOccInstTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccInstTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccInstTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccInstTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccInstTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccInstTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccInstTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccInstTerm_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccInstTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccInstTerm* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccInstTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccInstTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccInstTermp result= (oaVarDataAppDef_oaOccInstTerm::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccInstTerm_FromoaVarDataAppDef_oaOccInstTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccInstTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccInstTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_static_find,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccInstTerm_static_get,METH_VARARGS,oaVarDataAppDef_oaOccInstTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccInstTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccInstTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccInstTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccInstTerm",
           (PyObject*)(&PyoaVarDataAppDef_oaOccInstTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccInstTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccInstTerm_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccInstTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccModuleInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccModuleInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self = (PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccModuleInstHeader)
    {
        PyParamoaVarDataAppDef_oaOccModuleInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccModuleInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccModuleInstHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaOccModuleInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccModuleInstHeader_tp_dealloc(PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccModuleInstHeader value;
    int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[59];
    sprintf(buffer,"<oaVarDataAppDef_oaOccModuleInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccModuleInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccModuleInstHeader v1;
    PyParamoaVarDataAppDef_oaOccModuleInstHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccModuleInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccModuleInstHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccModuleInstHeader**) ((PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccModuleInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(oaVarDataAppDef_oaOccModuleInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccModuleInstHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaOccModuleInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self = (PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(oaVarDataAppDef_oaOccModuleInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccModuleInstHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaOccModuleInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self = (PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaOccModuleInstHeader,[oaByte])\n"
"    Calls: void get(const oaOccModuleInstHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccModuleInstHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccModuleInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: getSize\n"
"  Paramegers: (oaOccModuleInstHeader)\n"
"    Calls: oaUInt4 getSize(const oaOccModuleInstHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccModuleInstHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccModuleInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaOccModuleInstHeader,[oaByte])\n"
"    Calls: void set(oaOccModuleInstHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccModuleInstHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccModuleInstHeaderObject* self=(PyoaVarDataAppDef_oaOccModuleInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccModuleInstHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccModuleInstHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccModuleInstHeader data;
    int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccModuleInstHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccModuleInstHeader data;
  int convert_status=PyoaVarDataAppDef_oaOccModuleInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccModuleInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccModuleInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccModuleInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_get,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_set,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccModuleInstHeader)\n"
"    Calls: (const oaVarDataAppDef_oaOccModuleInstHeader&)\n"
"    Signature: oaVarDataAppDef_oaOccModuleInstHeader||cref-oaVarDataAppDef_oaOccModuleInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccModuleInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccModuleInstHeader",
    sizeof(PyoaVarDataAppDef_oaOccModuleInstHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaOccModuleInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccModuleInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccModuleInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccModuleInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccModuleInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccModuleInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccModuleInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccModuleInstHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccModuleInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccModuleInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccModuleInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccModuleInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccModuleInstHeaderp result= (oaVarDataAppDef_oaOccModuleInstHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccModuleInstHeader_FromoaVarDataAppDef_oaOccModuleInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccModuleInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccModuleInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccModuleInstHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaOccModuleInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccModuleInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccModuleInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccModuleInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccModuleInstHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaOccModuleInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccModuleInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccModuleInstHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccModuleInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccNetObject* self = (PyoaVarDataAppDef_oaOccNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccNet)
    {
        PyParamoaVarDataAppDef_oaOccNet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccNet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccNet, Choices are:\n"
        "    (oaVarDataAppDef_oaOccNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccNet_tp_dealloc(PyoaVarDataAppDef_oaOccNetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccNet_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccNet value;
    int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaVarDataAppDef_oaOccNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccNet v1;
    PyParamoaVarDataAppDef_oaOccNet v2;
    int convert_status1=PyoaVarDataAppDef_oaOccNet_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccNet_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccNet_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccNet**) ((PyoaVarDataAppDef_oaOccNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(oaVarDataAppDef_oaOccNet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccNet* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccNet_Type.tp_alloc(&PyoaVarDataAppDef_oaOccNet_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccNetObject* self = (PyoaVarDataAppDef_oaOccNetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(oaVarDataAppDef_oaOccNet* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccNet_Type.tp_alloc(&PyoaVarDataAppDef_oaOccNet_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccNetObject* self = (PyoaVarDataAppDef_oaOccNetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_get_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaOccNet,[oaByte])\n"
"    Calls: void get(const oaOccNet* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccNet,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccNet data;
    int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccNetObject* self=(PyoaVarDataAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccNet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccNet data;
    int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccNetObject* self=(PyoaVarDataAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccNet data;
    int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccNetObject* self=(PyoaVarDataAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: getSize\n"
"  Paramegers: (oaOccNet)\n"
"    Calls: oaUInt4 getSize(const oaOccNet* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccNet,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccNet data;
    int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccNetObject* self=(PyoaVarDataAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_set_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaOccNet,[oaByte])\n"
"    Calls: void set(oaOccNet* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccNet,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccNet data;
    int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccNetObject* self=(PyoaVarDataAppDef_oaOccNetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccNet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccNet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccNet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccNet data;
    int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccNet_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccNet data;
  int convert_status=PyoaVarDataAppDef_oaOccNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccNet_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccNet_get,METH_VARARGS,oaVarDataAppDef_oaOccNet_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccNet_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccNet_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccNet_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccNet_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccNet_getSize,METH_VARARGS,oaVarDataAppDef_oaOccNet_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccNet_set,METH_VARARGS,oaVarDataAppDef_oaOccNet_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccNet_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccNet_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccNet_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_doc[] = 
"Class: oaVarDataAppDef_oaOccNet\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccNet)\n"
"    Calls: (const oaVarDataAppDef_oaOccNet&)\n"
"    Signature: oaVarDataAppDef_oaOccNet||cref-oaVarDataAppDef_oaOccNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccNet",
    sizeof(PyoaVarDataAppDef_oaOccNetObject),
    0,
    (destructor)oaVarDataAppDef_oaOccNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccNet_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccNet* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccNet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccNet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccNet_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccNet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccNet* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccNet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccNet* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccNet* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccNet|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccNet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccNetp result= (oaVarDataAppDef_oaOccNet::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccNet_FromoaVarDataAppDef_oaOccNet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccNet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccNet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccNet_static_find,METH_VARARGS,oaVarDataAppDef_oaOccNet_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccNet_static_get,METH_VARARGS,oaVarDataAppDef_oaOccNet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccNet_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccNet",
           (PyObject*)(&PyoaVarDataAppDef_oaOccNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccNet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccNet_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccNet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccShapeObject* self = (PyoaVarDataAppDef_oaOccShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccShape)
    {
        PyParamoaVarDataAppDef_oaOccShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccShape, Choices are:\n"
        "    (oaVarDataAppDef_oaOccShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccShape_tp_dealloc(PyoaVarDataAppDef_oaOccShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccShape_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccShape value;
    int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaVarDataAppDef_oaOccShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccShape v1;
    PyParamoaVarDataAppDef_oaOccShape v2;
    int convert_status1=PyoaVarDataAppDef_oaOccShape_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccShape_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccShape_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccShape**) ((PyoaVarDataAppDef_oaOccShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(oaVarDataAppDef_oaOccShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccShape* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccShape_Type.tp_alloc(&PyoaVarDataAppDef_oaOccShape_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccShapeObject* self = (PyoaVarDataAppDef_oaOccShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(oaVarDataAppDef_oaOccShape* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccShape_Type.tp_alloc(&PyoaVarDataAppDef_oaOccShape_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccShapeObject* self = (PyoaVarDataAppDef_oaOccShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_get_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaOccShape,[oaByte])\n"
"    Calls: void get(const oaOccShape* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccShape,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccShape data;
    int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccShapeObject* self=(PyoaVarDataAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccShape_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccShape data;
    int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccShapeObject* self=(PyoaVarDataAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccShape data;
    int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccShapeObject* self=(PyoaVarDataAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: getSize\n"
"  Paramegers: (oaOccShape)\n"
"    Calls: oaUInt4 getSize(const oaOccShape* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccShape,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccShape data;
    int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccShapeObject* self=(PyoaVarDataAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_set_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaOccShape,[oaByte])\n"
"    Calls: void set(oaOccShape* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccShape,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccShape data;
    int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccShapeObject* self=(PyoaVarDataAppDef_oaOccShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccShape p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccShape_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccShape data;
    int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccShape_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccShape data;
  int convert_status=PyoaVarDataAppDef_oaOccShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccShape_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccShape_get,METH_VARARGS,oaVarDataAppDef_oaOccShape_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccShape_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccShape_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccShape_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccShape_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccShape_getSize,METH_VARARGS,oaVarDataAppDef_oaOccShape_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccShape_set,METH_VARARGS,oaVarDataAppDef_oaOccShape_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccShape_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccShape_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccShape_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_doc[] = 
"Class: oaVarDataAppDef_oaOccShape\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccShape)\n"
"    Calls: (const oaVarDataAppDef_oaOccShape&)\n"
"    Signature: oaVarDataAppDef_oaOccShape||cref-oaVarDataAppDef_oaOccShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccShape",
    sizeof(PyoaVarDataAppDef_oaOccShapeObject),
    0,
    (destructor)oaVarDataAppDef_oaOccShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccShape_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccShape_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccShape* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccShape* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccShape* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccShape|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccShapep result= (oaVarDataAppDef_oaOccShape::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccShape_FromoaVarDataAppDef_oaOccShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccShape_static_find,METH_VARARGS,oaVarDataAppDef_oaOccShape_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccShape_static_get,METH_VARARGS,oaVarDataAppDef_oaOccShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccShape_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccShape",
           (PyObject*)(&PyoaVarDataAppDef_oaOccShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccShape_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccTermObject* self = (PyoaVarDataAppDef_oaOccTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccTerm)
    {
        PyParamoaVarDataAppDef_oaOccTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccTerm, Choices are:\n"
        "    (oaVarDataAppDef_oaOccTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccTerm_tp_dealloc(PyoaVarDataAppDef_oaOccTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccTerm_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccTerm value;
    int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaVarDataAppDef_oaOccTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccTerm v1;
    PyParamoaVarDataAppDef_oaOccTerm v2;
    int convert_status1=PyoaVarDataAppDef_oaOccTerm_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccTerm_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccTerm_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccTerm**) ((PyoaVarDataAppDef_oaOccTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(oaVarDataAppDef_oaOccTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccTerm* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaOccTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccTermObject* self = (PyoaVarDataAppDef_oaOccTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(oaVarDataAppDef_oaOccTerm* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccTerm_Type.tp_alloc(&PyoaVarDataAppDef_oaOccTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccTermObject* self = (PyoaVarDataAppDef_oaOccTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_get_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaOccTerm,[oaByte])\n"
"    Calls: void get(const oaOccTerm* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccTerm,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccTermObject* self=(PyoaVarDataAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccTermObject* self=(PyoaVarDataAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccTermObject* self=(PyoaVarDataAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: getSize\n"
"  Paramegers: (oaOccTerm)\n"
"    Calls: oaUInt4 getSize(const oaOccTerm* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccTerm,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccTermObject* self=(PyoaVarDataAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_set_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaOccTerm,[oaByte])\n"
"    Calls: void set(oaOccTerm* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccTerm,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccTermObject* self=(PyoaVarDataAppDef_oaOccTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccTerm p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccTerm_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccTerm data;
    int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccTerm_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccTerm data;
  int convert_status=PyoaVarDataAppDef_oaOccTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccTerm_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccTerm_get,METH_VARARGS,oaVarDataAppDef_oaOccTerm_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccTerm_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccTerm_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccTerm_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccTerm_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccTerm_getSize,METH_VARARGS,oaVarDataAppDef_oaOccTerm_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccTerm_set,METH_VARARGS,oaVarDataAppDef_oaOccTerm_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccTerm_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccTerm_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccTerm_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccTerm)\n"
"    Calls: (const oaVarDataAppDef_oaOccTerm&)\n"
"    Signature: oaVarDataAppDef_oaOccTerm||cref-oaVarDataAppDef_oaOccTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccTerm",
    sizeof(PyoaVarDataAppDef_oaOccTermObject),
    0,
    (destructor)oaVarDataAppDef_oaOccTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccTerm_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccTerm* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccTermp result= (oaVarDataAppDef_oaOccTerm::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccTerm_FromoaVarDataAppDef_oaOccTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccTerm_static_find,METH_VARARGS,oaVarDataAppDef_oaOccTerm_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccTerm_static_get,METH_VARARGS,oaVarDataAppDef_oaOccTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccTerm",
           (PyObject*)(&PyoaVarDataAppDef_oaOccTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccTerm_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccVectorInstDefObject* self = (PyoaVarDataAppDef_oaOccVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccVectorInstDef)
    {
        PyParamoaVarDataAppDef_oaOccVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccVectorInstDef, Choices are:\n"
        "    (oaVarDataAppDef_oaOccVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccVectorInstDef_tp_dealloc(PyoaVarDataAppDef_oaOccVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccVectorInstDef value;
    int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaVarDataAppDef_oaOccVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccVectorInstDef v1;
    PyParamoaVarDataAppDef_oaOccVectorInstDef v2;
    int convert_status1=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccVectorInstDef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccVectorInstDef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccVectorInstDef**) ((PyoaVarDataAppDef_oaOccVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(oaVarDataAppDef_oaOccVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccVectorInstDef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccVectorInstDefObject* self = (PyoaVarDataAppDef_oaOccVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(oaVarDataAppDef_oaOccVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccVectorInstDef_Type.tp_alloc(&PyoaVarDataAppDef_oaOccVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccVectorInstDefObject* self = (PyoaVarDataAppDef_oaOccVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_get_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaOccVectorInstDef,[oaByte])\n"
"    Calls: void get(const oaOccVectorInstDef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccVectorInstDef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccVectorInstDefObject* self=(PyoaVarDataAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccVectorInstDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccVectorInstDefObject* self=(PyoaVarDataAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccVectorInstDefObject* self=(PyoaVarDataAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: getSize\n"
"  Paramegers: (oaOccVectorInstDef)\n"
"    Calls: oaUInt4 getSize(const oaOccVectorInstDef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccVectorInstDef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccVectorInstDefObject* self=(PyoaVarDataAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_set_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaOccVectorInstDef,[oaByte])\n"
"    Calls: void set(oaOccVectorInstDef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccVectorInstDef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccVectorInstDefObject* self=(PyoaVarDataAppDef_oaOccVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccVectorInstDef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccVectorInstDef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccVectorInstDef data;
    int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccVectorInstDef_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccVectorInstDef data;
  int convert_status=PyoaVarDataAppDef_oaOccVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_get,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_getSize,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_set,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccVectorInstDef)\n"
"    Calls: (const oaVarDataAppDef_oaOccVectorInstDef&)\n"
"    Signature: oaVarDataAppDef_oaOccVectorInstDef||cref-oaVarDataAppDef_oaOccVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccVectorInstDef",
    sizeof(PyoaVarDataAppDef_oaOccVectorInstDefObject),
    0,
    (destructor)oaVarDataAppDef_oaOccVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccVectorInstDef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccVectorInstDefp result= (oaVarDataAppDef_oaOccVectorInstDef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccVectorInstDef_FromoaVarDataAppDef_oaOccVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_static_find,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccVectorInstDef_static_get,METH_VARARGS,oaVarDataAppDef_oaOccVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccVectorInstDef",
           (PyObject*)(&PyoaVarDataAppDef_oaOccVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccVectorInstDef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOccurrence
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccurrence_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOccurrence_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOccurrenceObject* self = (PyoaVarDataAppDef_oaOccurrenceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOccurrence)
    {
        PyParamoaVarDataAppDef_oaOccurrence p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOccurrence_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOccurrence, Choices are:\n"
        "    (oaVarDataAppDef_oaOccurrence)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOccurrence_tp_dealloc(PyoaVarDataAppDef_oaOccurrenceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOccurrence_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOccurrence value;
    int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaVarDataAppDef_oaOccurrence::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOccurrence_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOccurrence v1;
    PyParamoaVarDataAppDef_oaOccurrence v2;
    int convert_status1=PyoaVarDataAppDef_oaOccurrence_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOccurrence_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOccurrence_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOccurrence* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOccurrence_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOccurrence**) ((PyoaVarDataAppDef_oaOccurrenceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOccurrence Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(oaVarDataAppDef_oaOccurrence** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOccurrence* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOccurrence_Type.tp_alloc(&PyoaVarDataAppDef_oaOccurrence_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOccurrenceObject* self = (PyoaVarDataAppDef_oaOccurrenceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(oaVarDataAppDef_oaOccurrence* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOccurrence_Type.tp_alloc(&PyoaVarDataAppDef_oaOccurrence_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOccurrenceObject* self = (PyoaVarDataAppDef_oaOccurrenceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_get_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaOccurrence,[oaByte])\n"
"    Calls: void get(const oaOccurrence* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOccurrence,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccurrence data;
    int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccurrenceObject* self=(PyoaVarDataAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccurrence_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccurrence data;
    int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccurrenceObject* self=(PyoaVarDataAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccurrence data;
    int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccurrenceObject* self=(PyoaVarDataAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: getSize\n"
"  Paramegers: (oaOccurrence)\n"
"    Calls: oaUInt4 getSize(const oaOccurrence* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOccurrence,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccurrence data;
    int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccurrenceObject* self=(PyoaVarDataAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOccurrence_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_set_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaOccurrence,[oaByte])\n"
"    Calls: void set(oaOccurrence* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOccurrence,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOccurrence data;
    int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOccurrenceObject* self=(PyoaVarDataAppDef_oaOccurrenceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOccurrence p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOccurrence_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_isNull_doc[] =
"Class: oaVarDataAppDef_oaOccurrence, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOccurrence data;
    int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOccurrence_assign_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOccurrence data;
  int convert_status=PyoaVarDataAppDef_oaOccurrence_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOccurrence p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOccurrence_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOccurrence_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOccurrence_get,METH_VARARGS,oaVarDataAppDef_oaOccurrence_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOccurrence_getDefault,METH_VARARGS,oaVarDataAppDef_oaOccurrence_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOccurrence_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOccurrence_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOccurrence_getSize,METH_VARARGS,oaVarDataAppDef_oaOccurrence_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOccurrence_set,METH_VARARGS,oaVarDataAppDef_oaOccurrence_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOccurrence_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOccurrence_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOccurrence_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOccurrence_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOccurrence)\n"
"    Calls: (const oaVarDataAppDef_oaOccurrence&)\n"
"    Signature: oaVarDataAppDef_oaOccurrence||cref-oaVarDataAppDef_oaOccurrence,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOccurrence_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOccurrence",
    sizeof(PyoaVarDataAppDef_oaOccurrenceObject),
    0,
    (destructor)oaVarDataAppDef_oaOccurrence_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOccurrence_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOccurrence_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOccurrence_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOccurrence_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOccurrence_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::find(p1.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccurrence, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOccurrence_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOccurrence, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOccurrence* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOccurrence|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOccurrence_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::get(p1.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOccurrencep result= (oaVarDataAppDef_oaOccurrence::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOccurrence_FromoaVarDataAppDef_oaOccurrence(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOccurrence, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOccurrence_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOccurrence_static_find,METH_VARARGS,oaVarDataAppDef_oaOccurrence_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOccurrence_static_get,METH_VARARGS,oaVarDataAppDef_oaOccurrence_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOccurrence_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOccurrence_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOccurrence\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOccurrence",
           (PyObject*)(&PyoaVarDataAppDef_oaOccurrence_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOccurrence\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOccurrence_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOccurrence_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaOpPointHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOpPointHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaOpPointHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaOpPointHeaderObject* self = (PyoaVarDataAppDef_oaOpPointHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaOpPointHeader)
    {
        PyParamoaVarDataAppDef_oaOpPointHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaOpPointHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaOpPointHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaOpPointHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaOpPointHeader_tp_dealloc(PyoaVarDataAppDef_oaOpPointHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaOpPointHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaOpPointHeader value;
    int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaOpPointHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaOpPointHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaOpPointHeader v1;
    PyParamoaVarDataAppDef_oaOpPointHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaOpPointHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaOpPointHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaOpPointHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaOpPointHeader**) ((PyoaVarDataAppDef_oaOpPointHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaOpPointHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(oaVarDataAppDef_oaOpPointHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaOpPointHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaOpPointHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaOpPointHeaderObject* self = (PyoaVarDataAppDef_oaOpPointHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(oaVarDataAppDef_oaOpPointHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaOpPointHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaOpPointHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaOpPointHeaderObject* self = (PyoaVarDataAppDef_oaOpPointHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaOpPointHeader,[oaByte])\n"
"    Calls: void get(const oaOpPointHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaOpPointHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOpPointHeader data;
    int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOpPointHeaderObject* self=(PyoaVarDataAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOpPointHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOpPointHeader data;
    int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOpPointHeaderObject* self=(PyoaVarDataAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOpPointHeader data;
    int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOpPointHeaderObject* self=(PyoaVarDataAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: getSize\n"
"  Paramegers: (oaOpPointHeader)\n"
"    Calls: oaUInt4 getSize(const oaOpPointHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaOpPointHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOpPointHeader data;
    int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOpPointHeaderObject* self=(PyoaVarDataAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaOpPointHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaOpPointHeader,[oaByte])\n"
"    Calls: void set(oaOpPointHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaOpPointHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaOpPointHeader data;
    int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaOpPointHeaderObject* self=(PyoaVarDataAppDef_oaOpPointHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaOpPointHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaOpPointHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaOpPointHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaOpPointHeader data;
    int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaOpPointHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaOpPointHeader data;
  int convert_status=PyoaVarDataAppDef_oaOpPointHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaOpPointHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaOpPointHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaOpPointHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_get,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_set,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaOpPointHeader)\n"
"    Calls: (const oaVarDataAppDef_oaOpPointHeader&)\n"
"    Signature: oaVarDataAppDef_oaOpPointHeader||cref-oaVarDataAppDef_oaOpPointHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaOpPointHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaOpPointHeader",
    sizeof(PyoaVarDataAppDef_oaOpPointHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaOpPointHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaOpPointHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaOpPointHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaOpPointHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaOpPointHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaOpPointHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOpPointHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaOpPointHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaOpPointHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaOpPointHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaOpPointHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaOpPointHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaOpPointHeaderp result= (oaVarDataAppDef_oaOpPointHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaOpPointHeader_FromoaVarDataAppDef_oaOpPointHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaOpPointHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaOpPointHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaOpPointHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaOpPointHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaOpPointHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaOpPointHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaOpPointHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaOpPointHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaOpPointHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaOpPointHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaOpPointHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaOpPointHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaParasiticNetwork
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaParasiticNetwork_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaParasiticNetwork_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaParasiticNetworkObject* self = (PyoaVarDataAppDef_oaParasiticNetworkObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaParasiticNetwork)
    {
        PyParamoaVarDataAppDef_oaParasiticNetwork p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaParasiticNetwork_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaParasiticNetwork, Choices are:\n"
        "    (oaVarDataAppDef_oaParasiticNetwork)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaParasiticNetwork_tp_dealloc(PyoaVarDataAppDef_oaParasiticNetworkObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaParasiticNetwork_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaParasiticNetwork value;
    int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaVarDataAppDef_oaParasiticNetwork::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaParasiticNetwork_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaParasiticNetwork v1;
    PyParamoaVarDataAppDef_oaParasiticNetwork v2;
    int convert_status1=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaParasiticNetwork_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaParasiticNetwork* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaParasiticNetwork_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaParasiticNetwork**) ((PyoaVarDataAppDef_oaParasiticNetworkObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaParasiticNetwork Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(oaVarDataAppDef_oaParasiticNetwork** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaParasiticNetwork* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaVarDataAppDef_oaParasiticNetwork_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaParasiticNetworkObject* self = (PyoaVarDataAppDef_oaParasiticNetworkObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(oaVarDataAppDef_oaParasiticNetwork* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaVarDataAppDef_oaParasiticNetwork_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaParasiticNetworkObject* self = (PyoaVarDataAppDef_oaParasiticNetworkObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_get_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaParasiticNetwork,[oaByte])\n"
"    Calls: void get(const oaParasiticNetwork* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaParasiticNetwork,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaParasiticNetwork data;
    int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaParasiticNetworkObject* self=(PyoaVarDataAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaParasiticNetwork_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaParasiticNetwork data;
    int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaParasiticNetworkObject* self=(PyoaVarDataAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaParasiticNetwork data;
    int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaParasiticNetworkObject* self=(PyoaVarDataAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_getSize_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: getSize\n"
"  Paramegers: (oaParasiticNetwork)\n"
"    Calls: oaUInt4 getSize(const oaParasiticNetwork* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaParasiticNetwork,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaParasiticNetwork data;
    int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaParasiticNetworkObject* self=(PyoaVarDataAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaParasiticNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_set_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaParasiticNetwork,[oaByte])\n"
"    Calls: void set(oaParasiticNetwork* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaParasiticNetwork,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaParasiticNetwork data;
    int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaParasiticNetworkObject* self=(PyoaVarDataAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaParasiticNetwork_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_isNull_doc[] =
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaParasiticNetwork data;
    int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaParasiticNetwork_assign_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaParasiticNetwork data;
  int convert_status=PyoaVarDataAppDef_oaParasiticNetwork_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaParasiticNetwork_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaParasiticNetwork_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_get,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_getDefault,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_getSize,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_set,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_tp_assign,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaParasiticNetwork)\n"
"    Calls: (const oaVarDataAppDef_oaParasiticNetwork&)\n"
"    Signature: oaVarDataAppDef_oaParasiticNetwork||cref-oaVarDataAppDef_oaParasiticNetwork,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaParasiticNetwork_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaParasiticNetwork",
    sizeof(PyoaVarDataAppDef_oaParasiticNetworkObject),
    0,
    (destructor)oaVarDataAppDef_oaParasiticNetwork_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaParasiticNetwork_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaParasiticNetwork_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaParasiticNetwork_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaParasiticNetwork_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaParasiticNetwork_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_static_find_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::find(p1.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaParasiticNetwork, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaParasiticNetwork_static_get_doc[] = 
"Class: oaVarDataAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaParasiticNetwork_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::get(p1.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaParasiticNetworkp result= (oaVarDataAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaParasiticNetwork_FromoaVarDataAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaParasiticNetwork, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaParasiticNetwork_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_static_find,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaParasiticNetwork_static_get,METH_VARARGS,oaVarDataAppDef_oaParasiticNetwork_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaParasiticNetwork_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaParasiticNetwork_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaParasiticNetwork\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaParasiticNetwork",
           (PyObject*)(&PyoaVarDataAppDef_oaParasiticNetwork_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaParasiticNetwork\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaParasiticNetwork_Type.tp_dict;
    for(method=oaVarDataAppDef_oaParasiticNetwork_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaPin
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaPin_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaPin_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaPinObject* self = (PyoaVarDataAppDef_oaPinObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaPin)
    {
        PyParamoaVarDataAppDef_oaPin p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaPin_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaPin, Choices are:\n"
        "    (oaVarDataAppDef_oaPin)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaPin_tp_dealloc(PyoaVarDataAppDef_oaPinObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaPin_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaPin value;
    int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaVarDataAppDef_oaPin::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaPin_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaPin v1;
    PyParamoaVarDataAppDef_oaPin v2;
    int convert_status1=PyoaVarDataAppDef_oaPin_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaPin_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaPin_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaPin* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaPin_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaPin**) ((PyoaVarDataAppDef_oaPinObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaPin Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(oaVarDataAppDef_oaPin** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaPin* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaPin_Type.tp_alloc(&PyoaVarDataAppDef_oaPin_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaPinObject* self = (PyoaVarDataAppDef_oaPinObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(oaVarDataAppDef_oaPin* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaPin_Type.tp_alloc(&PyoaVarDataAppDef_oaPin_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaPinObject* self = (PyoaVarDataAppDef_oaPinObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_get_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: get\n"
"  Paramegers: (oaPin,[oaByte])\n"
"    Calls: void get(const oaPin* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaPin,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPin_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPin data;
    int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPinObject* self=(PyoaVarDataAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaPin_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPin data;
    int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPinObject* self=(PyoaVarDataAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaPin_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPin data;
    int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPinObject* self=(PyoaVarDataAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_getSize_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: getSize\n"
"  Paramegers: (oaPin)\n"
"    Calls: oaUInt4 getSize(const oaPin* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaPin,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPin_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPin data;
    int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPinObject* self=(PyoaVarDataAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_set_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: set\n"
"  Paramegers: (oaPin,[oaByte])\n"
"    Calls: void set(oaPin* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaPin,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPin_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPin data;
    int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPinObject* self=(PyoaVarDataAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_isNull_doc[] =
"Class: oaVarDataAppDef_oaPin, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaPin_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaPin data;
    int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaPin_assign_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaPin_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaPin data;
  int convert_status=PyoaVarDataAppDef_oaPin_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaPin p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaPin_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaPin_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaPin_get,METH_VARARGS,oaVarDataAppDef_oaPin_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaPin_getDefault,METH_VARARGS,oaVarDataAppDef_oaPin_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaPin_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaPin_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaPin_getSize,METH_VARARGS,oaVarDataAppDef_oaPin_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaPin_set,METH_VARARGS,oaVarDataAppDef_oaPin_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaPin_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaPin_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaPin_tp_assign,METH_VARARGS,oaVarDataAppDef_oaPin_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_doc[] = 
"Class: oaVarDataAppDef_oaPin\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaPin)\n"
"    Calls: (const oaVarDataAppDef_oaPin&)\n"
"    Signature: oaVarDataAppDef_oaPin||cref-oaVarDataAppDef_oaPin,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaPin_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaPin",
    sizeof(PyoaVarDataAppDef_oaPinObject),
    0,
    (destructor)oaVarDataAppDef_oaPin_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaPin_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaPin_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaPin_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaPin_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaPin_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_static_find_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaPin* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaPin|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaPin* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaPin_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::find(p1.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaPin, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPin_static_get_doc[] = 
"Class: oaVarDataAppDef_oaPin, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaPin* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPin|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPin* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPin|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPin* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPin|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaPin_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::get(p1.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPinp result= (oaVarDataAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaPin_FromoaVarDataAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaPin, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaPin_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaPin_static_find,METH_VARARGS,oaVarDataAppDef_oaPin_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaPin_static_get,METH_VARARGS,oaVarDataAppDef_oaPin_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaPin_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaPin_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaPin\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaPin",
           (PyObject*)(&PyoaVarDataAppDef_oaPin_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaPin\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaPin_Type.tp_dict;
    for(method=oaVarDataAppDef_oaPin_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaPoleResidue
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaPoleResidue_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaPoleResidue_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaPoleResidueObject* self = (PyoaVarDataAppDef_oaPoleResidueObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaPoleResidue)
    {
        PyParamoaVarDataAppDef_oaPoleResidue p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaPoleResidue_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaPoleResidue, Choices are:\n"
        "    (oaVarDataAppDef_oaPoleResidue)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaPoleResidue_tp_dealloc(PyoaVarDataAppDef_oaPoleResidueObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaPoleResidue_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaPoleResidue value;
    int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaVarDataAppDef_oaPoleResidue::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaPoleResidue_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaPoleResidue v1;
    PyParamoaVarDataAppDef_oaPoleResidue v2;
    int convert_status1=PyoaVarDataAppDef_oaPoleResidue_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaPoleResidue_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaPoleResidue_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaPoleResidue* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaPoleResidue_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaPoleResidue**) ((PyoaVarDataAppDef_oaPoleResidueObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaPoleResidue Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(oaVarDataAppDef_oaPoleResidue** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaPoleResidue* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaPoleResidue_Type.tp_alloc(&PyoaVarDataAppDef_oaPoleResidue_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaPoleResidueObject* self = (PyoaVarDataAppDef_oaPoleResidueObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(oaVarDataAppDef_oaPoleResidue* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaPoleResidue_Type.tp_alloc(&PyoaVarDataAppDef_oaPoleResidue_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaPoleResidueObject* self = (PyoaVarDataAppDef_oaPoleResidueObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_get_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaPoleResidue,[oaByte])\n"
"    Calls: void get(const oaPoleResidue* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaPoleResidue,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPoleResidue data;
    int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPoleResidueObject* self=(PyoaVarDataAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPoleResidue data;
    int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPoleResidueObject* self=(PyoaVarDataAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPoleResidue data;
    int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPoleResidueObject* self=(PyoaVarDataAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_getSize_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: getSize\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: oaUInt4 getSize(const oaPoleResidue* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaPoleResidue,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPoleResidue data;
    int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPoleResidueObject* self=(PyoaVarDataAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_set_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaPoleResidue,[oaByte])\n"
"    Calls: void set(oaPoleResidue* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaPoleResidue,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPoleResidue data;
    int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPoleResidueObject* self=(PyoaVarDataAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_isNull_doc[] =
"Class: oaVarDataAppDef_oaPoleResidue, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaPoleResidue data;
    int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaPoleResidue_assign_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaPoleResidue data;
  int convert_status=PyoaVarDataAppDef_oaPoleResidue_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaPoleResidue p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaPoleResidue_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaPoleResidue_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaPoleResidue_get,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaPoleResidue_getDefault,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaPoleResidue_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaPoleResidue_getSize,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaPoleResidue_set,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaPoleResidue_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaPoleResidue_tp_assign,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaPoleResidue)\n"
"    Calls: (const oaVarDataAppDef_oaPoleResidue&)\n"
"    Signature: oaVarDataAppDef_oaPoleResidue||cref-oaVarDataAppDef_oaPoleResidue,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaPoleResidue_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaPoleResidue",
    sizeof(PyoaVarDataAppDef_oaPoleResidueObject),
    0,
    (destructor)oaVarDataAppDef_oaPoleResidue_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaPoleResidue_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaPoleResidue_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaPoleResidue_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaPoleResidue_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaPoleResidue_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_static_find_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::find(p1.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaPoleResidue, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPoleResidue_static_get_doc[] = 
"Class: oaVarDataAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaPoleResidue_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::get(p1.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPoleResiduep result= (oaVarDataAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaPoleResidue_FromoaVarDataAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaPoleResidue, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaPoleResidue_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaPoleResidue_static_find,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaPoleResidue_static_get,METH_VARARGS,oaVarDataAppDef_oaPoleResidue_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaPoleResidue_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaPoleResidue_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaPoleResidue\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaPoleResidue",
           (PyObject*)(&PyoaVarDataAppDef_oaPoleResidue_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaPoleResidue\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaPoleResidue_Type.tp_dict;
    for(method=oaVarDataAppDef_oaPoleResidue_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaProp
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaProp_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaProp_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaPropObject* self = (PyoaVarDataAppDef_oaPropObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaProp)
    {
        PyParamoaVarDataAppDef_oaProp p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaProp_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaProp, Choices are:\n"
        "    (oaVarDataAppDef_oaProp)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaProp_tp_dealloc(PyoaVarDataAppDef_oaPropObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaProp_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaProp value;
    int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaVarDataAppDef_oaProp::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaProp_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaProp v1;
    PyParamoaVarDataAppDef_oaProp v2;
    int convert_status1=PyoaVarDataAppDef_oaProp_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaProp_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaProp_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaProp* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaProp_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaProp**) ((PyoaVarDataAppDef_oaPropObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaProp Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(oaVarDataAppDef_oaProp** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaProp* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaProp_Type.tp_alloc(&PyoaVarDataAppDef_oaProp_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaPropObject* self = (PyoaVarDataAppDef_oaPropObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(oaVarDataAppDef_oaProp* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaProp_Type.tp_alloc(&PyoaVarDataAppDef_oaProp_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaPropObject* self = (PyoaVarDataAppDef_oaPropObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_get_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: get\n"
"  Paramegers: (oaProp,[oaByte])\n"
"    Calls: void get(const oaProp* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaProp,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaProp_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaProp data;
    int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPropObject* self=(PyoaVarDataAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaProp_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaProp data;
    int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPropObject* self=(PyoaVarDataAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaProp_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaProp data;
    int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPropObject* self=(PyoaVarDataAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_getSize_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: getSize\n"
"  Paramegers: (oaProp)\n"
"    Calls: oaUInt4 getSize(const oaProp* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaProp,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaProp_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaProp data;
    int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPropObject* self=(PyoaVarDataAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_set_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: set\n"
"  Paramegers: (oaProp,[oaByte])\n"
"    Calls: void set(oaProp* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaProp,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaProp_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaProp data;
    int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPropObject* self=(PyoaVarDataAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_isNull_doc[] =
"Class: oaVarDataAppDef_oaProp, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaProp_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaProp data;
    int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaProp_assign_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaProp_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaProp data;
  int convert_status=PyoaVarDataAppDef_oaProp_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaProp p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaProp_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaProp_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaProp_get,METH_VARARGS,oaVarDataAppDef_oaProp_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaProp_getDefault,METH_VARARGS,oaVarDataAppDef_oaProp_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaProp_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaProp_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaProp_getSize,METH_VARARGS,oaVarDataAppDef_oaProp_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaProp_set,METH_VARARGS,oaVarDataAppDef_oaProp_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaProp_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaProp_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaProp_tp_assign,METH_VARARGS,oaVarDataAppDef_oaProp_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_doc[] = 
"Class: oaVarDataAppDef_oaProp\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaProp)\n"
"    Calls: (const oaVarDataAppDef_oaProp&)\n"
"    Signature: oaVarDataAppDef_oaProp||cref-oaVarDataAppDef_oaProp,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaProp_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaProp",
    sizeof(PyoaVarDataAppDef_oaPropObject),
    0,
    (destructor)oaVarDataAppDef_oaProp_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaProp_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaProp_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaProp_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaProp_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaProp_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_static_find_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaProp* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaProp|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaProp* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaProp_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::find(p1.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaProp, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaProp_static_get_doc[] = 
"Class: oaVarDataAppDef_oaProp, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaProp* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaProp|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaProp* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaProp|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaProp* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaProp|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaProp_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::get(p1.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPropp result= (oaVarDataAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaProp_FromoaVarDataAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaProp, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaProp_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaProp_static_find,METH_VARARGS,oaVarDataAppDef_oaProp_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaProp_static_get,METH_VARARGS,oaVarDataAppDef_oaProp_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaProp_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaProp_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaProp\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaProp",
           (PyObject*)(&PyoaVarDataAppDef_oaProp_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaProp\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaProp_Type.tp_dict;
    for(method=oaVarDataAppDef_oaProp_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaPurpose
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaPurpose_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaPurpose_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaPurposeObject* self = (PyoaVarDataAppDef_oaPurposeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaPurpose)
    {
        PyParamoaVarDataAppDef_oaPurpose p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaPurpose_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaPurpose, Choices are:\n"
        "    (oaVarDataAppDef_oaPurpose)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaPurpose_tp_dealloc(PyoaVarDataAppDef_oaPurposeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaPurpose_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaPurpose value;
    int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaVarDataAppDef_oaPurpose::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaPurpose_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaPurpose v1;
    PyParamoaVarDataAppDef_oaPurpose v2;
    int convert_status1=PyoaVarDataAppDef_oaPurpose_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaPurpose_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaPurpose_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaPurpose* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaPurpose_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaPurpose**) ((PyoaVarDataAppDef_oaPurposeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaPurpose Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(oaVarDataAppDef_oaPurpose** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaPurpose* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaPurpose_Type.tp_alloc(&PyoaVarDataAppDef_oaPurpose_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaPurposeObject* self = (PyoaVarDataAppDef_oaPurposeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(oaVarDataAppDef_oaPurpose* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaPurpose_Type.tp_alloc(&PyoaVarDataAppDef_oaPurpose_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaPurposeObject* self = (PyoaVarDataAppDef_oaPurposeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_get_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaPurpose,[oaByte])\n"
"    Calls: void get(const oaPurpose* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaPurpose,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPurpose data;
    int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPurposeObject* self=(PyoaVarDataAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPurpose data;
    int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPurposeObject* self=(PyoaVarDataAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPurpose data;
    int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPurposeObject* self=(PyoaVarDataAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_getSize_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: getSize\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: oaUInt4 getSize(const oaPurpose* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaPurpose,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPurpose data;
    int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPurposeObject* self=(PyoaVarDataAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_set_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaPurpose,[oaByte])\n"
"    Calls: void set(oaPurpose* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaPurpose,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaPurpose data;
    int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaPurposeObject* self=(PyoaVarDataAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_isNull_doc[] =
"Class: oaVarDataAppDef_oaPurpose, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaPurpose data;
    int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaPurpose_assign_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaPurpose data;
  int convert_status=PyoaVarDataAppDef_oaPurpose_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaPurpose p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaPurpose_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaPurpose_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaPurpose_get,METH_VARARGS,oaVarDataAppDef_oaPurpose_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaPurpose_getDefault,METH_VARARGS,oaVarDataAppDef_oaPurpose_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaPurpose_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaPurpose_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaPurpose_getSize,METH_VARARGS,oaVarDataAppDef_oaPurpose_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaPurpose_set,METH_VARARGS,oaVarDataAppDef_oaPurpose_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaPurpose_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaPurpose_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaPurpose_tp_assign,METH_VARARGS,oaVarDataAppDef_oaPurpose_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_doc[] = 
"Class: oaVarDataAppDef_oaPurpose\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaPurpose)\n"
"    Calls: (const oaVarDataAppDef_oaPurpose&)\n"
"    Signature: oaVarDataAppDef_oaPurpose||cref-oaVarDataAppDef_oaPurpose,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaPurpose_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaPurpose",
    sizeof(PyoaVarDataAppDef_oaPurposeObject),
    0,
    (destructor)oaVarDataAppDef_oaPurpose_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaPurpose_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaPurpose_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaPurpose_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaPurpose_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaPurpose_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_static_find_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaPurpose* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaPurpose* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::find(p1.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaPurpose, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaPurpose_static_get_doc[] = 
"Class: oaVarDataAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaPurpose* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPurpose* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPurpose* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaPurpose_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::get(p1.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaPurposep result= (oaVarDataAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaPurpose_FromoaVarDataAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaPurpose, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaPurpose_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaPurpose_static_find,METH_VARARGS,oaVarDataAppDef_oaPurpose_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaPurpose_static_get,METH_VARARGS,oaVarDataAppDef_oaPurpose_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaPurpose_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaPurpose_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaPurpose\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaPurpose",
           (PyObject*)(&PyoaVarDataAppDef_oaPurpose_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaPurpose\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaPurpose_Type.tp_dict;
    for(method=oaVarDataAppDef_oaPurpose_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaReducedModel
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaReducedModel_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaReducedModel_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaReducedModelObject* self = (PyoaVarDataAppDef_oaReducedModelObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaReducedModel)
    {
        PyParamoaVarDataAppDef_oaReducedModel p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaReducedModel_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaReducedModel, Choices are:\n"
        "    (oaVarDataAppDef_oaReducedModel)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaReducedModel_tp_dealloc(PyoaVarDataAppDef_oaReducedModelObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaReducedModel_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaReducedModel value;
    int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaVarDataAppDef_oaReducedModel::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaReducedModel_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaReducedModel v1;
    PyParamoaVarDataAppDef_oaReducedModel v2;
    int convert_status1=PyoaVarDataAppDef_oaReducedModel_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaReducedModel_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaReducedModel_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaReducedModel* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaReducedModel_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaReducedModel**) ((PyoaVarDataAppDef_oaReducedModelObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaReducedModel Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(oaVarDataAppDef_oaReducedModel** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaReducedModel* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaReducedModel_Type.tp_alloc(&PyoaVarDataAppDef_oaReducedModel_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaReducedModelObject* self = (PyoaVarDataAppDef_oaReducedModelObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(oaVarDataAppDef_oaReducedModel* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaReducedModel_Type.tp_alloc(&PyoaVarDataAppDef_oaReducedModel_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaReducedModelObject* self = (PyoaVarDataAppDef_oaReducedModelObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_get_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaReducedModel,[oaByte])\n"
"    Calls: void get(const oaReducedModel* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaReducedModel,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReducedModel data;
    int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReducedModelObject* self=(PyoaVarDataAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReducedModel data;
    int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReducedModelObject* self=(PyoaVarDataAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReducedModel data;
    int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReducedModelObject* self=(PyoaVarDataAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_getSize_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: getSize\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: oaUInt4 getSize(const oaReducedModel* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaReducedModel,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReducedModel data;
    int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReducedModelObject* self=(PyoaVarDataAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_set_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaReducedModel,[oaByte])\n"
"    Calls: void set(oaReducedModel* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaReducedModel,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReducedModel data;
    int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReducedModelObject* self=(PyoaVarDataAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_isNull_doc[] =
"Class: oaVarDataAppDef_oaReducedModel, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaReducedModel data;
    int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaReducedModel_assign_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaReducedModel data;
  int convert_status=PyoaVarDataAppDef_oaReducedModel_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaReducedModel p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaReducedModel_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaReducedModel_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaReducedModel_get,METH_VARARGS,oaVarDataAppDef_oaReducedModel_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaReducedModel_getDefault,METH_VARARGS,oaVarDataAppDef_oaReducedModel_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaReducedModel_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaReducedModel_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaReducedModel_getSize,METH_VARARGS,oaVarDataAppDef_oaReducedModel_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaReducedModel_set,METH_VARARGS,oaVarDataAppDef_oaReducedModel_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaReducedModel_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaReducedModel_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaReducedModel_tp_assign,METH_VARARGS,oaVarDataAppDef_oaReducedModel_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaReducedModel)\n"
"    Calls: (const oaVarDataAppDef_oaReducedModel&)\n"
"    Signature: oaVarDataAppDef_oaReducedModel||cref-oaVarDataAppDef_oaReducedModel,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaReducedModel_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaReducedModel",
    sizeof(PyoaVarDataAppDef_oaReducedModelObject),
    0,
    (destructor)oaVarDataAppDef_oaReducedModel_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaReducedModel_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaReducedModel_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaReducedModel_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaReducedModel_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaReducedModel_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_static_find_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::find(p1.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaReducedModel, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReducedModel_static_get_doc[] = 
"Class: oaVarDataAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaReducedModel_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::get(p1.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReducedModelp result= (oaVarDataAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaReducedModel_FromoaVarDataAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaReducedModel, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaReducedModel_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaReducedModel_static_find,METH_VARARGS,oaVarDataAppDef_oaReducedModel_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaReducedModel_static_get,METH_VARARGS,oaVarDataAppDef_oaReducedModel_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaReducedModel_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaReducedModel_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaReducedModel\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaReducedModel",
           (PyObject*)(&PyoaVarDataAppDef_oaReducedModel_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaReducedModel\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaReducedModel_Type.tp_dict;
    for(method=oaVarDataAppDef_oaReducedModel_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaReticle
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaReticle_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaReticle_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaReticleObject* self = (PyoaVarDataAppDef_oaReticleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaReticle)
    {
        PyParamoaVarDataAppDef_oaReticle p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaReticle_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaReticle, Choices are:\n"
        "    (oaVarDataAppDef_oaReticle)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaReticle_tp_dealloc(PyoaVarDataAppDef_oaReticleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaReticle_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaReticle value;
    int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaVarDataAppDef_oaReticle::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaReticle_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaReticle v1;
    PyParamoaVarDataAppDef_oaReticle v2;
    int convert_status1=PyoaVarDataAppDef_oaReticle_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaReticle_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaReticle_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaReticle* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaReticle_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaReticle**) ((PyoaVarDataAppDef_oaReticleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaReticle Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(oaVarDataAppDef_oaReticle** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaReticle* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaReticle_Type.tp_alloc(&PyoaVarDataAppDef_oaReticle_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaReticleObject* self = (PyoaVarDataAppDef_oaReticleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(oaVarDataAppDef_oaReticle* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaReticle_Type.tp_alloc(&PyoaVarDataAppDef_oaReticle_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaReticleObject* self = (PyoaVarDataAppDef_oaReticleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_get_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaReticle,[oaByte])\n"
"    Calls: void get(const oaReticle* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaReticle,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticle data;
    int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleObject* self=(PyoaVarDataAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticle data;
    int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleObject* self=(PyoaVarDataAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticle data;
    int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleObject* self=(PyoaVarDataAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_getSize_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: getSize\n"
"  Paramegers: (oaReticle)\n"
"    Calls: oaUInt4 getSize(const oaReticle* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaReticle,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticle data;
    int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleObject* self=(PyoaVarDataAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_set_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaReticle,[oaByte])\n"
"    Calls: void set(oaReticle* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaReticle,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticle data;
    int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleObject* self=(PyoaVarDataAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_isNull_doc[] =
"Class: oaVarDataAppDef_oaReticle, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaReticle data;
    int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaReticle_assign_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaReticle data;
  int convert_status=PyoaVarDataAppDef_oaReticle_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaReticle p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaReticle_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaReticle_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaReticle_get,METH_VARARGS,oaVarDataAppDef_oaReticle_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaReticle_getDefault,METH_VARARGS,oaVarDataAppDef_oaReticle_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaReticle_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaReticle_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaReticle_getSize,METH_VARARGS,oaVarDataAppDef_oaReticle_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaReticle_set,METH_VARARGS,oaVarDataAppDef_oaReticle_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaReticle_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaReticle_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaReticle_tp_assign,METH_VARARGS,oaVarDataAppDef_oaReticle_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_doc[] = 
"Class: oaVarDataAppDef_oaReticle\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaReticle)\n"
"    Calls: (const oaVarDataAppDef_oaReticle&)\n"
"    Signature: oaVarDataAppDef_oaReticle||cref-oaVarDataAppDef_oaReticle,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaReticle_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaReticle",
    sizeof(PyoaVarDataAppDef_oaReticleObject),
    0,
    (destructor)oaVarDataAppDef_oaReticle_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaReticle_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaReticle_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaReticle_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaReticle_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaReticle_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_static_find_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaReticle* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaReticle|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaReticle* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::find(p1.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaReticle, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticle_static_get_doc[] = 
"Class: oaVarDataAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaReticle* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticle|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticle* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticle|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticle* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticle|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaReticle_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::get(p1.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticlep result= (oaVarDataAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaReticle_FromoaVarDataAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaReticle, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaReticle_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaReticle_static_find,METH_VARARGS,oaVarDataAppDef_oaReticle_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaReticle_static_get,METH_VARARGS,oaVarDataAppDef_oaReticle_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaReticle_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaReticle_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaReticle\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaReticle",
           (PyObject*)(&PyoaVarDataAppDef_oaReticle_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaReticle\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaReticle_Type.tp_dict;
    for(method=oaVarDataAppDef_oaReticle_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaReticleRef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaReticleRef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaReticleRef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaReticleRefObject* self = (PyoaVarDataAppDef_oaReticleRefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaReticleRef)
    {
        PyParamoaVarDataAppDef_oaReticleRef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaReticleRef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaReticleRef, Choices are:\n"
        "    (oaVarDataAppDef_oaReticleRef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaReticleRef_tp_dealloc(PyoaVarDataAppDef_oaReticleRefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaReticleRef_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaReticleRef value;
    int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaVarDataAppDef_oaReticleRef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaReticleRef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaReticleRef v1;
    PyParamoaVarDataAppDef_oaReticleRef v2;
    int convert_status1=PyoaVarDataAppDef_oaReticleRef_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaReticleRef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaReticleRef_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaReticleRef* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaReticleRef_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaReticleRef**) ((PyoaVarDataAppDef_oaReticleRefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaReticleRef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(oaVarDataAppDef_oaReticleRef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaReticleRef* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaReticleRef_Type.tp_alloc(&PyoaVarDataAppDef_oaReticleRef_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaReticleRefObject* self = (PyoaVarDataAppDef_oaReticleRefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(oaVarDataAppDef_oaReticleRef* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaReticleRef_Type.tp_alloc(&PyoaVarDataAppDef_oaReticleRef_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaReticleRefObject* self = (PyoaVarDataAppDef_oaReticleRefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_get_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaReticleRef,[oaByte])\n"
"    Calls: void get(const oaReticleRef* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaReticleRef,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticleRef data;
    int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleRefObject* self=(PyoaVarDataAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticleRef data;
    int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleRefObject* self=(PyoaVarDataAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticleRef data;
    int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleRefObject* self=(PyoaVarDataAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_getSize_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: getSize\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: oaUInt4 getSize(const oaReticleRef* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaReticleRef,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticleRef data;
    int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleRefObject* self=(PyoaVarDataAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_set_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaReticleRef,[oaByte])\n"
"    Calls: void set(oaReticleRef* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaReticleRef,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaReticleRef data;
    int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaReticleRefObject* self=(PyoaVarDataAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_isNull_doc[] =
"Class: oaVarDataAppDef_oaReticleRef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaReticleRef data;
    int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaReticleRef_assign_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaReticleRef data;
  int convert_status=PyoaVarDataAppDef_oaReticleRef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaReticleRef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaReticleRef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaReticleRef_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaReticleRef_get,METH_VARARGS,oaVarDataAppDef_oaReticleRef_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaReticleRef_getDefault,METH_VARARGS,oaVarDataAppDef_oaReticleRef_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaReticleRef_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaReticleRef_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaReticleRef_getSize,METH_VARARGS,oaVarDataAppDef_oaReticleRef_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaReticleRef_set,METH_VARARGS,oaVarDataAppDef_oaReticleRef_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaReticleRef_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaReticleRef_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaReticleRef_tp_assign,METH_VARARGS,oaVarDataAppDef_oaReticleRef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaReticleRef)\n"
"    Calls: (const oaVarDataAppDef_oaReticleRef&)\n"
"    Signature: oaVarDataAppDef_oaReticleRef||cref-oaVarDataAppDef_oaReticleRef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaReticleRef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaReticleRef",
    sizeof(PyoaVarDataAppDef_oaReticleRefObject),
    0,
    (destructor)oaVarDataAppDef_oaReticleRef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaReticleRef_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaReticleRef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaReticleRef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaReticleRef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaReticleRef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_static_find_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::find(p1.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaReticleRef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaReticleRef_static_get_doc[] = 
"Class: oaVarDataAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaReticleRef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::get(p1.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaReticleRefp result= (oaVarDataAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaReticleRef_FromoaVarDataAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaReticleRef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaReticleRef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaReticleRef_static_find,METH_VARARGS,oaVarDataAppDef_oaReticleRef_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaReticleRef_static_get,METH_VARARGS,oaVarDataAppDef_oaReticleRef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaReticleRef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaReticleRef_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaReticleRef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaReticleRef",
           (PyObject*)(&PyoaVarDataAppDef_oaReticleRef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaReticleRef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaReticleRef_Type.tp_dict;
    for(method=oaVarDataAppDef_oaReticleRef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaRoute
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaRoute_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaRoute_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaRouteObject* self = (PyoaVarDataAppDef_oaRouteObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaRoute)
    {
        PyParamoaVarDataAppDef_oaRoute p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaRoute_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaRoute, Choices are:\n"
        "    (oaVarDataAppDef_oaRoute)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaRoute_tp_dealloc(PyoaVarDataAppDef_oaRouteObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaRoute_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaRoute value;
    int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaVarDataAppDef_oaRoute::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaRoute_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaRoute v1;
    PyParamoaVarDataAppDef_oaRoute v2;
    int convert_status1=PyoaVarDataAppDef_oaRoute_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaRoute_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaRoute_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaRoute* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaRoute_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaRoute**) ((PyoaVarDataAppDef_oaRouteObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaRoute Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(oaVarDataAppDef_oaRoute** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaRoute* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaRoute_Type.tp_alloc(&PyoaVarDataAppDef_oaRoute_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaRouteObject* self = (PyoaVarDataAppDef_oaRouteObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(oaVarDataAppDef_oaRoute* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaRoute_Type.tp_alloc(&PyoaVarDataAppDef_oaRoute_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaRouteObject* self = (PyoaVarDataAppDef_oaRouteObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_get_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaRoute,[oaByte])\n"
"    Calls: void get(const oaRoute* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaRoute,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRoute data;
    int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRouteObject* self=(PyoaVarDataAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRoute data;
    int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRouteObject* self=(PyoaVarDataAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRoute data;
    int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRouteObject* self=(PyoaVarDataAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_getSize_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: getSize\n"
"  Paramegers: (oaRoute)\n"
"    Calls: oaUInt4 getSize(const oaRoute* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaRoute,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRoute data;
    int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRouteObject* self=(PyoaVarDataAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_set_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaRoute,[oaByte])\n"
"    Calls: void set(oaRoute* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaRoute,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRoute data;
    int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRouteObject* self=(PyoaVarDataAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_isNull_doc[] =
"Class: oaVarDataAppDef_oaRoute, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaRoute data;
    int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaRoute_assign_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaRoute data;
  int convert_status=PyoaVarDataAppDef_oaRoute_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaRoute p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaRoute_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaRoute_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaRoute_get,METH_VARARGS,oaVarDataAppDef_oaRoute_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaRoute_getDefault,METH_VARARGS,oaVarDataAppDef_oaRoute_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaRoute_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaRoute_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaRoute_getSize,METH_VARARGS,oaVarDataAppDef_oaRoute_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaRoute_set,METH_VARARGS,oaVarDataAppDef_oaRoute_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaRoute_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaRoute_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaRoute_tp_assign,METH_VARARGS,oaVarDataAppDef_oaRoute_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_doc[] = 
"Class: oaVarDataAppDef_oaRoute\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaRoute)\n"
"    Calls: (const oaVarDataAppDef_oaRoute&)\n"
"    Signature: oaVarDataAppDef_oaRoute||cref-oaVarDataAppDef_oaRoute,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaRoute_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaRoute",
    sizeof(PyoaVarDataAppDef_oaRouteObject),
    0,
    (destructor)oaVarDataAppDef_oaRoute_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaRoute_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaRoute_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaRoute_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaRoute_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaRoute_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_static_find_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaRoute* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaRoute|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaRoute* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::find(p1.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaRoute, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRoute_static_get_doc[] = 
"Class: oaVarDataAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaRoute* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRoute|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRoute* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRoute|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRoute* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRoute|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaRoute_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::get(p1.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRoutep result= (oaVarDataAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaRoute_FromoaVarDataAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaRoute, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaRoute_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaRoute_static_find,METH_VARARGS,oaVarDataAppDef_oaRoute_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaRoute_static_get,METH_VARARGS,oaVarDataAppDef_oaRoute_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaRoute_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaRoute_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaRoute\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaRoute",
           (PyObject*)(&PyoaVarDataAppDef_oaRoute_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaRoute\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaRoute_Type.tp_dict;
    for(method=oaVarDataAppDef_oaRoute_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaRow
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaRow_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaRow_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaRowObject* self = (PyoaVarDataAppDef_oaRowObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaRow)
    {
        PyParamoaVarDataAppDef_oaRow p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaRow_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaRow, Choices are:\n"
        "    (oaVarDataAppDef_oaRow)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaRow_tp_dealloc(PyoaVarDataAppDef_oaRowObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaRow_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaRow value;
    int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaVarDataAppDef_oaRow::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaRow_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaRow v1;
    PyParamoaVarDataAppDef_oaRow v2;
    int convert_status1=PyoaVarDataAppDef_oaRow_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaRow_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaRow_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaRow* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaRow_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaRow**) ((PyoaVarDataAppDef_oaRowObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaRow Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(oaVarDataAppDef_oaRow** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaRow* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaRow_Type.tp_alloc(&PyoaVarDataAppDef_oaRow_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaRowObject* self = (PyoaVarDataAppDef_oaRowObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(oaVarDataAppDef_oaRow* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaRow_Type.tp_alloc(&PyoaVarDataAppDef_oaRow_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaRowObject* self = (PyoaVarDataAppDef_oaRowObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_get_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: get\n"
"  Paramegers: (oaRow,[oaByte])\n"
"    Calls: void get(const oaRow* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaRow,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRow_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRow data;
    int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowObject* self=(PyoaVarDataAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaRow_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRow data;
    int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowObject* self=(PyoaVarDataAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaRow_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRow data;
    int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowObject* self=(PyoaVarDataAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_getSize_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: getSize\n"
"  Paramegers: (oaRow)\n"
"    Calls: oaUInt4 getSize(const oaRow* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaRow,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRow_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRow data;
    int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowObject* self=(PyoaVarDataAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_set_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: set\n"
"  Paramegers: (oaRow,[oaByte])\n"
"    Calls: void set(oaRow* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaRow,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRow_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRow data;
    int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowObject* self=(PyoaVarDataAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_isNull_doc[] =
"Class: oaVarDataAppDef_oaRow, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaRow_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaRow data;
    int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaRow_assign_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaRow_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaRow data;
  int convert_status=PyoaVarDataAppDef_oaRow_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaRow p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaRow_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaRow_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaRow_get,METH_VARARGS,oaVarDataAppDef_oaRow_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaRow_getDefault,METH_VARARGS,oaVarDataAppDef_oaRow_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaRow_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaRow_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaRow_getSize,METH_VARARGS,oaVarDataAppDef_oaRow_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaRow_set,METH_VARARGS,oaVarDataAppDef_oaRow_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaRow_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaRow_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaRow_tp_assign,METH_VARARGS,oaVarDataAppDef_oaRow_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_doc[] = 
"Class: oaVarDataAppDef_oaRow\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaRow)\n"
"    Calls: (const oaVarDataAppDef_oaRow&)\n"
"    Signature: oaVarDataAppDef_oaRow||cref-oaVarDataAppDef_oaRow,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaRow_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaRow",
    sizeof(PyoaVarDataAppDef_oaRowObject),
    0,
    (destructor)oaVarDataAppDef_oaRow_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaRow_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaRow_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaRow_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaRow_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaRow_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_static_find_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaRow* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaRow|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaRow* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaRow_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::find(p1.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaRow, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRow_static_get_doc[] = 
"Class: oaVarDataAppDef_oaRow, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaRow* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRow|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRow* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRow|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRow* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRow|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaRow_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::get(p1.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowp result= (oaVarDataAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaRow_FromoaVarDataAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaRow, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaRow_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaRow_static_find,METH_VARARGS,oaVarDataAppDef_oaRow_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaRow_static_get,METH_VARARGS,oaVarDataAppDef_oaRow_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaRow_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaRow_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaRow\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaRow",
           (PyObject*)(&PyoaVarDataAppDef_oaRow_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaRow\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaRow_Type.tp_dict;
    for(method=oaVarDataAppDef_oaRow_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaRowHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaRowHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaRowHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaRowHeaderObject* self = (PyoaVarDataAppDef_oaRowHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaRowHeader)
    {
        PyParamoaVarDataAppDef_oaRowHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaRowHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaRowHeader, Choices are:\n"
        "    (oaVarDataAppDef_oaRowHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaRowHeader_tp_dealloc(PyoaVarDataAppDef_oaRowHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaRowHeader_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaRowHeader value;
    int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaVarDataAppDef_oaRowHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaRowHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaRowHeader v1;
    PyParamoaVarDataAppDef_oaRowHeader v2;
    int convert_status1=PyoaVarDataAppDef_oaRowHeader_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaRowHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaRowHeader_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaRowHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaRowHeader_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaRowHeader**) ((PyoaVarDataAppDef_oaRowHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaRowHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(oaVarDataAppDef_oaRowHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaRowHeader* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaRowHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaRowHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaRowHeaderObject* self = (PyoaVarDataAppDef_oaRowHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(oaVarDataAppDef_oaRowHeader* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaRowHeader_Type.tp_alloc(&PyoaVarDataAppDef_oaRowHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaRowHeaderObject* self = (PyoaVarDataAppDef_oaRowHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_get_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaRowHeader,[oaByte])\n"
"    Calls: void get(const oaRowHeader* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaRowHeader,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRowHeader data;
    int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowHeaderObject* self=(PyoaVarDataAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRowHeader data;
    int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowHeaderObject* self=(PyoaVarDataAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRowHeader data;
    int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowHeaderObject* self=(PyoaVarDataAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_getSize_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: getSize\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: oaUInt4 getSize(const oaRowHeader* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaRowHeader,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRowHeader data;
    int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowHeaderObject* self=(PyoaVarDataAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_set_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaRowHeader,[oaByte])\n"
"    Calls: void set(oaRowHeader* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaRowHeader,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaRowHeader data;
    int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaRowHeaderObject* self=(PyoaVarDataAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_isNull_doc[] =
"Class: oaVarDataAppDef_oaRowHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaRowHeader data;
    int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaRowHeader_assign_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaRowHeader data;
  int convert_status=PyoaVarDataAppDef_oaRowHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaRowHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaRowHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaRowHeader_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaRowHeader_get,METH_VARARGS,oaVarDataAppDef_oaRowHeader_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaRowHeader_getDefault,METH_VARARGS,oaVarDataAppDef_oaRowHeader_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaRowHeader_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaRowHeader_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaRowHeader_getSize,METH_VARARGS,oaVarDataAppDef_oaRowHeader_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaRowHeader_set,METH_VARARGS,oaVarDataAppDef_oaRowHeader_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaRowHeader_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaRowHeader_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaRowHeader_tp_assign,METH_VARARGS,oaVarDataAppDef_oaRowHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaRowHeader)\n"
"    Calls: (const oaVarDataAppDef_oaRowHeader&)\n"
"    Signature: oaVarDataAppDef_oaRowHeader||cref-oaVarDataAppDef_oaRowHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaRowHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaRowHeader",
    sizeof(PyoaVarDataAppDef_oaRowHeaderObject),
    0,
    (destructor)oaVarDataAppDef_oaRowHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaRowHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaRowHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaRowHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaRowHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaRowHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_static_find_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::find(p1.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaRowHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaRowHeader_static_get_doc[] = 
"Class: oaVarDataAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaRowHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::get(p1.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaRowHeaderp result= (oaVarDataAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaRowHeader_FromoaVarDataAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaRowHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaRowHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaRowHeader_static_find,METH_VARARGS,oaVarDataAppDef_oaRowHeader_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaRowHeader_static_get,METH_VARARGS,oaVarDataAppDef_oaRowHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaRowHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaRowHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaRowHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaRowHeader",
           (PyObject*)(&PyoaVarDataAppDef_oaRowHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaRowHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaRowHeader_Type.tp_dict;
    for(method=oaVarDataAppDef_oaRowHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaScanChain
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaScanChain_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaScanChain_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaScanChainObject* self = (PyoaVarDataAppDef_oaScanChainObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaScanChain)
    {
        PyParamoaVarDataAppDef_oaScanChain p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaScanChain_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaScanChain, Choices are:\n"
        "    (oaVarDataAppDef_oaScanChain)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaScanChain_tp_dealloc(PyoaVarDataAppDef_oaScanChainObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaScanChain_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaScanChain value;
    int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaVarDataAppDef_oaScanChain::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaScanChain_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaScanChain v1;
    PyParamoaVarDataAppDef_oaScanChain v2;
    int convert_status1=PyoaVarDataAppDef_oaScanChain_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaScanChain_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaScanChain_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaScanChain* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaScanChain_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaScanChain**) ((PyoaVarDataAppDef_oaScanChainObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaScanChain Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(oaVarDataAppDef_oaScanChain** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaScanChain* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaScanChain_Type.tp_alloc(&PyoaVarDataAppDef_oaScanChain_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaScanChainObject* self = (PyoaVarDataAppDef_oaScanChainObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(oaVarDataAppDef_oaScanChain* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaScanChain_Type.tp_alloc(&PyoaVarDataAppDef_oaScanChain_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaScanChainObject* self = (PyoaVarDataAppDef_oaScanChainObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_get_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaScanChain,[oaByte])\n"
"    Calls: void get(const oaScanChain* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaScanChain,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChain data;
    int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainObject* self=(PyoaVarDataAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChain data;
    int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainObject* self=(PyoaVarDataAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChain data;
    int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainObject* self=(PyoaVarDataAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_getSize_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: getSize\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: oaUInt4 getSize(const oaScanChain* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaScanChain,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChain data;
    int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainObject* self=(PyoaVarDataAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_set_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaScanChain,[oaByte])\n"
"    Calls: void set(oaScanChain* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaScanChain,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChain data;
    int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainObject* self=(PyoaVarDataAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_isNull_doc[] =
"Class: oaVarDataAppDef_oaScanChain, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaScanChain data;
    int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaScanChain_assign_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaScanChain data;
  int convert_status=PyoaVarDataAppDef_oaScanChain_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaScanChain p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaScanChain_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaScanChain_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaScanChain_get,METH_VARARGS,oaVarDataAppDef_oaScanChain_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaScanChain_getDefault,METH_VARARGS,oaVarDataAppDef_oaScanChain_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaScanChain_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaScanChain_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaScanChain_getSize,METH_VARARGS,oaVarDataAppDef_oaScanChain_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaScanChain_set,METH_VARARGS,oaVarDataAppDef_oaScanChain_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaScanChain_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaScanChain_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaScanChain_tp_assign,METH_VARARGS,oaVarDataAppDef_oaScanChain_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_doc[] = 
"Class: oaVarDataAppDef_oaScanChain\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaScanChain)\n"
"    Calls: (const oaVarDataAppDef_oaScanChain&)\n"
"    Signature: oaVarDataAppDef_oaScanChain||cref-oaVarDataAppDef_oaScanChain,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaScanChain_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaScanChain",
    sizeof(PyoaVarDataAppDef_oaScanChainObject),
    0,
    (destructor)oaVarDataAppDef_oaScanChain_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaScanChain_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaScanChain_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaScanChain_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaScanChain_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaScanChain_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_static_find_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaScanChain* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaScanChain* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::find(p1.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaScanChain, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChain_static_get_doc[] = 
"Class: oaVarDataAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaScanChain* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChain* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChain* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaScanChain_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::get(p1.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainp result= (oaVarDataAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaScanChain_FromoaVarDataAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaScanChain, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaScanChain_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaScanChain_static_find,METH_VARARGS,oaVarDataAppDef_oaScanChain_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaScanChain_static_get,METH_VARARGS,oaVarDataAppDef_oaScanChain_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaScanChain_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaScanChain_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaScanChain\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaScanChain",
           (PyObject*)(&PyoaVarDataAppDef_oaScanChain_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaScanChain\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaScanChain_Type.tp_dict;
    for(method=oaVarDataAppDef_oaScanChain_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaScanChainInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaScanChainInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaScanChainInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaScanChainInstObject* self = (PyoaVarDataAppDef_oaScanChainInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaScanChainInst)
    {
        PyParamoaVarDataAppDef_oaScanChainInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaScanChainInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaScanChainInst, Choices are:\n"
        "    (oaVarDataAppDef_oaScanChainInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaScanChainInst_tp_dealloc(PyoaVarDataAppDef_oaScanChainInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaScanChainInst_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaScanChainInst value;
    int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaVarDataAppDef_oaScanChainInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaScanChainInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaScanChainInst v1;
    PyParamoaVarDataAppDef_oaScanChainInst v2;
    int convert_status1=PyoaVarDataAppDef_oaScanChainInst_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaScanChainInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaScanChainInst_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaScanChainInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaScanChainInst_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaScanChainInst**) ((PyoaVarDataAppDef_oaScanChainInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaScanChainInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(oaVarDataAppDef_oaScanChainInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaScanChainInst* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaScanChainInst_Type.tp_alloc(&PyoaVarDataAppDef_oaScanChainInst_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaScanChainInstObject* self = (PyoaVarDataAppDef_oaScanChainInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(oaVarDataAppDef_oaScanChainInst* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaScanChainInst_Type.tp_alloc(&PyoaVarDataAppDef_oaScanChainInst_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaScanChainInstObject* self = (PyoaVarDataAppDef_oaScanChainInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_get_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaScanChainInst,[oaByte])\n"
"    Calls: void get(const oaScanChainInst* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaScanChainInst,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainInst data;
    int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainInstObject* self=(PyoaVarDataAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainInst data;
    int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainInstObject* self=(PyoaVarDataAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainInst data;
    int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainInstObject* self=(PyoaVarDataAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_getSize_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: getSize\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: oaUInt4 getSize(const oaScanChainInst* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaScanChainInst,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainInst data;
    int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainInstObject* self=(PyoaVarDataAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_set_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaScanChainInst,[oaByte])\n"
"    Calls: void set(oaScanChainInst* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaScanChainInst,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainInst data;
    int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainInstObject* self=(PyoaVarDataAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_isNull_doc[] =
"Class: oaVarDataAppDef_oaScanChainInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaScanChainInst data;
    int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaScanChainInst_assign_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaScanChainInst data;
  int convert_status=PyoaVarDataAppDef_oaScanChainInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaScanChainInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaScanChainInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaScanChainInst_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaScanChainInst_get,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaScanChainInst_getDefault,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaScanChainInst_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaScanChainInst_getSize,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaScanChainInst_set,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaScanChainInst_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaScanChainInst_tp_assign,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaScanChainInst)\n"
"    Calls: (const oaVarDataAppDef_oaScanChainInst&)\n"
"    Signature: oaVarDataAppDef_oaScanChainInst||cref-oaVarDataAppDef_oaScanChainInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaScanChainInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaScanChainInst",
    sizeof(PyoaVarDataAppDef_oaScanChainInstObject),
    0,
    (destructor)oaVarDataAppDef_oaScanChainInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaScanChainInst_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaScanChainInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaScanChainInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaScanChainInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaScanChainInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_static_find_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::find(p1.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaScanChainInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainInst_static_get_doc[] = 
"Class: oaVarDataAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::get(p1.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainInstp result= (oaVarDataAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaScanChainInst_FromoaVarDataAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaScanChainInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaScanChainInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaScanChainInst_static_find,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaScanChainInst_static_get,METH_VARARGS,oaVarDataAppDef_oaScanChainInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaScanChainInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaScanChainInst_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaScanChainInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaScanChainInst",
           (PyObject*)(&PyoaVarDataAppDef_oaScanChainInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaScanChainInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaScanChainInst_Type.tp_dict;
    for(method=oaVarDataAppDef_oaScanChainInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaScanChainSet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaScanChainSet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaScanChainSet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaScanChainSetObject* self = (PyoaVarDataAppDef_oaScanChainSetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaScanChainSet)
    {
        PyParamoaVarDataAppDef_oaScanChainSet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaScanChainSet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaScanChainSet, Choices are:\n"
        "    (oaVarDataAppDef_oaScanChainSet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaScanChainSet_tp_dealloc(PyoaVarDataAppDef_oaScanChainSetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaScanChainSet_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaScanChainSet value;
    int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaVarDataAppDef_oaScanChainSet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaScanChainSet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaScanChainSet v1;
    PyParamoaVarDataAppDef_oaScanChainSet v2;
    int convert_status1=PyoaVarDataAppDef_oaScanChainSet_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaScanChainSet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaScanChainSet_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaScanChainSet* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaScanChainSet_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaScanChainSet**) ((PyoaVarDataAppDef_oaScanChainSetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaScanChainSet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(oaVarDataAppDef_oaScanChainSet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaScanChainSet* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaScanChainSet_Type.tp_alloc(&PyoaVarDataAppDef_oaScanChainSet_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaScanChainSetObject* self = (PyoaVarDataAppDef_oaScanChainSetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(oaVarDataAppDef_oaScanChainSet* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaScanChainSet_Type.tp_alloc(&PyoaVarDataAppDef_oaScanChainSet_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaScanChainSetObject* self = (PyoaVarDataAppDef_oaScanChainSetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_get_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaScanChainSet,[oaByte])\n"
"    Calls: void get(const oaScanChainSet* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaScanChainSet,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainSet data;
    int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainSetObject* self=(PyoaVarDataAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainSet data;
    int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainSetObject* self=(PyoaVarDataAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainSet data;
    int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainSetObject* self=(PyoaVarDataAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_getSize_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: getSize\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: oaUInt4 getSize(const oaScanChainSet* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaScanChainSet,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainSet data;
    int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainSetObject* self=(PyoaVarDataAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_set_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaScanChainSet,[oaByte])\n"
"    Calls: void set(oaScanChainSet* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaScanChainSet,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaScanChainSet data;
    int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaScanChainSetObject* self=(PyoaVarDataAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_isNull_doc[] =
"Class: oaVarDataAppDef_oaScanChainSet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaScanChainSet data;
    int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaScanChainSet_assign_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaScanChainSet data;
  int convert_status=PyoaVarDataAppDef_oaScanChainSet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaScanChainSet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaScanChainSet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaScanChainSet_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaScanChainSet_get,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaScanChainSet_getDefault,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaScanChainSet_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaScanChainSet_getSize,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaScanChainSet_set,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaScanChainSet_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaScanChainSet_tp_assign,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaScanChainSet)\n"
"    Calls: (const oaVarDataAppDef_oaScanChainSet&)\n"
"    Signature: oaVarDataAppDef_oaScanChainSet||cref-oaVarDataAppDef_oaScanChainSet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaScanChainSet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaScanChainSet",
    sizeof(PyoaVarDataAppDef_oaScanChainSetObject),
    0,
    (destructor)oaVarDataAppDef_oaScanChainSet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaScanChainSet_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaScanChainSet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaScanChainSet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaScanChainSet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaScanChainSet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_static_find_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::find(p1.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaScanChainSet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaScanChainSet_static_get_doc[] = 
"Class: oaVarDataAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaScanChainSet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::get(p1.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaScanChainSetp result= (oaVarDataAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaScanChainSet_FromoaVarDataAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaScanChainSet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaScanChainSet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaScanChainSet_static_find,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaScanChainSet_static_get,METH_VARARGS,oaVarDataAppDef_oaScanChainSet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaScanChainSet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaScanChainSet_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaScanChainSet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaScanChainSet",
           (PyObject*)(&PyoaVarDataAppDef_oaScanChainSet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaScanChainSet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaScanChainSet_Type.tp_dict;
    for(method=oaVarDataAppDef_oaScanChainSet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaVarDataAppDef_oaShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaVarDataAppDef_oaShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaVarDataAppDef_oaShapeObject* self = (PyoaVarDataAppDef_oaShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaVarDataAppDef_oaShape)
    {
        PyParamoaVarDataAppDef_oaShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaVarDataAppDef_oaShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaVarDataAppDef_oaShape, Choices are:\n"
        "    (oaVarDataAppDef_oaShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaVarDataAppDef_oaShape_tp_dealloc(PyoaVarDataAppDef_oaShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaVarDataAppDef_oaShape_tp_repr(PyObject *ob)
{
    PyParamoaVarDataAppDef_oaShape value;
    int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaVarDataAppDef_oaShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaVarDataAppDef_oaShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaVarDataAppDef_oaShape v1;
    PyParamoaVarDataAppDef_oaShape v2;
    int convert_status1=PyoaVarDataAppDef_oaShape_Convert(ob1,&v1);
    int convert_status2=PyoaVarDataAppDef_oaShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaVarDataAppDef_oaShape_Convert(PyObject* ob,PyParamoaVarDataAppDef_oaShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaVarDataAppDef_oaShape_Check(ob)) {
        result->SetData( (oaVarDataAppDef_oaShape**) ((PyoaVarDataAppDef_oaShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaVarDataAppDef_oaShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(oaVarDataAppDef_oaShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaVarDataAppDef_oaShape* data=*value;
        PyObject* bself = PyoaVarDataAppDef_oaShape_Type.tp_alloc(&PyoaVarDataAppDef_oaShape_Type,0);
        if (bself == NULL) return bself;
        PyoaVarDataAppDef_oaShapeObject* self = (PyoaVarDataAppDef_oaShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(oaVarDataAppDef_oaShape* data)
{
    if (data) {
       PyObject* bself = PyoaVarDataAppDef_oaShape_Type.tp_alloc(&PyoaVarDataAppDef_oaShape_Type,0);
       if (bself == NULL) return bself;
       PyoaVarDataAppDef_oaShapeObject* self = (PyoaVarDataAppDef_oaShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_get_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: get\n"
"  Paramegers: (oaShape,[oaByte])\n"
"    Calls: void get(const oaShape* object,oaByte* value)\n"
"    Signature: get|void-void|cptr-oaShape,ptr-oaByte,\n"
"    This function returns the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaShape data;
    int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaShapeObject* self=(PyoaVarDataAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!(data.Data()->getSize(p1.Data())==p2.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match object data");
            return NULL;
        }
        data.DataCall()->get(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_getDefault_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: getDefault\n"
"  Paramegers: ([oaByte])\n"
"    Calls: void getDefault(oaByte* value) const\n"
"    Signature: getDefault|void-void|ptr-oaByte,\n"
"    This function fills out the given byte array with the default value for this extension. The byte array should be allocated before calling this function.\n"
"    value\n"
"    The byte array to be filled out with the default value\n"
;

static PyObject*
oaVarDataAppDef_oaShape_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaShape data;
    int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaShapeObject* self=(PyoaVarDataAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaByte_Array p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaByte_Array_Convert,&p1)) {
        if (!(data.Data()->getDefaultSize()==p1.Len())) {
            PyErr_SetString(PyExc_TypeError,
                "number bytes does not match default size");
            return NULL;
        }
        data.DataCall()->getDefault(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_getDefaultSize_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: getDefaultSize\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDefaultSize() const\n"
"    Signature: getDefaultSize|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the default size for this extension in bytes.\n"
;

static PyObject*
oaVarDataAppDef_oaShape_getDefaultSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaShape data;
    int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaShapeObject* self=(PyoaVarDataAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDefaultSize());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_getSize_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: getSize\n"
"  Paramegers: (oaShape)\n"
"    Calls: oaUInt4 getSize(const oaShape* object)\n"
"    Signature: getSize|simple-oaUInt4|cptr-oaShape,\n"
"    This function returns the size of the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaShape_getSize(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaShape data;
    int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaShapeObject* self=(PyoaVarDataAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaUInt4 result= (data.DataCall()->getSize(p1.Data()));
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_set_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: set\n"
"  Paramegers: (oaShape,[oaByte])\n"
"    Calls: void set(oaShape* object,const oaByte* value)\n"
"    Signature: set|void-void|ptr-oaShape,simple-oaUInt4,cptr-oaByte,\n"
"    This function sets the value of this data extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaVarDataAppDef_oaShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaVarDataAppDef_oaShape data;
    int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaVarDataAppDef_oaShapeObject* self=(PyoaVarDataAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    PyParamoaByte_Array p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaByte_Array_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Len(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_isNull_doc[] =
"Class: oaVarDataAppDef_oaShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaVarDataAppDef_oaShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaVarDataAppDef_oaShape data;
    int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaVarDataAppDef_oaShape_assign_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaVarDataAppDef_oaShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaVarDataAppDef_oaShape data;
  int convert_status=PyoaVarDataAppDef_oaShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaVarDataAppDef_oaShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaVarDataAppDef_oaShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaVarDataAppDef_oaShape_methodlist[] = {
    {"get",(PyCFunction)oaVarDataAppDef_oaShape_get,METH_VARARGS,oaVarDataAppDef_oaShape_get_doc},
    {"getDefault",(PyCFunction)oaVarDataAppDef_oaShape_getDefault,METH_VARARGS,oaVarDataAppDef_oaShape_getDefault_doc},
    {"getDefaultSize",(PyCFunction)oaVarDataAppDef_oaShape_getDefaultSize,METH_VARARGS,oaVarDataAppDef_oaShape_getDefaultSize_doc},
    {"getSize",(PyCFunction)oaVarDataAppDef_oaShape_getSize,METH_VARARGS,oaVarDataAppDef_oaShape_getSize_doc},
    {"set",(PyCFunction)oaVarDataAppDef_oaShape_set,METH_VARARGS,oaVarDataAppDef_oaShape_set_doc},
    {"isNull",(PyCFunction)oaVarDataAppDef_oaShape_tp_isNull,METH_VARARGS,oaVarDataAppDef_oaShape_isNull_doc},
    {"assign",(PyCFunction)oaVarDataAppDef_oaShape_tp_assign,METH_VARARGS,oaVarDataAppDef_oaShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_doc[] = 
"Class: oaVarDataAppDef_oaShape\n"
"  The oaVarDataAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  When the objects are created, a data field is added to each object of the specified dataType. Applications can use the new data field for whatever purpose is necessary.\n"
"  This type of extension is useful because it allows variable-sized data for each object being extended. This is similar to the oaDataAppDef class, but more general because the data size can differ for each object. (There is a minor speed and size penalty for this additional flexibility.) The default value for this extension is zero bytes.\n"
"  Note: Because the type of data is unknown to OpenAccess, it is unmanaged. This means the contents are not byte-swapped.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaVarDataAppDef_oaShape)\n"
"    Calls: (const oaVarDataAppDef_oaShape&)\n"
"    Signature: oaVarDataAppDef_oaShape||cref-oaVarDataAppDef_oaShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaVarDataAppDef_oaShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaVarDataAppDef_oaShape",
    sizeof(PyoaVarDataAppDef_oaShapeObject),
    0,
    (destructor)oaVarDataAppDef_oaShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaVarDataAppDef_oaShape_tp_compare,	/* tp_compare */
    (reprfunc)oaVarDataAppDef_oaShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaVarDataAppDef_oaShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaVarDataAppDef_oaShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaVarDataAppDef_oaShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_static_find_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaShape|cref-oaString,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaVarDataAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaVarDataAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaVarDataAppDef_oaShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::find(p1.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::find(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaVarDataAppDef_oaShape_static_get_doc[] = 
"Class: oaVarDataAppDef_oaShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaVarDataAppDef_oaShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaShape* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaShape* get(const oaString& name,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaShape|cref-oaString,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name .\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaVarDataAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
"    Calls: oaVarDataAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef,const oaByte* defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaVarDataAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaUInt4,cptr-oaByte,simple-oaBoolean,\n"
"    This function constructs an oaVarDataAppDef class variable data extension with the specified name for the specified type of object.\n"
"    name\n"
"    The name given to the oaVarDataAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaVarDataAppDef data in the database\n"
"    defSize\n"
"    The default size of the data for this extension\n"
"    defValue\n"
"    The default value for the data for this extension\n"
"    oacAppDefExists\n"
;

static PyObject*
oaVarDataAppDef_oaShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::get(p1.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaByte_Array p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaByte_Array_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::get(p1.Data(),p2.Len(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,[oaByte],oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaByte_Array p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaByte_Array_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaVarDataAppDef_oaShapep result= (oaVarDataAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Len(),p3.Data(),p4.Data()));
            return PyoaVarDataAppDef_oaShape_FromoaVarDataAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaVarDataAppDef_oaShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,[oaByte],oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,[oaByte],oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaVarDataAppDef_oaShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaVarDataAppDef_oaShape_static_find,METH_VARARGS,oaVarDataAppDef_oaShape_static_find_doc},
    {"static_get",(PyCFunction)oaVarDataAppDef_oaShape_static_get,METH_VARARGS,oaVarDataAppDef_oaShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaVarDataAppDef_oaShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaVarDataAppDef_oaShape_Type)<0) {
      printf("** PyType_Ready failed for: oaVarDataAppDef_oaShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaVarDataAppDef_oaShape",
           (PyObject*)(&PyoaVarDataAppDef_oaShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaVarDataAppDef_oaShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaVarDataAppDef_oaShape_Type.tp_dict;
    for(method=oaVarDataAppDef_oaShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

