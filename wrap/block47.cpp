
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPath_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPath_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPath_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaPath_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPath_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPath_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaPath_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPath_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPath_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaPath_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPath_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPath_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaPath_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPath_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaStdObserver_oaPath_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPath_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPath_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPath_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPath_oaShapeModTypeEnum*) ((PyoaStdObserver_oaPath_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPath_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPath_oaShapeModTypeEnum_FromoaStdObserver_oaPath_oaShapeModTypeEnum(oaStdObserver_oaPath_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPath_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPath_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPath_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaPath_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPath_oaShapeModTypeEnum::pyv_oaStdObserver_oaPath_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPath_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPath_oaShapeModTypeEnum::pyv_oaStdObserver_oaPath_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPath_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPath_oaShapeModTypeEnum::onPostCreate(oaPath* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPath_FromoaPath(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPath_oaShapeModTypeEnum::onPostModify(oaPath* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPath_FromoaPath(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPath_oaShapeModTypeEnum::onPreDestroy(oaPath* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPath_FromoaPath(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPath_oaShapeModTypeEnum::onPreModify(oaPath* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPath_FromoaPath(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPath_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPath)\n"
"    Calls: virtual void onPostCreate(oaPath* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPath,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPath_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPath_oaShapeModTypeEnumObject*)ob;

    PyParamoaPath p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPath_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPath_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPath,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPath* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPath,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPath_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPath_oaShapeModTypeEnumObject*)ob;

    PyParamoaPath p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPath_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPath_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPath)\n"
"    Calls: virtual void onPreDestroy(oaPath* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPath,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPath_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPath_oaShapeModTypeEnumObject*)ob;

    PyParamoaPath p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPath_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPath_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPath,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPath* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPath,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPath_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPath_oaShapeModTypeEnumObject*)ob;

    PyParamoaPath p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPath_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPath_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPath_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPath_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPath_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPath_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPath_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPath_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPath_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPath_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPath_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPath_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPath_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaPath_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPath_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPath_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPath_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPath_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPath_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPath_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPath_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPath)\n"
"    Calls: void notifyPostCreateObservers(oaPath* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPath,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPath p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPath_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPath_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPath,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPath* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPath,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPath p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPath_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPath_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPath)\n"
"    Calls: void notifyPreDestroyObservers(oaPath* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPath,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPath p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPath_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPath_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPath_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPath,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPath* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPath,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPath p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPath_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPath_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPath_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPath_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPath_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPath_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPath_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPath_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPath_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPath_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPath_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPath_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject* self = (PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum* p=new pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum* p=new pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_dealloc(PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[70];
    sprintf(buffer,"<oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum v1;
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum*) ((PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_FromoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject* self = (PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostCreate(oaPhysicalLayer* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPhysicalLayer_FromoaPhysicalLayer(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostModify(oaPhysicalLayer* p1,oaLayerModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPhysicalLayer_FromoaPhysicalLayer(p1));
    PyTuple_SetItem(args,1,PyoaLayerModTypeEnum_FromoaLayerModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreDestroy(oaPhysicalLayer* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPhysicalLayer_FromoaPhysicalLayer(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreModify(oaPhysicalLayer* p1,oaLayerModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPhysicalLayer_FromoaPhysicalLayer(p1));
    PyTuple_SetItem(args,1,PyoaLayerModTypeEnum_FromoaLayerModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPhysicalLayer)\n"
"    Calls: virtual void onPostCreate(oaPhysicalLayer* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPhysicalLayer,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaPhysicalLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPhysicalLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPhysicalLayer,oaLayerModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPhysicalLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPhysicalLayer,simple-oaLayerModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaPhysicalLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPhysicalLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPhysicalLayer)\n"
"    Calls: virtual void onPreDestroy(oaPhysicalLayer* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPhysicalLayer,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaPhysicalLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPhysicalLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPhysicalLayer,oaLayerModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPhysicalLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPhysicalLayer,simple-oaLayerModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaPhysicalLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPhysicalLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum",
    sizeof(PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPhysicalLayer)\n"
"    Calls: void notifyPostCreateObservers(oaPhysicalLayer* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPhysicalLayer,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPhysicalLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPhysicalLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPhysicalLayer,oaLayerModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPhysicalLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPhysicalLayer,simple-oaLayerModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPhysicalLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPhysicalLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPhysicalLayer)\n"
"    Calls: void notifyPreDestroyObservers(oaPhysicalLayer* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPhysicalLayer,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPhysicalLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPhysicalLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPhysicalLayer,oaLayerModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPhysicalLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPhysicalLayer,simple-oaLayerModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPhysicalLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPhysicalLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPhysicalLayer_oaLayerModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject* self = (PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPiElmore_oaReducedModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum* p=new pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPiElmore_oaReducedModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum* p=new pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_dealloc(PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPiElmore_oaReducedModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[67];
    sprintf(buffer,"<oaStdObserver_oaPiElmore_oaReducedModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum v1;
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPiElmore_oaReducedModTypeEnum*) ((PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_FromoaStdObserver_oaPiElmore_oaReducedModTypeEnum(oaStdObserver_oaPiElmore_oaReducedModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject* self = (PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum::pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPiElmore_oaReducedModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum::pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPiElmore_oaReducedModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostCreate(oaPiElmore* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPiElmore_FromoaPiElmore(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostModify(oaPiElmore* p1,oaReducedModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPiElmore_FromoaPiElmore(p1));
    PyTuple_SetItem(args,1,PyoaReducedModTypeEnum_FromoaReducedModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreDestroy(oaPiElmore* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPiElmore_FromoaPiElmore(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreModify(oaPiElmore* p1,oaReducedModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPiElmore_FromoaPiElmore(p1));
    PyTuple_SetItem(args,1,PyoaReducedModTypeEnum_FromoaReducedModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPiElmore)\n"
"    Calls: virtual void onPostCreate(oaPiElmore* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPiElmore,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiElmore p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiElmore_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPiElmore,oaReducedModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPiElmore* object,oaReducedModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPiElmore,simple-oaReducedModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiElmore p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiElmore_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPiElmore)\n"
"    Calls: virtual void onPreDestroy(oaPiElmore* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPiElmore,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiElmore p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiElmore_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPiElmore,oaReducedModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPiElmore* object,oaReducedModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPiElmore,simple-oaReducedModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiElmore p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiElmore_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiElmore_oaReducedModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPiElmore_oaReducedModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPiElmore_oaReducedModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPiElmore_oaReducedModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPiElmore_oaReducedModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPiElmore_oaReducedModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPiElmore_oaReducedModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPiElmore_oaReducedModTypeEnum",
    sizeof(PyoaStdObserver_oaPiElmore_oaReducedModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPiElmore_oaReducedModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPiElmore_oaReducedModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPiElmore_oaReducedModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPiElmore_oaReducedModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPiElmore)\n"
"    Calls: void notifyPostCreateObservers(oaPiElmore* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPiElmore,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiElmore p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiElmore_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiElmore_oaReducedModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPiElmore,oaReducedModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPiElmore* object,oaReducedModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPiElmore,simple-oaReducedModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiElmore p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiElmore_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiElmore_oaReducedModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPiElmore)\n"
"    Calls: void notifyPreDestroyObservers(oaPiElmore* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPiElmore,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiElmore p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiElmore_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiElmore_oaReducedModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPiElmore_oaReducedModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPiElmore,oaReducedModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPiElmore* object,oaReducedModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPiElmore,simple-oaReducedModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiElmore p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiElmore_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiElmore_oaReducedModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPiElmore_oaReducedModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPiElmore_oaReducedModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPiElmore_oaReducedModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPiElmore_oaReducedModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPiElmore_oaReducedModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPiElmore_oaReducedModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPiElmore_oaReducedModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject* self = (PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum* p=new pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum* p=new pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_dealloc(PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[72];
    sprintf(buffer,"<oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum v1;
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum*) ((PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_FromoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject* self = (PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostCreate(oaPiPoleResidue* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPiPoleResidue_FromoaPiPoleResidue(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostModify(oaPiPoleResidue* p1,oaReducedModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPiPoleResidue_FromoaPiPoleResidue(p1));
    PyTuple_SetItem(args,1,PyoaReducedModTypeEnum_FromoaReducedModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreDestroy(oaPiPoleResidue* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPiPoleResidue_FromoaPiPoleResidue(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreModify(oaPiPoleResidue* p1,oaReducedModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPiPoleResidue_FromoaPiPoleResidue(p1));
    PyTuple_SetItem(args,1,PyoaReducedModTypeEnum_FromoaReducedModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPiPoleResidue)\n"
"    Calls: virtual void onPostCreate(oaPiPoleResidue* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPiPoleResidue,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPiPoleResidue,oaReducedModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPiPoleResidue* object,oaReducedModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPiPoleResidue,simple-oaReducedModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiPoleResidue p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiPoleResidue_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPiPoleResidue)\n"
"    Calls: virtual void onPreDestroy(oaPiPoleResidue* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPiPoleResidue,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPiPoleResidue,oaReducedModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPiPoleResidue* object,oaReducedModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPiPoleResidue,simple-oaReducedModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject*)ob;

    PyParamoaPiPoleResidue p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiPoleResidue_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum",
    sizeof(PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPiPoleResidue)\n"
"    Calls: void notifyPostCreateObservers(oaPiPoleResidue* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPiPoleResidue,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPiPoleResidue,oaReducedModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPiPoleResidue* object,oaReducedModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPiPoleResidue,simple-oaReducedModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiPoleResidue p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiPoleResidue_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPiPoleResidue)\n"
"    Calls: void notifyPreDestroyObservers(oaPiPoleResidue* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPiPoleResidue,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPiPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPiPoleResidue,oaReducedModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPiPoleResidue* object,oaReducedModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPiPoleResidue,simple-oaReducedModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPiPoleResidue p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPiPoleResidue_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPiPoleResidue_oaReducedModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPin_oaPinModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPin_oaPinModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPin_oaPinModTypeEnumObject* self = (PyoaStdObserver_oaPin_oaPinModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPin_oaPinModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPin_oaPinModTypeEnum* p=new pyv_oaStdObserver_oaPin_oaPinModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPin_oaPinModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPin_oaPinModTypeEnum* p=new pyv_oaStdObserver_oaPin_oaPinModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPin_oaPinModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPin_oaPinModTypeEnum_tp_dealloc(PyoaStdObserver_oaPin_oaPinModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPin_oaPinModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaStdObserver_oaPin_oaPinModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPin_oaPinModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum v1;
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPin_oaPinModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPin_oaPinModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPin_oaPinModTypeEnum*) ((PyoaStdObserver_oaPin_oaPinModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPin_oaPinModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPin_oaPinModTypeEnum_FromoaStdObserver_oaPin_oaPinModTypeEnum(oaStdObserver_oaPin_oaPinModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPin_oaPinModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPin_oaPinModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPin_oaPinModTypeEnumObject* self = (PyoaStdObserver_oaPin_oaPinModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPin_oaPinModTypeEnum::pyv_oaStdObserver_oaPin_oaPinModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPin_oaPinModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPin_oaPinModTypeEnum::pyv_oaStdObserver_oaPin_oaPinModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPin_oaPinModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPin_oaPinModTypeEnum::onPostCreate(oaPin* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPin_FromoaPin(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPin_oaPinModTypeEnum::onPostModify(oaPin* p1,oaPinModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPin_FromoaPin(p1));
    PyTuple_SetItem(args,1,PyoaPinModTypeEnum_FromoaPinModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPin_oaPinModTypeEnum::onPreDestroy(oaPin* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPin_FromoaPin(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPin_oaPinModTypeEnum::onPreModify(oaPin* p1,oaPinModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPin_FromoaPin(p1));
    PyTuple_SetItem(args,1,PyoaPinModTypeEnum_FromoaPinModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPin_oaPinModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPin)\n"
"    Calls: virtual void onPostCreate(oaPin* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPin,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPin_oaPinModTypeEnumObject* self=(PyoaStdObserver_oaPin_oaPinModTypeEnumObject*)ob;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPin_oaPinModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPin,oaPinModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPin* object,oaPinModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPin,simple-oaPinModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPin_oaPinModTypeEnumObject* self=(PyoaStdObserver_oaPin_oaPinModTypeEnumObject*)ob;

    PyParamoaPin p1;
    PyParamoaPinModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaPinModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPin_oaPinModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPin)\n"
"    Calls: virtual void onPreDestroy(oaPin* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPin,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPin_oaPinModTypeEnumObject* self=(PyoaStdObserver_oaPin_oaPinModTypeEnumObject*)ob;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPin_oaPinModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPin,oaPinModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPin* object,oaPinModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPin,simple-oaPinModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPin_oaPinModTypeEnumObject* self=(PyoaStdObserver_oaPin_oaPinModTypeEnumObject*)ob;

    PyParamoaPin p1;
    PyParamoaPinModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaPinModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPin_oaPinModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPin_oaPinModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPin_oaPinModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPin_oaPinModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPin_oaPinModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPin_oaPinModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPin_oaPinModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPin_oaPinModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPin_oaPinModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPin_oaPinModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPin_oaPinModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPin_oaPinModTypeEnum",
    sizeof(PyoaStdObserver_oaPin_oaPinModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPin_oaPinModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPin_oaPinModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPin_oaPinModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPin_oaPinModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPin_oaPinModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPin_oaPinModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPin_oaPinModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPin)\n"
"    Calls: void notifyPostCreateObservers(oaPin* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPin,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPin_oaPinModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPin,oaPinModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPin* object,oaPinModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPin,simple-oaPinModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPin p1;
    PyParamoaPinModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaPinModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPin_oaPinModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPin)\n"
"    Calls: void notifyPreDestroyObservers(oaPin* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPin,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPin_oaPinModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPin_oaPinModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPin,oaPinModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPin* object,oaPinModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPin,simple-oaPinModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPin p1;
    PyParamoaPinModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaPinModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPin_oaPinModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPin_oaPinModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPin_oaPinModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPin_oaPinModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPin_oaPinModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPin_oaPinModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPin_oaPinModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPin_oaPinModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPin_oaPinModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPin_oaPinModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPin_oaPinModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject* self = (PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum* p=new pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum* p=new pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_dealloc(PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[74];
    sprintf(buffer,"<oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum v1;
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum*) ((PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_FromoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject* self = (PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostCreate(oaPoleResidue* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPoleResidue_FromoaPoleResidue(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostModify(oaPoleResidue* p1,oaPoleResidueModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPoleResidue_FromoaPoleResidue(p1));
    PyTuple_SetItem(args,1,PyoaPoleResidueModTypeEnum_FromoaPoleResidueModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreDestroy(oaPoleResidue* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPoleResidue_FromoaPoleResidue(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreModify(oaPoleResidue* p1,oaPoleResidueModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPoleResidue_FromoaPoleResidue(p1));
    PyTuple_SetItem(args,1,PyoaPoleResidueModTypeEnum_FromoaPoleResidueModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: virtual void onPostCreate(oaPoleResidue* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPoleResidue,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject* self=(PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject*)ob;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPoleResidue,oaPoleResidueModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPoleResidue* object,oaPoleResidueModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPoleResidue,simple-oaPoleResidueModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject* self=(PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject*)ob;

    PyParamoaPoleResidue p1;
    PyParamoaPoleResidueModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaPoleResidueModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: virtual void onPreDestroy(oaPoleResidue* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPoleResidue,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject* self=(PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject*)ob;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPoleResidue,oaPoleResidueModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPoleResidue* object,oaPoleResidueModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPoleResidue,simple-oaPoleResidueModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject* self=(PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject*)ob;

    PyParamoaPoleResidue p1;
    PyParamoaPoleResidueModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaPoleResidueModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum",
    sizeof(PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: void notifyPostCreateObservers(oaPoleResidue* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPoleResidue,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPoleResidue,oaPoleResidueModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPoleResidue* object,oaPoleResidueModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPoleResidue,simple-oaPoleResidueModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPoleResidue p1;
    PyParamoaPoleResidueModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaPoleResidueModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: void notifyPreDestroyObservers(oaPoleResidue* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPoleResidue,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPoleResidue,oaPoleResidueModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPoleResidue* object,oaPoleResidueModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPoleResidue,simple-oaPoleResidueModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPoleResidue p1;
    PyParamoaPoleResidueModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaPoleResidueModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPoleResidue_oaPoleResidueModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPolygon_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPolygon_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPolygon_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[64];
    sprintf(buffer,"<oaStdObserver_oaPolygon_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPolygon_oaShapeModTypeEnum*) ((PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPolygon_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_FromoaStdObserver_oaPolygon_oaShapeModTypeEnum(oaStdObserver_oaPolygon_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum::pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPolygon_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum::pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPolygon_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostCreate(oaPolygon* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPolygon_FromoaPolygon(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostModify(oaPolygon* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPolygon_FromoaPolygon(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreDestroy(oaPolygon* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPolygon_FromoaPolygon(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreModify(oaPolygon* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPolygon_FromoaPolygon(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPolygon)\n"
"    Calls: virtual void onPostCreate(oaPolygon* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPolygon,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject*)ob;

    PyParamoaPolygon p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPolygon_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPolygon,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPolygon* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPolygon,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject*)ob;

    PyParamoaPolygon p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPolygon_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPolygon)\n"
"    Calls: virtual void onPreDestroy(oaPolygon* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPolygon,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject*)ob;

    PyParamoaPolygon p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPolygon_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPolygon,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPolygon* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPolygon,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject*)ob;

    PyParamoaPolygon p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPolygon_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPolygon_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPolygon_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPolygon_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPolygon_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPolygon_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPolygon_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPolygon_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPolygon_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaPolygon_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPolygon_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPolygon_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPolygon_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPolygon_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPolygon_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPolygon)\n"
"    Calls: void notifyPostCreateObservers(oaPolygon* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPolygon,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPolygon p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPolygon_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPolygon_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPolygon,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPolygon* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPolygon,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPolygon p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPolygon_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPolygon_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPolygon)\n"
"    Calls: void notifyPreDestroyObservers(oaPolygon* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPolygon,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPolygon p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPolygon_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPolygon_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPolygon_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPolygon,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPolygon* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPolygon,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPolygon p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPolygon_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPolygon_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPolygon_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPolygon_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPolygon_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPolygon_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPolygon_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPolygon_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPolygon_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPropDisplay_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[68];
    sprintf(buffer,"<oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPropDisplay_oaShapeModTypeEnum*) ((PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_FromoaStdObserver_oaPropDisplay_oaShapeModTypeEnum(oaStdObserver_oaPropDisplay_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostCreate(oaPropDisplay* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPropDisplay_FromoaPropDisplay(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostModify(oaPropDisplay* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPropDisplay_FromoaPropDisplay(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreDestroy(oaPropDisplay* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPropDisplay_FromoaPropDisplay(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreModify(oaPropDisplay* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPropDisplay_FromoaPropDisplay(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPropDisplay)\n"
"    Calls: virtual void onPostCreate(oaPropDisplay* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPropDisplay,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaPropDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPropDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPropDisplay,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPropDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPropDisplay,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaPropDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPropDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPropDisplay)\n"
"    Calls: virtual void onPreDestroy(oaPropDisplay* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPropDisplay,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaPropDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPropDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPropDisplay,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPropDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPropDisplay,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaPropDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPropDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPropDisplay_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPropDisplay_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPropDisplay)\n"
"    Calls: void notifyPostCreateObservers(oaPropDisplay* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPropDisplay,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPropDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPropDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPropDisplay,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPropDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPropDisplay,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPropDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPropDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPropDisplay)\n"
"    Calls: void notifyPreDestroyObservers(oaPropDisplay* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPropDisplay,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPropDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPropDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPropDisplay,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPropDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPropDisplay,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPropDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPropDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPropDisplay_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPropDisplay_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPropDisplay_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPropDisplay_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPropDisplay_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaProp_oaPropModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaProp_oaPropModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaProp_oaPropModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaProp_oaPropModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaProp_oaPropModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaProp_oaPropModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaProp_oaPropModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaProp_oaPropModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaProp_oaPropModTypeEnum_tp_dealloc(PyoaStdObserver_oaProp_oaPropModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaProp_oaPropModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum value;
    int convert_status=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[60];
    sprintf(buffer,"<oaStdObserver_oaProp_oaPropModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaProp_oaPropModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum v1;
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaProp_oaPropModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaProp_oaPropModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaProp_oaPropModTypeEnum*) ((PyoaStdObserver_oaProp_oaPropModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaProp_oaPropModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaProp_oaPropModTypeEnum_FromoaStdObserver_oaProp_oaPropModTypeEnum(oaStdObserver_oaProp_oaPropModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaProp_oaPropModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaProp_oaPropModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaProp_oaPropModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaProp_oaPropModTypeEnum::pyv_oaStdObserver_oaProp_oaPropModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaProp_oaPropModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaProp_oaPropModTypeEnum::pyv_oaStdObserver_oaProp_oaPropModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaProp_oaPropModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaProp_oaPropModTypeEnum::onPostCreate(oaProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaProp_FromoaProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaProp_oaPropModTypeEnum::onPostModify(oaProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaProp_FromoaProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaProp_oaPropModTypeEnum::onPreDestroy(oaProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaProp_FromoaProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaProp_oaPropModTypeEnum::onPreModify(oaProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaProp_FromoaProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaProp_oaPropModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaProp)\n"
"    Calls: virtual void onPostCreate(oaProp* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaProp,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaProp_oaPropModTypeEnumObject*)ob;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaProp_oaPropModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaProp,simple-oaPropModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaProp_oaPropModTypeEnumObject*)ob;

    PyParamoaProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaProp_oaPropModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaProp)\n"
"    Calls: virtual void onPreDestroy(oaProp* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaProp,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaProp_oaPropModTypeEnumObject*)ob;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaProp_oaPropModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaProp,simple-oaPropModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaProp_oaPropModTypeEnumObject*)ob;

    PyParamoaProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaProp_oaPropModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaProp_oaPropModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaProp_oaPropModTypeEnum data;
  int convert_status=PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaProp_oaPropModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaProp_oaPropModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaProp_oaPropModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaProp_oaPropModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaProp_oaPropModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaProp_oaPropModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaProp_oaPropModTypeEnum",
    sizeof(PyoaStdObserver_oaProp_oaPropModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaProp_oaPropModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaProp_oaPropModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaProp_oaPropModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaProp_oaPropModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaProp_oaPropModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaProp_oaPropModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaProp_oaPropModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaProp)\n"
"    Calls: void notifyPostCreateObservers(oaProp* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaProp,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaProp_oaPropModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaProp_oaPropModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaProp)\n"
"    Calls: void notifyPreDestroyObservers(oaProp* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaProp,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaProp_oaPropModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaProp_oaPropModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaProp_oaPropModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaProp_oaPropModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaProp_oaPropModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaProp_oaPropModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaProp_oaPropModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaProp_oaPropModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaProp_oaPropModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaProp_oaPropModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaProp_oaPropModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaProp_oaPropModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject* self = (PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPurpose_oaPurposeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum* p=new pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaPurpose_oaPurposeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum* p=new pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_dealloc(PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaPurpose_oaPurposeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaPurpose_oaPurposeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum v1;
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaPurpose_oaPurposeModTypeEnum*) ((PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_FromoaStdObserver_oaPurpose_oaPurposeModTypeEnum(oaStdObserver_oaPurpose_oaPurposeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject* self = (PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum::pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaPurpose_oaPurposeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum::pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaPurpose_oaPurposeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostCreate(oaPurpose* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPurpose_FromoaPurpose(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostModify(oaPurpose* p1,oaPurposeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPurpose_FromoaPurpose(p1));
    PyTuple_SetItem(args,1,PyoaPurposeModTypeEnum_FromoaPurposeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreDestroy(oaPurpose* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaPurpose_FromoaPurpose(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreModify(oaPurpose* p1,oaPurposeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaPurpose_FromoaPurpose(p1));
    PyTuple_SetItem(args,1,PyoaPurposeModTypeEnum_FromoaPurposeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: virtual void onPostCreate(oaPurpose* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaPurpose,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject* self=(PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject*)ob;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaPurpose,oaPurposeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaPurpose* object,oaPurposeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaPurpose,simple-oaPurposeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject* self=(PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject*)ob;

    PyParamoaPurpose p1;
    PyParamoaPurposeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaPurposeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: virtual void onPreDestroy(oaPurpose* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaPurpose,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject* self=(PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject*)ob;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaPurpose,oaPurposeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaPurpose* object,oaPurposeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaPurpose,simple-oaPurposeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject* self=(PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject*)ob;

    PyParamoaPurpose p1;
    PyParamoaPurposeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaPurposeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaPurpose_oaPurposeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaPurpose_oaPurposeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaPurpose_oaPurposeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaPurpose_oaPurposeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaPurpose_oaPurposeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaPurpose_oaPurposeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaPurpose_oaPurposeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaPurpose_oaPurposeModTypeEnum",
    sizeof(PyoaStdObserver_oaPurpose_oaPurposeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaPurpose_oaPurposeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaPurpose_oaPurposeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaPurpose_oaPurposeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaPurpose_oaPurposeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: void notifyPostCreateObservers(oaPurpose* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaPurpose,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPurpose_oaPurposeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaPurpose,oaPurposeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaPurpose* object,oaPurposeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaPurpose,simple-oaPurposeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPurpose p1;
    PyParamoaPurposeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaPurposeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPurpose_oaPurposeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: void notifyPreDestroyObservers(oaPurpose* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaPurpose,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPurpose_oaPurposeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaPurpose_oaPurposeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaPurpose,oaPurposeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaPurpose* object,oaPurposeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaPurpose,simple-oaPurposeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaPurpose p1;
    PyParamoaPurposeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaPurposeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaPurpose_oaPurposeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaPurpose_oaPurposeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaPurpose_oaPurposeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaPurpose_oaPurposeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaPurpose_oaPurposeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaPurpose_oaPurposeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaPurpose_oaPurposeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaPurpose_oaPurposeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaRect_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaRect_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaRect_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaRect_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRect_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaRect_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaRect_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRect_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaRect_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaRect_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaRect_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaRect_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaRect_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaRect_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaStdObserver_oaRect_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaRect_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaRect_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaRect_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaRect_oaShapeModTypeEnum*) ((PyoaStdObserver_oaRect_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaRect_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaRect_oaShapeModTypeEnum_FromoaStdObserver_oaRect_oaShapeModTypeEnum(oaStdObserver_oaRect_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaRect_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaRect_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaRect_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaRect_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRect_oaShapeModTypeEnum::pyv_oaStdObserver_oaRect_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaRect_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRect_oaShapeModTypeEnum::pyv_oaStdObserver_oaRect_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaRect_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRect_oaShapeModTypeEnum::onPostCreate(oaRect* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRect_FromoaRect(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRect_oaShapeModTypeEnum::onPostModify(oaRect* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRect_FromoaRect(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRect_oaShapeModTypeEnum::onPreDestroy(oaRect* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRect_FromoaRect(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRect_oaShapeModTypeEnum::onPreModify(oaRect* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRect_FromoaRect(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRect_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaRect)\n"
"    Calls: virtual void onPostCreate(oaRect* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaRect,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRect_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaRect_oaShapeModTypeEnumObject*)ob;

    PyParamoaRect p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRect_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRect_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaRect,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaRect* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaRect,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRect_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaRect_oaShapeModTypeEnumObject*)ob;

    PyParamoaRect p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRect_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRect_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaRect)\n"
"    Calls: virtual void onPreDestroy(oaRect* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaRect,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRect_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaRect_oaShapeModTypeEnumObject*)ob;

    PyParamoaRect p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRect_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRect_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaRect,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaRect* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaRect,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRect_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaRect_oaShapeModTypeEnumObject*)ob;

    PyParamoaRect p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRect_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRect_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaRect_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaRect_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaRect_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaRect_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaRect_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaRect_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaRect_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaRect_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaRect_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaRect_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaRect_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaRect_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaRect_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaRect_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaRect_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaRect_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaRect_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaRect_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaRect_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaRect)\n"
"    Calls: void notifyPostCreateObservers(oaRect* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaRect,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRect p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRect_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRect_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaRect,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaRect* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaRect,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRect p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRect_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRect_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaRect)\n"
"    Calls: void notifyPreDestroyObservers(oaRect* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaRect,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRect p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRect_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRect_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaRect_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaRect,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaRect* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaRect,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRect p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRect_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRect_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaRect_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaRect_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaRect_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaRect_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaRect_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaRect_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaRect_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaRect_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaRect_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaRect_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject* self = (PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaReducedModel_oaReducedModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum* p=new pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaReducedModel_oaReducedModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum* p=new pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_dealloc(PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaReducedModel_oaReducedModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum value;
    int convert_status=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[71];
    sprintf(buffer,"<oaStdObserver_oaReducedModel_oaReducedModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum v1;
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaReducedModel_oaReducedModTypeEnum*) ((PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_FromoaStdObserver_oaReducedModel_oaReducedModTypeEnum(oaStdObserver_oaReducedModel_oaReducedModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject* self = (PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum::pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaReducedModel_oaReducedModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum::pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaReducedModel_oaReducedModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostCreate(oaReducedModel* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaReducedModel_FromoaReducedModel(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostModify(oaReducedModel* p1,oaReducedModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaReducedModel_FromoaReducedModel(p1));
    PyTuple_SetItem(args,1,PyoaReducedModTypeEnum_FromoaReducedModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreDestroy(oaReducedModel* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaReducedModel_FromoaReducedModel(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreModify(oaReducedModel* p1,oaReducedModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaReducedModel_FromoaReducedModel(p1));
    PyTuple_SetItem(args,1,PyoaReducedModTypeEnum_FromoaReducedModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: virtual void onPostCreate(oaReducedModel* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaReducedModel,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject*)ob;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaReducedModel,oaReducedModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaReducedModel* object,oaReducedModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaReducedModel,simple-oaReducedModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject*)ob;

    PyParamoaReducedModel p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: virtual void onPreDestroy(oaReducedModel* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaReducedModel,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject*)ob;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaReducedModel,oaReducedModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaReducedModel* object,oaReducedModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaReducedModel,simple-oaReducedModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject* self=(PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject*)ob;

    PyParamoaReducedModel p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReducedModel_oaReducedModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum data;
  int convert_status=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaReducedModel_oaReducedModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaReducedModel_oaReducedModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaReducedModel_oaReducedModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaReducedModel_oaReducedModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaReducedModel_oaReducedModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaReducedModel_oaReducedModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaReducedModel_oaReducedModTypeEnum",
    sizeof(PyoaStdObserver_oaReducedModel_oaReducedModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaReducedModel_oaReducedModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaReducedModel_oaReducedModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaReducedModel_oaReducedModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaReducedModel_oaReducedModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: void notifyPostCreateObservers(oaReducedModel* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaReducedModel,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReducedModel_oaReducedModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaReducedModel,oaReducedModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaReducedModel* object,oaReducedModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaReducedModel,simple-oaReducedModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReducedModel p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReducedModel_oaReducedModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: void notifyPreDestroyObservers(oaReducedModel* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaReducedModel,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReducedModel_oaReducedModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaReducedModel_oaReducedModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaReducedModel,oaReducedModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaReducedModel* object,oaReducedModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaReducedModel,simple-oaReducedModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReducedModel p1;
    PyParamoaReducedModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaReducedModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReducedModel_oaReducedModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaReducedModel_oaReducedModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaReducedModel_oaReducedModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaReducedModel_oaReducedModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaReducedModel_oaReducedModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaReducedModel_oaReducedModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaReducedModel_oaReducedModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaReducedModel_oaReducedModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject* self = (PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaResistor_oaDeviceModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum* p=new pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaResistor_oaDeviceModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum* p=new pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_dealloc(PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaResistor_oaDeviceModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum value;
    int convert_status=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaResistor_oaDeviceModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum v1;
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaResistor_oaDeviceModTypeEnum*) ((PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaResistor_oaDeviceModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_FromoaStdObserver_oaResistor_oaDeviceModTypeEnum(oaStdObserver_oaResistor_oaDeviceModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject* self = (PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum::pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaResistor_oaDeviceModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum::pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaResistor_oaDeviceModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostCreate(oaResistor* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaResistor_FromoaResistor(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostModify(oaResistor* p1,oaDeviceModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaResistor_FromoaResistor(p1));
    PyTuple_SetItem(args,1,PyoaDeviceModTypeEnum_FromoaDeviceModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreDestroy(oaResistor* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaResistor_FromoaResistor(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreModify(oaResistor* p1,oaDeviceModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaResistor_FromoaResistor(p1));
    PyTuple_SetItem(args,1,PyoaDeviceModTypeEnum_FromoaDeviceModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaResistor)\n"
"    Calls: virtual void onPostCreate(oaResistor* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaResistor,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject*)ob;

    PyParamoaResistor p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaResistor_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaResistor,oaDeviceModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaResistor* object,oaDeviceModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaResistor,simple-oaDeviceModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject*)ob;

    PyParamoaResistor p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaResistor_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaResistor)\n"
"    Calls: virtual void onPreDestroy(oaResistor* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaResistor,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject*)ob;

    PyParamoaResistor p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaResistor_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaResistor,oaDeviceModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaResistor* object,oaDeviceModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaResistor,simple-oaDeviceModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject*)ob;

    PyParamoaResistor p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaResistor_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaResistor_oaDeviceModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum data;
  int convert_status=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaResistor_oaDeviceModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaResistor_oaDeviceModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaResistor_oaDeviceModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaResistor_oaDeviceModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaResistor_oaDeviceModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaResistor_oaDeviceModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaResistor_oaDeviceModTypeEnum",
    sizeof(PyoaStdObserver_oaResistor_oaDeviceModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaResistor_oaDeviceModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaResistor_oaDeviceModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaResistor_oaDeviceModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaResistor_oaDeviceModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaResistor_oaDeviceModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaResistor)\n"
"    Calls: void notifyPostCreateObservers(oaResistor* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaResistor,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaResistor p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaResistor_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaResistor_oaDeviceModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaResistor,oaDeviceModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaResistor* object,oaDeviceModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaResistor,simple-oaDeviceModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaResistor p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaResistor_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaResistor_oaDeviceModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaResistor)\n"
"    Calls: void notifyPreDestroyObservers(oaResistor* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaResistor,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaResistor p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaResistor_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaResistor_oaDeviceModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaResistor_oaDeviceModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaResistor,oaDeviceModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaResistor* object,oaDeviceModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaResistor,simple-oaDeviceModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaResistor p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaResistor_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaResistor_oaDeviceModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaResistor_oaDeviceModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaResistor_oaDeviceModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaResistor_oaDeviceModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaResistor_oaDeviceModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaResistor_oaDeviceModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaResistor_oaDeviceModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaResistor_oaDeviceModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject* self = (PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum* p=new pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum* p=new pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_dealloc(PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum value;
    int convert_status=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[72];
    sprintf(buffer,"<oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum v1;
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum*) ((PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_FromoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject* self = (PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostCreate(oaReticleRef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaReticleRef_FromoaReticleRef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostModify(oaReticleRef* p1,oaReticleRefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaReticleRef_FromoaReticleRef(p1));
    PyTuple_SetItem(args,1,PyoaReticleRefModTypeEnum_FromoaReticleRefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreDestroy(oaReticleRef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaReticleRef_FromoaReticleRef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreModify(oaReticleRef* p1,oaReticleRefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaReticleRef_FromoaReticleRef(p1));
    PyTuple_SetItem(args,1,PyoaReticleRefModTypeEnum_FromoaReticleRefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: virtual void onPostCreate(oaReticleRef* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaReticleRef,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject* self=(PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject*)ob;

    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaReticleRef,oaReticleRefModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaReticleRef* object,oaReticleRefModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaReticleRef,simple-oaReticleRefModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject* self=(PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject*)ob;

    PyParamoaReticleRef p1;
    PyParamoaReticleRefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaReticleRefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: virtual void onPreDestroy(oaReticleRef* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaReticleRef,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject* self=(PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject*)ob;

    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaReticleRef,oaReticleRefModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaReticleRef* object,oaReticleRefModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaReticleRef,simple-oaReticleRefModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject* self=(PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject*)ob;

    PyParamoaReticleRef p1;
    PyParamoaReticleRefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaReticleRefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum data;
  int convert_status=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum",
    sizeof(PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: void notifyPostCreateObservers(oaReticleRef* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaReticleRef,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaReticleRef,oaReticleRefModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaReticleRef* object,oaReticleRefModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaReticleRef,simple-oaReticleRefModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticleRef p1;
    PyParamoaReticleRefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaReticleRefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: void notifyPreDestroyObservers(oaReticleRef* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaReticleRef,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaReticleRef,oaReticleRefModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaReticleRef* object,oaReticleRefModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaReticleRef,simple-oaReticleRefModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticleRef p1;
    PyParamoaReticleRefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaReticleRefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaReticleRef_oaReticleRefModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaReticle_oaReticleModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject* self = (PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaReticle_oaReticleModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum* p=new pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaReticle_oaReticleModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum* p=new pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_dealloc(PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaReticle_oaReticleModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum value;
    int convert_status=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaReticle_oaReticleModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum v1;
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaReticle_oaReticleModTypeEnum*) ((PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaReticle_oaReticleModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaReticle_oaReticleModTypeEnum_FromoaStdObserver_oaReticle_oaReticleModTypeEnum(oaStdObserver_oaReticle_oaReticleModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject* self = (PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum::pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaReticle_oaReticleModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum::pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaReticle_oaReticleModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostCreate(oaReticle* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaReticle_FromoaReticle(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostModify(oaReticle* p1,oaReticleModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaReticle_FromoaReticle(p1));
    PyTuple_SetItem(args,1,PyoaReticleModTypeEnum_FromoaReticleModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreDestroy(oaReticle* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaReticle_FromoaReticle(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreModify(oaReticle* p1,oaReticleModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaReticle_FromoaReticle(p1));
    PyTuple_SetItem(args,1,PyoaReticleModTypeEnum_FromoaReticleModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaReticle)\n"
"    Calls: virtual void onPostCreate(oaReticle* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaReticle,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject* self=(PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject*)ob;

    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaReticle,oaReticleModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaReticle* object,oaReticleModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaReticle,simple-oaReticleModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject* self=(PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject*)ob;

    PyParamoaReticle p1;
    PyParamoaReticleModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaReticleModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticle_oaReticleModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaReticle)\n"
"    Calls: virtual void onPreDestroy(oaReticle* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaReticle,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject* self=(PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject*)ob;

    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaReticle,oaReticleModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaReticle* object,oaReticleModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaReticle,simple-oaReticleModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum data;
    int convert_status=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject* self=(PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject*)ob;

    PyParamoaReticle p1;
    PyParamoaReticleModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaReticleModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaReticle_oaReticleModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaReticle_oaReticleModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum data;
  int convert_status=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaReticle_oaReticleModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaReticle_oaReticleModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaReticle_oaReticleModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaReticle_oaReticleModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaReticle_oaReticleModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaReticle_oaReticleModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaReticle_oaReticleModTypeEnum",
    sizeof(PyoaStdObserver_oaReticle_oaReticleModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaReticle_oaReticleModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaReticle_oaReticleModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaReticle_oaReticleModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaReticle_oaReticleModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaReticle_oaReticleModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaReticle)\n"
"    Calls: void notifyPostCreateObservers(oaReticle* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaReticle,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticle_oaReticleModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaReticle,oaReticleModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaReticle* object,oaReticleModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaReticle,simple-oaReticleModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticle p1;
    PyParamoaReticleModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaReticleModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticle_oaReticleModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaReticle)\n"
"    Calls: void notifyPreDestroyObservers(oaReticle* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaReticle,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticle_oaReticleModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaReticle_oaReticleModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaReticle,oaReticleModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaReticle* object,oaReticleModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaReticle,simple-oaReticleModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaReticle p1;
    PyParamoaReticleModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaReticleModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaReticle_oaReticleModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaReticle_oaReticleModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaReticle_oaReticleModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaReticle_oaReticleModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaReticle_oaReticleModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaReticle_oaReticleModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaReticle_oaReticleModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaReticle_oaReticleModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaReticle_oaReticleModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaRoute_oaRouteModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject* self = (PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRoute_oaRouteModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum* p=new pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRoute_oaRouteModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum* p=new pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_dealloc(PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaRoute_oaRouteModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum value;
    int convert_status=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[62];
    sprintf(buffer,"<oaStdObserver_oaRoute_oaRouteModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum v1;
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaRoute_oaRouteModTypeEnum*) ((PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaRoute_oaRouteModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaRoute_oaRouteModTypeEnum_FromoaStdObserver_oaRoute_oaRouteModTypeEnum(oaStdObserver_oaRoute_oaRouteModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject* self = (PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum::pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaRoute_oaRouteModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum::pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaRoute_oaRouteModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostCreate(oaRoute* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRoute_FromoaRoute(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostModify(oaRoute* p1,oaRouteModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRoute_FromoaRoute(p1));
    PyTuple_SetItem(args,1,PyoaRouteModTypeEnum_FromoaRouteModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreDestroy(oaRoute* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRoute_FromoaRoute(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreModify(oaRoute* p1,oaRouteModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRoute_FromoaRoute(p1));
    PyTuple_SetItem(args,1,PyoaRouteModTypeEnum_FromoaRouteModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaRoute)\n"
"    Calls: virtual void onPostCreate(oaRoute* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaRoute,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject* self=(PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject*)ob;

    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaRoute,oaRouteModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaRoute* object,oaRouteModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaRoute,simple-oaRouteModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject* self=(PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject*)ob;

    PyParamoaRoute p1;
    PyParamoaRouteModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaRouteModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRoute_oaRouteModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaRoute)\n"
"    Calls: virtual void onPreDestroy(oaRoute* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaRoute,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject* self=(PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject*)ob;

    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaRoute,oaRouteModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaRoute* object,oaRouteModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaRoute,simple-oaRouteModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject* self=(PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject*)ob;

    PyParamoaRoute p1;
    PyParamoaRouteModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaRouteModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRoute_oaRouteModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaRoute_oaRouteModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum data;
  int convert_status=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaRoute_oaRouteModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaRoute_oaRouteModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaRoute_oaRouteModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaRoute_oaRouteModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaRoute_oaRouteModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaRoute_oaRouteModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaRoute_oaRouteModTypeEnum",
    sizeof(PyoaStdObserver_oaRoute_oaRouteModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaRoute_oaRouteModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaRoute_oaRouteModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaRoute_oaRouteModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaRoute_oaRouteModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaRoute_oaRouteModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaRoute)\n"
"    Calls: void notifyPostCreateObservers(oaRoute* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaRoute,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRoute_oaRouteModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaRoute,oaRouteModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaRoute* object,oaRouteModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaRoute,simple-oaRouteModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRoute p1;
    PyParamoaRouteModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaRouteModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRoute_oaRouteModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaRoute)\n"
"    Calls: void notifyPreDestroyObservers(oaRoute* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaRoute,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRoute_oaRouteModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaRoute_oaRouteModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaRoute,oaRouteModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaRoute* object,oaRouteModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaRoute,simple-oaRouteModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRoute p1;
    PyParamoaRouteModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaRouteModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRoute_oaRouteModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaRoute_oaRouteModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaRoute_oaRouteModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaRoute_oaRouteModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaRoute_oaRouteModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaRoute_oaRouteModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaRoute_oaRouteModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaRoute_oaRouteModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaRoute_oaRouteModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject* self = (PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum* p=new pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum* p=new pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_dealloc(PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum value;
    int convert_status=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[70];
    sprintf(buffer,"<oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum v1;
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum*) ((PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_FromoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject* self = (PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostCreate(oaRowHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRowHeader_FromoaRowHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostModify(oaRowHeader* p1,oaRowHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRowHeader_FromoaRowHeader(p1));
    PyTuple_SetItem(args,1,PyoaRowHeaderModTypeEnum_FromoaRowHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreDestroy(oaRowHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRowHeader_FromoaRowHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreModify(oaRowHeader* p1,oaRowHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRowHeader_FromoaRowHeader(p1));
    PyTuple_SetItem(args,1,PyoaRowHeaderModTypeEnum_FromoaRowHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: virtual void onPostCreate(oaRowHeader* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaRowHeader,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject* self=(PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject*)ob;

    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaRowHeader,oaRowHeaderModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaRowHeader* object,oaRowHeaderModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaRowHeader,simple-oaRowHeaderModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject* self=(PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject*)ob;

    PyParamoaRowHeader p1;
    PyParamoaRowHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaRowHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: virtual void onPreDestroy(oaRowHeader* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaRowHeader,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject* self=(PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject*)ob;

    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaRowHeader,oaRowHeaderModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaRowHeader* object,oaRowHeaderModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaRowHeader,simple-oaRowHeaderModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject* self=(PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject*)ob;

    PyParamoaRowHeader p1;
    PyParamoaRowHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaRowHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum data;
  int convert_status=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum",
    sizeof(PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: void notifyPostCreateObservers(oaRowHeader* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaRowHeader,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaRowHeader,oaRowHeaderModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaRowHeader* object,oaRowHeaderModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaRowHeader,simple-oaRowHeaderModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRowHeader p1;
    PyParamoaRowHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaRowHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: void notifyPreDestroyObservers(oaRowHeader* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaRowHeader,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaRowHeader,oaRowHeaderModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaRowHeader* object,oaRowHeaderModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaRowHeader,simple-oaRowHeaderModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRowHeader p1;
    PyParamoaRowHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaRowHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaRowHeader_oaRowHeaderModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaRow_oaRowModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaRow_oaRowModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaRow_oaRowModTypeEnumObject* self = (PyoaStdObserver_oaRow_oaRowModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRow_oaRowModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaRow_oaRowModTypeEnum* p=new pyv_oaStdObserver_oaRow_oaRowModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaRow_oaRowModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaRow_oaRowModTypeEnum* p=new pyv_oaStdObserver_oaRow_oaRowModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaRow_oaRowModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaRow_oaRowModTypeEnum_tp_dealloc(PyoaStdObserver_oaRow_oaRowModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaRow_oaRowModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum value;
    int convert_status=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaStdObserver_oaRow_oaRowModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaRow_oaRowModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum v1;
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaRow_oaRowModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaRow_oaRowModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaRow_oaRowModTypeEnum*) ((PyoaStdObserver_oaRow_oaRowModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaRow_oaRowModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaRow_oaRowModTypeEnum_FromoaStdObserver_oaRow_oaRowModTypeEnum(oaStdObserver_oaRow_oaRowModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaRow_oaRowModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaRow_oaRowModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaRow_oaRowModTypeEnumObject* self = (PyoaStdObserver_oaRow_oaRowModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRow_oaRowModTypeEnum::pyv_oaStdObserver_oaRow_oaRowModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaRow_oaRowModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaRow_oaRowModTypeEnum::pyv_oaStdObserver_oaRow_oaRowModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaRow_oaRowModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRow_oaRowModTypeEnum::onPostCreate(oaRow* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRow_FromoaRow(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRow_oaRowModTypeEnum::onPostModify(oaRow* p1,oaRowModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRow_FromoaRow(p1));
    PyTuple_SetItem(args,1,PyoaRowModTypeEnum_FromoaRowModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRow_oaRowModTypeEnum::onPreDestroy(oaRow* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRow_FromoaRow(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaRow_oaRowModTypeEnum::onPreModify(oaRow* p1,oaRowModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRow_FromoaRow(p1));
    PyTuple_SetItem(args,1,PyoaRowModTypeEnum_FromoaRowModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaRow_oaRowModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaRow)\n"
"    Calls: virtual void onPostCreate(oaRow* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaRow,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRow_oaRowModTypeEnumObject* self=(PyoaStdObserver_oaRow_oaRowModTypeEnumObject*)ob;

    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRow_oaRowModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaRow,oaRowModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaRow* object,oaRowModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaRow,simple-oaRowModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRow_oaRowModTypeEnumObject* self=(PyoaStdObserver_oaRow_oaRowModTypeEnumObject*)ob;

    PyParamoaRow p1;
    PyParamoaRowModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaRowModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRow_oaRowModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaRow)\n"
"    Calls: virtual void onPreDestroy(oaRow* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaRow,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRow_oaRowModTypeEnumObject* self=(PyoaStdObserver_oaRow_oaRowModTypeEnumObject*)ob;

    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRow_oaRowModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaRow,oaRowModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaRow* object,oaRowModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaRow,simple-oaRowModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum data;
    int convert_status=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaRow_oaRowModTypeEnumObject* self=(PyoaStdObserver_oaRow_oaRowModTypeEnumObject*)ob;

    PyParamoaRow p1;
    PyParamoaRowModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaRowModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaRow_oaRowModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaRow_oaRowModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaRow_oaRowModTypeEnum data;
  int convert_status=PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaRow_oaRowModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaRow_oaRowModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaRow_oaRowModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaRow_oaRowModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaRow_oaRowModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaRow_oaRowModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaRow_oaRowModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaRow_oaRowModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaRow_oaRowModTypeEnum",
    sizeof(PyoaStdObserver_oaRow_oaRowModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaRow_oaRowModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaRow_oaRowModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaRow_oaRowModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaRow_oaRowModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaRow_oaRowModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaRow_oaRowModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaRow_oaRowModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaRow)\n"
"    Calls: void notifyPostCreateObservers(oaRow* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaRow,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRow_oaRowModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaRow,oaRowModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaRow* object,oaRowModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaRow,simple-oaRowModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRow p1;
    PyParamoaRowModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaRowModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRow_oaRowModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaRow)\n"
"    Calls: void notifyPreDestroyObservers(oaRow* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaRow,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRow_oaRowModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaRow_oaRowModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaRow,oaRowModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaRow* object,oaRowModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaRow,simple-oaRowModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaRow p1;
    PyParamoaRowModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaRowModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaRow_oaRowModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaRow_oaRowModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaRow_oaRowModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaRow_oaRowModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaRow_oaRowModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaRow_oaRowModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaRow_oaRowModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaRow_oaRowModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaRow_oaRowModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaRow_oaRowModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaRow_oaRowModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject* self = (PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarInst_oaInstModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum* p=new pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarInst_oaInstModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum* p=new pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_dealloc(PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaScalarInst_oaInstModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum value;
    int convert_status=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaScalarInst_oaInstModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum v1;
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaScalarInst_oaInstModTypeEnum*) ((PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaScalarInst_oaInstModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_FromoaStdObserver_oaScalarInst_oaInstModTypeEnum(oaStdObserver_oaScalarInst_oaInstModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject* self = (PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum::pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaScalarInst_oaInstModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum::pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaScalarInst_oaInstModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostCreate(oaScalarInst* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarInst_FromoaScalarInst(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostModify(oaScalarInst* p1,oaInstModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarInst_FromoaScalarInst(p1));
    PyTuple_SetItem(args,1,PyoaInstModTypeEnum_FromoaInstModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreDestroy(oaScalarInst* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarInst_FromoaScalarInst(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreModify(oaScalarInst* p1,oaInstModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarInst_FromoaScalarInst(p1));
    PyTuple_SetItem(args,1,PyoaInstModTypeEnum_FromoaInstModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaScalarInst)\n"
"    Calls: virtual void onPostCreate(oaScalarInst* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaScalarInst,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject* self=(PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject*)ob;

    PyParamoaScalarInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaScalarInst,oaInstModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaScalarInst* object,oaInstModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaScalarInst,simple-oaInstModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject* self=(PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject*)ob;

    PyParamoaScalarInst p1;
    PyParamoaInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarInst_Convert,&p1,
          &PyoaInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaScalarInst)\n"
"    Calls: virtual void onPreDestroy(oaScalarInst* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaScalarInst,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject* self=(PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject*)ob;

    PyParamoaScalarInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaScalarInst,oaInstModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaScalarInst* object,oaInstModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaScalarInst,simple-oaInstModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject* self=(PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject*)ob;

    PyParamoaScalarInst p1;
    PyParamoaInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarInst_Convert,&p1,
          &PyoaInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarInst_oaInstModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum data;
  int convert_status=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaScalarInst_oaInstModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaScalarInst_oaInstModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaScalarInst_oaInstModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaScalarInst_oaInstModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaScalarInst_oaInstModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaScalarInst_oaInstModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaScalarInst_oaInstModTypeEnum",
    sizeof(PyoaStdObserver_oaScalarInst_oaInstModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaScalarInst_oaInstModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaScalarInst_oaInstModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaScalarInst_oaInstModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaScalarInst_oaInstModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaScalarInst_oaInstModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaScalarInst)\n"
"    Calls: void notifyPostCreateObservers(oaScalarInst* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaScalarInst,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarInst_oaInstModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaScalarInst,oaInstModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaScalarInst* object,oaInstModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaScalarInst,simple-oaInstModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarInst p1;
    PyParamoaInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarInst_Convert,&p1,
          &PyoaInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarInst_oaInstModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaScalarInst)\n"
"    Calls: void notifyPreDestroyObservers(oaScalarInst* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaScalarInst,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarInst_oaInstModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarInst_oaInstModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaScalarInst,oaInstModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaScalarInst* object,oaInstModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaScalarInst,simple-oaInstModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarInst p1;
    PyParamoaInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarInst_Convert,&p1,
          &PyoaInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarInst_oaInstModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaScalarInst_oaInstModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaScalarInst_oaInstModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaScalarInst_oaInstModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaScalarInst_oaInstModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaScalarInst_oaInstModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaScalarInst_oaInstModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaScalarInst_oaInstModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject* self = (PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarNet_oaNetModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum* p=new pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarNet_oaNetModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum* p=new pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_dealloc(PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaScalarNet_oaNetModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum value;
    int convert_status=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[64];
    sprintf(buffer,"<oaStdObserver_oaScalarNet_oaNetModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum v1;
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaScalarNet_oaNetModTypeEnum*) ((PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaScalarNet_oaNetModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_FromoaStdObserver_oaScalarNet_oaNetModTypeEnum(oaStdObserver_oaScalarNet_oaNetModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject* self = (PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum::pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaScalarNet_oaNetModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum::pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaScalarNet_oaNetModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostCreate(oaScalarNet* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarNet_FromoaScalarNet(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostModify(oaScalarNet* p1,oaNetModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarNet_FromoaScalarNet(p1));
    PyTuple_SetItem(args,1,PyoaNetModTypeEnum_FromoaNetModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreDestroy(oaScalarNet* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarNet_FromoaScalarNet(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreModify(oaScalarNet* p1,oaNetModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarNet_FromoaScalarNet(p1));
    PyTuple_SetItem(args,1,PyoaNetModTypeEnum_FromoaNetModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaScalarNet)\n"
"    Calls: virtual void onPostCreate(oaScalarNet* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaScalarNet,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject* self=(PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject*)ob;

    PyParamoaScalarNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaScalarNet,oaNetModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaScalarNet* object,oaNetModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaScalarNet,simple-oaNetModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject* self=(PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject*)ob;

    PyParamoaScalarNet p1;
    PyParamoaNetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarNet_Convert,&p1,
          &PyoaNetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaScalarNet)\n"
"    Calls: virtual void onPreDestroy(oaScalarNet* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaScalarNet,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject* self=(PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject*)ob;

    PyParamoaScalarNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaScalarNet,oaNetModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaScalarNet* object,oaNetModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaScalarNet,simple-oaNetModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject* self=(PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject*)ob;

    PyParamoaScalarNet p1;
    PyParamoaNetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarNet_Convert,&p1,
          &PyoaNetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarNet_oaNetModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum data;
  int convert_status=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaScalarNet_oaNetModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaScalarNet_oaNetModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaScalarNet_oaNetModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaScalarNet_oaNetModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaScalarNet_oaNetModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaScalarNet_oaNetModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaScalarNet_oaNetModTypeEnum",
    sizeof(PyoaStdObserver_oaScalarNet_oaNetModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaScalarNet_oaNetModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaScalarNet_oaNetModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaScalarNet_oaNetModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaScalarNet_oaNetModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaScalarNet_oaNetModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaScalarNet)\n"
"    Calls: void notifyPostCreateObservers(oaScalarNet* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaScalarNet,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarNet_oaNetModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaScalarNet,oaNetModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaScalarNet* object,oaNetModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaScalarNet,simple-oaNetModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarNet p1;
    PyParamoaNetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarNet_Convert,&p1,
          &PyoaNetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarNet_oaNetModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaScalarNet)\n"
"    Calls: void notifyPreDestroyObservers(oaScalarNet* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaScalarNet,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarNet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarNet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarNet_oaNetModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarNet_oaNetModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaScalarNet,oaNetModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaScalarNet* object,oaNetModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaScalarNet,simple-oaNetModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarNet p1;
    PyParamoaNetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarNet_Convert,&p1,
          &PyoaNetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarNet_oaNetModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaScalarNet_oaNetModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaScalarNet_oaNetModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaScalarNet_oaNetModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaScalarNet_oaNetModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaScalarNet_oaNetModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaScalarNet_oaNetModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaScalarNet_oaNetModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject* self = (PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum* p=new pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum* p=new pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_dealloc(PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum value;
    int convert_status=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[72];
    sprintf(buffer,"<oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum v1;
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum*) ((PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_FromoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject* self = (PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostCreate(oaScalarSiteDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarSiteDef_FromoaScalarSiteDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostModify(oaScalarSiteDef* p1,oaSiteDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarSiteDef_FromoaScalarSiteDef(p1));
    PyTuple_SetItem(args,1,PyoaSiteDefModTypeEnum_FromoaSiteDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreDestroy(oaScalarSiteDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarSiteDef_FromoaScalarSiteDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreModify(oaScalarSiteDef* p1,oaSiteDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarSiteDef_FromoaScalarSiteDef(p1));
    PyTuple_SetItem(args,1,PyoaSiteDefModTypeEnum_FromoaSiteDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaScalarSiteDef)\n"
"    Calls: virtual void onPostCreate(oaScalarSiteDef* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaScalarSiteDef,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaScalarSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaScalarSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaScalarSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaScalarSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaScalarSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaScalarSiteDef)\n"
"    Calls: virtual void onPreDestroy(oaScalarSiteDef* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaScalarSiteDef,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaScalarSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaScalarSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaScalarSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaScalarSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaScalarSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum data;
  int convert_status=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum",
    sizeof(PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaScalarSiteDef)\n"
"    Calls: void notifyPostCreateObservers(oaScalarSiteDef* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaScalarSiteDef,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaScalarSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaScalarSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaScalarSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaScalarSiteDef)\n"
"    Calls: void notifyPreDestroyObservers(oaScalarSiteDef* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaScalarSiteDef,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaScalarSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaScalarSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaScalarSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaScalarSiteDef_oaSiteDefModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject* self = (PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarTerm_oaTermModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum* p=new pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScalarTerm_oaTermModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum* p=new pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_dealloc(PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaScalarTerm_oaTermModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum value;
    int convert_status=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaScalarTerm_oaTermModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum v1;
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaScalarTerm_oaTermModTypeEnum*) ((PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_FromoaStdObserver_oaScalarTerm_oaTermModTypeEnum(oaStdObserver_oaScalarTerm_oaTermModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject* self = (PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum::pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaScalarTerm_oaTermModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum::pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaScalarTerm_oaTermModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostCreate(oaScalarTerm* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarTerm_FromoaScalarTerm(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostModify(oaScalarTerm* p1,oaTermModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarTerm_FromoaScalarTerm(p1));
    PyTuple_SetItem(args,1,PyoaTermModTypeEnum_FromoaTermModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreDestroy(oaScalarTerm* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScalarTerm_FromoaScalarTerm(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreModify(oaScalarTerm* p1,oaTermModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScalarTerm_FromoaScalarTerm(p1));
    PyTuple_SetItem(args,1,PyoaTermModTypeEnum_FromoaTermModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaScalarTerm)\n"
"    Calls: virtual void onPostCreate(oaScalarTerm* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaScalarTerm,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaScalarTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaScalarTerm,oaTermModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaScalarTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaScalarTerm,simple-oaTermModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaScalarTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaScalarTerm)\n"
"    Calls: virtual void onPreDestroy(oaScalarTerm* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaScalarTerm,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaScalarTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaScalarTerm,oaTermModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaScalarTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaScalarTerm,simple-oaTermModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaScalarTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScalarTerm_oaTermModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum data;
  int convert_status=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaScalarTerm_oaTermModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaScalarTerm_oaTermModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaScalarTerm_oaTermModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaScalarTerm_oaTermModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaScalarTerm_oaTermModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaScalarTerm_oaTermModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaScalarTerm_oaTermModTypeEnum",
    sizeof(PyoaStdObserver_oaScalarTerm_oaTermModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaScalarTerm_oaTermModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaScalarTerm_oaTermModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaScalarTerm_oaTermModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaScalarTerm_oaTermModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaScalarTerm)\n"
"    Calls: void notifyPostCreateObservers(oaScalarTerm* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaScalarTerm,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarTerm_oaTermModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaScalarTerm,oaTermModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaScalarTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaScalarTerm,simple-oaTermModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarTerm_oaTermModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaScalarTerm)\n"
"    Calls: void notifyPreDestroyObservers(oaScalarTerm* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaScalarTerm,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScalarTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarTerm_oaTermModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaScalarTerm_oaTermModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaScalarTerm,oaTermModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaScalarTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaScalarTerm,simple-oaTermModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScalarTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScalarTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScalarTerm_oaTermModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaScalarTerm_oaTermModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaScalarTerm_oaTermModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaScalarTerm_oaTermModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaScalarTerm_oaTermModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaScalarTerm_oaTermModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaScalarTerm_oaTermModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaScalarTerm_oaTermModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject* self = (PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum* p=new pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum* p=new pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_dealloc(PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum value;
    int convert_status=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[78];
    sprintf(buffer,"<oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum v1;
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum*) ((PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_FromoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject* self = (PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostCreate(oaScanChainInst* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScanChainInst_FromoaScanChainInst(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostModify(oaScanChainInst* p1,oaScanChainInstModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScanChainInst_FromoaScanChainInst(p1));
    PyTuple_SetItem(args,1,PyoaScanChainInstModTypeEnum_FromoaScanChainInstModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreDestroy(oaScanChainInst* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScanChainInst_FromoaScanChainInst(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreModify(oaScanChainInst* p1,oaScanChainInstModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScanChainInst_FromoaScanChainInst(p1));
    PyTuple_SetItem(args,1,PyoaScanChainInstModTypeEnum_FromoaScanChainInstModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: virtual void onPostCreate(oaScanChainInst* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaScanChainInst,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject* self=(PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject*)ob;

    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaScanChainInst,oaScanChainInstModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaScanChainInst* object,oaScanChainInstModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaScanChainInst,simple-oaScanChainInstModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject* self=(PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject*)ob;

    PyParamoaScanChainInst p1;
    PyParamoaScanChainInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaScanChainInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: virtual void onPreDestroy(oaScanChainInst* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaScanChainInst,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject* self=(PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject*)ob;

    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaScanChainInst,oaScanChainInstModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaScanChainInst* object,oaScanChainInstModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaScanChainInst,simple-oaScanChainInstModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject* self=(PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject*)ob;

    PyParamoaScanChainInst p1;
    PyParamoaScanChainInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaScanChainInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum data;
  int convert_status=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum",
    sizeof(PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: void notifyPostCreateObservers(oaScanChainInst* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaScanChainInst,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaScanChainInst,oaScanChainInstModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaScanChainInst* object,oaScanChainInstModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaScanChainInst,simple-oaScanChainInstModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainInst p1;
    PyParamoaScanChainInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaScanChainInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: void notifyPreDestroyObservers(oaScanChainInst* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaScanChainInst,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaScanChainInst,oaScanChainInstModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaScanChainInst* object,oaScanChainInstModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaScanChainInst,simple-oaScanChainInstModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainInst p1;
    PyParamoaScanChainInstModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaScanChainInstModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaScanChainInst_oaScanChainInstModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject* self = (PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum* p=new pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum* p=new pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_dealloc(PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum value;
    int convert_status=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[76];
    sprintf(buffer,"<oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum v1;
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum*) ((PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_FromoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject* self = (PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostCreate(oaScanChainSet* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScanChainSet_FromoaScanChainSet(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostModify(oaScanChainSet* p1,oaScanChainSetModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScanChainSet_FromoaScanChainSet(p1));
    PyTuple_SetItem(args,1,PyoaScanChainSetModTypeEnum_FromoaScanChainSetModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreDestroy(oaScanChainSet* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScanChainSet_FromoaScanChainSet(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreModify(oaScanChainSet* p1,oaScanChainSetModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScanChainSet_FromoaScanChainSet(p1));
    PyTuple_SetItem(args,1,PyoaScanChainSetModTypeEnum_FromoaScanChainSetModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: virtual void onPostCreate(oaScanChainSet* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaScanChainSet,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject* self=(PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject*)ob;

    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaScanChainSet,oaScanChainSetModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaScanChainSet* object,oaScanChainSetModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaScanChainSet,simple-oaScanChainSetModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject* self=(PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject*)ob;

    PyParamoaScanChainSet p1;
    PyParamoaScanChainSetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaScanChainSetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: virtual void onPreDestroy(oaScanChainSet* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaScanChainSet,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject* self=(PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject*)ob;

    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaScanChainSet,oaScanChainSetModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaScanChainSet* object,oaScanChainSetModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaScanChainSet,simple-oaScanChainSetModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject* self=(PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject*)ob;

    PyParamoaScanChainSet p1;
    PyParamoaScanChainSetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaScanChainSetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum data;
  int convert_status=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum",
    sizeof(PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: void notifyPostCreateObservers(oaScanChainSet* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaScanChainSet,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaScanChainSet,oaScanChainSetModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaScanChainSet* object,oaScanChainSetModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaScanChainSet,simple-oaScanChainSetModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainSet p1;
    PyParamoaScanChainSetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaScanChainSetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: void notifyPreDestroyObservers(oaScanChainSet* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaScanChainSet,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaScanChainSet,oaScanChainSetModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaScanChainSet* object,oaScanChainSetModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaScanChainSet,simple-oaScanChainSetModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChainSet p1;
    PyParamoaScanChainSetModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaScanChainSetModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaScanChainSet_oaScanChainSetModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject* self = (PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScanChain_oaScanChainModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum* p=new pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaScanChain_oaScanChainModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum* p=new pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_dealloc(PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaScanChain_oaScanChainModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum value;
    int convert_status=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[70];
    sprintf(buffer,"<oaStdObserver_oaScanChain_oaScanChainModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum v1;
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaScanChain_oaScanChainModTypeEnum*) ((PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_FromoaStdObserver_oaScanChain_oaScanChainModTypeEnum(oaStdObserver_oaScanChain_oaScanChainModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject* self = (PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum::pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaScanChain_oaScanChainModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum::pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaScanChain_oaScanChainModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostCreate(oaScanChain* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScanChain_FromoaScanChain(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostModify(oaScanChain* p1,oaScanChainModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScanChain_FromoaScanChain(p1));
    PyTuple_SetItem(args,1,PyoaScanChainModTypeEnum_FromoaScanChainModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreDestroy(oaScanChain* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaScanChain_FromoaScanChain(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreModify(oaScanChain* p1,oaScanChainModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaScanChain_FromoaScanChain(p1));
    PyTuple_SetItem(args,1,PyoaScanChainModTypeEnum_FromoaScanChainModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: virtual void onPostCreate(oaScanChain* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaScanChain,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject* self=(PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject*)ob;

    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaScanChain,oaScanChainModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaScanChain* object,oaScanChainModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaScanChain,simple-oaScanChainModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject* self=(PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject*)ob;

    PyParamoaScanChain p1;
    PyParamoaScanChainModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaScanChainModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: virtual void onPreDestroy(oaScanChain* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaScanChain,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject* self=(PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject*)ob;

    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaScanChain,oaScanChainModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaScanChain* object,oaScanChainModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaScanChain,simple-oaScanChainModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum data;
    int convert_status=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject* self=(PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject*)ob;

    PyParamoaScanChain p1;
    PyParamoaScanChainModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaScanChainModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaScanChain_oaScanChainModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum data;
  int convert_status=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaScanChain_oaScanChainModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaScanChain_oaScanChainModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaScanChain_oaScanChainModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaScanChain_oaScanChainModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaScanChain_oaScanChainModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaScanChain_oaScanChainModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaScanChain_oaScanChainModTypeEnum",
    sizeof(PyoaStdObserver_oaScanChain_oaScanChainModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaScanChain_oaScanChainModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaScanChain_oaScanChainModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaScanChain_oaScanChainModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaScanChain_oaScanChainModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: void notifyPostCreateObservers(oaScanChain* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaScanChain,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChain_oaScanChainModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaScanChain,oaScanChainModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaScanChain* object,oaScanChainModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaScanChain,simple-oaScanChainModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChain p1;
    PyParamoaScanChainModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaScanChainModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChain_oaScanChainModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: void notifyPreDestroyObservers(oaScanChain* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaScanChain,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChain_oaScanChainModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaScanChain_oaScanChainModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaScanChain,oaScanChainModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaScanChain* object,oaScanChainModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaScanChain,simple-oaScanChainModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaScanChain p1;
    PyParamoaScanChainModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaScanChainModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaScanChain_oaScanChainModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaScanChain_oaScanChainModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaScanChain_oaScanChainModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaScanChain_oaScanChainModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaScanChain_oaScanChainModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaScanChain_oaScanChainModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaScanChain_oaScanChainModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaScanChain_oaScanChainModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject* self = (PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum* p=new pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum* p=new pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_dealloc(PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum value;
    int convert_status=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum v1;
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum*) ((PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_FromoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject* self = (PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostCreate(oaSeriesRL* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSeriesRL_FromoaSeriesRL(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostModify(oaSeriesRL* p1,oaDeviceModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSeriesRL_FromoaSeriesRL(p1));
    PyTuple_SetItem(args,1,PyoaDeviceModTypeEnum_FromoaDeviceModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreDestroy(oaSeriesRL* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSeriesRL_FromoaSeriesRL(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreModify(oaSeriesRL* p1,oaDeviceModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSeriesRL_FromoaSeriesRL(p1));
    PyTuple_SetItem(args,1,PyoaDeviceModTypeEnum_FromoaDeviceModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaSeriesRL)\n"
"    Calls: virtual void onPostCreate(oaSeriesRL* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaSeriesRL,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject*)ob;

    PyParamoaSeriesRL p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSeriesRL_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaSeriesRL,oaDeviceModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaSeriesRL* object,oaDeviceModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaSeriesRL,simple-oaDeviceModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject*)ob;

    PyParamoaSeriesRL p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSeriesRL_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaSeriesRL)\n"
"    Calls: virtual void onPreDestroy(oaSeriesRL* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaSeriesRL,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject*)ob;

    PyParamoaSeriesRL p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSeriesRL_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaSeriesRL,oaDeviceModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaSeriesRL* object,oaDeviceModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaSeriesRL,simple-oaDeviceModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject*)ob;

    PyParamoaSeriesRL p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSeriesRL_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum data;
  int convert_status=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum",
    sizeof(PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaSeriesRL)\n"
"    Calls: void notifyPostCreateObservers(oaSeriesRL* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaSeriesRL,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSeriesRL p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSeriesRL_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaSeriesRL,oaDeviceModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaSeriesRL* object,oaDeviceModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaSeriesRL,simple-oaDeviceModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSeriesRL p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSeriesRL_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaSeriesRL)\n"
"    Calls: void notifyPreDestroyObservers(oaSeriesRL* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaSeriesRL,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSeriesRL p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSeriesRL_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaSeriesRL,oaDeviceModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaSeriesRL* object,oaDeviceModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaSeriesRL,simple-oaDeviceModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSeriesRL p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSeriesRL_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaSeriesRL_oaDeviceModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaShape_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaShape_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaShape_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaShape_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaShape_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaShape_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaShape_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaShape_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaShape_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaShape_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaShape_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaShape_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaShape_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaShape_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[62];
    sprintf(buffer,"<oaStdObserver_oaShape_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaShape_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaShape_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaShape_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaShape_oaShapeModTypeEnum*) ((PyoaStdObserver_oaShape_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaShape_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaShape_oaShapeModTypeEnum_FromoaStdObserver_oaShape_oaShapeModTypeEnum(oaStdObserver_oaShape_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaShape_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaShape_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaShape_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaShape_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaShape_oaShapeModTypeEnum::pyv_oaStdObserver_oaShape_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaShape_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaShape_oaShapeModTypeEnum::pyv_oaStdObserver_oaShape_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaShape_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaShape_oaShapeModTypeEnum::onPostCreate(oaShape* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaShape_FromoaShape(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaShape_oaShapeModTypeEnum::onPostModify(oaShape* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaShape_FromoaShape(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaShape_oaShapeModTypeEnum::onPreDestroy(oaShape* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaShape_FromoaShape(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaShape_oaShapeModTypeEnum::onPreModify(oaShape* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaShape_FromoaShape(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaShape_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaShape)\n"
"    Calls: virtual void onPostCreate(oaShape* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaShape,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaShape_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaShape_oaShapeModTypeEnumObject*)ob;

    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaShape_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaShape,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaShape* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaShape,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaShape_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaShape_oaShapeModTypeEnumObject*)ob;

    PyParamoaShape p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaShape_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaShape)\n"
"    Calls: virtual void onPreDestroy(oaShape* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaShape,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaShape_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaShape_oaShapeModTypeEnumObject*)ob;

    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaShape_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaShape,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaShape* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaShape,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaShape_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaShape_oaShapeModTypeEnumObject*)ob;

    PyParamoaShape p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaShape_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaShape_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaShape_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaShape_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaShape_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaShape_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaShape_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaShape_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaShape_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaShape_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaShape_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaShape_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaShape_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaShape_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaShape_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaShape_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaShape_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaShape_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaShape_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaShape_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaShape)\n"
"    Calls: void notifyPostCreateObservers(oaShape* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaShape,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaShape_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaShape,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaShape* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaShape,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaShape p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaShape_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaShape)\n"
"    Calls: void notifyPreDestroyObservers(oaShape* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaShape,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaShape_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaShape_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaShape,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaShape* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaShape,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaShape p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaShape_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaShape_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaShape_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaShape_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaShape_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaShape_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaShape_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaShape_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaShape_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaShape_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaShape_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject* self = (PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum* p=new pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum* p=new pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_dealloc(PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum value;
    int convert_status=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[78];
    sprintf(buffer,"<oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum v1;
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum*) ((PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_FromoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject* self = (PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostCreate(oaSimpleConstraint* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSimpleConstraint_FromoaSimpleConstraint(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostModify(oaSimpleConstraint* p1,oaConstraintModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSimpleConstraint_FromoaSimpleConstraint(p1));
    PyTuple_SetItem(args,1,PyoaConstraintModTypeEnum_FromoaConstraintModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreDestroy(oaSimpleConstraint* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSimpleConstraint_FromoaSimpleConstraint(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreModify(oaSimpleConstraint* p1,oaConstraintModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSimpleConstraint_FromoaSimpleConstraint(p1));
    PyTuple_SetItem(args,1,PyoaConstraintModTypeEnum_FromoaConstraintModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaSimpleConstraint)\n"
"    Calls: virtual void onPostCreate(oaSimpleConstraint* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaSimpleConstraint,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject* self=(PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject*)ob;

    PyParamoaSimpleConstraint p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSimpleConstraint_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaSimpleConstraint,oaConstraintModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaSimpleConstraint* object,oaConstraintModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaSimpleConstraint,simple-oaConstraintModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject* self=(PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject*)ob;

    PyParamoaSimpleConstraint p1;
    PyParamoaConstraintModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSimpleConstraint_Convert,&p1,
          &PyoaConstraintModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaSimpleConstraint)\n"
"    Calls: virtual void onPreDestroy(oaSimpleConstraint* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaSimpleConstraint,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject* self=(PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject*)ob;

    PyParamoaSimpleConstraint p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSimpleConstraint_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaSimpleConstraint,oaConstraintModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaSimpleConstraint* object,oaConstraintModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaSimpleConstraint,simple-oaConstraintModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject* self=(PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject*)ob;

    PyParamoaSimpleConstraint p1;
    PyParamoaConstraintModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSimpleConstraint_Convert,&p1,
          &PyoaConstraintModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum data;
  int convert_status=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum",
    sizeof(PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaSimpleConstraint)\n"
"    Calls: void notifyPostCreateObservers(oaSimpleConstraint* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaSimpleConstraint,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSimpleConstraint p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSimpleConstraint_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaSimpleConstraint,oaConstraintModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaSimpleConstraint* object,oaConstraintModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaSimpleConstraint,simple-oaConstraintModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSimpleConstraint p1;
    PyParamoaConstraintModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSimpleConstraint_Convert,&p1,
          &PyoaConstraintModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaSimpleConstraint)\n"
"    Calls: void notifyPreDestroyObservers(oaSimpleConstraint* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaSimpleConstraint,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSimpleConstraint p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSimpleConstraint_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaSimpleConstraint,oaConstraintModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaSimpleConstraint* object,oaConstraintModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaSimpleConstraint,simple-oaConstraintModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSimpleConstraint p1;
    PyParamoaConstraintModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSimpleConstraint_Convert,&p1,
          &PyoaConstraintModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaSimpleConstraint_oaConstraintModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject* self = (PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum* p=new pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum* p=new pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_dealloc(PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum value;
    int convert_status=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum v1;
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum*) ((PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_FromoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject* self = (PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostCreate(oaSiteDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSiteDef_FromoaSiteDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostModify(oaSiteDef* p1,oaSiteDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSiteDef_FromoaSiteDef(p1));
    PyTuple_SetItem(args,1,PyoaSiteDefModTypeEnum_FromoaSiteDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreDestroy(oaSiteDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSiteDef_FromoaSiteDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreModify(oaSiteDef* p1,oaSiteDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSiteDef_FromoaSiteDef(p1));
    PyTuple_SetItem(args,1,PyoaSiteDefModTypeEnum_FromoaSiteDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaSiteDef)\n"
"    Calls: virtual void onPostCreate(oaSiteDef* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaSiteDef,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaSiteDef)\n"
"    Calls: virtual void onPreDestroy(oaSiteDef* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaSiteDef,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject* self=(PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject*)ob;

    PyParamoaSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum data;
  int convert_status=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum",
    sizeof(PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaSiteDef)\n"
"    Calls: void notifyPostCreateObservers(oaSiteDef* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaSiteDef,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaSiteDef)\n"
"    Calls: void notifyPreDestroyObservers(oaSiteDef* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaSiteDef,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaSiteDef,oaSiteDefModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaSiteDef* object,oaSiteDefModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaSiteDef,simple-oaSiteDefModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSiteDef p1;
    PyParamoaSiteDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSiteDef_Convert,&p1,
          &PyoaSiteDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaSiteDef_oaSiteDefModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject* self = (PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum* p=new pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum* p=new pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_dealloc(PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaSizedLayer_oaLayerModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum value;
    int convert_status=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[67];
    sprintf(buffer,"<oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum v1;
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaSizedLayer_oaLayerModTypeEnum*) ((PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_FromoaStdObserver_oaSizedLayer_oaLayerModTypeEnum(oaStdObserver_oaSizedLayer_oaLayerModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject* self = (PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostCreate(oaSizedLayer* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSizedLayer_FromoaSizedLayer(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostModify(oaSizedLayer* p1,oaLayerModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSizedLayer_FromoaSizedLayer(p1));
    PyTuple_SetItem(args,1,PyoaLayerModTypeEnum_FromoaLayerModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreDestroy(oaSizedLayer* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSizedLayer_FromoaSizedLayer(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreModify(oaSizedLayer* p1,oaLayerModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSizedLayer_FromoaSizedLayer(p1));
    PyTuple_SetItem(args,1,PyoaLayerModTypeEnum_FromoaLayerModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaSizedLayer)\n"
"    Calls: virtual void onPostCreate(oaSizedLayer* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaSizedLayer,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaSizedLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSizedLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaSizedLayer,oaLayerModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaSizedLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaSizedLayer,simple-oaLayerModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaSizedLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSizedLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaSizedLayer)\n"
"    Calls: virtual void onPreDestroy(oaSizedLayer* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaSizedLayer,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaSizedLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSizedLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaSizedLayer,oaLayerModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaSizedLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaSizedLayer,simple-oaLayerModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject* self=(PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject*)ob;

    PyParamoaSizedLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSizedLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum data;
  int convert_status=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaSizedLayer_oaLayerModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaSizedLayer_oaLayerModTypeEnum",
    sizeof(PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaSizedLayer)\n"
"    Calls: void notifyPostCreateObservers(oaSizedLayer* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaSizedLayer,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSizedLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSizedLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaSizedLayer,oaLayerModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaSizedLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaSizedLayer,simple-oaLayerModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSizedLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSizedLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaSizedLayer)\n"
"    Calls: void notifyPreDestroyObservers(oaSizedLayer* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaSizedLayer,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSizedLayer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSizedLayer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaSizedLayer,oaLayerModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaSizedLayer* object,oaLayerModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaSizedLayer,simple-oaLayerModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSizedLayer p1;
    PyParamoaLayerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSizedLayer_Convert,&p1,
          &PyoaLayerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSizedLayer_oaLayerModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaSizedLayer_oaLayerModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaSizedLayer_oaLayerModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaSizedLayer_oaLayerModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaSizedLayer_oaLayerModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject* self = (PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum* p=new pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum* p=new pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_dealloc(PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum value;
    int convert_status=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[72];
    sprintf(buffer,"<oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum v1;
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum*) ((PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_FromoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject* self = (PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostCreate(oaSnapBoundary* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSnapBoundary_FromoaSnapBoundary(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostModify(oaSnapBoundary* p1,oaBoundaryModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSnapBoundary_FromoaSnapBoundary(p1));
    PyTuple_SetItem(args,1,PyoaBoundaryModTypeEnum_FromoaBoundaryModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreDestroy(oaSnapBoundary* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSnapBoundary_FromoaSnapBoundary(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreModify(oaSnapBoundary* p1,oaBoundaryModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSnapBoundary_FromoaSnapBoundary(p1));
    PyTuple_SetItem(args,1,PyoaBoundaryModTypeEnum_FromoaBoundaryModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaSnapBoundary)\n"
"    Calls: virtual void onPostCreate(oaSnapBoundary* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaSnapBoundary,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject* self=(PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject*)ob;

    PyParamoaSnapBoundary p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSnapBoundary_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaSnapBoundary,oaBoundaryModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaSnapBoundary* object,oaBoundaryModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaSnapBoundary,simple-oaBoundaryModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject* self=(PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject*)ob;

    PyParamoaSnapBoundary p1;
    PyParamoaBoundaryModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSnapBoundary_Convert,&p1,
          &PyoaBoundaryModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaSnapBoundary)\n"
"    Calls: virtual void onPreDestroy(oaSnapBoundary* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaSnapBoundary,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject* self=(PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject*)ob;

    PyParamoaSnapBoundary p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSnapBoundary_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaSnapBoundary,oaBoundaryModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaSnapBoundary* object,oaBoundaryModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaSnapBoundary,simple-oaBoundaryModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject* self=(PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject*)ob;

    PyParamoaSnapBoundary p1;
    PyParamoaBoundaryModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSnapBoundary_Convert,&p1,
          &PyoaBoundaryModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum data;
  int convert_status=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum",
    sizeof(PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaSnapBoundary)\n"
"    Calls: void notifyPostCreateObservers(oaSnapBoundary* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaSnapBoundary,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSnapBoundary p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSnapBoundary_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaSnapBoundary,oaBoundaryModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaSnapBoundary* object,oaBoundaryModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaSnapBoundary,simple-oaBoundaryModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSnapBoundary p1;
    PyParamoaBoundaryModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSnapBoundary_Convert,&p1,
          &PyoaBoundaryModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaSnapBoundary)\n"
"    Calls: void notifyPreDestroyObservers(oaSnapBoundary* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaSnapBoundary,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSnapBoundary p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSnapBoundary_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaSnapBoundary,oaBoundaryModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaSnapBoundary* object,oaBoundaryModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaSnapBoundary,simple-oaBoundaryModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSnapBoundary p1;
    PyParamoaBoundaryModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSnapBoundary_Convert,&p1,
          &PyoaBoundaryModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaSnapBoundary_oaBoundaryModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject* self = (PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum* p=new pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum* p=new pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_dealloc(PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaStdDevice_oaDeviceModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum value;
    int convert_status=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[67];
    sprintf(buffer,"<oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum v1;
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaStdDevice_oaDeviceModTypeEnum*) ((PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_FromoaStdObserver_oaStdDevice_oaDeviceModTypeEnum(oaStdObserver_oaStdDevice_oaDeviceModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject* self = (PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostCreate(oaStdDevice* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdDevice_FromoaStdDevice(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostModify(oaStdDevice* p1,oaDeviceModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdDevice_FromoaStdDevice(p1));
    PyTuple_SetItem(args,1,PyoaDeviceModTypeEnum_FromoaDeviceModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreDestroy(oaStdDevice* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdDevice_FromoaStdDevice(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreModify(oaStdDevice* p1,oaDeviceModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdDevice_FromoaStdDevice(p1));
    PyTuple_SetItem(args,1,PyoaDeviceModTypeEnum_FromoaDeviceModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaStdDevice)\n"
"    Calls: virtual void onPostCreate(oaStdDevice* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaStdDevice,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject*)ob;

    PyParamoaStdDevice p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdDevice_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaStdDevice,oaDeviceModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaStdDevice* object,oaDeviceModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaStdDevice,simple-oaDeviceModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject*)ob;

    PyParamoaStdDevice p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdDevice_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaStdDevice)\n"
"    Calls: virtual void onPreDestroy(oaStdDevice* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaStdDevice,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject*)ob;

    PyParamoaStdDevice p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdDevice_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaStdDevice,oaDeviceModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaStdDevice* object,oaDeviceModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaStdDevice,simple-oaDeviceModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject* self=(PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject*)ob;

    PyParamoaStdDevice p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdDevice_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum data;
  int convert_status=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaStdDevice_oaDeviceModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaStdDevice_oaDeviceModTypeEnum",
    sizeof(PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaStdDevice)\n"
"    Calls: void notifyPostCreateObservers(oaStdDevice* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaStdDevice,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdDevice p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdDevice_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaStdDevice,oaDeviceModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaStdDevice* object,oaDeviceModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaStdDevice,simple-oaDeviceModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdDevice p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdDevice_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaStdDevice)\n"
"    Calls: void notifyPreDestroyObservers(oaStdDevice* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaStdDevice,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdDevice p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdDevice_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaStdDevice,oaDeviceModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaStdDevice* object,oaDeviceModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaStdDevice,simple-oaDeviceModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdDevice p1;
    PyParamoaDeviceModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdDevice_Convert,&p1,
          &PyoaDeviceModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdDevice_oaDeviceModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaStdDevice_oaDeviceModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaStdDevice_oaDeviceModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaStdDevice_oaDeviceModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaStdDevice_oaDeviceModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject* self = (PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum* p=new pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum* p=new pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_dealloc(PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum value;
    int convert_status=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[67];
    sprintf(buffer,"<oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum v1;
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum*) ((PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_FromoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject* self = (PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostCreate(oaStdViaDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdViaDef_FromoaStdViaDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostModify(oaStdViaDef* p1,oaViaDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdViaDef_FromoaStdViaDef(p1));
    PyTuple_SetItem(args,1,PyoaViaDefModTypeEnum_FromoaViaDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreDestroy(oaStdViaDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdViaDef_FromoaStdViaDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreModify(oaStdViaDef* p1,oaViaDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdViaDef_FromoaStdViaDef(p1));
    PyTuple_SetItem(args,1,PyoaViaDefModTypeEnum_FromoaViaDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaStdViaDef)\n"
"    Calls: virtual void onPostCreate(oaStdViaDef* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaStdViaDef,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject* self=(PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject*)ob;

    PyParamoaStdViaDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaStdViaDef,oaViaDefModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaStdViaDef* object,oaViaDefModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaStdViaDef,simple-oaViaDefModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject* self=(PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject*)ob;

    PyParamoaStdViaDef p1;
    PyParamoaViaDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaDef_Convert,&p1,
          &PyoaViaDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaStdViaDef)\n"
"    Calls: virtual void onPreDestroy(oaStdViaDef* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaStdViaDef,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject* self=(PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject*)ob;

    PyParamoaStdViaDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaStdViaDef,oaViaDefModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaStdViaDef* object,oaViaDefModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaStdViaDef,simple-oaViaDefModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject* self=(PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject*)ob;

    PyParamoaStdViaDef p1;
    PyParamoaViaDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaDef_Convert,&p1,
          &PyoaViaDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum data;
  int convert_status=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum",
    sizeof(PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaStdViaDef)\n"
"    Calls: void notifyPostCreateObservers(oaStdViaDef* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaStdViaDef,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaStdViaDef,oaViaDefModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaStdViaDef* object,oaViaDefModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaStdViaDef,simple-oaViaDefModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaDef p1;
    PyParamoaViaDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaDef_Convert,&p1,
          &PyoaViaDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaStdViaDef)\n"
"    Calls: void notifyPreDestroyObservers(oaStdViaDef* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaStdViaDef,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaStdViaDef,oaViaDefModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaStdViaDef* object,oaViaDefModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaStdViaDef,simple-oaViaDefModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaDef p1;
    PyParamoaViaDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaDef_Convert,&p1,
          &PyoaViaDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaStdViaDef_oaViaDefModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject* self = (PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum* p=new pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum* p=new pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_dealloc(PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum value;
    int convert_status=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[73];
    sprintf(buffer,"<oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum v1;
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum*) ((PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_FromoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject* self = (PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostCreate(oaStdViaHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdViaHeader_FromoaStdViaHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostModify(oaStdViaHeader* p1,oaViaHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdViaHeader_FromoaStdViaHeader(p1));
    PyTuple_SetItem(args,1,PyoaViaHeaderModTypeEnum_FromoaViaHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreDestroy(oaStdViaHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdViaHeader_FromoaStdViaHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreModify(oaStdViaHeader* p1,oaViaHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdViaHeader_FromoaStdViaHeader(p1));
    PyTuple_SetItem(args,1,PyoaViaHeaderModTypeEnum_FromoaViaHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaStdViaHeader)\n"
"    Calls: virtual void onPostCreate(oaStdViaHeader* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaStdViaHeader,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject* self=(PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject*)ob;

    PyParamoaStdViaHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaStdViaHeader,oaViaHeaderModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaStdViaHeader* object,oaViaHeaderModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaStdViaHeader,simple-oaViaHeaderModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject* self=(PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject*)ob;

    PyParamoaStdViaHeader p1;
    PyParamoaViaHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaHeader_Convert,&p1,
          &PyoaViaHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaStdViaHeader)\n"
"    Calls: virtual void onPreDestroy(oaStdViaHeader* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaStdViaHeader,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject* self=(PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject*)ob;

    PyParamoaStdViaHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaStdViaHeader,oaViaHeaderModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaStdViaHeader* object,oaViaHeaderModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaStdViaHeader,simple-oaViaHeaderModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject* self=(PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject*)ob;

    PyParamoaStdViaHeader p1;
    PyParamoaViaHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaHeader_Convert,&p1,
          &PyoaViaHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum data;
  int convert_status=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum",
    sizeof(PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaStdViaHeader)\n"
"    Calls: void notifyPostCreateObservers(oaStdViaHeader* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaStdViaHeader,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaStdViaHeader,oaViaHeaderModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaStdViaHeader* object,oaViaHeaderModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaStdViaHeader,simple-oaViaHeaderModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaHeader p1;
    PyParamoaViaHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaHeader_Convert,&p1,
          &PyoaViaHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaStdViaHeader)\n"
"    Calls: void notifyPreDestroyObservers(oaStdViaHeader* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaStdViaHeader,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdViaHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaStdViaHeader,oaViaHeaderModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaStdViaHeader* object,oaViaHeaderModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaStdViaHeader,simple-oaViaHeaderModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdViaHeader p1;
    PyParamoaViaHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdViaHeader_Convert,&p1,
          &PyoaViaHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaStdViaHeader_oaViaHeaderModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaStdVia_oaViaModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject* self = (PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdVia_oaViaModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum* p=new pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStdVia_oaViaModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum* p=new pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_dealloc(PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaStdVia_oaViaModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum value;
    int convert_status=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaStdObserver_oaStdVia_oaViaModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum v1;
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaStdVia_oaViaModTypeEnum*) ((PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaStdVia_oaViaModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaStdVia_oaViaModTypeEnum_FromoaStdObserver_oaStdVia_oaViaModTypeEnum(oaStdObserver_oaStdVia_oaViaModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject* self = (PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum::pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaStdVia_oaViaModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum::pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaStdVia_oaViaModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostCreate(oaStdVia* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdVia_FromoaStdVia(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostModify(oaStdVia* p1,oaViaModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdVia_FromoaStdVia(p1));
    PyTuple_SetItem(args,1,PyoaViaModTypeEnum_FromoaViaModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreDestroy(oaStdVia* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStdVia_FromoaStdVia(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreModify(oaStdVia* p1,oaViaModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStdVia_FromoaStdVia(p1));
    PyTuple_SetItem(args,1,PyoaViaModTypeEnum_FromoaViaModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaStdVia)\n"
"    Calls: virtual void onPostCreate(oaStdVia* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaStdVia,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject* self=(PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject*)ob;

    PyParamoaStdVia p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdVia_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaStdVia,oaViaModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaStdVia* object,oaViaModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaStdVia,simple-oaViaModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject* self=(PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject*)ob;

    PyParamoaStdVia p1;
    PyParamoaViaModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdVia_Convert,&p1,
          &PyoaViaModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdVia_oaViaModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaStdVia)\n"
"    Calls: virtual void onPreDestroy(oaStdVia* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaStdVia,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject* self=(PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject*)ob;

    PyParamoaStdVia p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdVia_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaStdVia,oaViaModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaStdVia* object,oaViaModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaStdVia,simple-oaViaModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject* self=(PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject*)ob;

    PyParamoaStdVia p1;
    PyParamoaViaModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdVia_Convert,&p1,
          &PyoaViaModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStdVia_oaViaModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaStdVia_oaViaModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum data;
  int convert_status=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaStdVia_oaViaModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaStdVia_oaViaModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaStdVia_oaViaModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaStdVia_oaViaModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaStdVia_oaViaModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaStdVia_oaViaModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaStdVia_oaViaModTypeEnum",
    sizeof(PyoaStdObserver_oaStdVia_oaViaModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaStdVia_oaViaModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaStdVia_oaViaModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaStdVia_oaViaModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaStdVia_oaViaModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaStdVia_oaViaModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaStdVia)\n"
"    Calls: void notifyPostCreateObservers(oaStdVia* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaStdVia,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdVia p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdVia_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdVia_oaViaModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaStdVia,oaViaModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaStdVia* object,oaViaModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaStdVia,simple-oaViaModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdVia p1;
    PyParamoaViaModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdVia_Convert,&p1,
          &PyoaViaModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdVia_oaViaModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaStdVia)\n"
"    Calls: void notifyPreDestroyObservers(oaStdVia* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaStdVia,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdVia p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStdVia_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdVia_oaViaModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaStdVia_oaViaModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaStdVia,oaViaModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaStdVia* object,oaViaModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaStdVia,simple-oaViaModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdVia p1;
    PyParamoaViaModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStdVia_Convert,&p1,
          &PyoaViaModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStdVia_oaViaModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaStdVia_oaViaModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaStdVia_oaViaModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaStdVia_oaViaModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaStdVia_oaViaModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaStdVia_oaViaModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaStdVia_oaViaModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaStdVia_oaViaModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaStdVia_oaViaModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject* self = (PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSteiner_oaSteinerModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum* p=new pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSteiner_oaSteinerModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum* p=new pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_dealloc(PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaSteiner_oaSteinerModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum value;
    int convert_status=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaSteiner_oaSteinerModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum v1;
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaSteiner_oaSteinerModTypeEnum*) ((PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_FromoaStdObserver_oaSteiner_oaSteinerModTypeEnum(oaStdObserver_oaSteiner_oaSteinerModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject* self = (PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum::pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaSteiner_oaSteinerModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum::pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaSteiner_oaSteinerModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostCreate(oaSteiner* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSteiner_FromoaSteiner(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostModify(oaSteiner* p1,oaSteinerModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSteiner_FromoaSteiner(p1));
    PyTuple_SetItem(args,1,PyoaSteinerModTypeEnum_FromoaSteinerModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreDestroy(oaSteiner* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSteiner_FromoaSteiner(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreModify(oaSteiner* p1,oaSteinerModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSteiner_FromoaSteiner(p1));
    PyTuple_SetItem(args,1,PyoaSteinerModTypeEnum_FromoaSteinerModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaSteiner)\n"
"    Calls: virtual void onPostCreate(oaSteiner* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaSteiner,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject* self=(PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject*)ob;

    PyParamoaSteiner p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSteiner_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaSteiner,oaSteinerModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaSteiner* object,oaSteinerModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaSteiner,simple-oaSteinerModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject* self=(PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject*)ob;

    PyParamoaSteiner p1;
    PyParamoaSteinerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSteiner_Convert,&p1,
          &PyoaSteinerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaSteiner)\n"
"    Calls: virtual void onPreDestroy(oaSteiner* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaSteiner,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject* self=(PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject*)ob;

    PyParamoaSteiner p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSteiner_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaSteiner,oaSteinerModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaSteiner* object,oaSteinerModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaSteiner,simple-oaSteinerModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject* self=(PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject*)ob;

    PyParamoaSteiner p1;
    PyParamoaSteinerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSteiner_Convert,&p1,
          &PyoaSteinerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSteiner_oaSteinerModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum data;
  int convert_status=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaSteiner_oaSteinerModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaSteiner_oaSteinerModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaSteiner_oaSteinerModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaSteiner_oaSteinerModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaSteiner_oaSteinerModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaSteiner_oaSteinerModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaSteiner_oaSteinerModTypeEnum",
    sizeof(PyoaStdObserver_oaSteiner_oaSteinerModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaSteiner_oaSteinerModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaSteiner_oaSteinerModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaSteiner_oaSteinerModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaSteiner_oaSteinerModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaSteiner)\n"
"    Calls: void notifyPostCreateObservers(oaSteiner* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaSteiner,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSteiner p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSteiner_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSteiner_oaSteinerModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaSteiner,oaSteinerModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaSteiner* object,oaSteinerModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaSteiner,simple-oaSteinerModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSteiner p1;
    PyParamoaSteinerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSteiner_Convert,&p1,
          &PyoaSteinerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSteiner_oaSteinerModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaSteiner)\n"
"    Calls: void notifyPreDestroyObservers(oaSteiner* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaSteiner,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSteiner p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSteiner_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSteiner_oaSteinerModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaSteiner_oaSteinerModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaSteiner,oaSteinerModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaSteiner* object,oaSteinerModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaSteiner,simple-oaSteinerModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSteiner p1;
    PyParamoaSteinerModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSteiner_Convert,&p1,
          &PyoaSteinerModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSteiner_oaSteinerModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaSteiner_oaSteinerModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaSteiner_oaSteinerModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaSteiner_oaSteinerModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaSteiner_oaSteinerModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaSteiner_oaSteinerModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaSteiner_oaSteinerModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaSteiner_oaSteinerModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject* self = (PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum* p=new pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum* p=new pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_dealloc(PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum value;
    int convert_status=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[72];
    sprintf(buffer,"<oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum v1;
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum*) ((PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_FromoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject* self = (PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostCreate(oaStepperMap* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStepperMap_FromoaStepperMap(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostModify(oaStepperMap* p1,oaStepperMapModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStepperMap_FromoaStepperMap(p1));
    PyTuple_SetItem(args,1,PyoaStepperMapModTypeEnum_FromoaStepperMapModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreDestroy(oaStepperMap* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStepperMap_FromoaStepperMap(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreModify(oaStepperMap* p1,oaStepperMapModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStepperMap_FromoaStepperMap(p1));
    PyTuple_SetItem(args,1,PyoaStepperMapModTypeEnum_FromoaStepperMapModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaStepperMap)\n"
"    Calls: virtual void onPostCreate(oaStepperMap* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaStepperMap,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject* self=(PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject*)ob;

    PyParamoaStepperMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStepperMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaStepperMap,oaStepperMapModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaStepperMap* object,oaStepperMapModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaStepperMap,simple-oaStepperMapModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject* self=(PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject*)ob;

    PyParamoaStepperMap p1;
    PyParamoaStepperMapModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStepperMap_Convert,&p1,
          &PyoaStepperMapModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaStepperMap)\n"
"    Calls: virtual void onPreDestroy(oaStepperMap* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaStepperMap,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject* self=(PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject*)ob;

    PyParamoaStepperMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStepperMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaStepperMap,oaStepperMapModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaStepperMap* object,oaStepperMapModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaStepperMap,simple-oaStepperMapModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject* self=(PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject*)ob;

    PyParamoaStepperMap p1;
    PyParamoaStepperMapModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStepperMap_Convert,&p1,
          &PyoaStepperMapModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum data;
  int convert_status=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum",
    sizeof(PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaStepperMap)\n"
"    Calls: void notifyPostCreateObservers(oaStepperMap* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaStepperMap,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStepperMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStepperMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaStepperMap,oaStepperMapModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaStepperMap* object,oaStepperMapModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaStepperMap,simple-oaStepperMapModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStepperMap p1;
    PyParamoaStepperMapModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStepperMap_Convert,&p1,
          &PyoaStepperMapModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaStepperMap)\n"
"    Calls: void notifyPreDestroyObservers(oaStepperMap* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaStepperMap,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStepperMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStepperMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaStepperMap,oaStepperMapModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaStepperMap* object,oaStepperMapModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaStepperMap,simple-oaStepperMapModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStepperMap p1;
    PyParamoaStepperMapModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStepperMap_Convert,&p1,
          &PyoaStepperMapModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaStepperMap_oaStepperMapModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaStringProp_oaPropModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStringProp_oaPropModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaStringProp_oaPropModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_dealloc(PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaStringProp_oaPropModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum value;
    int convert_status=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[66];
    sprintf(buffer,"<oaStdObserver_oaStringProp_oaPropModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum v1;
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaStringProp_oaPropModTypeEnum*) ((PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaStringProp_oaPropModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaStringProp_oaPropModTypeEnum_FromoaStdObserver_oaStringProp_oaPropModTypeEnum(oaStdObserver_oaStringProp_oaPropModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum::pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaStringProp_oaPropModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum::pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaStringProp_oaPropModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostCreate(oaStringProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStringProp_FromoaStringProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostModify(oaStringProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStringProp_FromoaStringProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreDestroy(oaStringProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaStringProp_FromoaStringProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreModify(oaStringProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaStringProp_FromoaStringProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaStringProp)\n"
"    Calls: virtual void onPostCreate(oaStringProp* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaStringProp,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject*)ob;

    PyParamoaStringProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStringProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaStringProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaStringProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaStringProp,simple-oaPropModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject*)ob;

    PyParamoaStringProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStringProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStringProp_oaPropModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaStringProp)\n"
"    Calls: virtual void onPreDestroy(oaStringProp* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaStringProp,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject*)ob;

    PyParamoaStringProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStringProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaStringProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaStringProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaStringProp,simple-oaPropModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject*)ob;

    PyParamoaStringProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStringProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaStringProp_oaPropModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaStringProp_oaPropModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum data;
  int convert_status=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaStringProp_oaPropModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaStringProp_oaPropModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaStringProp_oaPropModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaStringProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaStringProp_oaPropModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaStringProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaStringProp_oaPropModTypeEnum",
    sizeof(PyoaStdObserver_oaStringProp_oaPropModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaStringProp_oaPropModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaStringProp_oaPropModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaStringProp_oaPropModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaStringProp_oaPropModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaStringProp_oaPropModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaStringProp)\n"
"    Calls: void notifyPostCreateObservers(oaStringProp* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaStringProp,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStringProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStringProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStringProp_oaPropModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaStringProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaStringProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaStringProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStringProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStringProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStringProp_oaPropModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaStringProp)\n"
"    Calls: void notifyPreDestroyObservers(oaStringProp* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaStringProp,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStringProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStringProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStringProp_oaPropModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaStringProp_oaPropModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaStringProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaStringProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaStringProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStringProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStringProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaStringProp_oaPropModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaStringProp_oaPropModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaStringProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaStringProp_oaPropModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaStringProp_oaPropModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaStringProp_oaPropModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaStringProp_oaPropModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaStringProp_oaPropModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaStringProp_oaPropModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject* self = (PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum* p=new pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum* p=new pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_dealloc(PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum value;
    int convert_status=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[72];
    sprintf(buffer,"<oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum v1;
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum*) ((PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_FromoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject* self = (PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostCreate(oaSubNetwork* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSubNetwork_FromoaSubNetwork(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostModify(oaSubNetwork* p1,oaSubNetworkModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSubNetwork_FromoaSubNetwork(p1));
    PyTuple_SetItem(args,1,PyoaSubNetworkModTypeEnum_FromoaSubNetworkModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreDestroy(oaSubNetwork* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaSubNetwork_FromoaSubNetwork(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreModify(oaSubNetwork* p1,oaSubNetworkModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaSubNetwork_FromoaSubNetwork(p1));
    PyTuple_SetItem(args,1,PyoaSubNetworkModTypeEnum_FromoaSubNetworkModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaSubNetwork)\n"
"    Calls: virtual void onPostCreate(oaSubNetwork* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaSubNetwork,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject* self=(PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject*)ob;

    PyParamoaSubNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSubNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaSubNetwork,oaSubNetworkModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaSubNetwork* object,oaSubNetworkModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaSubNetwork,simple-oaSubNetworkModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject* self=(PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject*)ob;

    PyParamoaSubNetwork p1;
    PyParamoaSubNetworkModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSubNetwork_Convert,&p1,
          &PyoaSubNetworkModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaSubNetwork)\n"
"    Calls: virtual void onPreDestroy(oaSubNetwork* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaSubNetwork,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject* self=(PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject*)ob;

    PyParamoaSubNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSubNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaSubNetwork,oaSubNetworkModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaSubNetwork* object,oaSubNetworkModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaSubNetwork,simple-oaSubNetworkModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum data;
    int convert_status=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject* self=(PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject*)ob;

    PyParamoaSubNetwork p1;
    PyParamoaSubNetworkModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSubNetwork_Convert,&p1,
          &PyoaSubNetworkModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum data;
  int convert_status=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum",
    sizeof(PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaSubNetwork)\n"
"    Calls: void notifyPostCreateObservers(oaSubNetwork* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaSubNetwork,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSubNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSubNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaSubNetwork,oaSubNetworkModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaSubNetwork* object,oaSubNetworkModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaSubNetwork,simple-oaSubNetworkModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSubNetwork p1;
    PyParamoaSubNetworkModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSubNetwork_Convert,&p1,
          &PyoaSubNetworkModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaSubNetwork)\n"
"    Calls: void notifyPreDestroyObservers(oaSubNetwork* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaSubNetwork,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSubNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSubNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaSubNetwork,oaSubNetworkModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaSubNetwork* object,oaSubNetworkModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaSubNetwork,simple-oaSubNetworkModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaSubNetwork p1;
    PyParamoaSubNetworkModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSubNetwork_Convert,&p1,
          &PyoaSubNetworkModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaSubNetwork_oaSubNetworkModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject* self = (PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum* p=new pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum* p=new pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_dealloc(PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[72];
    sprintf(buffer,"<oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum v1;
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum*) ((PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_FromoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject* self = (PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostCreate(oaTechHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTechHeader_FromoaTechHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostModify(oaTechHeader* p1,oaTechHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTechHeader_FromoaTechHeader(p1));
    PyTuple_SetItem(args,1,PyoaTechHeaderModTypeEnum_FromoaTechHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreDestroy(oaTechHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTechHeader_FromoaTechHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreModify(oaTechHeader* p1,oaTechHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTechHeader_FromoaTechHeader(p1));
    PyTuple_SetItem(args,1,PyoaTechHeaderModTypeEnum_FromoaTechHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTechHeader)\n"
"    Calls: virtual void onPostCreate(oaTechHeader* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTechHeader,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject*)ob;

    PyParamoaTechHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTechHeader,oaTechHeaderModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTechHeader* object,oaTechHeaderModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTechHeader,simple-oaTechHeaderModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject*)ob;

    PyParamoaTechHeader p1;
    PyParamoaTechHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechHeader_Convert,&p1,
          &PyoaTechHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTechHeader)\n"
"    Calls: virtual void onPreDestroy(oaTechHeader* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTechHeader,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject*)ob;

    PyParamoaTechHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTechHeader,oaTechHeaderModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTechHeader* object,oaTechHeaderModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTechHeader,simple-oaTechHeaderModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject*)ob;

    PyParamoaTechHeader p1;
    PyParamoaTechHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechHeader_Convert,&p1,
          &PyoaTechHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum",
    sizeof(PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTechHeader)\n"
"    Calls: void notifyPostCreateObservers(oaTechHeader* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTechHeader,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTechHeader,oaTechHeaderModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTechHeader* object,oaTechHeaderModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTechHeader,simple-oaTechHeaderModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechHeader p1;
    PyParamoaTechHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechHeader_Convert,&p1,
          &PyoaTechHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTechHeader)\n"
"    Calls: void notifyPreDestroyObservers(oaTechHeader* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTechHeader,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTechHeader,oaTechHeaderModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTechHeader* object,oaTechHeaderModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTechHeader,simple-oaTechHeaderModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechHeader p1;
    PyParamoaTechHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechHeader_Convert,&p1,
          &PyoaTechHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTechHeader_oaTechHeaderModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject* self = (PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum* p=new pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum* p=new pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_dealloc(PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[82];
    sprintf(buffer,"<oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum v1;
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum*) ((PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_FromoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject* self = (PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostCreate(oaTechLayerHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTechLayerHeader_FromoaTechLayerHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostModify(oaTechLayerHeader* p1,oaTechLayerHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTechLayerHeader_FromoaTechLayerHeader(p1));
    PyTuple_SetItem(args,1,PyoaTechLayerHeaderModTypeEnum_FromoaTechLayerHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreDestroy(oaTechLayerHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTechLayerHeader_FromoaTechLayerHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreModify(oaTechLayerHeader* p1,oaTechLayerHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTechLayerHeader_FromoaTechLayerHeader(p1));
    PyTuple_SetItem(args,1,PyoaTechLayerHeaderModTypeEnum_FromoaTechLayerHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTechLayerHeader)\n"
"    Calls: virtual void onPostCreate(oaTechLayerHeader* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTechLayerHeader,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject*)ob;

    PyParamoaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTechLayerHeader,oaTechLayerHeaderModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTechLayerHeader* object,oaTechLayerHeaderModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTechLayerHeader,simple-oaTechLayerHeaderModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject*)ob;

    PyParamoaTechLayerHeader p1;
    PyParamoaTechLayerHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechLayerHeader_Convert,&p1,
          &PyoaTechLayerHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTechLayerHeader)\n"
"    Calls: virtual void onPreDestroy(oaTechLayerHeader* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTechLayerHeader,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject*)ob;

    PyParamoaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTechLayerHeader,oaTechLayerHeaderModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTechLayerHeader* object,oaTechLayerHeaderModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTechLayerHeader,simple-oaTechLayerHeaderModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject*)ob;

    PyParamoaTechLayerHeader p1;
    PyParamoaTechLayerHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechLayerHeader_Convert,&p1,
          &PyoaTechLayerHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum",
    sizeof(PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTechLayerHeader)\n"
"    Calls: void notifyPostCreateObservers(oaTechLayerHeader* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTechLayerHeader,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTechLayerHeader,oaTechLayerHeaderModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTechLayerHeader* object,oaTechLayerHeaderModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTechLayerHeader,simple-oaTechLayerHeaderModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechLayerHeader p1;
    PyParamoaTechLayerHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechLayerHeader_Convert,&p1,
          &PyoaTechLayerHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTechLayerHeader)\n"
"    Calls: void notifyPreDestroyObservers(oaTechLayerHeader* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTechLayerHeader,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTechLayerHeader,oaTechLayerHeaderModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTechLayerHeader* object,oaTechLayerHeaderModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTechLayerHeader,simple-oaTechLayerHeaderModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechLayerHeader p1;
    PyParamoaTechLayerHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechLayerHeader_Convert,&p1,
          &PyoaTechLayerHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTechLayerHeader_oaTechLayerHeaderModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject* self = (PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum* p=new pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum* p=new pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_dealloc(PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[84];
    sprintf(buffer,"<oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum v1;
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum*) ((PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_FromoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject* self = (PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostCreate(oaTechViaDefHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTechViaDefHeader_FromoaTechViaDefHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostModify(oaTechViaDefHeader* p1,oaTechViaDefHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTechViaDefHeader_FromoaTechViaDefHeader(p1));
    PyTuple_SetItem(args,1,PyoaTechViaDefHeaderModTypeEnum_FromoaTechViaDefHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreDestroy(oaTechViaDefHeader* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTechViaDefHeader_FromoaTechViaDefHeader(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreModify(oaTechViaDefHeader* p1,oaTechViaDefHeaderModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTechViaDefHeader_FromoaTechViaDefHeader(p1));
    PyTuple_SetItem(args,1,PyoaTechViaDefHeaderModTypeEnum_FromoaTechViaDefHeaderModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTechViaDefHeader)\n"
"    Calls: virtual void onPostCreate(oaTechViaDefHeader* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTechViaDefHeader,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject*)ob;

    PyParamoaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechViaDefHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTechViaDefHeader,oaTechViaDefHeaderModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTechViaDefHeader* object,oaTechViaDefHeaderModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTechViaDefHeader,simple-oaTechViaDefHeaderModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject*)ob;

    PyParamoaTechViaDefHeader p1;
    PyParamoaTechViaDefHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechViaDefHeader_Convert,&p1,
          &PyoaTechViaDefHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTechViaDefHeader)\n"
"    Calls: virtual void onPreDestroy(oaTechViaDefHeader* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTechViaDefHeader,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject*)ob;

    PyParamoaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechViaDefHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTechViaDefHeader,oaTechViaDefHeaderModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTechViaDefHeader* object,oaTechViaDefHeaderModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTechViaDefHeader,simple-oaTechViaDefHeaderModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject* self=(PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject*)ob;

    PyParamoaTechViaDefHeader p1;
    PyParamoaTechViaDefHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechViaDefHeader_Convert,&p1,
          &PyoaTechViaDefHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum",
    sizeof(PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTechViaDefHeader)\n"
"    Calls: void notifyPostCreateObservers(oaTechViaDefHeader* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTechViaDefHeader,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechViaDefHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTechViaDefHeader,oaTechViaDefHeaderModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTechViaDefHeader* object,oaTechViaDefHeaderModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTechViaDefHeader,simple-oaTechViaDefHeaderModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechViaDefHeader p1;
    PyParamoaTechViaDefHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechViaDefHeader_Convert,&p1,
          &PyoaTechViaDefHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTechViaDefHeader)\n"
"    Calls: void notifyPreDestroyObservers(oaTechViaDefHeader* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTechViaDefHeader,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechViaDefHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTechViaDefHeader,oaTechViaDefHeaderModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTechViaDefHeader* object,oaTechViaDefHeaderModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTechViaDefHeader,simple-oaTechViaDefHeaderModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTechViaDefHeader p1;
    PyParamoaTechViaDefHeaderModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechViaDefHeader_Convert,&p1,
          &PyoaTechViaDefHeaderModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTechViaDefHeader_oaTechViaDefHeaderModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTech_oaTechModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTech_oaTechModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTech_oaTechModTypeEnumObject* self = (PyoaStdObserver_oaTech_oaTechModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTech_oaTechModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTech_oaTechModTypeEnum* p=new pyv_oaStdObserver_oaTech_oaTechModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTech_oaTechModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTech_oaTechModTypeEnum* p=new pyv_oaStdObserver_oaTech_oaTechModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTech_oaTechModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTech_oaTechModTypeEnum_tp_dealloc(PyoaStdObserver_oaTech_oaTechModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTech_oaTechModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[60];
    sprintf(buffer,"<oaStdObserver_oaTech_oaTechModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTech_oaTechModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum v1;
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTech_oaTechModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTech_oaTechModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTech_oaTechModTypeEnum*) ((PyoaStdObserver_oaTech_oaTechModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTech_oaTechModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTech_oaTechModTypeEnum_FromoaStdObserver_oaTech_oaTechModTypeEnum(oaStdObserver_oaTech_oaTechModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTech_oaTechModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTech_oaTechModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTech_oaTechModTypeEnumObject* self = (PyoaStdObserver_oaTech_oaTechModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTech_oaTechModTypeEnum::pyv_oaStdObserver_oaTech_oaTechModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTech_oaTechModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTech_oaTechModTypeEnum::pyv_oaStdObserver_oaTech_oaTechModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTech_oaTechModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTech_oaTechModTypeEnum::onPostCreate(oaTech* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTech_FromoaTech(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTech_oaTechModTypeEnum::onPostModify(oaTech* p1,oaTechModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTech_FromoaTech(p1));
    PyTuple_SetItem(args,1,PyoaTechModTypeEnum_FromoaTechModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTech_oaTechModTypeEnum::onPreDestroy(oaTech* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTech_FromoaTech(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTech_oaTechModTypeEnum::onPreModify(oaTech* p1,oaTechModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTech_FromoaTech(p1));
    PyTuple_SetItem(args,1,PyoaTechModTypeEnum_FromoaTechModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTech_oaTechModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTech)\n"
"    Calls: virtual void onPostCreate(oaTech* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTech,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTech_oaTechModTypeEnumObject* self=(PyoaStdObserver_oaTech_oaTechModTypeEnumObject*)ob;

    PyParamoaTech p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTech_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTech_oaTechModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTech,oaTechModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTech* object,oaTechModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTech,simple-oaTechModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTech_oaTechModTypeEnumObject* self=(PyoaStdObserver_oaTech_oaTechModTypeEnumObject*)ob;

    PyParamoaTech p1;
    PyParamoaTechModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTech_Convert,&p1,
          &PyoaTechModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTech_oaTechModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTech)\n"
"    Calls: virtual void onPreDestroy(oaTech* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTech,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTech_oaTechModTypeEnumObject* self=(PyoaStdObserver_oaTech_oaTechModTypeEnumObject*)ob;

    PyParamoaTech p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTech_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTech_oaTechModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTech,oaTechModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTech* object,oaTechModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTech,simple-oaTechModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTech_oaTechModTypeEnumObject* self=(PyoaStdObserver_oaTech_oaTechModTypeEnumObject*)ob;

    PyParamoaTech p1;
    PyParamoaTechModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTech_Convert,&p1,
          &PyoaTechModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTech_oaTechModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTech_oaTechModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTech_oaTechModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTech_oaTechModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTech_oaTechModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTech_oaTechModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTech_oaTechModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTech_oaTechModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTech_oaTechModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTech_oaTechModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTech_oaTechModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTech_oaTechModTypeEnum",
    sizeof(PyoaStdObserver_oaTech_oaTechModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTech_oaTechModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTech_oaTechModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTech_oaTechModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTech_oaTechModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTech_oaTechModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTech_oaTechModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTech_oaTechModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTech)\n"
"    Calls: void notifyPostCreateObservers(oaTech* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTech,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTech p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTech_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTech_oaTechModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTech,oaTechModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTech* object,oaTechModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTech,simple-oaTechModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTech p1;
    PyParamoaTechModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTech_Convert,&p1,
          &PyoaTechModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTech_oaTechModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTech)\n"
"    Calls: void notifyPreDestroyObservers(oaTech* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTech,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTech p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTech_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTech_oaTechModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTech_oaTechModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTech,oaTechModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTech* object,oaTechModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTech,simple-oaTechModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTech p1;
    PyParamoaTechModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTech_Convert,&p1,
          &PyoaTechModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTech_oaTechModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTech_oaTechModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTech_oaTechModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTech_oaTechModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTech_oaTechModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTech_oaTechModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTech_oaTechModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTech_oaTechModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTech_oaTechModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTech_oaTechModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTech_oaTechModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject* self = (PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum* p=new pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum* p=new pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_dealloc(PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[76];
    sprintf(buffer,"<oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum v1;
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum*) ((PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_FromoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject* self = (PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostCreate(oaTermConnectDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTermConnectDef_FromoaTermConnectDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostModify(oaTermConnectDef* p1,oaConnectDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTermConnectDef_FromoaTermConnectDef(p1));
    PyTuple_SetItem(args,1,PyoaConnectDefModTypeEnum_FromoaConnectDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreDestroy(oaTermConnectDef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTermConnectDef_FromoaTermConnectDef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreModify(oaTermConnectDef* p1,oaConnectDefModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTermConnectDef_FromoaTermConnectDef(p1));
    PyTuple_SetItem(args,1,PyoaConnectDefModTypeEnum_FromoaConnectDefModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTermConnectDef)\n"
"    Calls: virtual void onPostCreate(oaTermConnectDef* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTermConnectDef,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject* self=(PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject*)ob;

    PyParamoaTermConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTermConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTermConnectDef,oaConnectDefModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTermConnectDef* object,oaConnectDefModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTermConnectDef,simple-oaConnectDefModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject* self=(PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject*)ob;

    PyParamoaTermConnectDef p1;
    PyParamoaConnectDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTermConnectDef_Convert,&p1,
          &PyoaConnectDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTermConnectDef)\n"
"    Calls: virtual void onPreDestroy(oaTermConnectDef* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTermConnectDef,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject* self=(PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject*)ob;

    PyParamoaTermConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTermConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTermConnectDef,oaConnectDefModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTermConnectDef* object,oaConnectDefModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTermConnectDef,simple-oaConnectDefModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject* self=(PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject*)ob;

    PyParamoaTermConnectDef p1;
    PyParamoaConnectDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTermConnectDef_Convert,&p1,
          &PyoaConnectDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum",
    sizeof(PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTermConnectDef)\n"
"    Calls: void notifyPostCreateObservers(oaTermConnectDef* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTermConnectDef,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTermConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTermConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTermConnectDef,oaConnectDefModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTermConnectDef* object,oaConnectDefModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTermConnectDef,simple-oaConnectDefModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTermConnectDef p1;
    PyParamoaConnectDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTermConnectDef_Convert,&p1,
          &PyoaConnectDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTermConnectDef)\n"
"    Calls: void notifyPreDestroyObservers(oaTermConnectDef* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTermConnectDef,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTermConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTermConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTermConnectDef,oaConnectDefModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTermConnectDef* object,oaConnectDefModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTermConnectDef,simple-oaConnectDefModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTermConnectDef p1;
    PyParamoaConnectDefModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTermConnectDef_Convert,&p1,
          &PyoaConnectDefModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTermConnectDef_oaConnectDefModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTerm_oaTermModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTerm_oaTermModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTerm_oaTermModTypeEnumObject* self = (PyoaStdObserver_oaTerm_oaTermModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTerm_oaTermModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTerm_oaTermModTypeEnum* p=new pyv_oaStdObserver_oaTerm_oaTermModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTerm_oaTermModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTerm_oaTermModTypeEnum* p=new pyv_oaStdObserver_oaTerm_oaTermModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTerm_oaTermModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTerm_oaTermModTypeEnum_tp_dealloc(PyoaStdObserver_oaTerm_oaTermModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTerm_oaTermModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[60];
    sprintf(buffer,"<oaStdObserver_oaTerm_oaTermModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTerm_oaTermModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum v1;
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTerm_oaTermModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTerm_oaTermModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTerm_oaTermModTypeEnum*) ((PyoaStdObserver_oaTerm_oaTermModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTerm_oaTermModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTerm_oaTermModTypeEnum_FromoaStdObserver_oaTerm_oaTermModTypeEnum(oaStdObserver_oaTerm_oaTermModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTerm_oaTermModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTerm_oaTermModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTerm_oaTermModTypeEnumObject* self = (PyoaStdObserver_oaTerm_oaTermModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTerm_oaTermModTypeEnum::pyv_oaStdObserver_oaTerm_oaTermModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTerm_oaTermModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTerm_oaTermModTypeEnum::pyv_oaStdObserver_oaTerm_oaTermModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTerm_oaTermModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTerm_oaTermModTypeEnum::onPostCreate(oaTerm* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTerm_FromoaTerm(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTerm_oaTermModTypeEnum::onPostModify(oaTerm* p1,oaTermModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTerm_FromoaTerm(p1));
    PyTuple_SetItem(args,1,PyoaTermModTypeEnum_FromoaTermModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTerm_oaTermModTypeEnum::onPreDestroy(oaTerm* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTerm_FromoaTerm(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTerm_oaTermModTypeEnum::onPreModify(oaTerm* p1,oaTermModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTerm_FromoaTerm(p1));
    PyTuple_SetItem(args,1,PyoaTermModTypeEnum_FromoaTermModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTerm_oaTermModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTerm)\n"
"    Calls: virtual void onPostCreate(oaTerm* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTerm,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTerm_oaTermModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTerm,oaTermModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTerm,simple-oaTermModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTerm_oaTermModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTerm)\n"
"    Calls: virtual void onPreDestroy(oaTerm* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTerm,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTerm_oaTermModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTerm,oaTermModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTerm,simple-oaTermModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTerm_oaTermModTypeEnumObject* self=(PyoaStdObserver_oaTerm_oaTermModTypeEnumObject*)ob;

    PyParamoaTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTerm_oaTermModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTerm_oaTermModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTerm_oaTermModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTerm_oaTermModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTerm_oaTermModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTerm_oaTermModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTerm_oaTermModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTerm_oaTermModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTerm_oaTermModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTerm_oaTermModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTerm_oaTermModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTerm_oaTermModTypeEnum",
    sizeof(PyoaStdObserver_oaTerm_oaTermModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTerm_oaTermModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTerm_oaTermModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTerm_oaTermModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTerm_oaTermModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTerm_oaTermModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTerm_oaTermModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTerm_oaTermModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTerm)\n"
"    Calls: void notifyPostCreateObservers(oaTerm* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTerm,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTerm_oaTermModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTerm,oaTermModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTerm,simple-oaTermModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTerm_oaTermModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTerm)\n"
"    Calls: void notifyPreDestroyObservers(oaTerm* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTerm,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTerm_oaTermModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTerm_oaTermModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTerm,oaTermModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTerm* object,oaTermModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTerm,simple-oaTermModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTerm p1;
    PyParamoaTermModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTerm_Convert,&p1,
          &PyoaTermModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTerm_oaTermModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTerm_oaTermModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTerm_oaTermModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTerm_oaTermModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTerm_oaTermModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTerm_oaTermModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTerm_oaTermModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTerm_oaTermModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTerm_oaTermModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTerm_oaTermModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTerm_oaTermModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTextDisplay_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[68];
    sprintf(buffer,"<oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTextDisplay_oaShapeModTypeEnum*) ((PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_FromoaStdObserver_oaTextDisplay_oaShapeModTypeEnum(oaStdObserver_oaTextDisplay_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostCreate(oaTextDisplay* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTextDisplay_FromoaTextDisplay(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostModify(oaTextDisplay* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTextDisplay_FromoaTextDisplay(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreDestroy(oaTextDisplay* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTextDisplay_FromoaTextDisplay(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreModify(oaTextDisplay* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTextDisplay_FromoaTextDisplay(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTextDisplay)\n"
"    Calls: virtual void onPostCreate(oaTextDisplay* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTextDisplay,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTextDisplay,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTextDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTextDisplay,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTextDisplay)\n"
"    Calls: virtual void onPreDestroy(oaTextDisplay* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTextDisplay,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTextDisplay,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTextDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTextDisplay,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTextDisplay_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTextDisplay_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTextDisplay)\n"
"    Calls: void notifyPostCreateObservers(oaTextDisplay* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTextDisplay,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTextDisplay,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTextDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTextDisplay,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTextDisplay)\n"
"    Calls: void notifyPreDestroyObservers(oaTextDisplay* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTextDisplay,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextDisplay p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextDisplay_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTextDisplay,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTextDisplay* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTextDisplay,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextDisplay p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextDisplay_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextDisplay_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTextDisplay_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTextDisplay_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTextDisplay_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTextDisplay_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTextOverride_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTextOverride_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTextOverride_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[69];
    sprintf(buffer,"<oaStdObserver_oaTextOverride_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTextOverride_oaShapeModTypeEnum*) ((PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_FromoaStdObserver_oaTextOverride_oaShapeModTypeEnum(oaStdObserver_oaTextOverride_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum::pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTextOverride_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum::pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTextOverride_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostCreate(oaTextOverride* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTextOverride_FromoaTextOverride(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostModify(oaTextOverride* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTextOverride_FromoaTextOverride(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreDestroy(oaTextOverride* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTextOverride_FromoaTextOverride(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreModify(oaTextOverride* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTextOverride_FromoaTextOverride(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTextOverride)\n"
"    Calls: virtual void onPostCreate(oaTextOverride* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTextOverride,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextOverride p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextOverride_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTextOverride,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTextOverride* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTextOverride,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextOverride p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextOverride_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTextOverride)\n"
"    Calls: virtual void onPreDestroy(oaTextOverride* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTextOverride,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextOverride p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextOverride_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTextOverride,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTextOverride* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTextOverride,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject*)ob;

    PyParamoaTextOverride p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextOverride_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTextOverride_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTextOverride_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTextOverride_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTextOverride_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTextOverride_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTextOverride_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTextOverride_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTextOverride_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaTextOverride_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTextOverride_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTextOverride_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTextOverride_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTextOverride_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTextOverride)\n"
"    Calls: void notifyPostCreateObservers(oaTextOverride* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTextOverride,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextOverride p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextOverride_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextOverride_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTextOverride,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTextOverride* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTextOverride,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextOverride p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextOverride_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextOverride_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTextOverride)\n"
"    Calls: void notifyPreDestroyObservers(oaTextOverride* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTextOverride,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextOverride p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTextOverride_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextOverride_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTextOverride_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTextOverride,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTextOverride* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTextOverride,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTextOverride p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTextOverride_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTextOverride_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTextOverride_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTextOverride_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTextOverride_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTextOverride_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTextOverride_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTextOverride_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTextOverride_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaText_oaShapeModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaText_oaShapeModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaText_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaText_oaShapeModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaText_oaShapeModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaText_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaText_oaShapeModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaText_oaShapeModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaText_oaShapeModTypeEnum* p=new pyv_oaStdObserver_oaText_oaShapeModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaText_oaShapeModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaText_oaShapeModTypeEnum_tp_dealloc(PyoaStdObserver_oaText_oaShapeModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaText_oaShapeModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum value;
    int convert_status=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaStdObserver_oaText_oaShapeModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaText_oaShapeModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum v1;
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaText_oaShapeModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaText_oaShapeModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaText_oaShapeModTypeEnum*) ((PyoaStdObserver_oaText_oaShapeModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaText_oaShapeModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaText_oaShapeModTypeEnum_FromoaStdObserver_oaText_oaShapeModTypeEnum(oaStdObserver_oaText_oaShapeModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaText_oaShapeModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaText_oaShapeModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaText_oaShapeModTypeEnumObject* self = (PyoaStdObserver_oaText_oaShapeModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaText_oaShapeModTypeEnum::pyv_oaStdObserver_oaText_oaShapeModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaText_oaShapeModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaText_oaShapeModTypeEnum::pyv_oaStdObserver_oaText_oaShapeModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaText_oaShapeModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaText_oaShapeModTypeEnum::onPostCreate(oaText* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaText_FromoaText(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaText_oaShapeModTypeEnum::onPostModify(oaText* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaText_FromoaText(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaText_oaShapeModTypeEnum::onPreDestroy(oaText* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaText_FromoaText(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaText_oaShapeModTypeEnum::onPreModify(oaText* p1,oaShapeModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaText_FromoaText(p1));
    PyTuple_SetItem(args,1,PyoaShapeModTypeEnum_FromoaShapeModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaText_oaShapeModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaText)\n"
"    Calls: virtual void onPostCreate(oaText* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaText,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaText_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaText_oaShapeModTypeEnumObject*)ob;

    PyParamoaText p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaText_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaText_oaShapeModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaText,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaText* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaText,simple-oaShapeModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaText_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaText_oaShapeModTypeEnumObject*)ob;

    PyParamoaText p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaText_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaText_oaShapeModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaText)\n"
"    Calls: virtual void onPreDestroy(oaText* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaText,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaText_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaText_oaShapeModTypeEnumObject*)ob;

    PyParamoaText p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaText_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaText_oaShapeModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaText,oaShapeModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaText* object,oaShapeModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaText,simple-oaShapeModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum data;
    int convert_status=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaText_oaShapeModTypeEnumObject* self=(PyoaStdObserver_oaText_oaShapeModTypeEnumObject*)ob;

    PyParamoaText p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaText_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaText_oaShapeModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaText_oaShapeModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaText_oaShapeModTypeEnum data;
  int convert_status=PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaText_oaShapeModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaText_oaShapeModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaText_oaShapeModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaText_oaShapeModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaText_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaText_oaShapeModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaText_oaShapeModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaText_oaShapeModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaText_oaShapeModTypeEnum",
    sizeof(PyoaStdObserver_oaText_oaShapeModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaText_oaShapeModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaText_oaShapeModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaText_oaShapeModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaText_oaShapeModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaText_oaShapeModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaText_oaShapeModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaText_oaShapeModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaText)\n"
"    Calls: void notifyPostCreateObservers(oaText* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaText,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaText p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaText_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaText_oaShapeModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaText,oaShapeModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaText* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaText,simple-oaShapeModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaText p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaText_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaText_oaShapeModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaText)\n"
"    Calls: void notifyPreDestroyObservers(oaText* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaText,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaText p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaText_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaText_oaShapeModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaText_oaShapeModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaText,oaShapeModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaText* object,oaShapeModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaText,simple-oaShapeModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaText p1;
    PyParamoaShapeModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaText_Convert,&p1,
          &PyoaShapeModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaText_oaShapeModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaText_oaShapeModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaText_oaShapeModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaText_oaShapeModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaText_oaShapeModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaText_oaShapeModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaText_oaShapeModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaText_oaShapeModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaText_oaShapeModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaText_oaShapeModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaText_oaShapeModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTimeProp_oaPropModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTimeProp_oaPropModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_dealloc(PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTimeProp_oaPropModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[64];
    sprintf(buffer,"<oaStdObserver_oaTimeProp_oaPropModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum v1;
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTimeProp_oaPropModTypeEnum*) ((PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTimeProp_oaPropModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_FromoaStdObserver_oaTimeProp_oaPropModTypeEnum(oaStdObserver_oaTimeProp_oaPropModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum::pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTimeProp_oaPropModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum::pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTimeProp_oaPropModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostCreate(oaTimeProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTimeProp_FromoaTimeProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostModify(oaTimeProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTimeProp_FromoaTimeProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreDestroy(oaTimeProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTimeProp_FromoaTimeProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreModify(oaTimeProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTimeProp_FromoaTimeProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTimeProp)\n"
"    Calls: virtual void onPostCreate(oaTimeProp* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTimeProp,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTimeProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTimeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTimeProp,simple-oaPropModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTimeProp)\n"
"    Calls: virtual void onPreDestroy(oaTimeProp* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTimeProp,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTimeProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTimeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTimeProp,simple-oaPropModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeProp_oaPropModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTimeProp_oaPropModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTimeProp_oaPropModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTimeProp_oaPropModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTimeProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTimeProp_oaPropModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTimeProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTimeProp_oaPropModTypeEnum",
    sizeof(PyoaStdObserver_oaTimeProp_oaPropModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTimeProp_oaPropModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTimeProp_oaPropModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTimeProp_oaPropModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTimeProp_oaPropModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTimeProp_oaPropModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTimeProp)\n"
"    Calls: void notifyPostCreateObservers(oaTimeProp* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTimeProp,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeProp_oaPropModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTimeProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTimeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTimeProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeProp_oaPropModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTimeProp)\n"
"    Calls: void notifyPreDestroyObservers(oaTimeProp* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTimeProp,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeProp_oaPropModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTimeProp_oaPropModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTimeProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTimeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTimeProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeProp_oaPropModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTimeProp_oaPropModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTimeProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTimeProp_oaPropModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTimeProp_oaPropModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTimeProp_oaPropModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTimeProp_oaPropModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTimeProp_oaPropModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(p1.Data());
            }
            else {
                pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(p1.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4,oaBoolean)
    {
        PyParamoaUInt4 p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaUInt4_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (is_raw) {
                self->value = (oaBaseObserver*)  new oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(p1.Data(),p2.Data());
            }
            else {
                pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum* p=new pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(p1.Data(),p2.Data());
                p->pyob=self;
                self->value= (oaBaseObserver*) p;
            }
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Choices are:\n"
        "    (oaUInt4)\n"
        "    (oaUInt4,oaBoolean)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_dealloc(PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject* self)
{
    if (!self->borrow) {
        delete (oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_repr(PyObject *ob)
{
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum value;
    int convert_status=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[69];
    sprintf(buffer,"<oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum v1;
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum v2;
    int convert_status1=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob1,&v1);
    int convert_status2=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(PyObject* ob,PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Check(ob)) {
        result->SetData( (oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum*) ((PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_FromoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Type.tp_alloc(&PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Type,0);
        if (bself == NULL) return bself;
        PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject* self = (PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject*)bself;
        self->value = (oaBaseObserver*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(oaUInt4 p1)
 : pyob(NULL),
   oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(p1)
{
}

// ------------------------------------------------------------------
pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(oaUInt4 p1,oaBoolean p2)
 : pyob(NULL),
   oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(p1,p2)
{
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostCreate(oaTimeRangeProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostCreate");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostCreate was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTimeRangeProp_FromoaTimeRangeProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostCreate had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostModify(oaTimeRangeProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPostModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTimeRangeProp_FromoaTimeRangeProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostModify had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreDestroy(oaTimeRangeProp* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreDestroy");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreDestroy was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaTimeRangeProp_FromoaTimeRangeProp(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreDestroy had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreModify(oaTimeRangeProp* p1,oaPropModTypeEnum p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"onPreModify");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreModify was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaTimeRangeProp_FromoaTimeRangeProp(p1));
    PyTuple_SetItem(args,1,PyoaPropModTypeEnum_FromoaPropModTypeEnum(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreModify had an error.");
    }
    Py_DECREF(result);
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostCreate_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: onPostCreate\n"
"  Paramegers: (oaTimeRangeProp)\n"
"    Calls: virtual void onPostCreate(oaTimeRangeProp* object)\n"
"    Signature: onPostCreate|void-void|ptr-oaTimeRangeProp,\n"
"    This function is called after an observed object is created. The application's derived observer class should implement this function to receive notification after the object is created.\n"
"    object\n"
"    pointer to the created object\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostCreate(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeRangeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeRangeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostCreate(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostModify_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: onPostModify\n"
"  Paramegers: (oaTimeRangeProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPostModify(oaTimeRangeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPostModify|void-void|ptr-oaTimeRangeProp,simple-oaPropModTypeEnum,\n"
"    This function is called after an observed object has been modified. The application's derived class should implement this function to receive notification when an observed object has been modified.\n"
"    object\n"
"    A pointer to the modified object\n"
"    modType\n"
"    The type of modification that was made\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeRangeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeRangeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPostModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreDestroy_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: onPreDestroy\n"
"  Paramegers: (oaTimeRangeProp)\n"
"    Calls: virtual void onPreDestroy(oaTimeRangeProp* object)\n"
"    Signature: onPreDestroy|void-void|ptr-oaTimeRangeProp,\n"
"    This function is called just before an observed object is destroyed. The application's derived observer class should implement this function to receive notification before the object is destroyed.\n"
"    object\n"
"    pointer to the header to be destroyed\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreDestroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeRangeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeRangeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreDestroy(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreModify_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: onPreModify\n"
"  Paramegers: (oaTimeRangeProp,oaPropModTypeEnum)\n"
"    Calls: virtual void onPreModify(oaTimeRangeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: onPreModify|void-void|ptr-oaTimeRangeProp,simple-oaPropModTypeEnum,\n"
"    This function is called before an observed object is modified. The application's derived class should implement this function to receive notification when the observed object is about to be modified.\n"
"    object\n"
"    A pointer to the object to be modified\n"
"    modType\n"
"    The type of modification to be made\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreModify(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum data;
    int convert_status=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject* self=(PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject*)ob;

    PyParamoaTimeRangeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeRangeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::onPreModify(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_assign_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum data;
  int convert_status=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_methodlist[] = {
    {"onPostCreate",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostCreate,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostCreate_doc},
    {"onPostModify",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostModify,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPostModify_doc},
    {"onPreDestroy",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreDestroy,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreDestroy_doc},
    {"onPreModify",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreModify,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_onPreModify_doc},
    {"assign",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_assign,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum\n"
"  The oaStdObserver<T, D> class is a base template class for standard observers. It supports postCreate, preDestroy, preModify, and postModify event notifications.\n"
"  See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.\n"
"Constructors:\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(oaUInt4 priorityIn)\n"
"    Signature: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
"  Paramegers: (oaUInt4,oaBoolean)\n"
"    Calls: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum(oaUInt4 priorityIn,oaBoolean enabledIn)\n"
"    Signature: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum||simple-oaUInt4,simple-oaBoolean,\n"
"    This is the constructor for the oaStdObserver<T, D> template class. Observers are ordered by priority from lowest to highest.\n"
"    priorityIn\n"
"    priority of this observer\n"
"    enabledIn\n"
"    Determines whether this observer is called when an observed event occurs\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum",
    sizeof(PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnumObject),
    0,
    (destructor)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_compare,	/* tp_compare */
    (reprfunc)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseObserver_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_hasObservers_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: hasObservers\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasObservers()\n"
"    Signature: hasObservers|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if any observers for type 'T' are active.\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_hasObservers(PyObject* ob, PyObject *args)
{
  try {
    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::hasObservers());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: notifyPostCreateObservers\n"
"  Paramegers: (oaTimeRangeProp)\n"
"    Calls: void notifyPostCreateObservers(oaTimeRangeProp* object)\n"
"    Signature: notifyPostCreateObservers|void-void|ptr-oaTimeRangeProp,\n"
"    Function notifyPostCreateObservers\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostCreateObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeRangeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeRangeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::notifyPostCreateObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: notifyPostModifyObservers\n"
"  Paramegers: (oaTimeRangeProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPostModifyObservers(oaTimeRangeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPostModifyObservers|void-void|ptr-oaTimeRangeProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPostModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeRangeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeRangeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::notifyPostModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: notifyPreDestroyObservers\n"
"  Paramegers: (oaTimeRangeProp)\n"
"    Calls: void notifyPreDestroyObservers(oaTimeRangeProp* object)\n"
"    Signature: notifyPreDestroyObservers|void-void|ptr-oaTimeRangeProp,\n"
"    Function notifyPreDestroyObservers\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeRangeProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTimeRangeProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::notifyPreDestroyObservers(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc[] = 
"Class: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum, Function: notifyPreModifyObservers\n"
"  Paramegers: (oaTimeRangeProp,oaPropModTypeEnum)\n"
"    Calls: void notifyPreModifyObservers(oaTimeRangeProp* object,oaPropModTypeEnum modType)\n"
"    Signature: notifyPreModifyObservers|void-void|ptr-oaTimeRangeProp,simple-oaPropModTypeEnum,\n"
"    Function notifyPreModifyObservers\n"
;

static PyObject*
oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreModifyObservers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaTimeRangeProp p1;
    PyParamoaPropModTypeEnum p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTimeRangeProp_Convert,&p1,
          &PyoaPropModTypeEnum_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum::notifyPreModifyObservers(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_staticmethodlist[] = {
    {"static_hasObservers",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_hasObservers,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_hasObservers_doc},
    {"static_notifyPostCreateObservers",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostCreateObservers,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostCreateObservers_doc},
    {"static_notifyPostModifyObservers",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostModifyObservers,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPostModifyObservers_doc},
    {"static_notifyPreDestroyObservers",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreDestroyObservers_doc},
    {"static_notifyPreModifyObservers",(PyCFunction)oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreModifyObservers,METH_VARARGS,oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_static_notifyPreModifyObservers_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Type)<0) {
      printf("** PyType_Ready failed for: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum",
           (PyObject*)(&PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_Type.tp_dict;
    for(method=oaStdObserver_oaTimeRangeProp_oaPropModTypeEnum_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

