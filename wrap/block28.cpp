
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaParasiticNetwork
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaParasiticNetwork_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaParasiticNetworkObject* self = (PyoaIntraPointerAppDef_oaParasiticNetworkObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaParasiticNetwork)
    {
        PyParamoaIntraPointerAppDef_oaParasiticNetwork p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaParasiticNetwork_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaParasiticNetwork, Choices are:\n"
        "    (oaIntraPointerAppDef_oaParasiticNetwork)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaParasiticNetwork_tp_dealloc(PyoaIntraPointerAppDef_oaParasiticNetworkObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaParasiticNetwork value;
    int convert_status=PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaIntraPointerAppDef_oaParasiticNetwork::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaParasiticNetwork_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaParasiticNetwork v1;
    PyParamoaIntraPointerAppDef_oaParasiticNetwork v2;
    int convert_status1=PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaParasiticNetwork* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaParasiticNetwork_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaParasiticNetwork**) ((PyoaIntraPointerAppDef_oaParasiticNetworkObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaParasiticNetwork Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(oaIntraPointerAppDef_oaParasiticNetwork** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaParasiticNetwork* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaIntraPointerAppDef_oaParasiticNetwork_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaParasiticNetworkObject* self = (PyoaIntraPointerAppDef_oaParasiticNetworkObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(oaIntraPointerAppDef_oaParasiticNetwork* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaParasiticNetwork_Type.tp_alloc(&PyoaIntraPointerAppDef_oaParasiticNetwork_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaParasiticNetworkObject* self = (PyoaIntraPointerAppDef_oaParasiticNetworkObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaParasiticNetwork_get_doc[] = 
"Class: oaIntraPointerAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaParasiticNetwork)\n"
"    Calls: oaParasiticNetwork* get(const oaParasiticNetwork* object)\n"
"    Signature: get|ptr-oaParasiticNetwork|cptr-oaParasiticNetwork,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaParasiticNetwork data;
    int convert_status=PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaParasiticNetworkObject* self=(PyoaIntraPointerAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaParasiticNetwork_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaParasiticNetworkp result= (data.DataCall()->get(p1.Data()));
        return PyoaParasiticNetwork_FromoaParasiticNetwork(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaParasiticNetwork_set_doc[] = 
"Class: oaIntraPointerAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaParasiticNetwork,oaParasiticNetwork)\n"
"    Calls: void set(oaParasiticNetwork* object,const oaParasiticNetwork* otherObject)\n"
"    Signature: set|void-void|ptr-oaParasiticNetwork,cptr-oaParasiticNetwork,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaParasiticNetwork data;
    int convert_status=PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaParasiticNetworkObject* self=(PyoaIntraPointerAppDef_oaParasiticNetworkObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaParasiticNetwork p1;
    PyParamoaParasiticNetwork p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaParasiticNetwork_Convert,&p1,
          &PyoaParasiticNetwork_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaParasiticNetwork_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaParasiticNetwork, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaParasiticNetwork data;
    int convert_status=PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaParasiticNetwork_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaParasiticNetwork, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaParasiticNetwork data;
  int convert_status=PyoaIntraPointerAppDef_oaParasiticNetwork_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaParasiticNetwork p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaParasiticNetwork_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaParasiticNetwork_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaParasiticNetwork_get,METH_VARARGS,oaIntraPointerAppDef_oaParasiticNetwork_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaParasiticNetwork_set,METH_VARARGS,oaIntraPointerAppDef_oaParasiticNetwork_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaParasiticNetwork_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaParasiticNetwork_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaParasiticNetwork_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaParasiticNetwork_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaParasiticNetwork_doc[] = 
"Class: oaIntraPointerAppDef_oaParasiticNetwork\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaParasiticNetwork)\n"
"    Calls: (const oaIntraPointerAppDef_oaParasiticNetwork&)\n"
"    Signature: oaIntraPointerAppDef_oaParasiticNetwork||cref-oaIntraPointerAppDef_oaParasiticNetwork,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaParasiticNetwork_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaParasiticNetwork",
    sizeof(PyoaIntraPointerAppDef_oaParasiticNetworkObject),
    0,
    (destructor)oaIntraPointerAppDef_oaParasiticNetwork_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaParasiticNetwork_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaParasiticNetwork_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaParasiticNetwork_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaParasiticNetwork_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaParasiticNetwork_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaParasiticNetwork_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaParasiticNetwork, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaParasiticNetwork* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaParasiticNetwork|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaParasiticNetwork* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaParasiticNetworkp result= (oaIntraPointerAppDef_oaParasiticNetwork::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaParasiticNetworkp result= (oaIntraPointerAppDef_oaParasiticNetwork::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaParasiticNetwork, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaParasiticNetwork_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaParasiticNetwork, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaParasiticNetwork* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaParasiticNetwork|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaParasiticNetwork* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaParasiticNetwork|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaParasiticNetwork* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaParasiticNetwork|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaParasiticNetwork_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaParasiticNetworkp result= (oaIntraPointerAppDef_oaParasiticNetwork::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaParasiticNetworkp result= (oaIntraPointerAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaParasiticNetworkp result= (oaIntraPointerAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaParasiticNetworkp result= (oaIntraPointerAppDef_oaParasiticNetwork::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaParasiticNetwork_FromoaIntraPointerAppDef_oaParasiticNetwork(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaParasiticNetwork, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaParasiticNetwork_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaParasiticNetwork_static_find,METH_VARARGS,oaIntraPointerAppDef_oaParasiticNetwork_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaParasiticNetwork_static_get,METH_VARARGS,oaIntraPointerAppDef_oaParasiticNetwork_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaParasiticNetwork_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaParasiticNetwork_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaParasiticNetwork\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaParasiticNetwork",
           (PyObject*)(&PyoaIntraPointerAppDef_oaParasiticNetwork_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaParasiticNetwork\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaParasiticNetwork_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaParasiticNetwork_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaPin
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaPin_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaPin_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaPinObject* self = (PyoaIntraPointerAppDef_oaPinObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaPin)
    {
        PyParamoaIntraPointerAppDef_oaPin p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaPin_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaPin, Choices are:\n"
        "    (oaIntraPointerAppDef_oaPin)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaPin_tp_dealloc(PyoaIntraPointerAppDef_oaPinObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaPin_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaPin value;
    int convert_status=PyoaIntraPointerAppDef_oaPin_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntraPointerAppDef_oaPin::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaPin_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaPin v1;
    PyParamoaIntraPointerAppDef_oaPin v2;
    int convert_status1=PyoaIntraPointerAppDef_oaPin_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaPin_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaPin_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaPin* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaPin_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaPin**) ((PyoaIntraPointerAppDef_oaPinObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaPin Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(oaIntraPointerAppDef_oaPin** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaPin* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaPin_Type.tp_alloc(&PyoaIntraPointerAppDef_oaPin_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaPinObject* self = (PyoaIntraPointerAppDef_oaPinObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(oaIntraPointerAppDef_oaPin* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaPin_Type.tp_alloc(&PyoaIntraPointerAppDef_oaPin_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaPinObject* self = (PyoaIntraPointerAppDef_oaPinObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPin_get_doc[] = 
"Class: oaIntraPointerAppDef_oaPin, Function: get\n"
"  Paramegers: (oaPin)\n"
"    Calls: oaPin* get(const oaPin* object)\n"
"    Signature: get|ptr-oaPin|cptr-oaPin,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaPin_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaPin data;
    int convert_status=PyoaIntraPointerAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPinObject* self=(PyoaIntraPointerAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPin_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaPinp result= (data.DataCall()->get(p1.Data()));
        return PyoaPin_FromoaPin(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPin_set_doc[] = 
"Class: oaIntraPointerAppDef_oaPin, Function: set\n"
"  Paramegers: (oaPin,oaPin)\n"
"    Calls: void set(oaPin* object,const oaPin* otherObject)\n"
"    Signature: set|void-void|ptr-oaPin,cptr-oaPin,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaPin_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaPin data;
    int convert_status=PyoaIntraPointerAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPinObject* self=(PyoaIntraPointerAppDef_oaPinObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPin p1;
    PyParamoaPin p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPin_Convert,&p1,
          &PyoaPin_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPin_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaPin, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaPin_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaPin data;
    int convert_status=PyoaIntraPointerAppDef_oaPin_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaPin_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaPin, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaPin_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaPin data;
  int convert_status=PyoaIntraPointerAppDef_oaPin_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaPin p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaPin_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaPin_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaPin_get,METH_VARARGS,oaIntraPointerAppDef_oaPin_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaPin_set,METH_VARARGS,oaIntraPointerAppDef_oaPin_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaPin_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaPin_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaPin_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaPin_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPin_doc[] = 
"Class: oaIntraPointerAppDef_oaPin\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaPin)\n"
"    Calls: (const oaIntraPointerAppDef_oaPin&)\n"
"    Signature: oaIntraPointerAppDef_oaPin||cref-oaIntraPointerAppDef_oaPin,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaPin_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaPin",
    sizeof(PyoaIntraPointerAppDef_oaPinObject),
    0,
    (destructor)oaIntraPointerAppDef_oaPin_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaPin_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaPin_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaPin_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaPin_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaPin_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPin_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaPin, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaPin* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaPin|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaPin* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaPin_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPinp result= (oaIntraPointerAppDef_oaPin::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPinp result= (oaIntraPointerAppDef_oaPin::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaPin, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPin_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaPin, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaPin* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPin|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaPin* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPin|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaPin* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPin|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaPin_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPinp result= (oaIntraPointerAppDef_oaPin::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaPinp result= (oaIntraPointerAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPinp result= (oaIntraPointerAppDef_oaPin::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPinp result= (oaIntraPointerAppDef_oaPin::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaPin_FromoaIntraPointerAppDef_oaPin(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaPin, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaPin_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaPin_static_find,METH_VARARGS,oaIntraPointerAppDef_oaPin_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaPin_static_get,METH_VARARGS,oaIntraPointerAppDef_oaPin_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaPin_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaPin_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaPin\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaPin",
           (PyObject*)(&PyoaIntraPointerAppDef_oaPin_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaPin\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaPin_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaPin_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaPoleResidue
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaPoleResidue_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaPoleResidue_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaPoleResidueObject* self = (PyoaIntraPointerAppDef_oaPoleResidueObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaPoleResidue)
    {
        PyParamoaIntraPointerAppDef_oaPoleResidue p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaPoleResidue_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaPoleResidue, Choices are:\n"
        "    (oaIntraPointerAppDef_oaPoleResidue)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaPoleResidue_tp_dealloc(PyoaIntraPointerAppDef_oaPoleResidueObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaPoleResidue_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaPoleResidue value;
    int convert_status=PyoaIntraPointerAppDef_oaPoleResidue_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[56];
    sprintf(buffer,"<oaIntraPointerAppDef_oaPoleResidue::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaPoleResidue_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaPoleResidue v1;
    PyParamoaIntraPointerAppDef_oaPoleResidue v2;
    int convert_status1=PyoaIntraPointerAppDef_oaPoleResidue_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaPoleResidue_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaPoleResidue_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaPoleResidue* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaPoleResidue_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaPoleResidue**) ((PyoaIntraPointerAppDef_oaPoleResidueObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaPoleResidue Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(oaIntraPointerAppDef_oaPoleResidue** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaPoleResidue* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaPoleResidue_Type.tp_alloc(&PyoaIntraPointerAppDef_oaPoleResidue_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaPoleResidueObject* self = (PyoaIntraPointerAppDef_oaPoleResidueObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(oaIntraPointerAppDef_oaPoleResidue* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaPoleResidue_Type.tp_alloc(&PyoaIntraPointerAppDef_oaPoleResidue_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaPoleResidueObject* self = (PyoaIntraPointerAppDef_oaPoleResidueObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPoleResidue_get_doc[] = 
"Class: oaIntraPointerAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaPoleResidue)\n"
"    Calls: oaPoleResidue* get(const oaPoleResidue* object)\n"
"    Signature: get|ptr-oaPoleResidue|cptr-oaPoleResidue,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaPoleResidue_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaPoleResidue data;
    int convert_status=PyoaIntraPointerAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPoleResidueObject* self=(PyoaIntraPointerAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPoleResidue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaPoleResiduep result= (data.DataCall()->get(p1.Data()));
        return PyoaPoleResidue_FromoaPoleResidue(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPoleResidue_set_doc[] = 
"Class: oaIntraPointerAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaPoleResidue,oaPoleResidue)\n"
"    Calls: void set(oaPoleResidue* object,const oaPoleResidue* otherObject)\n"
"    Signature: set|void-void|ptr-oaPoleResidue,cptr-oaPoleResidue,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaPoleResidue_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaPoleResidue data;
    int convert_status=PyoaIntraPointerAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPoleResidueObject* self=(PyoaIntraPointerAppDef_oaPoleResidueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPoleResidue p1;
    PyParamoaPoleResidue p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPoleResidue_Convert,&p1,
          &PyoaPoleResidue_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPoleResidue_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaPoleResidue, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaPoleResidue_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaPoleResidue data;
    int convert_status=PyoaIntraPointerAppDef_oaPoleResidue_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaPoleResidue_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaPoleResidue, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaPoleResidue_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaPoleResidue data;
  int convert_status=PyoaIntraPointerAppDef_oaPoleResidue_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaPoleResidue p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaPoleResidue_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaPoleResidue_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaPoleResidue_get,METH_VARARGS,oaIntraPointerAppDef_oaPoleResidue_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaPoleResidue_set,METH_VARARGS,oaIntraPointerAppDef_oaPoleResidue_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaPoleResidue_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaPoleResidue_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaPoleResidue_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaPoleResidue_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPoleResidue_doc[] = 
"Class: oaIntraPointerAppDef_oaPoleResidue\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaPoleResidue)\n"
"    Calls: (const oaIntraPointerAppDef_oaPoleResidue&)\n"
"    Signature: oaIntraPointerAppDef_oaPoleResidue||cref-oaIntraPointerAppDef_oaPoleResidue,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaPoleResidue_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaPoleResidue",
    sizeof(PyoaIntraPointerAppDef_oaPoleResidueObject),
    0,
    (destructor)oaIntraPointerAppDef_oaPoleResidue_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaPoleResidue_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaPoleResidue_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaPoleResidue_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaPoleResidue_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaPoleResidue_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPoleResidue_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaPoleResidue, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaPoleResidue* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaPoleResidue|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaPoleResidue* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaPoleResidue_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPoleResiduep result= (oaIntraPointerAppDef_oaPoleResidue::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPoleResiduep result= (oaIntraPointerAppDef_oaPoleResidue::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaPoleResidue, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPoleResidue_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaPoleResidue, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaPoleResidue* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPoleResidue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaPoleResidue* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPoleResidue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaPoleResidue* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPoleResidue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaPoleResidue_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPoleResiduep result= (oaIntraPointerAppDef_oaPoleResidue::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaPoleResiduep result= (oaIntraPointerAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPoleResiduep result= (oaIntraPointerAppDef_oaPoleResidue::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPoleResiduep result= (oaIntraPointerAppDef_oaPoleResidue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaPoleResidue_FromoaIntraPointerAppDef_oaPoleResidue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaPoleResidue, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaPoleResidue_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaPoleResidue_static_find,METH_VARARGS,oaIntraPointerAppDef_oaPoleResidue_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaPoleResidue_static_get,METH_VARARGS,oaIntraPointerAppDef_oaPoleResidue_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaPoleResidue_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaPoleResidue_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaPoleResidue\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaPoleResidue",
           (PyObject*)(&PyoaIntraPointerAppDef_oaPoleResidue_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaPoleResidue\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaPoleResidue_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaPoleResidue_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaProp
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaProp_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaProp_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaPropObject* self = (PyoaIntraPointerAppDef_oaPropObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaProp)
    {
        PyParamoaIntraPointerAppDef_oaProp p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaProp_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaProp, Choices are:\n"
        "    (oaIntraPointerAppDef_oaProp)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaProp_tp_dealloc(PyoaIntraPointerAppDef_oaPropObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaProp_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaProp value;
    int convert_status=PyoaIntraPointerAppDef_oaProp_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntraPointerAppDef_oaProp::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaProp_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaProp v1;
    PyParamoaIntraPointerAppDef_oaProp v2;
    int convert_status1=PyoaIntraPointerAppDef_oaProp_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaProp_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaProp_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaProp* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaProp_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaProp**) ((PyoaIntraPointerAppDef_oaPropObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaProp Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(oaIntraPointerAppDef_oaProp** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaProp* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaProp_Type.tp_alloc(&PyoaIntraPointerAppDef_oaProp_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaPropObject* self = (PyoaIntraPointerAppDef_oaPropObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(oaIntraPointerAppDef_oaProp* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaProp_Type.tp_alloc(&PyoaIntraPointerAppDef_oaProp_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaPropObject* self = (PyoaIntraPointerAppDef_oaPropObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaProp_get_doc[] = 
"Class: oaIntraPointerAppDef_oaProp, Function: get\n"
"  Paramegers: (oaProp)\n"
"    Calls: oaProp* get(const oaProp* object)\n"
"    Signature: get|ptr-oaProp|cptr-oaProp,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaProp_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaProp data;
    int convert_status=PyoaIntraPointerAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPropObject* self=(PyoaIntraPointerAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaProp_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaPropp result= (data.DataCall()->get(p1.Data()));
        return PyoaProp_FromoaProp(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaProp_set_doc[] = 
"Class: oaIntraPointerAppDef_oaProp, Function: set\n"
"  Paramegers: (oaProp,oaProp)\n"
"    Calls: void set(oaProp* object,const oaProp* otherObject)\n"
"    Signature: set|void-void|ptr-oaProp,cptr-oaProp,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaProp_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaProp data;
    int convert_status=PyoaIntraPointerAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPropObject* self=(PyoaIntraPointerAppDef_oaPropObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaProp p1;
    PyParamoaProp p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaProp_Convert,&p1,
          &PyoaProp_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaProp_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaProp, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaProp_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaProp data;
    int convert_status=PyoaIntraPointerAppDef_oaProp_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaProp_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaProp, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaProp_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaProp data;
  int convert_status=PyoaIntraPointerAppDef_oaProp_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaProp p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaProp_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaProp_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaProp_get,METH_VARARGS,oaIntraPointerAppDef_oaProp_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaProp_set,METH_VARARGS,oaIntraPointerAppDef_oaProp_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaProp_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaProp_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaProp_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaProp_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaProp_doc[] = 
"Class: oaIntraPointerAppDef_oaProp\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaProp)\n"
"    Calls: (const oaIntraPointerAppDef_oaProp&)\n"
"    Signature: oaIntraPointerAppDef_oaProp||cref-oaIntraPointerAppDef_oaProp,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaProp_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaProp",
    sizeof(PyoaIntraPointerAppDef_oaPropObject),
    0,
    (destructor)oaIntraPointerAppDef_oaProp_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaProp_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaProp_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaProp_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaProp_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaProp_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaProp_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaProp, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaProp* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaProp|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaProp* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaProp_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPropp result= (oaIntraPointerAppDef_oaProp::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPropp result= (oaIntraPointerAppDef_oaProp::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaProp, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaProp_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaProp, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaProp* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaProp|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaProp* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaProp|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaProp* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaProp|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaProp_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPropp result= (oaIntraPointerAppDef_oaProp::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaPropp result= (oaIntraPointerAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPropp result= (oaIntraPointerAppDef_oaProp::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPropp result= (oaIntraPointerAppDef_oaProp::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaProp_FromoaIntraPointerAppDef_oaProp(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaProp, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaProp_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaProp_static_find,METH_VARARGS,oaIntraPointerAppDef_oaProp_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaProp_static_get,METH_VARARGS,oaIntraPointerAppDef_oaProp_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaProp_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaProp_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaProp\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaProp",
           (PyObject*)(&PyoaIntraPointerAppDef_oaProp_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaProp\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaProp_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaProp_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaPurpose
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaPurpose_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaPurpose_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaPurposeObject* self = (PyoaIntraPointerAppDef_oaPurposeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaPurpose)
    {
        PyParamoaIntraPointerAppDef_oaPurpose p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaPurpose_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaPurpose, Choices are:\n"
        "    (oaIntraPointerAppDef_oaPurpose)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaPurpose_tp_dealloc(PyoaIntraPointerAppDef_oaPurposeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaPurpose_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaPurpose value;
    int convert_status=PyoaIntraPointerAppDef_oaPurpose_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaPurpose::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaPurpose_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaPurpose v1;
    PyParamoaIntraPointerAppDef_oaPurpose v2;
    int convert_status1=PyoaIntraPointerAppDef_oaPurpose_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaPurpose_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaPurpose_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaPurpose* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaPurpose_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaPurpose**) ((PyoaIntraPointerAppDef_oaPurposeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaPurpose Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(oaIntraPointerAppDef_oaPurpose** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaPurpose* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaPurpose_Type.tp_alloc(&PyoaIntraPointerAppDef_oaPurpose_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaPurposeObject* self = (PyoaIntraPointerAppDef_oaPurposeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(oaIntraPointerAppDef_oaPurpose* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaPurpose_Type.tp_alloc(&PyoaIntraPointerAppDef_oaPurpose_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaPurposeObject* self = (PyoaIntraPointerAppDef_oaPurposeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPurpose_get_doc[] = 
"Class: oaIntraPointerAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaPurpose)\n"
"    Calls: oaPurpose* get(const oaPurpose* object)\n"
"    Signature: get|ptr-oaPurpose|cptr-oaPurpose,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaPurpose_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaPurpose data;
    int convert_status=PyoaIntraPointerAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPurposeObject* self=(PyoaIntraPointerAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPurpose_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaPurposep result= (data.DataCall()->get(p1.Data()));
        return PyoaPurpose_FromoaPurpose(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPurpose_set_doc[] = 
"Class: oaIntraPointerAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaPurpose,oaPurpose)\n"
"    Calls: void set(oaPurpose* object,const oaPurpose* otherObject)\n"
"    Signature: set|void-void|ptr-oaPurpose,cptr-oaPurpose,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaPurpose_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaPurpose data;
    int convert_status=PyoaIntraPointerAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaPurposeObject* self=(PyoaIntraPointerAppDef_oaPurposeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPurpose p1;
    PyParamoaPurpose p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaPurpose_Convert,&p1,
          &PyoaPurpose_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPurpose_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaPurpose, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaPurpose_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaPurpose data;
    int convert_status=PyoaIntraPointerAppDef_oaPurpose_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaPurpose_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaPurpose, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaPurpose_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaPurpose data;
  int convert_status=PyoaIntraPointerAppDef_oaPurpose_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaPurpose p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaPurpose_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaPurpose_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaPurpose_get,METH_VARARGS,oaIntraPointerAppDef_oaPurpose_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaPurpose_set,METH_VARARGS,oaIntraPointerAppDef_oaPurpose_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaPurpose_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaPurpose_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaPurpose_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaPurpose_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPurpose_doc[] = 
"Class: oaIntraPointerAppDef_oaPurpose\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaPurpose)\n"
"    Calls: (const oaIntraPointerAppDef_oaPurpose&)\n"
"    Signature: oaIntraPointerAppDef_oaPurpose||cref-oaIntraPointerAppDef_oaPurpose,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaPurpose_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaPurpose",
    sizeof(PyoaIntraPointerAppDef_oaPurposeObject),
    0,
    (destructor)oaIntraPointerAppDef_oaPurpose_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaPurpose_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaPurpose_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaPurpose_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaPurpose_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaPurpose_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPurpose_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaPurpose, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaPurpose* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaPurpose|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaPurpose* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaPurpose_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPurposep result= (oaIntraPointerAppDef_oaPurpose::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPurposep result= (oaIntraPointerAppDef_oaPurpose::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaPurpose, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaPurpose_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaPurpose, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaPurpose* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPurpose|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaPurpose* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPurpose|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaPurpose* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaPurpose|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaPurpose_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaPurposep result= (oaIntraPointerAppDef_oaPurpose::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaPurposep result= (oaIntraPointerAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPurposep result= (oaIntraPointerAppDef_oaPurpose::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaPurposep result= (oaIntraPointerAppDef_oaPurpose::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaPurpose_FromoaIntraPointerAppDef_oaPurpose(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaPurpose, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaPurpose_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaPurpose_static_find,METH_VARARGS,oaIntraPointerAppDef_oaPurpose_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaPurpose_static_get,METH_VARARGS,oaIntraPointerAppDef_oaPurpose_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaPurpose_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaPurpose_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaPurpose\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaPurpose",
           (PyObject*)(&PyoaIntraPointerAppDef_oaPurpose_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaPurpose\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaPurpose_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaPurpose_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaReducedModel
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaReducedModel_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaReducedModel_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaReducedModelObject* self = (PyoaIntraPointerAppDef_oaReducedModelObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaReducedModel)
    {
        PyParamoaIntraPointerAppDef_oaReducedModel p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaReducedModel_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaReducedModel, Choices are:\n"
        "    (oaIntraPointerAppDef_oaReducedModel)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaReducedModel_tp_dealloc(PyoaIntraPointerAppDef_oaReducedModelObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaReducedModel_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaReducedModel value;
    int convert_status=PyoaIntraPointerAppDef_oaReducedModel_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaIntraPointerAppDef_oaReducedModel::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaReducedModel_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaReducedModel v1;
    PyParamoaIntraPointerAppDef_oaReducedModel v2;
    int convert_status1=PyoaIntraPointerAppDef_oaReducedModel_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaReducedModel_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaReducedModel_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaReducedModel* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaReducedModel_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaReducedModel**) ((PyoaIntraPointerAppDef_oaReducedModelObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaReducedModel Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(oaIntraPointerAppDef_oaReducedModel** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaReducedModel* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaReducedModel_Type.tp_alloc(&PyoaIntraPointerAppDef_oaReducedModel_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaReducedModelObject* self = (PyoaIntraPointerAppDef_oaReducedModelObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(oaIntraPointerAppDef_oaReducedModel* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaReducedModel_Type.tp_alloc(&PyoaIntraPointerAppDef_oaReducedModel_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaReducedModelObject* self = (PyoaIntraPointerAppDef_oaReducedModelObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReducedModel_get_doc[] = 
"Class: oaIntraPointerAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaReducedModel)\n"
"    Calls: oaReducedModel* get(const oaReducedModel* object)\n"
"    Signature: get|ptr-oaReducedModel|cptr-oaReducedModel,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaReducedModel_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaReducedModel data;
    int convert_status=PyoaIntraPointerAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaReducedModelObject* self=(PyoaIntraPointerAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReducedModel_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaReducedModelp result= (data.DataCall()->get(p1.Data()));
        return PyoaReducedModel_FromoaReducedModel(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReducedModel_set_doc[] = 
"Class: oaIntraPointerAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaReducedModel,oaReducedModel)\n"
"    Calls: void set(oaReducedModel* object,const oaReducedModel* otherObject)\n"
"    Signature: set|void-void|ptr-oaReducedModel,cptr-oaReducedModel,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaReducedModel_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaReducedModel data;
    int convert_status=PyoaIntraPointerAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaReducedModelObject* self=(PyoaIntraPointerAppDef_oaReducedModelObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReducedModel p1;
    PyParamoaReducedModel p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReducedModel_Convert,&p1,
          &PyoaReducedModel_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReducedModel_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaReducedModel, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaReducedModel_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaReducedModel data;
    int convert_status=PyoaIntraPointerAppDef_oaReducedModel_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaReducedModel_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaReducedModel, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaReducedModel_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaReducedModel data;
  int convert_status=PyoaIntraPointerAppDef_oaReducedModel_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaReducedModel p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaReducedModel_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaReducedModel_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaReducedModel_get,METH_VARARGS,oaIntraPointerAppDef_oaReducedModel_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaReducedModel_set,METH_VARARGS,oaIntraPointerAppDef_oaReducedModel_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaReducedModel_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaReducedModel_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaReducedModel_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaReducedModel_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReducedModel_doc[] = 
"Class: oaIntraPointerAppDef_oaReducedModel\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaReducedModel)\n"
"    Calls: (const oaIntraPointerAppDef_oaReducedModel&)\n"
"    Signature: oaIntraPointerAppDef_oaReducedModel||cref-oaIntraPointerAppDef_oaReducedModel,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaReducedModel_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaReducedModel",
    sizeof(PyoaIntraPointerAppDef_oaReducedModelObject),
    0,
    (destructor)oaIntraPointerAppDef_oaReducedModel_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaReducedModel_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaReducedModel_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaReducedModel_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaReducedModel_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaReducedModel_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReducedModel_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaReducedModel, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaReducedModel* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaReducedModel|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaReducedModel* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaReducedModel_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaReducedModelp result= (oaIntraPointerAppDef_oaReducedModel::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReducedModelp result= (oaIntraPointerAppDef_oaReducedModel::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaReducedModel, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReducedModel_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaReducedModel, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaReducedModel* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReducedModel|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaReducedModel* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReducedModel|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaReducedModel* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReducedModel|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaReducedModel_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaReducedModelp result= (oaIntraPointerAppDef_oaReducedModel::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaReducedModelp result= (oaIntraPointerAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReducedModelp result= (oaIntraPointerAppDef_oaReducedModel::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReducedModelp result= (oaIntraPointerAppDef_oaReducedModel::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaReducedModel_FromoaIntraPointerAppDef_oaReducedModel(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaReducedModel, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaReducedModel_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaReducedModel_static_find,METH_VARARGS,oaIntraPointerAppDef_oaReducedModel_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaReducedModel_static_get,METH_VARARGS,oaIntraPointerAppDef_oaReducedModel_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaReducedModel_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaReducedModel_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaReducedModel\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaReducedModel",
           (PyObject*)(&PyoaIntraPointerAppDef_oaReducedModel_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaReducedModel\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaReducedModel_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaReducedModel_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaReticle
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaReticle_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaReticle_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaReticleObject* self = (PyoaIntraPointerAppDef_oaReticleObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaReticle)
    {
        PyParamoaIntraPointerAppDef_oaReticle p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaReticle_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaReticle, Choices are:\n"
        "    (oaIntraPointerAppDef_oaReticle)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaReticle_tp_dealloc(PyoaIntraPointerAppDef_oaReticleObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaReticle_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaReticle value;
    int convert_status=PyoaIntraPointerAppDef_oaReticle_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaReticle::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaReticle_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaReticle v1;
    PyParamoaIntraPointerAppDef_oaReticle v2;
    int convert_status1=PyoaIntraPointerAppDef_oaReticle_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaReticle_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaReticle_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaReticle* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaReticle_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaReticle**) ((PyoaIntraPointerAppDef_oaReticleObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaReticle Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(oaIntraPointerAppDef_oaReticle** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaReticle* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaReticle_Type.tp_alloc(&PyoaIntraPointerAppDef_oaReticle_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaReticleObject* self = (PyoaIntraPointerAppDef_oaReticleObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(oaIntraPointerAppDef_oaReticle* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaReticle_Type.tp_alloc(&PyoaIntraPointerAppDef_oaReticle_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaReticleObject* self = (PyoaIntraPointerAppDef_oaReticleObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticle_get_doc[] = 
"Class: oaIntraPointerAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaReticle)\n"
"    Calls: oaReticle* get(const oaReticle* object)\n"
"    Signature: get|ptr-oaReticle|cptr-oaReticle,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticle_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaReticle data;
    int convert_status=PyoaIntraPointerAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaReticleObject* self=(PyoaIntraPointerAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticle_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaReticlep result= (data.DataCall()->get(p1.Data()));
        return PyoaReticle_FromoaReticle(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticle_set_doc[] = 
"Class: oaIntraPointerAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaReticle,oaReticle)\n"
"    Calls: void set(oaReticle* object,const oaReticle* otherObject)\n"
"    Signature: set|void-void|ptr-oaReticle,cptr-oaReticle,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticle_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaReticle data;
    int convert_status=PyoaIntraPointerAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaReticleObject* self=(PyoaIntraPointerAppDef_oaReticleObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticle p1;
    PyParamoaReticle p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticle_Convert,&p1,
          &PyoaReticle_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticle_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaReticle, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticle_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaReticle data;
    int convert_status=PyoaIntraPointerAppDef_oaReticle_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaReticle_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaReticle, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticle_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaReticle data;
  int convert_status=PyoaIntraPointerAppDef_oaReticle_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaReticle p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaReticle_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaReticle_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaReticle_get,METH_VARARGS,oaIntraPointerAppDef_oaReticle_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaReticle_set,METH_VARARGS,oaIntraPointerAppDef_oaReticle_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaReticle_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaReticle_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaReticle_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaReticle_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticle_doc[] = 
"Class: oaIntraPointerAppDef_oaReticle\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaReticle)\n"
"    Calls: (const oaIntraPointerAppDef_oaReticle&)\n"
"    Signature: oaIntraPointerAppDef_oaReticle||cref-oaIntraPointerAppDef_oaReticle,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaReticle_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaReticle",
    sizeof(PyoaIntraPointerAppDef_oaReticleObject),
    0,
    (destructor)oaIntraPointerAppDef_oaReticle_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaReticle_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaReticle_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaReticle_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaReticle_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaReticle_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticle_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaReticle, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaReticle* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaReticle|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaReticle* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticle_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaReticlep result= (oaIntraPointerAppDef_oaReticle::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReticlep result= (oaIntraPointerAppDef_oaReticle::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaReticle, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticle_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaReticle, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaReticle* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticle|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaReticle* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticle|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaReticle* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticle|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticle_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaReticlep result= (oaIntraPointerAppDef_oaReticle::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaReticlep result= (oaIntraPointerAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReticlep result= (oaIntraPointerAppDef_oaReticle::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReticlep result= (oaIntraPointerAppDef_oaReticle::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaReticle_FromoaIntraPointerAppDef_oaReticle(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaReticle, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaReticle_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaReticle_static_find,METH_VARARGS,oaIntraPointerAppDef_oaReticle_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaReticle_static_get,METH_VARARGS,oaIntraPointerAppDef_oaReticle_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaReticle_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaReticle_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaReticle\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaReticle",
           (PyObject*)(&PyoaIntraPointerAppDef_oaReticle_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaReticle\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaReticle_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaReticle_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaReticleRef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaReticleRef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaReticleRef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaReticleRefObject* self = (PyoaIntraPointerAppDef_oaReticleRefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaReticleRef)
    {
        PyParamoaIntraPointerAppDef_oaReticleRef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaReticleRef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaReticleRef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaReticleRef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaReticleRef_tp_dealloc(PyoaIntraPointerAppDef_oaReticleRefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaReticleRef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaReticleRef value;
    int convert_status=PyoaIntraPointerAppDef_oaReticleRef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntraPointerAppDef_oaReticleRef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaReticleRef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaReticleRef v1;
    PyParamoaIntraPointerAppDef_oaReticleRef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaReticleRef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaReticleRef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaReticleRef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaReticleRef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaReticleRef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaReticleRef**) ((PyoaIntraPointerAppDef_oaReticleRefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaReticleRef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(oaIntraPointerAppDef_oaReticleRef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaReticleRef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaReticleRef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaReticleRef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaReticleRefObject* self = (PyoaIntraPointerAppDef_oaReticleRefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(oaIntraPointerAppDef_oaReticleRef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaReticleRef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaReticleRef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaReticleRefObject* self = (PyoaIntraPointerAppDef_oaReticleRefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticleRef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaReticleRef)\n"
"    Calls: oaReticleRef* get(const oaReticleRef* object)\n"
"    Signature: get|ptr-oaReticleRef|cptr-oaReticleRef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticleRef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaReticleRef data;
    int convert_status=PyoaIntraPointerAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaReticleRefObject* self=(PyoaIntraPointerAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaReticleRef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaReticleRefp result= (data.DataCall()->get(p1.Data()));
        return PyoaReticleRef_FromoaReticleRef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticleRef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaReticleRef,oaReticleRef)\n"
"    Calls: void set(oaReticleRef* object,const oaReticleRef* otherObject)\n"
"    Signature: set|void-void|ptr-oaReticleRef,cptr-oaReticleRef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticleRef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaReticleRef data;
    int convert_status=PyoaIntraPointerAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaReticleRefObject* self=(PyoaIntraPointerAppDef_oaReticleRefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaReticleRef p1;
    PyParamoaReticleRef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaReticleRef_Convert,&p1,
          &PyoaReticleRef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticleRef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaReticleRef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticleRef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaReticleRef data;
    int convert_status=PyoaIntraPointerAppDef_oaReticleRef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaReticleRef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaReticleRef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticleRef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaReticleRef data;
  int convert_status=PyoaIntraPointerAppDef_oaReticleRef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaReticleRef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaReticleRef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaReticleRef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaReticleRef_get,METH_VARARGS,oaIntraPointerAppDef_oaReticleRef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaReticleRef_set,METH_VARARGS,oaIntraPointerAppDef_oaReticleRef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaReticleRef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaReticleRef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaReticleRef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaReticleRef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticleRef_doc[] = 
"Class: oaIntraPointerAppDef_oaReticleRef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaReticleRef)\n"
"    Calls: (const oaIntraPointerAppDef_oaReticleRef&)\n"
"    Signature: oaIntraPointerAppDef_oaReticleRef||cref-oaIntraPointerAppDef_oaReticleRef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaReticleRef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaReticleRef",
    sizeof(PyoaIntraPointerAppDef_oaReticleRefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaReticleRef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaReticleRef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaReticleRef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaReticleRef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaReticleRef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaReticleRef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticleRef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaReticleRef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaReticleRef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaReticleRef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaReticleRef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticleRef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaReticleRefp result= (oaIntraPointerAppDef_oaReticleRef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReticleRefp result= (oaIntraPointerAppDef_oaReticleRef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaReticleRef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaReticleRef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaReticleRef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaReticleRef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticleRef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaReticleRef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticleRef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaReticleRef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaReticleRef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaReticleRef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaReticleRefp result= (oaIntraPointerAppDef_oaReticleRef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaReticleRefp result= (oaIntraPointerAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReticleRefp result= (oaIntraPointerAppDef_oaReticleRef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaReticleRefp result= (oaIntraPointerAppDef_oaReticleRef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaReticleRef_FromoaIntraPointerAppDef_oaReticleRef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaReticleRef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaReticleRef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaReticleRef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaReticleRef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaReticleRef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaReticleRef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaReticleRef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaReticleRef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaReticleRef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaReticleRef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaReticleRef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaReticleRef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaReticleRef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaReticleRef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaRoute
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaRoute_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaRoute_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaRouteObject* self = (PyoaIntraPointerAppDef_oaRouteObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaRoute)
    {
        PyParamoaIntraPointerAppDef_oaRoute p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaRoute_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaRoute, Choices are:\n"
        "    (oaIntraPointerAppDef_oaRoute)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaRoute_tp_dealloc(PyoaIntraPointerAppDef_oaRouteObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaRoute_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaRoute value;
    int convert_status=PyoaIntraPointerAppDef_oaRoute_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaRoute::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaRoute_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaRoute v1;
    PyParamoaIntraPointerAppDef_oaRoute v2;
    int convert_status1=PyoaIntraPointerAppDef_oaRoute_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaRoute_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaRoute_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaRoute* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaRoute_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaRoute**) ((PyoaIntraPointerAppDef_oaRouteObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaRoute Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(oaIntraPointerAppDef_oaRoute** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaRoute* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaRoute_Type.tp_alloc(&PyoaIntraPointerAppDef_oaRoute_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaRouteObject* self = (PyoaIntraPointerAppDef_oaRouteObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(oaIntraPointerAppDef_oaRoute* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaRoute_Type.tp_alloc(&PyoaIntraPointerAppDef_oaRoute_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaRouteObject* self = (PyoaIntraPointerAppDef_oaRouteObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRoute_get_doc[] = 
"Class: oaIntraPointerAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaRoute)\n"
"    Calls: oaRoute* get(const oaRoute* object)\n"
"    Signature: get|ptr-oaRoute|cptr-oaRoute,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaRoute_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaRoute data;
    int convert_status=PyoaIntraPointerAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaRouteObject* self=(PyoaIntraPointerAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRoute_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaRoutep result= (data.DataCall()->get(p1.Data()));
        return PyoaRoute_FromoaRoute(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRoute_set_doc[] = 
"Class: oaIntraPointerAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaRoute,oaRoute)\n"
"    Calls: void set(oaRoute* object,const oaRoute* otherObject)\n"
"    Signature: set|void-void|ptr-oaRoute,cptr-oaRoute,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaRoute_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaRoute data;
    int convert_status=PyoaIntraPointerAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaRouteObject* self=(PyoaIntraPointerAppDef_oaRouteObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRoute p1;
    PyParamoaRoute p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRoute_Convert,&p1,
          &PyoaRoute_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRoute_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaRoute, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaRoute_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaRoute data;
    int convert_status=PyoaIntraPointerAppDef_oaRoute_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaRoute_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaRoute, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaRoute_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaRoute data;
  int convert_status=PyoaIntraPointerAppDef_oaRoute_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaRoute p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaRoute_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaRoute_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaRoute_get,METH_VARARGS,oaIntraPointerAppDef_oaRoute_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaRoute_set,METH_VARARGS,oaIntraPointerAppDef_oaRoute_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaRoute_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaRoute_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaRoute_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaRoute_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRoute_doc[] = 
"Class: oaIntraPointerAppDef_oaRoute\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaRoute)\n"
"    Calls: (const oaIntraPointerAppDef_oaRoute&)\n"
"    Signature: oaIntraPointerAppDef_oaRoute||cref-oaIntraPointerAppDef_oaRoute,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaRoute_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaRoute",
    sizeof(PyoaIntraPointerAppDef_oaRouteObject),
    0,
    (destructor)oaIntraPointerAppDef_oaRoute_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaRoute_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaRoute_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaRoute_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaRoute_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaRoute_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRoute_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaRoute, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaRoute* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaRoute|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaRoute* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaRoute_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaRoutep result= (oaIntraPointerAppDef_oaRoute::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRoutep result= (oaIntraPointerAppDef_oaRoute::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaRoute, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRoute_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaRoute, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaRoute* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRoute|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaRoute* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRoute|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaRoute* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRoute|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaRoute_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaRoutep result= (oaIntraPointerAppDef_oaRoute::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaRoutep result= (oaIntraPointerAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRoutep result= (oaIntraPointerAppDef_oaRoute::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRoutep result= (oaIntraPointerAppDef_oaRoute::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaRoute_FromoaIntraPointerAppDef_oaRoute(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaRoute, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaRoute_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaRoute_static_find,METH_VARARGS,oaIntraPointerAppDef_oaRoute_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaRoute_static_get,METH_VARARGS,oaIntraPointerAppDef_oaRoute_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaRoute_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaRoute_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaRoute\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaRoute",
           (PyObject*)(&PyoaIntraPointerAppDef_oaRoute_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaRoute\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaRoute_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaRoute_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaRow
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaRow_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaRow_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaRowObject* self = (PyoaIntraPointerAppDef_oaRowObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaRow)
    {
        PyParamoaIntraPointerAppDef_oaRow p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaRow_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaRow, Choices are:\n"
        "    (oaIntraPointerAppDef_oaRow)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaRow_tp_dealloc(PyoaIntraPointerAppDef_oaRowObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaRow_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaRow value;
    int convert_status=PyoaIntraPointerAppDef_oaRow_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntraPointerAppDef_oaRow::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaRow_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaRow v1;
    PyParamoaIntraPointerAppDef_oaRow v2;
    int convert_status1=PyoaIntraPointerAppDef_oaRow_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaRow_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaRow_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaRow* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaRow_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaRow**) ((PyoaIntraPointerAppDef_oaRowObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaRow Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(oaIntraPointerAppDef_oaRow** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaRow* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaRow_Type.tp_alloc(&PyoaIntraPointerAppDef_oaRow_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaRowObject* self = (PyoaIntraPointerAppDef_oaRowObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(oaIntraPointerAppDef_oaRow* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaRow_Type.tp_alloc(&PyoaIntraPointerAppDef_oaRow_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaRowObject* self = (PyoaIntraPointerAppDef_oaRowObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRow_get_doc[] = 
"Class: oaIntraPointerAppDef_oaRow, Function: get\n"
"  Paramegers: (oaRow)\n"
"    Calls: oaRow* get(const oaRow* object)\n"
"    Signature: get|ptr-oaRow|cptr-oaRow,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaRow_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaRow data;
    int convert_status=PyoaIntraPointerAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaRowObject* self=(PyoaIntraPointerAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRow_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaRowp result= (data.DataCall()->get(p1.Data()));
        return PyoaRow_FromoaRow(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRow_set_doc[] = 
"Class: oaIntraPointerAppDef_oaRow, Function: set\n"
"  Paramegers: (oaRow,oaRow)\n"
"    Calls: void set(oaRow* object,const oaRow* otherObject)\n"
"    Signature: set|void-void|ptr-oaRow,cptr-oaRow,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaRow_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaRow data;
    int convert_status=PyoaIntraPointerAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaRowObject* self=(PyoaIntraPointerAppDef_oaRowObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRow p1;
    PyParamoaRow p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRow_Convert,&p1,
          &PyoaRow_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRow_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaRow, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaRow_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaRow data;
    int convert_status=PyoaIntraPointerAppDef_oaRow_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaRow_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaRow, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaRow_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaRow data;
  int convert_status=PyoaIntraPointerAppDef_oaRow_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaRow p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaRow_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaRow_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaRow_get,METH_VARARGS,oaIntraPointerAppDef_oaRow_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaRow_set,METH_VARARGS,oaIntraPointerAppDef_oaRow_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaRow_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaRow_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaRow_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaRow_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRow_doc[] = 
"Class: oaIntraPointerAppDef_oaRow\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaRow)\n"
"    Calls: (const oaIntraPointerAppDef_oaRow&)\n"
"    Signature: oaIntraPointerAppDef_oaRow||cref-oaIntraPointerAppDef_oaRow,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaRow_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaRow",
    sizeof(PyoaIntraPointerAppDef_oaRowObject),
    0,
    (destructor)oaIntraPointerAppDef_oaRow_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaRow_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaRow_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaRow_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaRow_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaRow_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRow_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaRow, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaRow* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaRow|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaRow* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaRow_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaRowp result= (oaIntraPointerAppDef_oaRow::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRowp result= (oaIntraPointerAppDef_oaRow::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaRow, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRow_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaRow, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaRow* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRow|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaRow* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRow|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaRow* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRow|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaRow_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaRowp result= (oaIntraPointerAppDef_oaRow::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaRowp result= (oaIntraPointerAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRowp result= (oaIntraPointerAppDef_oaRow::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRowp result= (oaIntraPointerAppDef_oaRow::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaRow_FromoaIntraPointerAppDef_oaRow(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaRow, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaRow_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaRow_static_find,METH_VARARGS,oaIntraPointerAppDef_oaRow_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaRow_static_get,METH_VARARGS,oaIntraPointerAppDef_oaRow_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaRow_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaRow_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaRow\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaRow",
           (PyObject*)(&PyoaIntraPointerAppDef_oaRow_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaRow\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaRow_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaRow_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaRowHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaRowHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaRowHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaRowHeaderObject* self = (PyoaIntraPointerAppDef_oaRowHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaRowHeader)
    {
        PyParamoaIntraPointerAppDef_oaRowHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaRowHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaRowHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaRowHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaRowHeader_tp_dealloc(PyoaIntraPointerAppDef_oaRowHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaRowHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaRowHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaRowHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[54];
    sprintf(buffer,"<oaIntraPointerAppDef_oaRowHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaRowHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaRowHeader v1;
    PyParamoaIntraPointerAppDef_oaRowHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaRowHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaRowHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaRowHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaRowHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaRowHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaRowHeader**) ((PyoaIntraPointerAppDef_oaRowHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaRowHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(oaIntraPointerAppDef_oaRowHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaRowHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaRowHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaRowHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaRowHeaderObject* self = (PyoaIntraPointerAppDef_oaRowHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(oaIntraPointerAppDef_oaRowHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaRowHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaRowHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaRowHeaderObject* self = (PyoaIntraPointerAppDef_oaRowHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRowHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaRowHeader)\n"
"    Calls: oaRowHeader* get(const oaRowHeader* object)\n"
"    Signature: get|ptr-oaRowHeader|cptr-oaRowHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaRowHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaRowHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaRowHeaderObject* self=(PyoaIntraPointerAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaRowHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaRowHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaRowHeader_FromoaRowHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRowHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaRowHeader,oaRowHeader)\n"
"    Calls: void set(oaRowHeader* object,const oaRowHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaRowHeader,cptr-oaRowHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaRowHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaRowHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaRowHeaderObject* self=(PyoaIntraPointerAppDef_oaRowHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaRowHeader p1;
    PyParamoaRowHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaRowHeader_Convert,&p1,
          &PyoaRowHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRowHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaRowHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaRowHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaRowHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaRowHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaRowHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaRowHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaRowHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaRowHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaRowHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaRowHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaRowHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaRowHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaRowHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaRowHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaRowHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaRowHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaRowHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaRowHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaRowHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaRowHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRowHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaRowHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaRowHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaRowHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaRowHeader||cref-oaIntraPointerAppDef_oaRowHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaRowHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaRowHeader",
    sizeof(PyoaIntraPointerAppDef_oaRowHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaRowHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaRowHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaRowHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaRowHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaRowHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaRowHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRowHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaRowHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaRowHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaRowHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaRowHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaRowHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaRowHeaderp result= (oaIntraPointerAppDef_oaRowHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRowHeaderp result= (oaIntraPointerAppDef_oaRowHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaRowHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaRowHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaRowHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaRowHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRowHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaRowHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRowHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaRowHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaRowHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaRowHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaRowHeaderp result= (oaIntraPointerAppDef_oaRowHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaRowHeaderp result= (oaIntraPointerAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRowHeaderp result= (oaIntraPointerAppDef_oaRowHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaRowHeaderp result= (oaIntraPointerAppDef_oaRowHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaRowHeader_FromoaIntraPointerAppDef_oaRowHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaRowHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaRowHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaRowHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaRowHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaRowHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaRowHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaRowHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaRowHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaRowHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaRowHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaRowHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaRowHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaRowHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaRowHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaScanChain
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaScanChain_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaScanChain_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaScanChainObject* self = (PyoaIntraPointerAppDef_oaScanChainObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaScanChain)
    {
        PyParamoaIntraPointerAppDef_oaScanChain p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaScanChain_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaScanChain, Choices are:\n"
        "    (oaIntraPointerAppDef_oaScanChain)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaScanChain_tp_dealloc(PyoaIntraPointerAppDef_oaScanChainObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaScanChain_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaScanChain value;
    int convert_status=PyoaIntraPointerAppDef_oaScanChain_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[54];
    sprintf(buffer,"<oaIntraPointerAppDef_oaScanChain::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaScanChain_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaScanChain v1;
    PyParamoaIntraPointerAppDef_oaScanChain v2;
    int convert_status1=PyoaIntraPointerAppDef_oaScanChain_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaScanChain_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaScanChain_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaScanChain* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaScanChain_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaScanChain**) ((PyoaIntraPointerAppDef_oaScanChainObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaScanChain Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(oaIntraPointerAppDef_oaScanChain** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaScanChain* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaScanChain_Type.tp_alloc(&PyoaIntraPointerAppDef_oaScanChain_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaScanChainObject* self = (PyoaIntraPointerAppDef_oaScanChainObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(oaIntraPointerAppDef_oaScanChain* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaScanChain_Type.tp_alloc(&PyoaIntraPointerAppDef_oaScanChain_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaScanChainObject* self = (PyoaIntraPointerAppDef_oaScanChainObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChain_get_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaScanChain)\n"
"    Calls: oaScanChain* get(const oaScanChain* object)\n"
"    Signature: get|ptr-oaScanChain|cptr-oaScanChain,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChain_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaScanChain data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaScanChainObject* self=(PyoaIntraPointerAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChain_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaScanChainp result= (data.DataCall()->get(p1.Data()));
        return PyoaScanChain_FromoaScanChain(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChain_set_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaScanChain,oaScanChain)\n"
"    Calls: void set(oaScanChain* object,const oaScanChain* otherObject)\n"
"    Signature: set|void-void|ptr-oaScanChain,cptr-oaScanChain,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChain_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaScanChain data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaScanChainObject* self=(PyoaIntraPointerAppDef_oaScanChainObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChain p1;
    PyParamoaScanChain p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChain_Convert,&p1,
          &PyoaScanChain_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChain_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaScanChain, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChain_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaScanChain data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChain_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaScanChain_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChain, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChain_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaScanChain data;
  int convert_status=PyoaIntraPointerAppDef_oaScanChain_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaScanChain p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaScanChain_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaScanChain_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaScanChain_get,METH_VARARGS,oaIntraPointerAppDef_oaScanChain_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaScanChain_set,METH_VARARGS,oaIntraPointerAppDef_oaScanChain_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaScanChain_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaScanChain_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaScanChain_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaScanChain_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChain_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChain\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaScanChain)\n"
"    Calls: (const oaIntraPointerAppDef_oaScanChain&)\n"
"    Signature: oaIntraPointerAppDef_oaScanChain||cref-oaIntraPointerAppDef_oaScanChain,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaScanChain_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaScanChain",
    sizeof(PyoaIntraPointerAppDef_oaScanChainObject),
    0,
    (destructor)oaIntraPointerAppDef_oaScanChain_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaScanChain_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaScanChain_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaScanChain_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaScanChain_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaScanChain_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChain_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChain, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaScanChain* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaScanChain|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaScanChain* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChain_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaScanChainp result= (oaIntraPointerAppDef_oaScanChain::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainp result= (oaIntraPointerAppDef_oaScanChain::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaScanChain, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChain_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChain, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaScanChain* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChain|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaScanChain* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChain|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaScanChain* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChain|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChain_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaScanChainp result= (oaIntraPointerAppDef_oaScanChain::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaScanChainp result= (oaIntraPointerAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainp result= (oaIntraPointerAppDef_oaScanChain::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainp result= (oaIntraPointerAppDef_oaScanChain::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaScanChain_FromoaIntraPointerAppDef_oaScanChain(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaScanChain, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaScanChain_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaScanChain_static_find,METH_VARARGS,oaIntraPointerAppDef_oaScanChain_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaScanChain_static_get,METH_VARARGS,oaIntraPointerAppDef_oaScanChain_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaScanChain_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaScanChain_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaScanChain\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaScanChain",
           (PyObject*)(&PyoaIntraPointerAppDef_oaScanChain_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaScanChain\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaScanChain_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaScanChain_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaScanChainInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaScanChainInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaScanChainInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaScanChainInstObject* self = (PyoaIntraPointerAppDef_oaScanChainInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaScanChainInst)
    {
        PyParamoaIntraPointerAppDef_oaScanChainInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaScanChainInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaScanChainInst, Choices are:\n"
        "    (oaIntraPointerAppDef_oaScanChainInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaScanChainInst_tp_dealloc(PyoaIntraPointerAppDef_oaScanChainInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaScanChainInst_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaScanChainInst value;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaScanChainInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaScanChainInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaScanChainInst v1;
    PyParamoaIntraPointerAppDef_oaScanChainInst v2;
    int convert_status1=PyoaIntraPointerAppDef_oaScanChainInst_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaScanChainInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaScanChainInst_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaScanChainInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaScanChainInst_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaScanChainInst**) ((PyoaIntraPointerAppDef_oaScanChainInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaScanChainInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(oaIntraPointerAppDef_oaScanChainInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaScanChainInst* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaScanChainInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaScanChainInst_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaScanChainInstObject* self = (PyoaIntraPointerAppDef_oaScanChainInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(oaIntraPointerAppDef_oaScanChainInst* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaScanChainInst_Type.tp_alloc(&PyoaIntraPointerAppDef_oaScanChainInst_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaScanChainInstObject* self = (PyoaIntraPointerAppDef_oaScanChainInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainInst_get_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaScanChainInst)\n"
"    Calls: oaScanChainInst* get(const oaScanChainInst* object)\n"
"    Signature: get|ptr-oaScanChainInst|cptr-oaScanChainInst,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaScanChainInst data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaScanChainInstObject* self=(PyoaIntraPointerAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaScanChainInstp result= (data.DataCall()->get(p1.Data()));
        return PyoaScanChainInst_FromoaScanChainInst(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainInst_set_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaScanChainInst,oaScanChainInst)\n"
"    Calls: void set(oaScanChainInst* object,const oaScanChainInst* otherObject)\n"
"    Signature: set|void-void|ptr-oaScanChainInst,cptr-oaScanChainInst,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaScanChainInst data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaScanChainInstObject* self=(PyoaIntraPointerAppDef_oaScanChainInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainInst p1;
    PyParamoaScanChainInst p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainInst_Convert,&p1,
          &PyoaScanChainInst_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainInst_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaScanChainInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaScanChainInst data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaScanChainInst_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaScanChainInst data;
  int convert_status=PyoaIntraPointerAppDef_oaScanChainInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaScanChainInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaScanChainInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaScanChainInst_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaScanChainInst_get,METH_VARARGS,oaIntraPointerAppDef_oaScanChainInst_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaScanChainInst_set,METH_VARARGS,oaIntraPointerAppDef_oaScanChainInst_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaScanChainInst_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaScanChainInst_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaScanChainInst_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaScanChainInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainInst_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainInst\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaScanChainInst)\n"
"    Calls: (const oaIntraPointerAppDef_oaScanChainInst&)\n"
"    Signature: oaIntraPointerAppDef_oaScanChainInst||cref-oaIntraPointerAppDef_oaScanChainInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaScanChainInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaScanChainInst",
    sizeof(PyoaIntraPointerAppDef_oaScanChainInstObject),
    0,
    (destructor)oaIntraPointerAppDef_oaScanChainInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaScanChainInst_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaScanChainInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaScanChainInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaScanChainInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaScanChainInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainInst_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaScanChainInst|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaScanChainInstp result= (oaIntraPointerAppDef_oaScanChainInst::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainInstp result= (oaIntraPointerAppDef_oaScanChainInst::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaScanChainInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainInst_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainInst* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainInst|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaScanChainInstp result= (oaIntraPointerAppDef_oaScanChainInst::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaScanChainInstp result= (oaIntraPointerAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainInstp result= (oaIntraPointerAppDef_oaScanChainInst::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainInstp result= (oaIntraPointerAppDef_oaScanChainInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaScanChainInst_FromoaIntraPointerAppDef_oaScanChainInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaScanChainInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaScanChainInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaScanChainInst_static_find,METH_VARARGS,oaIntraPointerAppDef_oaScanChainInst_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaScanChainInst_static_get,METH_VARARGS,oaIntraPointerAppDef_oaScanChainInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaScanChainInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaScanChainInst_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaScanChainInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaScanChainInst",
           (PyObject*)(&PyoaIntraPointerAppDef_oaScanChainInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaScanChainInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaScanChainInst_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaScanChainInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaScanChainSet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaScanChainSet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaScanChainSet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaScanChainSetObject* self = (PyoaIntraPointerAppDef_oaScanChainSetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaScanChainSet)
    {
        PyParamoaIntraPointerAppDef_oaScanChainSet p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaScanChainSet_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaScanChainSet, Choices are:\n"
        "    (oaIntraPointerAppDef_oaScanChainSet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaScanChainSet_tp_dealloc(PyoaIntraPointerAppDef_oaScanChainSetObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaScanChainSet_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaScanChainSet value;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainSet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaIntraPointerAppDef_oaScanChainSet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaScanChainSet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaScanChainSet v1;
    PyParamoaIntraPointerAppDef_oaScanChainSet v2;
    int convert_status1=PyoaIntraPointerAppDef_oaScanChainSet_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaScanChainSet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaScanChainSet_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaScanChainSet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaScanChainSet_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaScanChainSet**) ((PyoaIntraPointerAppDef_oaScanChainSetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaScanChainSet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(oaIntraPointerAppDef_oaScanChainSet** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaScanChainSet* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaScanChainSet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaScanChainSet_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaScanChainSetObject* self = (PyoaIntraPointerAppDef_oaScanChainSetObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(oaIntraPointerAppDef_oaScanChainSet* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaScanChainSet_Type.tp_alloc(&PyoaIntraPointerAppDef_oaScanChainSet_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaScanChainSetObject* self = (PyoaIntraPointerAppDef_oaScanChainSetObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainSet_get_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaScanChainSet)\n"
"    Calls: oaScanChainSet* get(const oaScanChainSet* object)\n"
"    Signature: get|ptr-oaScanChainSet|cptr-oaScanChainSet,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainSet_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaScanChainSet data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaScanChainSetObject* self=(PyoaIntraPointerAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaScanChainSet_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaScanChainSetp result= (data.DataCall()->get(p1.Data()));
        return PyoaScanChainSet_FromoaScanChainSet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainSet_set_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaScanChainSet,oaScanChainSet)\n"
"    Calls: void set(oaScanChainSet* object,const oaScanChainSet* otherObject)\n"
"    Signature: set|void-void|ptr-oaScanChainSet,cptr-oaScanChainSet,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainSet_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaScanChainSet data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaScanChainSetObject* self=(PyoaIntraPointerAppDef_oaScanChainSetObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaScanChainSet p1;
    PyParamoaScanChainSet p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaScanChainSet_Convert,&p1,
          &PyoaScanChainSet_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainSet_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaScanChainSet, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainSet_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaScanChainSet data;
    int convert_status=PyoaIntraPointerAppDef_oaScanChainSet_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaScanChainSet_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainSet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainSet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaScanChainSet data;
  int convert_status=PyoaIntraPointerAppDef_oaScanChainSet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaScanChainSet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaScanChainSet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaScanChainSet_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaScanChainSet_get,METH_VARARGS,oaIntraPointerAppDef_oaScanChainSet_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaScanChainSet_set,METH_VARARGS,oaIntraPointerAppDef_oaScanChainSet_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaScanChainSet_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaScanChainSet_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaScanChainSet_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaScanChainSet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainSet_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainSet\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaScanChainSet)\n"
"    Calls: (const oaIntraPointerAppDef_oaScanChainSet&)\n"
"    Signature: oaIntraPointerAppDef_oaScanChainSet||cref-oaIntraPointerAppDef_oaScanChainSet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaScanChainSet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaScanChainSet",
    sizeof(PyoaIntraPointerAppDef_oaScanChainSetObject),
    0,
    (destructor)oaIntraPointerAppDef_oaScanChainSet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaScanChainSet_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaScanChainSet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaScanChainSet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaScanChainSet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaScanChainSet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainSet_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainSet, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainSet* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaScanChainSet|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainSet* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainSet_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaScanChainSetp result= (oaIntraPointerAppDef_oaScanChainSet::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainSetp result= (oaIntraPointerAppDef_oaScanChainSet::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaScanChainSet, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaScanChainSet_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaScanChainSet, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainSet* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainSet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainSet* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainSet|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaScanChainSet* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaScanChainSet|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaScanChainSet_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaScanChainSetp result= (oaIntraPointerAppDef_oaScanChainSet::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaScanChainSetp result= (oaIntraPointerAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainSetp result= (oaIntraPointerAppDef_oaScanChainSet::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaScanChainSetp result= (oaIntraPointerAppDef_oaScanChainSet::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaScanChainSet_FromoaIntraPointerAppDef_oaScanChainSet(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaScanChainSet, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaScanChainSet_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaScanChainSet_static_find,METH_VARARGS,oaIntraPointerAppDef_oaScanChainSet_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaScanChainSet_static_get,METH_VARARGS,oaIntraPointerAppDef_oaScanChainSet_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaScanChainSet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaScanChainSet_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaScanChainSet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaScanChainSet",
           (PyObject*)(&PyoaIntraPointerAppDef_oaScanChainSet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaScanChainSet\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaScanChainSet_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaScanChainSet_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaShape
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaShape_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaShape_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaShapeObject* self = (PyoaIntraPointerAppDef_oaShapeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaShape)
    {
        PyParamoaIntraPointerAppDef_oaShape p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaShape_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaShape, Choices are:\n"
        "    (oaIntraPointerAppDef_oaShape)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaShape_tp_dealloc(PyoaIntraPointerAppDef_oaShapeObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaShape_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaShape value;
    int convert_status=PyoaIntraPointerAppDef_oaShape_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaShape::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaShape_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaShape v1;
    PyParamoaIntraPointerAppDef_oaShape v2;
    int convert_status1=PyoaIntraPointerAppDef_oaShape_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaShape_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaShape_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaShape* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaShape_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaShape**) ((PyoaIntraPointerAppDef_oaShapeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaShape Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(oaIntraPointerAppDef_oaShape** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaShape* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaShape_Type.tp_alloc(&PyoaIntraPointerAppDef_oaShape_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaShapeObject* self = (PyoaIntraPointerAppDef_oaShapeObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(oaIntraPointerAppDef_oaShape* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaShape_Type.tp_alloc(&PyoaIntraPointerAppDef_oaShape_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaShapeObject* self = (PyoaIntraPointerAppDef_oaShapeObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaShape_get_doc[] = 
"Class: oaIntraPointerAppDef_oaShape, Function: get\n"
"  Paramegers: (oaShape)\n"
"    Calls: oaShape* get(const oaShape* object)\n"
"    Signature: get|ptr-oaShape|cptr-oaShape,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaShape_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaShape data;
    int convert_status=PyoaIntraPointerAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaShapeObject* self=(PyoaIntraPointerAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaShape_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaShapep result= (data.DataCall()->get(p1.Data()));
        return PyoaShape_FromoaShape(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaShape_set_doc[] = 
"Class: oaIntraPointerAppDef_oaShape, Function: set\n"
"  Paramegers: (oaShape,oaShape)\n"
"    Calls: void set(oaShape* object,const oaShape* otherObject)\n"
"    Signature: set|void-void|ptr-oaShape,cptr-oaShape,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaShape_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaShape data;
    int convert_status=PyoaIntraPointerAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaShapeObject* self=(PyoaIntraPointerAppDef_oaShapeObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaShape p1;
    PyParamoaShape p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaShape_Convert,&p1,
          &PyoaShape_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaShape_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaShape, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaShape_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaShape data;
    int convert_status=PyoaIntraPointerAppDef_oaShape_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaShape_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaShape, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaShape_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaShape data;
  int convert_status=PyoaIntraPointerAppDef_oaShape_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaShape p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaShape_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaShape_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaShape_get,METH_VARARGS,oaIntraPointerAppDef_oaShape_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaShape_set,METH_VARARGS,oaIntraPointerAppDef_oaShape_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaShape_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaShape_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaShape_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaShape_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaShape_doc[] = 
"Class: oaIntraPointerAppDef_oaShape\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaShape)\n"
"    Calls: (const oaIntraPointerAppDef_oaShape&)\n"
"    Signature: oaIntraPointerAppDef_oaShape||cref-oaIntraPointerAppDef_oaShape,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaShape_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaShape",
    sizeof(PyoaIntraPointerAppDef_oaShapeObject),
    0,
    (destructor)oaIntraPointerAppDef_oaShape_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaShape_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaShape_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaShape_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaShape_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaShape_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaShape_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaShape, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaShape* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaShape|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaShape* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaShape_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaShapep result= (oaIntraPointerAppDef_oaShape::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaShapep result= (oaIntraPointerAppDef_oaShape::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaShape, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaShape_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaShape, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaShape* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaShape* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaShape|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaShape* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaShape|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaShape_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaShapep result= (oaIntraPointerAppDef_oaShape::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaShapep result= (oaIntraPointerAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaShapep result= (oaIntraPointerAppDef_oaShape::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaShapep result= (oaIntraPointerAppDef_oaShape::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaShape_FromoaIntraPointerAppDef_oaShape(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaShape, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaShape_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaShape_static_find,METH_VARARGS,oaIntraPointerAppDef_oaShape_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaShape_static_get,METH_VARARGS,oaIntraPointerAppDef_oaShape_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaShape_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaShape_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaShape\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaShape",
           (PyObject*)(&PyoaIntraPointerAppDef_oaShape_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaShape\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaShape_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaShape_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaSiteDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaSiteDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaSiteDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaSiteDefObject* self = (PyoaIntraPointerAppDef_oaSiteDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaSiteDef)
    {
        PyParamoaIntraPointerAppDef_oaSiteDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaSiteDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaSiteDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaSiteDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaSiteDef_tp_dealloc(PyoaIntraPointerAppDef_oaSiteDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaSiteDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaSiteDef value;
    int convert_status=PyoaIntraPointerAppDef_oaSiteDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaSiteDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaSiteDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaSiteDef v1;
    PyParamoaIntraPointerAppDef_oaSiteDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaSiteDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaSiteDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaSiteDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaSiteDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaSiteDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaSiteDef**) ((PyoaIntraPointerAppDef_oaSiteDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaSiteDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(oaIntraPointerAppDef_oaSiteDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaSiteDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaSiteDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaSiteDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaSiteDefObject* self = (PyoaIntraPointerAppDef_oaSiteDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(oaIntraPointerAppDef_oaSiteDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaSiteDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaSiteDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaSiteDefObject* self = (PyoaIntraPointerAppDef_oaSiteDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSiteDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaSiteDef, Function: get\n"
"  Paramegers: (oaSiteDef)\n"
"    Calls: oaSiteDef* get(const oaSiteDef* object)\n"
"    Signature: get|ptr-oaSiteDef|cptr-oaSiteDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaSiteDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaSiteDef data;
    int convert_status=PyoaIntraPointerAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaSiteDefObject* self=(PyoaIntraPointerAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSiteDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSiteDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaSiteDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaSiteDef_FromoaSiteDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSiteDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaSiteDef, Function: set\n"
"  Paramegers: (oaSiteDef,oaSiteDef)\n"
"    Calls: void set(oaSiteDef* object,const oaSiteDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaSiteDef,cptr-oaSiteDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaSiteDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaSiteDef data;
    int convert_status=PyoaIntraPointerAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaSiteDefObject* self=(PyoaIntraPointerAppDef_oaSiteDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSiteDef p1;
    PyParamoaSiteDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSiteDef_Convert,&p1,
          &PyoaSiteDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSiteDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaSiteDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaSiteDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaSiteDef data;
    int convert_status=PyoaIntraPointerAppDef_oaSiteDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaSiteDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaSiteDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaSiteDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaSiteDef data;
  int convert_status=PyoaIntraPointerAppDef_oaSiteDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaSiteDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaSiteDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaSiteDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaSiteDef_get,METH_VARARGS,oaIntraPointerAppDef_oaSiteDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaSiteDef_set,METH_VARARGS,oaIntraPointerAppDef_oaSiteDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaSiteDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaSiteDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaSiteDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaSiteDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSiteDef_doc[] = 
"Class: oaIntraPointerAppDef_oaSiteDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaSiteDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaSiteDef&)\n"
"    Signature: oaIntraPointerAppDef_oaSiteDef||cref-oaIntraPointerAppDef_oaSiteDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaSiteDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaSiteDef",
    sizeof(PyoaIntraPointerAppDef_oaSiteDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaSiteDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaSiteDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaSiteDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaSiteDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaSiteDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaSiteDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSiteDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaSiteDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaSiteDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaSiteDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaSiteDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaSiteDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaSiteDefp result= (oaIntraPointerAppDef_oaSiteDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaSiteDefp result= (oaIntraPointerAppDef_oaSiteDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaSiteDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSiteDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaSiteDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaSiteDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSiteDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaSiteDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSiteDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaSiteDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSiteDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaSiteDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaSiteDefp result= (oaIntraPointerAppDef_oaSiteDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaSiteDefp result= (oaIntraPointerAppDef_oaSiteDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaSiteDefp result= (oaIntraPointerAppDef_oaSiteDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaSiteDefp result= (oaIntraPointerAppDef_oaSiteDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaSiteDef_FromoaIntraPointerAppDef_oaSiteDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaSiteDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaSiteDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaSiteDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaSiteDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaSiteDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaSiteDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaSiteDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaSiteDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaSiteDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaSiteDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaSiteDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaSiteDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaSiteDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaSiteDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaSteiner
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaSteiner_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaSteiner_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaSteinerObject* self = (PyoaIntraPointerAppDef_oaSteinerObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaSteiner)
    {
        PyParamoaIntraPointerAppDef_oaSteiner p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaSteiner_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaSteiner, Choices are:\n"
        "    (oaIntraPointerAppDef_oaSteiner)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaSteiner_tp_dealloc(PyoaIntraPointerAppDef_oaSteinerObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaSteiner_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaSteiner value;
    int convert_status=PyoaIntraPointerAppDef_oaSteiner_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaSteiner::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaSteiner_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaSteiner v1;
    PyParamoaIntraPointerAppDef_oaSteiner v2;
    int convert_status1=PyoaIntraPointerAppDef_oaSteiner_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaSteiner_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaSteiner_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaSteiner* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaSteiner_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaSteiner**) ((PyoaIntraPointerAppDef_oaSteinerObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaSteiner Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(oaIntraPointerAppDef_oaSteiner** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaSteiner* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaSteiner_Type.tp_alloc(&PyoaIntraPointerAppDef_oaSteiner_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaSteinerObject* self = (PyoaIntraPointerAppDef_oaSteinerObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(oaIntraPointerAppDef_oaSteiner* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaSteiner_Type.tp_alloc(&PyoaIntraPointerAppDef_oaSteiner_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaSteinerObject* self = (PyoaIntraPointerAppDef_oaSteinerObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSteiner_get_doc[] = 
"Class: oaIntraPointerAppDef_oaSteiner, Function: get\n"
"  Paramegers: (oaSteiner)\n"
"    Calls: oaSteiner* get(const oaSteiner* object)\n"
"    Signature: get|ptr-oaSteiner|cptr-oaSteiner,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaSteiner_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaSteiner data;
    int convert_status=PyoaIntraPointerAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaSteinerObject* self=(PyoaIntraPointerAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSteiner p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSteiner_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaSteinerp result= (data.DataCall()->get(p1.Data()));
        return PyoaSteiner_FromoaSteiner(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSteiner_set_doc[] = 
"Class: oaIntraPointerAppDef_oaSteiner, Function: set\n"
"  Paramegers: (oaSteiner,oaSteiner)\n"
"    Calls: void set(oaSteiner* object,const oaSteiner* otherObject)\n"
"    Signature: set|void-void|ptr-oaSteiner,cptr-oaSteiner,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaSteiner_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaSteiner data;
    int convert_status=PyoaIntraPointerAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaSteinerObject* self=(PyoaIntraPointerAppDef_oaSteinerObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSteiner p1;
    PyParamoaSteiner p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaSteiner_Convert,&p1,
          &PyoaSteiner_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSteiner_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaSteiner, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaSteiner_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaSteiner data;
    int convert_status=PyoaIntraPointerAppDef_oaSteiner_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaSteiner_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaSteiner, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaSteiner_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaSteiner data;
  int convert_status=PyoaIntraPointerAppDef_oaSteiner_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaSteiner p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaSteiner_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaSteiner_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaSteiner_get,METH_VARARGS,oaIntraPointerAppDef_oaSteiner_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaSteiner_set,METH_VARARGS,oaIntraPointerAppDef_oaSteiner_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaSteiner_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaSteiner_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaSteiner_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaSteiner_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSteiner_doc[] = 
"Class: oaIntraPointerAppDef_oaSteiner\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaSteiner)\n"
"    Calls: (const oaIntraPointerAppDef_oaSteiner&)\n"
"    Signature: oaIntraPointerAppDef_oaSteiner||cref-oaIntraPointerAppDef_oaSteiner,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaSteiner_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaSteiner",
    sizeof(PyoaIntraPointerAppDef_oaSteinerObject),
    0,
    (destructor)oaIntraPointerAppDef_oaSteiner_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaSteiner_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaSteiner_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaSteiner_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaSteiner_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaSteiner_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSteiner_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaSteiner, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaSteiner* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaSteiner|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaSteiner* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaSteiner_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaSteinerp result= (oaIntraPointerAppDef_oaSteiner::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaSteinerp result= (oaIntraPointerAppDef_oaSteiner::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaSteiner, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaSteiner_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaSteiner, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaSteiner* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSteiner|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaSteiner* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSteiner|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaSteiner* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaSteiner|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaSteiner_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaSteinerp result= (oaIntraPointerAppDef_oaSteiner::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaSteinerp result= (oaIntraPointerAppDef_oaSteiner::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaSteinerp result= (oaIntraPointerAppDef_oaSteiner::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaSteinerp result= (oaIntraPointerAppDef_oaSteiner::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaSteiner_FromoaIntraPointerAppDef_oaSteiner(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaSteiner, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaSteiner_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaSteiner_static_find,METH_VARARGS,oaIntraPointerAppDef_oaSteiner_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaSteiner_static_get,METH_VARARGS,oaIntraPointerAppDef_oaSteiner_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaSteiner_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaSteiner_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaSteiner\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaSteiner",
           (PyObject*)(&PyoaIntraPointerAppDef_oaSteiner_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaSteiner\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaSteiner_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaSteiner_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaStepperMap
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaStepperMap_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaStepperMap_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaStepperMapObject* self = (PyoaIntraPointerAppDef_oaStepperMapObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaStepperMap)
    {
        PyParamoaIntraPointerAppDef_oaStepperMap p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaStepperMap_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaStepperMap, Choices are:\n"
        "    (oaIntraPointerAppDef_oaStepperMap)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaStepperMap_tp_dealloc(PyoaIntraPointerAppDef_oaStepperMapObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaStepperMap_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaStepperMap value;
    int convert_status=PyoaIntraPointerAppDef_oaStepperMap_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntraPointerAppDef_oaStepperMap::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaStepperMap_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaStepperMap v1;
    PyParamoaIntraPointerAppDef_oaStepperMap v2;
    int convert_status1=PyoaIntraPointerAppDef_oaStepperMap_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaStepperMap_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaStepperMap_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaStepperMap* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaStepperMap_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaStepperMap**) ((PyoaIntraPointerAppDef_oaStepperMapObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaStepperMap Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(oaIntraPointerAppDef_oaStepperMap** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaStepperMap* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaStepperMap_Type.tp_alloc(&PyoaIntraPointerAppDef_oaStepperMap_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaStepperMapObject* self = (PyoaIntraPointerAppDef_oaStepperMapObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(oaIntraPointerAppDef_oaStepperMap* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaStepperMap_Type.tp_alloc(&PyoaIntraPointerAppDef_oaStepperMap_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaStepperMapObject* self = (PyoaIntraPointerAppDef_oaStepperMapObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaStepperMap_get_doc[] = 
"Class: oaIntraPointerAppDef_oaStepperMap, Function: get\n"
"  Paramegers: (oaStepperMap)\n"
"    Calls: oaStepperMap* get(const oaStepperMap* object)\n"
"    Signature: get|ptr-oaStepperMap|cptr-oaStepperMap,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaStepperMap_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaStepperMap data;
    int convert_status=PyoaIntraPointerAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaStepperMapObject* self=(PyoaIntraPointerAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaStepperMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaStepperMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaStepperMapp result= (data.DataCall()->get(p1.Data()));
        return PyoaStepperMap_FromoaStepperMap(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaStepperMap_set_doc[] = 
"Class: oaIntraPointerAppDef_oaStepperMap, Function: set\n"
"  Paramegers: (oaStepperMap,oaStepperMap)\n"
"    Calls: void set(oaStepperMap* object,const oaStepperMap* otherObject)\n"
"    Signature: set|void-void|ptr-oaStepperMap,cptr-oaStepperMap,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaStepperMap_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaStepperMap data;
    int convert_status=PyoaIntraPointerAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaStepperMapObject* self=(PyoaIntraPointerAppDef_oaStepperMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaStepperMap p1;
    PyParamoaStepperMap p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaStepperMap_Convert,&p1,
          &PyoaStepperMap_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaStepperMap_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaStepperMap, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaStepperMap_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaStepperMap data;
    int convert_status=PyoaIntraPointerAppDef_oaStepperMap_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaStepperMap_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaStepperMap, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaStepperMap_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaStepperMap data;
  int convert_status=PyoaIntraPointerAppDef_oaStepperMap_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaStepperMap p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaStepperMap_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaStepperMap_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaStepperMap_get,METH_VARARGS,oaIntraPointerAppDef_oaStepperMap_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaStepperMap_set,METH_VARARGS,oaIntraPointerAppDef_oaStepperMap_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaStepperMap_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaStepperMap_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaStepperMap_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaStepperMap_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaStepperMap_doc[] = 
"Class: oaIntraPointerAppDef_oaStepperMap\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaStepperMap)\n"
"    Calls: (const oaIntraPointerAppDef_oaStepperMap&)\n"
"    Signature: oaIntraPointerAppDef_oaStepperMap||cref-oaIntraPointerAppDef_oaStepperMap,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaStepperMap_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaStepperMap",
    sizeof(PyoaIntraPointerAppDef_oaStepperMapObject),
    0,
    (destructor)oaIntraPointerAppDef_oaStepperMap_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaStepperMap_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaStepperMap_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaStepperMap_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaStepperMap_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaStepperMap_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaStepperMap_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaStepperMap, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaStepperMap* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaStepperMap|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaStepperMap* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaStepperMap_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaStepperMapp result= (oaIntraPointerAppDef_oaStepperMap::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaStepperMapp result= (oaIntraPointerAppDef_oaStepperMap::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaStepperMap, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaStepperMap_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaStepperMap, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaStepperMap* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaStepperMap|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaStepperMap* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaStepperMap|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaStepperMap* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaStepperMap|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaStepperMap_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaStepperMapp result= (oaIntraPointerAppDef_oaStepperMap::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaStepperMapp result= (oaIntraPointerAppDef_oaStepperMap::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaStepperMapp result= (oaIntraPointerAppDef_oaStepperMap::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaStepperMapp result= (oaIntraPointerAppDef_oaStepperMap::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaStepperMap_FromoaIntraPointerAppDef_oaStepperMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaStepperMap, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaStepperMap_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaStepperMap_static_find,METH_VARARGS,oaIntraPointerAppDef_oaStepperMap_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaStepperMap_static_get,METH_VARARGS,oaIntraPointerAppDef_oaStepperMap_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaStepperMap_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaStepperMap_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaStepperMap\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaStepperMap",
           (PyObject*)(&PyoaIntraPointerAppDef_oaStepperMap_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaStepperMap\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaStepperMap_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaStepperMap_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaTech
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTech_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaTech_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaTechObject* self = (PyoaIntraPointerAppDef_oaTechObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaTech)
    {
        PyParamoaIntraPointerAppDef_oaTech p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaTech_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaTech, Choices are:\n"
        "    (oaIntraPointerAppDef_oaTech)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaTech_tp_dealloc(PyoaIntraPointerAppDef_oaTechObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTech_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaTech value;
    int convert_status=PyoaIntraPointerAppDef_oaTech_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntraPointerAppDef_oaTech::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaTech_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaTech v1;
    PyParamoaIntraPointerAppDef_oaTech v2;
    int convert_status1=PyoaIntraPointerAppDef_oaTech_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaTech_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaTech_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaTech* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaTech_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaTech**) ((PyoaIntraPointerAppDef_oaTechObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaTech Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(oaIntraPointerAppDef_oaTech** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaTech* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaTech_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTech_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaTechObject* self = (PyoaIntraPointerAppDef_oaTechObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(oaIntraPointerAppDef_oaTech* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaTech_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTech_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaTechObject* self = (PyoaIntraPointerAppDef_oaTechObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTech_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTech, Function: get\n"
"  Paramegers: (oaTech)\n"
"    Calls: oaTech* get(const oaTech* object)\n"
"    Signature: get|ptr-oaTech|cptr-oaTech,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTech_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTech data;
    int convert_status=PyoaIntraPointerAppDef_oaTech_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechObject* self=(PyoaIntraPointerAppDef_oaTechObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTech p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTech_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTechp result= (data.DataCall()->get(p1.Data()));
        return PyoaTech_FromoaTech(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTech_set_doc[] = 
"Class: oaIntraPointerAppDef_oaTech, Function: set\n"
"  Paramegers: (oaTech,oaTech)\n"
"    Calls: void set(oaTech* object,const oaTech* otherObject)\n"
"    Signature: set|void-void|ptr-oaTech,cptr-oaTech,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTech_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTech data;
    int convert_status=PyoaIntraPointerAppDef_oaTech_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechObject* self=(PyoaIntraPointerAppDef_oaTechObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTech p1;
    PyParamoaTech p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTech_Convert,&p1,
          &PyoaTech_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTech_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaTech, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTech_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaTech data;
    int convert_status=PyoaIntraPointerAppDef_oaTech_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaTech_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaTech, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTech_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaTech data;
  int convert_status=PyoaIntraPointerAppDef_oaTech_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaTech p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaTech_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaTech_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaTech_get,METH_VARARGS,oaIntraPointerAppDef_oaTech_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaTech_set,METH_VARARGS,oaIntraPointerAppDef_oaTech_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaTech_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaTech_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaTech_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaTech_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTech_doc[] = 
"Class: oaIntraPointerAppDef_oaTech\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaTech)\n"
"    Calls: (const oaIntraPointerAppDef_oaTech&)\n"
"    Signature: oaIntraPointerAppDef_oaTech||cref-oaIntraPointerAppDef_oaTech,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaTech_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaTech",
    sizeof(PyoaIntraPointerAppDef_oaTechObject),
    0,
    (destructor)oaIntraPointerAppDef_oaTech_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaTech_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaTech_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaTech_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaTech_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaTech_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTech_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaTech, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTech* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTech|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTech* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTech|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaTech_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechp result= (oaIntraPointerAppDef_oaTech::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechp result= (oaIntraPointerAppDef_oaTech::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTech, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTech_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTech, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTech* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTech|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTech* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTech|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTech* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTech|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTech* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTech|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaTech_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechp result= (oaIntraPointerAppDef_oaTech::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaTechp result= (oaIntraPointerAppDef_oaTech::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechp result= (oaIntraPointerAppDef_oaTech::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechp result= (oaIntraPointerAppDef_oaTech::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaTech_FromoaIntraPointerAppDef_oaTech(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTech, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaTech_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaTech_static_find,METH_VARARGS,oaIntraPointerAppDef_oaTech_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaTech_static_get,METH_VARARGS,oaIntraPointerAppDef_oaTech_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaTech_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaTech_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaTech\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaTech",
           (PyObject*)(&PyoaIntraPointerAppDef_oaTech_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaTech\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaTech_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaTech_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaTechHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTechHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaTechHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaTechHeaderObject* self = (PyoaIntraPointerAppDef_oaTechHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaTechHeader)
    {
        PyParamoaIntraPointerAppDef_oaTechHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaTechHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaTechHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaTechHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaTechHeader_tp_dealloc(PyoaIntraPointerAppDef_oaTechHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTechHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaTechHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaTechHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaIntraPointerAppDef_oaTechHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaTechHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaTechHeader v1;
    PyParamoaIntraPointerAppDef_oaTechHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaTechHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaTechHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaTechHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaTechHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaTechHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaTechHeader**) ((PyoaIntraPointerAppDef_oaTechHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaTechHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(oaIntraPointerAppDef_oaTechHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaTechHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaTechHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTechHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaTechHeaderObject* self = (PyoaIntraPointerAppDef_oaTechHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(oaIntraPointerAppDef_oaTechHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaTechHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTechHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaTechHeaderObject* self = (PyoaIntraPointerAppDef_oaTechHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTechHeader, Function: get\n"
"  Paramegers: (oaTechHeader)\n"
"    Calls: oaTechHeader* get(const oaTechHeader* object)\n"
"    Signature: get|ptr-oaTechHeader|cptr-oaTechHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTechHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechHeaderObject* self=(PyoaIntraPointerAppDef_oaTechHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTechHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaTechHeader_FromoaTechHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaTechHeader, Function: set\n"
"  Paramegers: (oaTechHeader,oaTechHeader)\n"
"    Calls: void set(oaTechHeader* object,const oaTechHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaTechHeader,cptr-oaTechHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTechHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechHeaderObject* self=(PyoaIntraPointerAppDef_oaTechHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechHeader p1;
    PyParamoaTechHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechHeader_Convert,&p1,
          &PyoaTechHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaTechHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaTechHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaTechHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaTechHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaTechHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaTechHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaTechHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaTechHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaTechHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaTechHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaTechHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaTechHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaTechHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaTechHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaTechHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaTechHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaTechHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaTechHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaTechHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaTechHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaTechHeader||cref-oaIntraPointerAppDef_oaTechHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaTechHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaTechHeader",
    sizeof(PyoaIntraPointerAppDef_oaTechHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaTechHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaTechHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaTechHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaTechHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaTechHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaTechHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaTechHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTechHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTechHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTechHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTechHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechHeaderp result= (oaIntraPointerAppDef_oaTechHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechHeaderp result= (oaIntraPointerAppDef_oaTechHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTechHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTechHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTechHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTechHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTechHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTechHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechHeaderp result= (oaIntraPointerAppDef_oaTechHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaTechHeaderp result= (oaIntraPointerAppDef_oaTechHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechHeaderp result= (oaIntraPointerAppDef_oaTechHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechHeaderp result= (oaIntraPointerAppDef_oaTechHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaTechHeader_FromoaIntraPointerAppDef_oaTechHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTechHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaTechHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaTechHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaTechHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaTechHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaTechHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaTechHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaTechHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaTechHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaTechHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaTechHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaTechHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaTechHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaTechHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaTechLayerHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaTechLayerHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaTechLayerHeaderObject* self = (PyoaIntraPointerAppDef_oaTechLayerHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaTechLayerHeader)
    {
        PyParamoaIntraPointerAppDef_oaTechLayerHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaTechLayerHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaTechLayerHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaTechLayerHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaTechLayerHeader_tp_dealloc(PyoaIntraPointerAppDef_oaTechLayerHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaTechLayerHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[60];
    sprintf(buffer,"<oaIntraPointerAppDef_oaTechLayerHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaTechLayerHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaTechLayerHeader v1;
    PyParamoaIntraPointerAppDef_oaTechLayerHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaTechLayerHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaTechLayerHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaTechLayerHeader**) ((PyoaIntraPointerAppDef_oaTechLayerHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaTechLayerHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(oaIntraPointerAppDef_oaTechLayerHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaTechLayerHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaTechLayerHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTechLayerHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaTechLayerHeaderObject* self = (PyoaIntraPointerAppDef_oaTechLayerHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(oaIntraPointerAppDef_oaTechLayerHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaTechLayerHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTechLayerHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaTechLayerHeaderObject* self = (PyoaIntraPointerAppDef_oaTechLayerHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechLayerHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTechLayerHeader, Function: get\n"
"  Paramegers: (oaTechLayerHeader)\n"
"    Calls: oaTechLayerHeader* get(const oaTechLayerHeader* object)\n"
"    Signature: get|ptr-oaTechLayerHeader|cptr-oaTechLayerHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTechLayerHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechLayerHeaderObject* self=(PyoaIntraPointerAppDef_oaTechLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechLayerHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTechLayerHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaTechLayerHeader_FromoaTechLayerHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechLayerHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaTechLayerHeader, Function: set\n"
"  Paramegers: (oaTechLayerHeader,oaTechLayerHeader)\n"
"    Calls: void set(oaTechLayerHeader* object,const oaTechLayerHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaTechLayerHeader,cptr-oaTechLayerHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTechLayerHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechLayerHeaderObject* self=(PyoaIntraPointerAppDef_oaTechLayerHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechLayerHeader p1;
    PyParamoaTechLayerHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechLayerHeader_Convert,&p1,
          &PyoaTechLayerHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechLayerHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaTechLayerHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaTechLayerHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaTechLayerHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaTechLayerHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaTechLayerHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaTechLayerHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaTechLayerHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaTechLayerHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaTechLayerHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaTechLayerHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaTechLayerHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaTechLayerHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaTechLayerHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaTechLayerHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaTechLayerHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaTechLayerHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaTechLayerHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechLayerHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaTechLayerHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaTechLayerHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaTechLayerHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaTechLayerHeader||cref-oaIntraPointerAppDef_oaTechLayerHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaTechLayerHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaTechLayerHeader",
    sizeof(PyoaIntraPointerAppDef_oaTechLayerHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaTechLayerHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaTechLayerHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaTechLayerHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaTechLayerHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaTechLayerHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaTechLayerHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechLayerHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaTechLayerHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTechLayerHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTechLayerHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTechLayerHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTechLayerHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechLayerHeaderp result= (oaIntraPointerAppDef_oaTechLayerHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechLayerHeaderp result= (oaIntraPointerAppDef_oaTechLayerHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTechLayerHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechLayerHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTechLayerHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTechLayerHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTechLayerHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechLayerHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTechLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTechLayerHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechLayerHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechLayerHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechLayerHeaderp result= (oaIntraPointerAppDef_oaTechLayerHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaTechLayerHeaderp result= (oaIntraPointerAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechLayerHeaderp result= (oaIntraPointerAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechLayerHeaderp result= (oaIntraPointerAppDef_oaTechLayerHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaTechLayerHeader_FromoaIntraPointerAppDef_oaTechLayerHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTechLayerHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaTechLayerHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaTechLayerHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaTechLayerHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaTechLayerHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaTechLayerHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaTechLayerHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaTechLayerHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaTechLayerHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaTechLayerHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaTechLayerHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaTechLayerHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaTechLayerHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaTechLayerHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaTechViaDefHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaTechViaDefHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaTechViaDefHeaderObject* self = (PyoaIntraPointerAppDef_oaTechViaDefHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaTechViaDefHeader)
    {
        PyParamoaIntraPointerAppDef_oaTechViaDefHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaTechViaDefHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaTechViaDefHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaTechViaDefHeader_tp_dealloc(PyoaIntraPointerAppDef_oaTechViaDefHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaTechViaDefHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaIntraPointerAppDef_oaTechViaDefHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaTechViaDefHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaTechViaDefHeader v1;
    PyParamoaIntraPointerAppDef_oaTechViaDefHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaTechViaDefHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaTechViaDefHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaTechViaDefHeader**) ((PyoaIntraPointerAppDef_oaTechViaDefHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaTechViaDefHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(oaIntraPointerAppDef_oaTechViaDefHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaTechViaDefHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaTechViaDefHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTechViaDefHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaTechViaDefHeaderObject* self = (PyoaIntraPointerAppDef_oaTechViaDefHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(oaIntraPointerAppDef_oaTechViaDefHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaTechViaDefHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTechViaDefHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaTechViaDefHeaderObject* self = (PyoaIntraPointerAppDef_oaTechViaDefHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechViaDefHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTechViaDefHeader, Function: get\n"
"  Paramegers: (oaTechViaDefHeader)\n"
"    Calls: oaTechViaDefHeader* get(const oaTechViaDefHeader* object)\n"
"    Signature: get|ptr-oaTechViaDefHeader|cptr-oaTechViaDefHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTechViaDefHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechViaDefHeaderObject* self=(PyoaIntraPointerAppDef_oaTechViaDefHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTechViaDefHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTechViaDefHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaTechViaDefHeader_FromoaTechViaDefHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechViaDefHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaTechViaDefHeader, Function: set\n"
"  Paramegers: (oaTechViaDefHeader,oaTechViaDefHeader)\n"
"    Calls: void set(oaTechViaDefHeader* object,const oaTechViaDefHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaTechViaDefHeader,cptr-oaTechViaDefHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTechViaDefHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTechViaDefHeaderObject* self=(PyoaIntraPointerAppDef_oaTechViaDefHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTechViaDefHeader p1;
    PyParamoaTechViaDefHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTechViaDefHeader_Convert,&p1,
          &PyoaTechViaDefHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechViaDefHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaTechViaDefHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaTechViaDefHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaTechViaDefHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaTechViaDefHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaTechViaDefHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaTechViaDefHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaTechViaDefHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaTechViaDefHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaTechViaDefHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaTechViaDefHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaTechViaDefHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaTechViaDefHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaTechViaDefHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaTechViaDefHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaTechViaDefHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaTechViaDefHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechViaDefHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaTechViaDefHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaTechViaDefHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaTechViaDefHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaTechViaDefHeader||cref-oaIntraPointerAppDef_oaTechViaDefHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaTechViaDefHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaTechViaDefHeader",
    sizeof(PyoaIntraPointerAppDef_oaTechViaDefHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaTechViaDefHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaTechViaDefHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaTechViaDefHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaTechViaDefHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaTechViaDefHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaTechViaDefHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechViaDefHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaTechViaDefHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTechViaDefHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTechViaDefHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTechViaDefHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTechViaDefHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechViaDefHeaderp result= (oaIntraPointerAppDef_oaTechViaDefHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechViaDefHeaderp result= (oaIntraPointerAppDef_oaTechViaDefHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTechViaDefHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTechViaDefHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTechViaDefHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTechViaDefHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechViaDefHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTechViaDefHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechViaDefHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTechViaDefHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechViaDefHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTechViaDefHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTechViaDefHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaTechViaDefHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTechViaDefHeaderp result= (oaIntraPointerAppDef_oaTechViaDefHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaTechViaDefHeaderp result= (oaIntraPointerAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechViaDefHeaderp result= (oaIntraPointerAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTechViaDefHeaderp result= (oaIntraPointerAppDef_oaTechViaDefHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaTechViaDefHeader_FromoaIntraPointerAppDef_oaTechViaDefHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTechViaDefHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaTechViaDefHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaTechViaDefHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaTechViaDefHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaTechViaDefHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaTechViaDefHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaTechViaDefHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaTechViaDefHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaTechViaDefHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaTechViaDefHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaTechViaDefHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaTechViaDefHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaTechViaDefHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaTechViaDefHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaTermObject* self = (PyoaIntraPointerAppDef_oaTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaTerm)
    {
        PyParamoaIntraPointerAppDef_oaTerm p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaTerm_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaTerm, Choices are:\n"
        "    (oaIntraPointerAppDef_oaTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaTerm_tp_dealloc(PyoaIntraPointerAppDef_oaTermObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTerm_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaTerm value;
    int convert_status=PyoaIntraPointerAppDef_oaTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntraPointerAppDef_oaTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaTerm v1;
    PyParamoaIntraPointerAppDef_oaTerm v2;
    int convert_status1=PyoaIntraPointerAppDef_oaTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaTerm_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaTerm_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaTerm**) ((PyoaIntraPointerAppDef_oaTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(oaIntraPointerAppDef_oaTerm** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaTerm* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaTermObject* self = (PyoaIntraPointerAppDef_oaTermObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(oaIntraPointerAppDef_oaTerm* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaTerm_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTerm_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaTermObject* self = (PyoaIntraPointerAppDef_oaTermObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTerm_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTerm, Function: get\n"
"  Paramegers: (oaTerm)\n"
"    Calls: oaTerm* get(const oaTerm* object)\n"
"    Signature: get|ptr-oaTerm|cptr-oaTerm,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTerm_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTermObject* self=(PyoaIntraPointerAppDef_oaTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTerm p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTerm_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTermp result= (data.DataCall()->get(p1.Data()));
        return PyoaTerm_FromoaTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTerm_set_doc[] = 
"Class: oaIntraPointerAppDef_oaTerm, Function: set\n"
"  Paramegers: (oaTerm,oaTerm)\n"
"    Calls: void set(oaTerm* object,const oaTerm* otherObject)\n"
"    Signature: set|void-void|ptr-oaTerm,cptr-oaTerm,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTerm_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTermObject* self=(PyoaIntraPointerAppDef_oaTermObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTerm p1;
    PyParamoaTerm p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTerm_Convert,&p1,
          &PyoaTerm_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTerm_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaTerm, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTerm_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaTerm data;
    int convert_status=PyoaIntraPointerAppDef_oaTerm_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaTerm_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaTerm data;
  int convert_status=PyoaIntraPointerAppDef_oaTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaTerm_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaTerm_get,METH_VARARGS,oaIntraPointerAppDef_oaTerm_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaTerm_set,METH_VARARGS,oaIntraPointerAppDef_oaTerm_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaTerm_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaTerm_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaTerm_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTerm_doc[] = 
"Class: oaIntraPointerAppDef_oaTerm\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaTerm)\n"
"    Calls: (const oaIntraPointerAppDef_oaTerm&)\n"
"    Signature: oaIntraPointerAppDef_oaTerm||cref-oaIntraPointerAppDef_oaTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaTerm",
    sizeof(PyoaIntraPointerAppDef_oaTermObject),
    0,
    (destructor)oaIntraPointerAppDef_oaTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTerm_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaTerm, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTerm* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTerm|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTerm* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTerm|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaTerm_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTermp result= (oaIntraPointerAppDef_oaTerm::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTermp result= (oaIntraPointerAppDef_oaTerm::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTerm, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTerm_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTerm, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTerm* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTerm* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTerm|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTerm* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTerm* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTerm|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaTerm_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTermp result= (oaIntraPointerAppDef_oaTerm::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaTermp result= (oaIntraPointerAppDef_oaTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTermp result= (oaIntraPointerAppDef_oaTerm::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTermp result= (oaIntraPointerAppDef_oaTerm::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaTerm_FromoaIntraPointerAppDef_oaTerm(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTerm, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaTerm_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaTerm_static_find,METH_VARARGS,oaIntraPointerAppDef_oaTerm_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaTerm_static_get,METH_VARARGS,oaIntraPointerAppDef_oaTerm_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaTerm",
           (PyObject*)(&PyoaIntraPointerAppDef_oaTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaTerm\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaTerm_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaTerm_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaTrackPattern
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTrackPattern_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaTrackPattern_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaTrackPatternObject* self = (PyoaIntraPointerAppDef_oaTrackPatternObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaTrackPattern)
    {
        PyParamoaIntraPointerAppDef_oaTrackPattern p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaTrackPattern_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaTrackPattern, Choices are:\n"
        "    (oaIntraPointerAppDef_oaTrackPattern)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaTrackPattern_tp_dealloc(PyoaIntraPointerAppDef_oaTrackPatternObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaTrackPattern_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaTrackPattern value;
    int convert_status=PyoaIntraPointerAppDef_oaTrackPattern_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaIntraPointerAppDef_oaTrackPattern::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaTrackPattern_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaTrackPattern v1;
    PyParamoaIntraPointerAppDef_oaTrackPattern v2;
    int convert_status1=PyoaIntraPointerAppDef_oaTrackPattern_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaTrackPattern_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaTrackPattern_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaTrackPattern* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaTrackPattern_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaTrackPattern**) ((PyoaIntraPointerAppDef_oaTrackPatternObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaTrackPattern Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(oaIntraPointerAppDef_oaTrackPattern** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaTrackPattern* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaTrackPattern_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTrackPattern_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaTrackPatternObject* self = (PyoaIntraPointerAppDef_oaTrackPatternObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(oaIntraPointerAppDef_oaTrackPattern* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaTrackPattern_Type.tp_alloc(&PyoaIntraPointerAppDef_oaTrackPattern_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaTrackPatternObject* self = (PyoaIntraPointerAppDef_oaTrackPatternObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTrackPattern_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTrackPattern, Function: get\n"
"  Paramegers: (oaTrackPattern)\n"
"    Calls: oaTrackPattern* get(const oaTrackPattern* object)\n"
"    Signature: get|ptr-oaTrackPattern|cptr-oaTrackPattern,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTrackPattern_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTrackPattern data;
    int convert_status=PyoaIntraPointerAppDef_oaTrackPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTrackPatternObject* self=(PyoaIntraPointerAppDef_oaTrackPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTrackPattern p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTrackPattern_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaTrackPatternp result= (data.DataCall()->get(p1.Data()));
        return PyoaTrackPattern_FromoaTrackPattern(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTrackPattern_set_doc[] = 
"Class: oaIntraPointerAppDef_oaTrackPattern, Function: set\n"
"  Paramegers: (oaTrackPattern,oaTrackPattern)\n"
"    Calls: void set(oaTrackPattern* object,const oaTrackPattern* otherObject)\n"
"    Signature: set|void-void|ptr-oaTrackPattern,cptr-oaTrackPattern,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaTrackPattern_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaTrackPattern data;
    int convert_status=PyoaIntraPointerAppDef_oaTrackPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaTrackPatternObject* self=(PyoaIntraPointerAppDef_oaTrackPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTrackPattern p1;
    PyParamoaTrackPattern p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaTrackPattern_Convert,&p1,
          &PyoaTrackPattern_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTrackPattern_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaTrackPattern, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTrackPattern_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaTrackPattern data;
    int convert_status=PyoaIntraPointerAppDef_oaTrackPattern_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaTrackPattern_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaTrackPattern, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaTrackPattern_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaTrackPattern data;
  int convert_status=PyoaIntraPointerAppDef_oaTrackPattern_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaTrackPattern p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaTrackPattern_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaTrackPattern_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaTrackPattern_get,METH_VARARGS,oaIntraPointerAppDef_oaTrackPattern_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaTrackPattern_set,METH_VARARGS,oaIntraPointerAppDef_oaTrackPattern_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaTrackPattern_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaTrackPattern_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaTrackPattern_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaTrackPattern_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTrackPattern_doc[] = 
"Class: oaIntraPointerAppDef_oaTrackPattern\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaTrackPattern)\n"
"    Calls: (const oaIntraPointerAppDef_oaTrackPattern&)\n"
"    Signature: oaIntraPointerAppDef_oaTrackPattern||cref-oaIntraPointerAppDef_oaTrackPattern,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaTrackPattern_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaTrackPattern",
    sizeof(PyoaIntraPointerAppDef_oaTrackPatternObject),
    0,
    (destructor)oaIntraPointerAppDef_oaTrackPattern_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaTrackPattern_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaTrackPattern_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaTrackPattern_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaTrackPattern_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaTrackPattern_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTrackPattern_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaTrackPattern, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTrackPattern* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTrackPattern|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTrackPattern* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaTrackPattern|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaTrackPattern_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTrackPatternp result= (oaIntraPointerAppDef_oaTrackPattern::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTrackPatternp result= (oaIntraPointerAppDef_oaTrackPattern::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTrackPattern, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaTrackPattern_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaTrackPattern, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaTrackPattern* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTrackPattern|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTrackPattern* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTrackPattern|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaTrackPattern* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTrackPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaTrackPattern* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaTrackPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaTrackPattern_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaTrackPatternp result= (oaIntraPointerAppDef_oaTrackPattern::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaTrackPatternp result= (oaIntraPointerAppDef_oaTrackPattern::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTrackPatternp result= (oaIntraPointerAppDef_oaTrackPattern::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaTrackPatternp result= (oaIntraPointerAppDef_oaTrackPattern::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaTrackPattern_FromoaIntraPointerAppDef_oaTrackPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaTrackPattern, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaTrackPattern_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaTrackPattern_static_find,METH_VARARGS,oaIntraPointerAppDef_oaTrackPattern_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaTrackPattern_static_get,METH_VARARGS,oaIntraPointerAppDef_oaTrackPattern_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaTrackPattern_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaTrackPattern_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaTrackPattern\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaTrackPattern",
           (PyObject*)(&PyoaIntraPointerAppDef_oaTrackPattern_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaTrackPattern\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaTrackPattern_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaTrackPattern_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaValue
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaValue_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaValue_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaValueObject* self = (PyoaIntraPointerAppDef_oaValueObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaValue)
    {
        PyParamoaIntraPointerAppDef_oaValue p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaValue_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaValue, Choices are:\n"
        "    (oaIntraPointerAppDef_oaValue)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaValue_tp_dealloc(PyoaIntraPointerAppDef_oaValueObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaValue_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaValue value;
    int convert_status=PyoaIntraPointerAppDef_oaValue_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaValue::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaValue_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaValue v1;
    PyParamoaIntraPointerAppDef_oaValue v2;
    int convert_status1=PyoaIntraPointerAppDef_oaValue_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaValue_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaValue_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaValue* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaValue_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaValue**) ((PyoaIntraPointerAppDef_oaValueObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaValue Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(oaIntraPointerAppDef_oaValue** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaValue* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaValue_Type.tp_alloc(&PyoaIntraPointerAppDef_oaValue_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaValueObject* self = (PyoaIntraPointerAppDef_oaValueObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(oaIntraPointerAppDef_oaValue* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaValue_Type.tp_alloc(&PyoaIntraPointerAppDef_oaValue_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaValueObject* self = (PyoaIntraPointerAppDef_oaValueObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaValue_get_doc[] = 
"Class: oaIntraPointerAppDef_oaValue, Function: get\n"
"  Paramegers: (oaValue)\n"
"    Calls: oaValue* get(const oaValue* object)\n"
"    Signature: get|ptr-oaValue|cptr-oaValue,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaValue_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaValue data;
    int convert_status=PyoaIntraPointerAppDef_oaValue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaValueObject* self=(PyoaIntraPointerAppDef_oaValueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaValue p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaValue_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaValuep result= (data.DataCall()->get(p1.Data()));
        return PyoaValue_FromoaValue(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaValue_set_doc[] = 
"Class: oaIntraPointerAppDef_oaValue, Function: set\n"
"  Paramegers: (oaValue,oaValue)\n"
"    Calls: void set(oaValue* object,const oaValue* otherObject)\n"
"    Signature: set|void-void|ptr-oaValue,cptr-oaValue,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaValue_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaValue data;
    int convert_status=PyoaIntraPointerAppDef_oaValue_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaValueObject* self=(PyoaIntraPointerAppDef_oaValueObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaValue p1;
    PyParamoaValue p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaValue_Convert,&p1,
          &PyoaValue_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaValue_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaValue, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaValue_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaValue data;
    int convert_status=PyoaIntraPointerAppDef_oaValue_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaValue_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaValue, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaValue_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaValue data;
  int convert_status=PyoaIntraPointerAppDef_oaValue_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaValue p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaValue_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaValue_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaValue_get,METH_VARARGS,oaIntraPointerAppDef_oaValue_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaValue_set,METH_VARARGS,oaIntraPointerAppDef_oaValue_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaValue_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaValue_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaValue_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaValue_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaValue_doc[] = 
"Class: oaIntraPointerAppDef_oaValue\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaValue)\n"
"    Calls: (const oaIntraPointerAppDef_oaValue&)\n"
"    Signature: oaIntraPointerAppDef_oaValue||cref-oaIntraPointerAppDef_oaValue,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaValue_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaValue",
    sizeof(PyoaIntraPointerAppDef_oaValueObject),
    0,
    (destructor)oaIntraPointerAppDef_oaValue_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaValue_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaValue_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaValue_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaValue_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaValue_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaValue_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaValue, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaValue* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaValue|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaValue* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaValue|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaValue_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaValuep result= (oaIntraPointerAppDef_oaValue::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaValuep result= (oaIntraPointerAppDef_oaValue::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaValue, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaValue_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaValue, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaValue* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaValue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaValue* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaValue|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaValue* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaValue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaValue* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaValue|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaValue_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaValuep result= (oaIntraPointerAppDef_oaValue::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaValuep result= (oaIntraPointerAppDef_oaValue::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaValuep result= (oaIntraPointerAppDef_oaValue::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaValuep result= (oaIntraPointerAppDef_oaValue::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaValue_FromoaIntraPointerAppDef_oaValue(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaValue, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaValue_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaValue_static_find,METH_VARARGS,oaIntraPointerAppDef_oaValue_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaValue_static_get,METH_VARARGS,oaIntraPointerAppDef_oaValue_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaValue_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaValue_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaValue\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaValue",
           (PyObject*)(&PyoaIntraPointerAppDef_oaValue_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaValue\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaValue_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaValue_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaVectorInstDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaVectorInstDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaVectorInstDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaVectorInstDef)
    {
        PyParamoaIntraPointerAppDef_oaVectorInstDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaVectorInstDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaVectorInstDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaVectorInstDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaVectorInstDef_tp_dealloc(PyoaIntraPointerAppDef_oaVectorInstDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaVectorInstDef value;
    int convert_status=PyoaIntraPointerAppDef_oaVectorInstDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaIntraPointerAppDef_oaVectorInstDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaVectorInstDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaVectorInstDef v1;
    PyParamoaIntraPointerAppDef_oaVectorInstDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaVectorInstDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaVectorInstDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaVectorInstDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaVectorInstDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaVectorInstDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaVectorInstDef**) ((PyoaIntraPointerAppDef_oaVectorInstDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaVectorInstDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(oaIntraPointerAppDef_oaVectorInstDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaVectorInstDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaVectorInstDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaVectorInstDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaVectorInstDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(oaIntraPointerAppDef_oaVectorInstDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaVectorInstDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaVectorInstDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaVectorInstDefObject* self = (PyoaIntraPointerAppDef_oaVectorInstDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVectorInstDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaVectorInstDef, Function: get\n"
"  Paramegers: (oaVectorInstDef)\n"
"    Calls: oaVectorInstDef* get(const oaVectorInstDef* object)\n"
"    Signature: get|ptr-oaVectorInstDef|cptr-oaVectorInstDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaVectorInstDefObject* self=(PyoaIntraPointerAppDef_oaVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaVectorInstDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaVectorInstDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaVectorInstDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaVectorInstDef_FromoaVectorInstDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVectorInstDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaVectorInstDef, Function: set\n"
"  Paramegers: (oaVectorInstDef,oaVectorInstDef)\n"
"    Calls: void set(oaVectorInstDef* object,const oaVectorInstDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaVectorInstDef,cptr-oaVectorInstDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaVectorInstDefObject* self=(PyoaIntraPointerAppDef_oaVectorInstDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaVectorInstDef p1;
    PyParamoaVectorInstDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaVectorInstDef_Convert,&p1,
          &PyoaVectorInstDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVectorInstDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaVectorInstDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaVectorInstDef data;
    int convert_status=PyoaIntraPointerAppDef_oaVectorInstDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaVectorInstDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaVectorInstDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaVectorInstDef data;
  int convert_status=PyoaIntraPointerAppDef_oaVectorInstDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaVectorInstDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaVectorInstDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaVectorInstDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaVectorInstDef_get,METH_VARARGS,oaIntraPointerAppDef_oaVectorInstDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaVectorInstDef_set,METH_VARARGS,oaIntraPointerAppDef_oaVectorInstDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaVectorInstDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaVectorInstDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaVectorInstDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaVectorInstDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVectorInstDef_doc[] = 
"Class: oaIntraPointerAppDef_oaVectorInstDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaVectorInstDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaVectorInstDef&)\n"
"    Signature: oaIntraPointerAppDef_oaVectorInstDef||cref-oaIntraPointerAppDef_oaVectorInstDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaVectorInstDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaVectorInstDef",
    sizeof(PyoaIntraPointerAppDef_oaVectorInstDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaVectorInstDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaVectorInstDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaVectorInstDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaVectorInstDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaVectorInstDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaVectorInstDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVectorInstDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaVectorInstDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaVectorInstDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaVectorInstDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaVectorInstDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaVectorInstDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaVectorInstDefp result= (oaIntraPointerAppDef_oaVectorInstDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaVectorInstDefp result= (oaIntraPointerAppDef_oaVectorInstDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaVectorInstDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVectorInstDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaVectorInstDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaVectorInstDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaVectorInstDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVectorInstDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaVectorInstDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVectorInstDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaVectorInstDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaVectorInstDefp result= (oaIntraPointerAppDef_oaVectorInstDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaVectorInstDefp result= (oaIntraPointerAppDef_oaVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaVectorInstDefp result= (oaIntraPointerAppDef_oaVectorInstDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaVectorInstDefp result= (oaIntraPointerAppDef_oaVectorInstDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaVectorInstDef_FromoaIntraPointerAppDef_oaVectorInstDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaVectorInstDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaVectorInstDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaVectorInstDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaVectorInstDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaVectorInstDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaVectorInstDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaVectorInstDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaVectorInstDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaVectorInstDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaVectorInstDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaVectorInstDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaVectorInstDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaVectorInstDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaVectorInstDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaVia
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaVia_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaVia_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaViaObject* self = (PyoaIntraPointerAppDef_oaViaObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaVia)
    {
        PyParamoaIntraPointerAppDef_oaVia p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaVia_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaVia, Choices are:\n"
        "    (oaIntraPointerAppDef_oaVia)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaVia_tp_dealloc(PyoaIntraPointerAppDef_oaViaObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaVia_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaVia value;
    int convert_status=PyoaIntraPointerAppDef_oaVia_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaIntraPointerAppDef_oaVia::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaVia_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaVia v1;
    PyParamoaIntraPointerAppDef_oaVia v2;
    int convert_status1=PyoaIntraPointerAppDef_oaVia_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaVia_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaVia_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaVia* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaVia_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaVia**) ((PyoaIntraPointerAppDef_oaViaObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaVia Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(oaIntraPointerAppDef_oaVia** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaVia* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaVia_Type.tp_alloc(&PyoaIntraPointerAppDef_oaVia_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaViaObject* self = (PyoaIntraPointerAppDef_oaViaObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(oaIntraPointerAppDef_oaVia* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaVia_Type.tp_alloc(&PyoaIntraPointerAppDef_oaVia_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaViaObject* self = (PyoaIntraPointerAppDef_oaViaObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVia_get_doc[] = 
"Class: oaIntraPointerAppDef_oaVia, Function: get\n"
"  Paramegers: (oaVia)\n"
"    Calls: oaVia* get(const oaVia* object)\n"
"    Signature: get|ptr-oaVia|cptr-oaVia,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaVia_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaVia data;
    int convert_status=PyoaIntraPointerAppDef_oaVia_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaObject* self=(PyoaIntraPointerAppDef_oaViaObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaVia p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaVia_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaViap result= (data.DataCall()->get(p1.Data()));
        return PyoaVia_FromoaVia(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVia_set_doc[] = 
"Class: oaIntraPointerAppDef_oaVia, Function: set\n"
"  Paramegers: (oaVia,oaVia)\n"
"    Calls: void set(oaVia* object,const oaVia* otherObject)\n"
"    Signature: set|void-void|ptr-oaVia,cptr-oaVia,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaVia_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaVia data;
    int convert_status=PyoaIntraPointerAppDef_oaVia_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaObject* self=(PyoaIntraPointerAppDef_oaViaObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaVia p1;
    PyParamoaVia p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaVia_Convert,&p1,
          &PyoaVia_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVia_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaVia, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaVia_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaVia data;
    int convert_status=PyoaIntraPointerAppDef_oaVia_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaVia_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaVia, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaVia_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaVia data;
  int convert_status=PyoaIntraPointerAppDef_oaVia_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaVia p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaVia_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaVia_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaVia_get,METH_VARARGS,oaIntraPointerAppDef_oaVia_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaVia_set,METH_VARARGS,oaIntraPointerAppDef_oaVia_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaVia_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaVia_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaVia_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaVia_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVia_doc[] = 
"Class: oaIntraPointerAppDef_oaVia\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaVia)\n"
"    Calls: (const oaIntraPointerAppDef_oaVia&)\n"
"    Signature: oaIntraPointerAppDef_oaVia||cref-oaIntraPointerAppDef_oaVia,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaVia_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaVia",
    sizeof(PyoaIntraPointerAppDef_oaViaObject),
    0,
    (destructor)oaIntraPointerAppDef_oaVia_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaVia_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaVia_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaVia_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaVia_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaVia_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVia_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaVia, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaVia* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaVia|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaVia* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaVia|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaVia_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViap result= (oaIntraPointerAppDef_oaVia::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViap result= (oaIntraPointerAppDef_oaVia::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaVia, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaVia_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaVia, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaVia* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVia|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaVia* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVia|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaVia* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVia|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaVia* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaVia|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaVia_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViap result= (oaIntraPointerAppDef_oaVia::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaViap result= (oaIntraPointerAppDef_oaVia::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViap result= (oaIntraPointerAppDef_oaVia::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViap result= (oaIntraPointerAppDef_oaVia::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaVia_FromoaIntraPointerAppDef_oaVia(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaVia, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaVia_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaVia_static_find,METH_VARARGS,oaIntraPointerAppDef_oaVia_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaVia_static_get,METH_VARARGS,oaIntraPointerAppDef_oaVia_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaVia_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaVia_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaVia\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaVia",
           (PyObject*)(&PyoaIntraPointerAppDef_oaVia_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaVia\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaVia_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaVia_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaViaDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaViaDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaViaDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaViaDefObject* self = (PyoaIntraPointerAppDef_oaViaDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaViaDef)
    {
        PyParamoaIntraPointerAppDef_oaViaDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaViaDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaViaDef, Choices are:\n"
        "    (oaIntraPointerAppDef_oaViaDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaViaDef_tp_dealloc(PyoaIntraPointerAppDef_oaViaDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaViaDef_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaViaDef value;
    int convert_status=PyoaIntraPointerAppDef_oaViaDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaIntraPointerAppDef_oaViaDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaViaDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaViaDef v1;
    PyParamoaIntraPointerAppDef_oaViaDef v2;
    int convert_status1=PyoaIntraPointerAppDef_oaViaDef_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaViaDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaViaDef_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaViaDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaViaDef_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaViaDef**) ((PyoaIntraPointerAppDef_oaViaDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaViaDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(oaIntraPointerAppDef_oaViaDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaViaDef* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaViaDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaViaDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaViaDefObject* self = (PyoaIntraPointerAppDef_oaViaDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(oaIntraPointerAppDef_oaViaDef* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaViaDef_Type.tp_alloc(&PyoaIntraPointerAppDef_oaViaDef_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaViaDefObject* self = (PyoaIntraPointerAppDef_oaViaDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaDef_get_doc[] = 
"Class: oaIntraPointerAppDef_oaViaDef, Function: get\n"
"  Paramegers: (oaViaDef)\n"
"    Calls: oaViaDef* get(const oaViaDef* object)\n"
"    Signature: get|ptr-oaViaDef|cptr-oaViaDef,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaViaDef data;
    int convert_status=PyoaIntraPointerAppDef_oaViaDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaDefObject* self=(PyoaIntraPointerAppDef_oaViaDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaViaDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaViaDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaViaDefp result= (data.DataCall()->get(p1.Data()));
        return PyoaViaDef_FromoaViaDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaDef_set_doc[] = 
"Class: oaIntraPointerAppDef_oaViaDef, Function: set\n"
"  Paramegers: (oaViaDef,oaViaDef)\n"
"    Calls: void set(oaViaDef* object,const oaViaDef* otherObject)\n"
"    Signature: set|void-void|ptr-oaViaDef,cptr-oaViaDef,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaViaDef data;
    int convert_status=PyoaIntraPointerAppDef_oaViaDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaDefObject* self=(PyoaIntraPointerAppDef_oaViaDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaViaDef p1;
    PyParamoaViaDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaViaDef_Convert,&p1,
          &PyoaViaDef_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaDef_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaViaDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaViaDef data;
    int convert_status=PyoaIntraPointerAppDef_oaViaDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaViaDef_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaViaDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaViaDef data;
  int convert_status=PyoaIntraPointerAppDef_oaViaDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaViaDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaViaDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaViaDef_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaViaDef_get,METH_VARARGS,oaIntraPointerAppDef_oaViaDef_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaViaDef_set,METH_VARARGS,oaIntraPointerAppDef_oaViaDef_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaViaDef_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaViaDef_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaViaDef_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaViaDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaDef_doc[] = 
"Class: oaIntraPointerAppDef_oaViaDef\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaViaDef)\n"
"    Calls: (const oaIntraPointerAppDef_oaViaDef&)\n"
"    Signature: oaIntraPointerAppDef_oaViaDef||cref-oaIntraPointerAppDef_oaViaDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaViaDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaViaDef",
    sizeof(PyoaIntraPointerAppDef_oaViaDefObject),
    0,
    (destructor)oaIntraPointerAppDef_oaViaDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaViaDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaViaDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaViaDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaViaDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaViaDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaDef_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaViaDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaViaDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaViaDef|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaViaDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaViaDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViaDefp result= (oaIntraPointerAppDef_oaViaDef::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaDefp result= (oaIntraPointerAppDef_oaViaDef::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaViaDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaDef_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaViaDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaViaDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaViaDef* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaDef|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaViaDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaViaDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViaDefp result= (oaIntraPointerAppDef_oaViaDef::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaViaDefp result= (oaIntraPointerAppDef_oaViaDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaDefp result= (oaIntraPointerAppDef_oaViaDef::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaDefp result= (oaIntraPointerAppDef_oaViaDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaViaDef_FromoaIntraPointerAppDef_oaViaDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaViaDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaViaDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaViaDef_static_find,METH_VARARGS,oaIntraPointerAppDef_oaViaDef_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaViaDef_static_get,METH_VARARGS,oaIntraPointerAppDef_oaViaDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaViaDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaViaDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaViaDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaViaDef",
           (PyObject*)(&PyoaIntraPointerAppDef_oaViaDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaViaDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaViaDef_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaViaDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaViaHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaViaHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaViaHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaViaHeaderObject* self = (PyoaIntraPointerAppDef_oaViaHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaViaHeader)
    {
        PyParamoaIntraPointerAppDef_oaViaHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaViaHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaViaHeader, Choices are:\n"
        "    (oaIntraPointerAppDef_oaViaHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaViaHeader_tp_dealloc(PyoaIntraPointerAppDef_oaViaHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaViaHeader_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaViaHeader value;
    int convert_status=PyoaIntraPointerAppDef_oaViaHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[54];
    sprintf(buffer,"<oaIntraPointerAppDef_oaViaHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaViaHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaViaHeader v1;
    PyParamoaIntraPointerAppDef_oaViaHeader v2;
    int convert_status1=PyoaIntraPointerAppDef_oaViaHeader_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaViaHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaViaHeader_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaViaHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaViaHeader_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaViaHeader**) ((PyoaIntraPointerAppDef_oaViaHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaViaHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(oaIntraPointerAppDef_oaViaHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaViaHeader* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaViaHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaViaHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaViaHeaderObject* self = (PyoaIntraPointerAppDef_oaViaHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(oaIntraPointerAppDef_oaViaHeader* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaViaHeader_Type.tp_alloc(&PyoaIntraPointerAppDef_oaViaHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaViaHeaderObject* self = (PyoaIntraPointerAppDef_oaViaHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaHeader_get_doc[] = 
"Class: oaIntraPointerAppDef_oaViaHeader, Function: get\n"
"  Paramegers: (oaViaHeader)\n"
"    Calls: oaViaHeader* get(const oaViaHeader* object)\n"
"    Signature: get|ptr-oaViaHeader|cptr-oaViaHeader,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaViaHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaViaHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaHeaderObject* self=(PyoaIntraPointerAppDef_oaViaHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaViaHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaViaHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaViaHeaderp result= (data.DataCall()->get(p1.Data()));
        return PyoaViaHeader_FromoaViaHeader(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaHeader_set_doc[] = 
"Class: oaIntraPointerAppDef_oaViaHeader, Function: set\n"
"  Paramegers: (oaViaHeader,oaViaHeader)\n"
"    Calls: void set(oaViaHeader* object,const oaViaHeader* otherObject)\n"
"    Signature: set|void-void|ptr-oaViaHeader,cptr-oaViaHeader,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaViaHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaViaHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaHeaderObject* self=(PyoaIntraPointerAppDef_oaViaHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaViaHeader p1;
    PyParamoaViaHeader p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaViaHeader_Convert,&p1,
          &PyoaViaHeader_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaHeader_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaViaHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaViaHeader data;
    int convert_status=PyoaIntraPointerAppDef_oaViaHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaViaHeader_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaViaHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaViaHeader data;
  int convert_status=PyoaIntraPointerAppDef_oaViaHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaViaHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaViaHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaViaHeader_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaViaHeader_get,METH_VARARGS,oaIntraPointerAppDef_oaViaHeader_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaViaHeader_set,METH_VARARGS,oaIntraPointerAppDef_oaViaHeader_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaViaHeader_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaViaHeader_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaViaHeader_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaViaHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaHeader_doc[] = 
"Class: oaIntraPointerAppDef_oaViaHeader\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaViaHeader)\n"
"    Calls: (const oaIntraPointerAppDef_oaViaHeader&)\n"
"    Signature: oaIntraPointerAppDef_oaViaHeader||cref-oaIntraPointerAppDef_oaViaHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaViaHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaViaHeader",
    sizeof(PyoaIntraPointerAppDef_oaViaHeaderObject),
    0,
    (destructor)oaIntraPointerAppDef_oaViaHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaViaHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaViaHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaViaHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaViaHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaViaHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaHeader_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaViaHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaViaHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaViaHeader|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaViaHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaViaHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViaHeaderp result= (oaIntraPointerAppDef_oaViaHeader::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaHeaderp result= (oaIntraPointerAppDef_oaViaHeader::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaViaHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaHeader_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaViaHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaViaHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaViaHeader* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaHeader|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaViaHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaViaHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViaHeaderp result= (oaIntraPointerAppDef_oaViaHeader::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaViaHeaderp result= (oaIntraPointerAppDef_oaViaHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaHeaderp result= (oaIntraPointerAppDef_oaViaHeader::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaHeaderp result= (oaIntraPointerAppDef_oaViaHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaViaHeader_FromoaIntraPointerAppDef_oaViaHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaViaHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaViaHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaViaHeader_static_find,METH_VARARGS,oaIntraPointerAppDef_oaViaHeader_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaViaHeader_static_get,METH_VARARGS,oaIntraPointerAppDef_oaViaHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaViaHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaViaHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaViaHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaViaHeader",
           (PyObject*)(&PyoaIntraPointerAppDef_oaViaHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaViaHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaViaHeader_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaViaHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaViaSpec
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaViaSpec_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaViaSpec_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaViaSpecObject* self = (PyoaIntraPointerAppDef_oaViaSpecObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaViaSpec)
    {
        PyParamoaIntraPointerAppDef_oaViaSpec p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaViaSpec_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaViaSpec, Choices are:\n"
        "    (oaIntraPointerAppDef_oaViaSpec)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaViaSpec_tp_dealloc(PyoaIntraPointerAppDef_oaViaSpecObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaViaSpec_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaViaSpec value;
    int convert_status=PyoaIntraPointerAppDef_oaViaSpec_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaIntraPointerAppDef_oaViaSpec::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaViaSpec_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaViaSpec v1;
    PyParamoaIntraPointerAppDef_oaViaSpec v2;
    int convert_status1=PyoaIntraPointerAppDef_oaViaSpec_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaViaSpec_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaViaSpec_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaViaSpec* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaViaSpec_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaViaSpec**) ((PyoaIntraPointerAppDef_oaViaSpecObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaViaSpec Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(oaIntraPointerAppDef_oaViaSpec** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaViaSpec* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaViaSpec_Type.tp_alloc(&PyoaIntraPointerAppDef_oaViaSpec_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaViaSpecObject* self = (PyoaIntraPointerAppDef_oaViaSpecObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(oaIntraPointerAppDef_oaViaSpec* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaViaSpec_Type.tp_alloc(&PyoaIntraPointerAppDef_oaViaSpec_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaViaSpecObject* self = (PyoaIntraPointerAppDef_oaViaSpecObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaSpec_get_doc[] = 
"Class: oaIntraPointerAppDef_oaViaSpec, Function: get\n"
"  Paramegers: (oaViaSpec)\n"
"    Calls: oaViaSpec* get(const oaViaSpec* object)\n"
"    Signature: get|ptr-oaViaSpec|cptr-oaViaSpec,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaSpec_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaViaSpec data;
    int convert_status=PyoaIntraPointerAppDef_oaViaSpec_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaSpecObject* self=(PyoaIntraPointerAppDef_oaViaSpecObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaViaSpec p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaViaSpec_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaViaSpecp result= (data.DataCall()->get(p1.Data()));
        return PyoaViaSpec_FromoaViaSpec(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaSpec_set_doc[] = 
"Class: oaIntraPointerAppDef_oaViaSpec, Function: set\n"
"  Paramegers: (oaViaSpec,oaViaSpec)\n"
"    Calls: void set(oaViaSpec* object,const oaViaSpec* otherObject)\n"
"    Signature: set|void-void|ptr-oaViaSpec,cptr-oaViaSpec,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaSpec_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaViaSpec data;
    int convert_status=PyoaIntraPointerAppDef_oaViaSpec_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViaSpecObject* self=(PyoaIntraPointerAppDef_oaViaSpecObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaViaSpec p1;
    PyParamoaViaSpec p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaViaSpec_Convert,&p1,
          &PyoaViaSpec_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaSpec_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaViaSpec, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaSpec_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaViaSpec data;
    int convert_status=PyoaIntraPointerAppDef_oaViaSpec_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaViaSpec_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaViaSpec, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaSpec_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaViaSpec data;
  int convert_status=PyoaIntraPointerAppDef_oaViaSpec_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaViaSpec p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaViaSpec_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaViaSpec_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaViaSpec_get,METH_VARARGS,oaIntraPointerAppDef_oaViaSpec_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaViaSpec_set,METH_VARARGS,oaIntraPointerAppDef_oaViaSpec_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaViaSpec_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaViaSpec_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaViaSpec_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaViaSpec_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaSpec_doc[] = 
"Class: oaIntraPointerAppDef_oaViaSpec\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaViaSpec)\n"
"    Calls: (const oaIntraPointerAppDef_oaViaSpec&)\n"
"    Signature: oaIntraPointerAppDef_oaViaSpec||cref-oaIntraPointerAppDef_oaViaSpec,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaViaSpec_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaViaSpec",
    sizeof(PyoaIntraPointerAppDef_oaViaSpecObject),
    0,
    (destructor)oaIntraPointerAppDef_oaViaSpec_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaViaSpec_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaViaSpec_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaViaSpec_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaViaSpec_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaViaSpec_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaSpec_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaViaSpec, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaViaSpec* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaViaSpec|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaViaSpec* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaViaSpec|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaSpec_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViaSpecp result= (oaIntraPointerAppDef_oaViaSpec::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaSpecp result= (oaIntraPointerAppDef_oaViaSpec::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaViaSpec, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaViaSpec_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaViaSpec, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaViaSpec* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaSpec|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaViaSpec* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaSpec|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaViaSpec* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaSpec|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaViaSpec* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaViaSpec|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaViaSpec_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViaSpecp result= (oaIntraPointerAppDef_oaViaSpec::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaViaSpecp result= (oaIntraPointerAppDef_oaViaSpec::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaSpecp result= (oaIntraPointerAppDef_oaViaSpec::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViaSpecp result= (oaIntraPointerAppDef_oaViaSpec::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaViaSpec_FromoaIntraPointerAppDef_oaViaSpec(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaViaSpec, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaViaSpec_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaViaSpec_static_find,METH_VARARGS,oaIntraPointerAppDef_oaViaSpec_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaViaSpec_static_get,METH_VARARGS,oaIntraPointerAppDef_oaViaSpec_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaViaSpec_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaViaSpec_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaViaSpec\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaViaSpec",
           (PyObject*)(&PyoaIntraPointerAppDef_oaViaSpec_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaViaSpec\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaViaSpec_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaViaSpec_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaView
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaView_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaView_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaViewObject* self = (PyoaIntraPointerAppDef_oaViewObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaView)
    {
        PyParamoaIntraPointerAppDef_oaView p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaView_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaView, Choices are:\n"
        "    (oaIntraPointerAppDef_oaView)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaView_tp_dealloc(PyoaIntraPointerAppDef_oaViewObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaView_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaView value;
    int convert_status=PyoaIntraPointerAppDef_oaView_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaIntraPointerAppDef_oaView::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaView_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaView v1;
    PyParamoaIntraPointerAppDef_oaView v2;
    int convert_status1=PyoaIntraPointerAppDef_oaView_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaView_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaView_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaView* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaView_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaView**) ((PyoaIntraPointerAppDef_oaViewObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaView Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(oaIntraPointerAppDef_oaView** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaView* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaView_Type.tp_alloc(&PyoaIntraPointerAppDef_oaView_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaViewObject* self = (PyoaIntraPointerAppDef_oaViewObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(oaIntraPointerAppDef_oaView* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaView_Type.tp_alloc(&PyoaIntraPointerAppDef_oaView_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaViewObject* self = (PyoaIntraPointerAppDef_oaViewObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaView_get_doc[] = 
"Class: oaIntraPointerAppDef_oaView, Function: get\n"
"  Paramegers: (oaView)\n"
"    Calls: oaView* get(const oaView* object)\n"
"    Signature: get|ptr-oaView|cptr-oaView,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaView_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaView data;
    int convert_status=PyoaIntraPointerAppDef_oaView_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViewObject* self=(PyoaIntraPointerAppDef_oaViewObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaView p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaView_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaViewp result= (data.DataCall()->get(p1.Data()));
        return PyoaView_FromoaView(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaView_set_doc[] = 
"Class: oaIntraPointerAppDef_oaView, Function: set\n"
"  Paramegers: (oaView,oaView)\n"
"    Calls: void set(oaView* object,const oaView* otherObject)\n"
"    Signature: set|void-void|ptr-oaView,cptr-oaView,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaView_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaView data;
    int convert_status=PyoaIntraPointerAppDef_oaView_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaViewObject* self=(PyoaIntraPointerAppDef_oaViewObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaView p1;
    PyParamoaView p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaView_Convert,&p1,
          &PyoaView_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaView_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaView, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaView_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaView data;
    int convert_status=PyoaIntraPointerAppDef_oaView_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaView_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaView, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaView_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaView data;
  int convert_status=PyoaIntraPointerAppDef_oaView_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaView p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaView_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaView_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaView_get,METH_VARARGS,oaIntraPointerAppDef_oaView_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaView_set,METH_VARARGS,oaIntraPointerAppDef_oaView_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaView_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaView_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaView_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaView_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaView_doc[] = 
"Class: oaIntraPointerAppDef_oaView\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaView)\n"
"    Calls: (const oaIntraPointerAppDef_oaView&)\n"
"    Signature: oaIntraPointerAppDef_oaView||cref-oaIntraPointerAppDef_oaView,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaView_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaView",
    sizeof(PyoaIntraPointerAppDef_oaViewObject),
    0,
    (destructor)oaIntraPointerAppDef_oaView_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaView_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaView_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaView_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaView_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaView_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaView_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaView, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaView* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaView|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaView* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaView|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaView_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViewp result= (oaIntraPointerAppDef_oaView::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViewp result= (oaIntraPointerAppDef_oaView::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaView, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaView_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaView, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaView* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaView|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaView* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaView|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaView* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaView|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaView* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaView|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaView_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaViewp result= (oaIntraPointerAppDef_oaView::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaViewp result= (oaIntraPointerAppDef_oaView::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViewp result= (oaIntraPointerAppDef_oaView::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaViewp result= (oaIntraPointerAppDef_oaView::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaView_FromoaIntraPointerAppDef_oaView(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaView, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaView_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaView_static_find,METH_VARARGS,oaIntraPointerAppDef_oaView_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaView_static_get,METH_VARARGS,oaIntraPointerAppDef_oaView_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaView_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaView_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaView\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaView",
           (PyObject*)(&PyoaIntraPointerAppDef_oaView_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaView\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaView_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaView_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaWafer
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaWafer_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaWafer_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaWaferObject* self = (PyoaIntraPointerAppDef_oaWaferObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaWafer)
    {
        PyParamoaIntraPointerAppDef_oaWafer p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaWafer_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaWafer, Choices are:\n"
        "    (oaIntraPointerAppDef_oaWafer)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaWafer_tp_dealloc(PyoaIntraPointerAppDef_oaWaferObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaWafer_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaWafer value;
    int convert_status=PyoaIntraPointerAppDef_oaWafer_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaIntraPointerAppDef_oaWafer::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaWafer_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaWafer v1;
    PyParamoaIntraPointerAppDef_oaWafer v2;
    int convert_status1=PyoaIntraPointerAppDef_oaWafer_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaWafer_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaWafer_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaWafer* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaWafer_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaWafer**) ((PyoaIntraPointerAppDef_oaWaferObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaWafer Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(oaIntraPointerAppDef_oaWafer** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaWafer* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaWafer_Type.tp_alloc(&PyoaIntraPointerAppDef_oaWafer_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaWaferObject* self = (PyoaIntraPointerAppDef_oaWaferObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(oaIntraPointerAppDef_oaWafer* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaWafer_Type.tp_alloc(&PyoaIntraPointerAppDef_oaWafer_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaWaferObject* self = (PyoaIntraPointerAppDef_oaWaferObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWafer_get_doc[] = 
"Class: oaIntraPointerAppDef_oaWafer, Function: get\n"
"  Paramegers: (oaWafer)\n"
"    Calls: oaWafer* get(const oaWafer* object)\n"
"    Signature: get|ptr-oaWafer|cptr-oaWafer,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaWafer_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaWafer data;
    int convert_status=PyoaIntraPointerAppDef_oaWafer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaWaferObject* self=(PyoaIntraPointerAppDef_oaWaferObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaWafer p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaWafer_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaWaferp result= (data.DataCall()->get(p1.Data()));
        return PyoaWafer_FromoaWafer(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWafer_set_doc[] = 
"Class: oaIntraPointerAppDef_oaWafer, Function: set\n"
"  Paramegers: (oaWafer,oaWafer)\n"
"    Calls: void set(oaWafer* object,const oaWafer* otherObject)\n"
"    Signature: set|void-void|ptr-oaWafer,cptr-oaWafer,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaWafer_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaWafer data;
    int convert_status=PyoaIntraPointerAppDef_oaWafer_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaWaferObject* self=(PyoaIntraPointerAppDef_oaWaferObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaWafer p1;
    PyParamoaWafer p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaWafer_Convert,&p1,
          &PyoaWafer_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWafer_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaWafer, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaWafer_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaWafer data;
    int convert_status=PyoaIntraPointerAppDef_oaWafer_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaWafer_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaWafer, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaWafer_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaWafer data;
  int convert_status=PyoaIntraPointerAppDef_oaWafer_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaWafer p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaWafer_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaWafer_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaWafer_get,METH_VARARGS,oaIntraPointerAppDef_oaWafer_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaWafer_set,METH_VARARGS,oaIntraPointerAppDef_oaWafer_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaWafer_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaWafer_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaWafer_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaWafer_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWafer_doc[] = 
"Class: oaIntraPointerAppDef_oaWafer\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaWafer)\n"
"    Calls: (const oaIntraPointerAppDef_oaWafer&)\n"
"    Signature: oaIntraPointerAppDef_oaWafer||cref-oaIntraPointerAppDef_oaWafer,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaWafer_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaWafer",
    sizeof(PyoaIntraPointerAppDef_oaWaferObject),
    0,
    (destructor)oaIntraPointerAppDef_oaWafer_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaWafer_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaWafer_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaWafer_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaWafer_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaWafer_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWafer_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaWafer, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaWafer* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaWafer|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaWafer* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaWafer|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaWafer_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaWaferp result= (oaIntraPointerAppDef_oaWafer::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferp result= (oaIntraPointerAppDef_oaWafer::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaWafer, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWafer_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaWafer, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaWafer* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWafer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaWafer* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWafer|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaWafer* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWafer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaWafer* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWafer|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaWafer_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaWaferp result= (oaIntraPointerAppDef_oaWafer::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaWaferp result= (oaIntraPointerAppDef_oaWafer::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferp result= (oaIntraPointerAppDef_oaWafer::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferp result= (oaIntraPointerAppDef_oaWafer::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaWafer_FromoaIntraPointerAppDef_oaWafer(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaWafer, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaWafer_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaWafer_static_find,METH_VARARGS,oaIntraPointerAppDef_oaWafer_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaWafer_static_get,METH_VARARGS,oaIntraPointerAppDef_oaWafer_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaWafer_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaWafer_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaWafer\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaWafer",
           (PyObject*)(&PyoaIntraPointerAppDef_oaWafer_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaWafer\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaWafer_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaWafer_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaWaferDesc
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaWaferDesc_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaWaferDesc_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaWaferDescObject* self = (PyoaIntraPointerAppDef_oaWaferDescObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaWaferDesc)
    {
        PyParamoaIntraPointerAppDef_oaWaferDesc p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaWaferDesc_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaWaferDesc, Choices are:\n"
        "    (oaIntraPointerAppDef_oaWaferDesc)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaWaferDesc_tp_dealloc(PyoaIntraPointerAppDef_oaWaferDescObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaWaferDesc_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaWaferDesc value;
    int convert_status=PyoaIntraPointerAppDef_oaWaferDesc_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[54];
    sprintf(buffer,"<oaIntraPointerAppDef_oaWaferDesc::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaWaferDesc_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaWaferDesc v1;
    PyParamoaIntraPointerAppDef_oaWaferDesc v2;
    int convert_status1=PyoaIntraPointerAppDef_oaWaferDesc_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaWaferDesc_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaWaferDesc_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaWaferDesc* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaWaferDesc_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaWaferDesc**) ((PyoaIntraPointerAppDef_oaWaferDescObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaWaferDesc Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(oaIntraPointerAppDef_oaWaferDesc** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaWaferDesc* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaWaferDesc_Type.tp_alloc(&PyoaIntraPointerAppDef_oaWaferDesc_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaWaferDescObject* self = (PyoaIntraPointerAppDef_oaWaferDescObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(oaIntraPointerAppDef_oaWaferDesc* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaWaferDesc_Type.tp_alloc(&PyoaIntraPointerAppDef_oaWaferDesc_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaWaferDescObject* self = (PyoaIntraPointerAppDef_oaWaferDescObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferDesc_get_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferDesc, Function: get\n"
"  Paramegers: (oaWaferDesc)\n"
"    Calls: oaWaferDesc* get(const oaWaferDesc* object)\n"
"    Signature: get|ptr-oaWaferDesc|cptr-oaWaferDesc,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferDesc_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaWaferDesc data;
    int convert_status=PyoaIntraPointerAppDef_oaWaferDesc_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaWaferDescObject* self=(PyoaIntraPointerAppDef_oaWaferDescObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaWaferDesc p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaWaferDesc_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaWaferDescp result= (data.DataCall()->get(p1.Data()));
        return PyoaWaferDesc_FromoaWaferDesc(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferDesc_set_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferDesc, Function: set\n"
"  Paramegers: (oaWaferDesc,oaWaferDesc)\n"
"    Calls: void set(oaWaferDesc* object,const oaWaferDesc* otherObject)\n"
"    Signature: set|void-void|ptr-oaWaferDesc,cptr-oaWaferDesc,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferDesc_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaWaferDesc data;
    int convert_status=PyoaIntraPointerAppDef_oaWaferDesc_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaWaferDescObject* self=(PyoaIntraPointerAppDef_oaWaferDescObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaWaferDesc p1;
    PyParamoaWaferDesc p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaWaferDesc_Convert,&p1,
          &PyoaWaferDesc_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferDesc_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaWaferDesc, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferDesc_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaWaferDesc data;
    int convert_status=PyoaIntraPointerAppDef_oaWaferDesc_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaWaferDesc_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferDesc, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferDesc_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaWaferDesc data;
  int convert_status=PyoaIntraPointerAppDef_oaWaferDesc_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaWaferDesc p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaWaferDesc_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaWaferDesc_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaWaferDesc_get,METH_VARARGS,oaIntraPointerAppDef_oaWaferDesc_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaWaferDesc_set,METH_VARARGS,oaIntraPointerAppDef_oaWaferDesc_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaWaferDesc_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaWaferDesc_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaWaferDesc_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaWaferDesc_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferDesc_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferDesc\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaWaferDesc)\n"
"    Calls: (const oaIntraPointerAppDef_oaWaferDesc&)\n"
"    Signature: oaIntraPointerAppDef_oaWaferDesc||cref-oaIntraPointerAppDef_oaWaferDesc,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaWaferDesc_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaWaferDesc",
    sizeof(PyoaIntraPointerAppDef_oaWaferDescObject),
    0,
    (destructor)oaIntraPointerAppDef_oaWaferDesc_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaWaferDesc_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaWaferDesc_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaWaferDesc_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaWaferDesc_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaWaferDesc_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferDesc_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferDesc, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaWaferDesc* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaWaferDesc|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaWaferDesc* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaWaferDesc|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferDesc_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaWaferDescp result= (oaIntraPointerAppDef_oaWaferDesc::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferDescp result= (oaIntraPointerAppDef_oaWaferDesc::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaWaferDesc, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferDesc_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferDesc, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaWaferDesc* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferDesc|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaWaferDesc* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferDesc|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaWaferDesc* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferDesc|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaWaferDesc* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferDesc|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferDesc_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaWaferDescp result= (oaIntraPointerAppDef_oaWaferDesc::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaWaferDescp result= (oaIntraPointerAppDef_oaWaferDesc::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferDescp result= (oaIntraPointerAppDef_oaWaferDesc::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferDescp result= (oaIntraPointerAppDef_oaWaferDesc::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaWaferDesc_FromoaIntraPointerAppDef_oaWaferDesc(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaWaferDesc, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaWaferDesc_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaWaferDesc_static_find,METH_VARARGS,oaIntraPointerAppDef_oaWaferDesc_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaWaferDesc_static_get,METH_VARARGS,oaIntraPointerAppDef_oaWaferDesc_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaWaferDesc_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaWaferDesc_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaWaferDesc\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaWaferDesc",
           (PyObject*)(&PyoaIntraPointerAppDef_oaWaferDesc_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaWaferDesc\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaWaferDesc_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaWaferDesc_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIntraPointerAppDef_oaWaferFeature
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaWaferFeature_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIntraPointerAppDef_oaWaferFeature_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIntraPointerAppDef_oaWaferFeatureObject* self = (PyoaIntraPointerAppDef_oaWaferFeatureObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaIntraPointerAppDef_oaWaferFeature)
    {
        PyParamoaIntraPointerAppDef_oaWaferFeature p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaIntraPointerAppDef_oaWaferFeature_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIntraPointerAppDef_oaWaferFeature, Choices are:\n"
        "    (oaIntraPointerAppDef_oaWaferFeature)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIntraPointerAppDef_oaWaferFeature_tp_dealloc(PyoaIntraPointerAppDef_oaWaferFeatureObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIntraPointerAppDef_oaWaferFeature_tp_repr(PyObject *ob)
{
    PyParamoaIntraPointerAppDef_oaWaferFeature value;
    int convert_status=PyoaIntraPointerAppDef_oaWaferFeature_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaIntraPointerAppDef_oaWaferFeature::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIntraPointerAppDef_oaWaferFeature_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIntraPointerAppDef_oaWaferFeature v1;
    PyParamoaIntraPointerAppDef_oaWaferFeature v2;
    int convert_status1=PyoaIntraPointerAppDef_oaWaferFeature_Convert(ob1,&v1);
    int convert_status2=PyoaIntraPointerAppDef_oaWaferFeature_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaIntraPointerAppDef_oaWaferFeature_Convert(PyObject* ob,PyParamoaIntraPointerAppDef_oaWaferFeature* result)
{
    if (ob == NULL) return 1;
    if (PyoaIntraPointerAppDef_oaWaferFeature_Check(ob)) {
        result->SetData( (oaIntraPointerAppDef_oaWaferFeature**) ((PyoaIntraPointerAppDef_oaWaferFeatureObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIntraPointerAppDef_oaWaferFeature Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(oaIntraPointerAppDef_oaWaferFeature** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaIntraPointerAppDef_oaWaferFeature* data=*value;
        PyObject* bself = PyoaIntraPointerAppDef_oaWaferFeature_Type.tp_alloc(&PyoaIntraPointerAppDef_oaWaferFeature_Type,0);
        if (bself == NULL) return bself;
        PyoaIntraPointerAppDef_oaWaferFeatureObject* self = (PyoaIntraPointerAppDef_oaWaferFeatureObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(oaIntraPointerAppDef_oaWaferFeature* data)
{
    if (data) {
       PyObject* bself = PyoaIntraPointerAppDef_oaWaferFeature_Type.tp_alloc(&PyoaIntraPointerAppDef_oaWaferFeature_Type,0);
       if (bself == NULL) return bself;
       PyoaIntraPointerAppDef_oaWaferFeatureObject* self = (PyoaIntraPointerAppDef_oaWaferFeatureObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferFeature_get_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferFeature, Function: get\n"
"  Paramegers: (oaWaferFeature)\n"
"    Calls: oaWaferFeature* get(const oaWaferFeature* object)\n"
"    Signature: get|ptr-oaWaferFeature|cptr-oaWaferFeature,\n"
"    This function returns the value associated with this oaIntraPointerAppDef extension for the specified object . The value is returned as a pointer to an oaObject .\n"
"    object\n"
"    The object whose extension value to return\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferFeature_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaWaferFeature data;
    int convert_status=PyoaIntraPointerAppDef_oaWaferFeature_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaWaferFeatureObject* self=(PyoaIntraPointerAppDef_oaWaferFeatureObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaWaferFeature p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaWaferFeature_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaWaferFeaturep result= (data.DataCall()->get(p1.Data()));
        return PyoaWaferFeature_FromoaWaferFeature(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferFeature_set_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferFeature, Function: set\n"
"  Paramegers: (oaWaferFeature,oaWaferFeature)\n"
"    Calls: void set(oaWaferFeature* object,const oaWaferFeature* otherObject)\n"
"    Signature: set|void-void|ptr-oaWaferFeature,cptr-oaWaferFeature,\n"
"    This function sets the value associated with this oaIntraPointerAppDef extension for the specified object to the specified value .\n"
"    object\n"
"    The object whose extension value to set\n"
"    otherObject\n"
"    The new value for this extension\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferFeature_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIntraPointerAppDef_oaWaferFeature data;
    int convert_status=PyoaIntraPointerAppDef_oaWaferFeature_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIntraPointerAppDef_oaWaferFeatureObject* self=(PyoaIntraPointerAppDef_oaWaferFeatureObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaWaferFeature p1;
    PyParamoaWaferFeature p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaWaferFeature_Convert,&p1,
          &PyoaWaferFeature_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferFeature_isNull_doc[] =
"Class: oaIntraPointerAppDef_oaWaferFeature, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferFeature_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaIntraPointerAppDef_oaWaferFeature data;
    int convert_status=PyoaIntraPointerAppDef_oaWaferFeature_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaIntraPointerAppDef_oaWaferFeature_assign_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferFeature, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferFeature_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIntraPointerAppDef_oaWaferFeature data;
  int convert_status=PyoaIntraPointerAppDef_oaWaferFeature_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIntraPointerAppDef_oaWaferFeature p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIntraPointerAppDef_oaWaferFeature_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIntraPointerAppDef_oaWaferFeature_methodlist[] = {
    {"get",(PyCFunction)oaIntraPointerAppDef_oaWaferFeature_get,METH_VARARGS,oaIntraPointerAppDef_oaWaferFeature_get_doc},
    {"set",(PyCFunction)oaIntraPointerAppDef_oaWaferFeature_set,METH_VARARGS,oaIntraPointerAppDef_oaWaferFeature_set_doc},
    {"isNull",(PyCFunction)oaIntraPointerAppDef_oaWaferFeature_tp_isNull,METH_VARARGS,oaIntraPointerAppDef_oaWaferFeature_isNull_doc},
    {"assign",(PyCFunction)oaIntraPointerAppDef_oaWaferFeature_tp_assign,METH_VARARGS,oaIntraPointerAppDef_oaWaferFeature_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferFeature_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferFeature\n"
"  The oaIntraPointerAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a pointer field is added to each object of the specified dataType. The pointer can point to any object of the same type in the same database. The pointer cannot be used to point to anything else. The default value for the object pointer is NULL.\n"
"  Note: This extension is similar to oaInterPointerAppDef . However, since the pointers are all known to be of the same type of object, oaIntraPointerAppDef uses less space.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaIntraPointerAppDef_oaWaferFeature)\n"
"    Calls: (const oaIntraPointerAppDef_oaWaferFeature&)\n"
"    Signature: oaIntraPointerAppDef_oaWaferFeature||cref-oaIntraPointerAppDef_oaWaferFeature,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIntraPointerAppDef_oaWaferFeature_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIntraPointerAppDef_oaWaferFeature",
    sizeof(PyoaIntraPointerAppDef_oaWaferFeatureObject),
    0,
    (destructor)oaIntraPointerAppDef_oaWaferFeature_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIntraPointerAppDef_oaWaferFeature_tp_compare,	/* tp_compare */
    (reprfunc)oaIntraPointerAppDef_oaWaferFeature_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIntraPointerAppDef_oaWaferFeature_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaIntraPointerAppDef_oaWaferFeature_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIntraPointerAppDef_oaWaferFeature_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferFeature_static_find_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferFeature, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaWaferFeature* find(const oaString& name)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaWaferFeature|cref-oaString,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaWaferFeature* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaIntraPointerAppDef_oaWaferFeature|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaIntraPointerAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferFeature_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaWaferFeaturep result= (oaIntraPointerAppDef_oaWaferFeature::find(p1.Data()));
            return PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferFeaturep result= (oaIntraPointerAppDef_oaWaferFeature::find(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaWaferFeature, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIntraPointerAppDef_oaWaferFeature_static_get_doc[] = 
"Class: oaIntraPointerAppDef_oaWaferFeature, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaIntraPointerAppDef_oaWaferFeature* get(const oaString& name)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferFeature|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaWaferFeature* get(const oaString& name,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferFeature|cref-oaString,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name . The name must be unique for all extension types. You can create an oaIntraPointerAppDef extension on any object except another extension.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaIntraPointerAppDef_oaWaferFeature* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferFeature|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaIntraPointerAppDef_oaWaferFeature* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean persist)\n"
"    Signature: get|ptr-oaIntraPointerAppDef_oaWaferFeature|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,\n"
"    This function constructs an oaIntraPointerAppDef with the specified name and associates it with the specified objDef . The name must be unique for all extension types.\n"
"    name\n"
"    The name given to the oaIntraPointerAppDef object\n"
"    objDef\n"
"    The object extension with which to associate the extension\n"
"    persist\n"
"    Saves the oaIntraPointerAppDef data in the database\n"
"    oacAppDefExists\n"
;

static PyObject*
oaIntraPointerAppDef_oaWaferFeature_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaIntraPointerAppDef_oaWaferFeaturep result= (oaIntraPointerAppDef_oaWaferFeature::get(p1.Data()));
            return PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaIntraPointerAppDef_oaWaferFeaturep result= (oaIntraPointerAppDef_oaWaferFeature::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferFeaturep result= (oaIntraPointerAppDef_oaWaferFeature::get(p1.Data(),p2.Data()));
            return PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaIntraPointerAppDef_oaWaferFeaturep result= (oaIntraPointerAppDef_oaWaferFeature::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaIntraPointerAppDef_oaWaferFeature_FromoaIntraPointerAppDef_oaWaferFeature(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIntraPointerAppDef_oaWaferFeature, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaIntraPointerAppDef_oaWaferFeature_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaIntraPointerAppDef_oaWaferFeature_static_find,METH_VARARGS,oaIntraPointerAppDef_oaWaferFeature_static_find_doc},
    {"static_get",(PyCFunction)oaIntraPointerAppDef_oaWaferFeature_static_get,METH_VARARGS,oaIntraPointerAppDef_oaWaferFeature_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIntraPointerAppDef_oaWaferFeature_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIntraPointerAppDef_oaWaferFeature_Type)<0) {
      printf("** PyType_Ready failed for: oaIntraPointerAppDef_oaWaferFeature\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIntraPointerAppDef_oaWaferFeature",
           (PyObject*)(&PyoaIntraPointerAppDef_oaWaferFeature_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIntraPointerAppDef_oaWaferFeature\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaIntraPointerAppDef_oaWaferFeature_Type.tp_dict;
    for(method=oaIntraPointerAppDef_oaWaferFeature_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAnalysisLib
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisLib_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAnalysisLib_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAnalysisLibObject* self = (PyoaIter_oaAnalysisLibObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAnalysisLib(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAnalysisLib)
    {
        PyParamoaIter_oaAnalysisLib p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAnalysisLib_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAnalysisLib(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAnalysisLib, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaAnalysisLib)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAnalysisLib_tp_dealloc(PyoaIter_oaAnalysisLibObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaAnalysisLib*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisLib_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAnalysisLib value;
    int convert_status=PyoaIter_oaAnalysisLib_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaIter_oaAnalysisLib::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAnalysisLib_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAnalysisLib v1;
    PyParamoaIter_oaAnalysisLib v2;
    int convert_status1=PyoaIter_oaAnalysisLib_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAnalysisLib_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisLib_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisLib_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAnalysisLib ob;
    int convert_status=PyoaIter_oaAnalysisLib_Convert(self,&ob);
    assert(convert_status!=0);
    oaAnalysisLib* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAnalysisLib_FromoaAnalysisLib(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAnalysisLib_Convert(PyObject* ob,PyParamoaIter_oaAnalysisLib* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAnalysisLib_Check(ob)) {
        result->SetData( (oaIter_oaAnalysisLib*) ((PyoaIter_oaAnalysisLibObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAnalysisLib Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAnalysisLib_FromoaIter_oaAnalysisLib(oaIter_oaAnalysisLib* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAnalysisLib_Type.tp_alloc(&PyoaIter_oaAnalysisLib_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAnalysisLibObject* self = (PyoaIter_oaAnalysisLibObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAnalysisLib_getNext_doc[] = 
"Class: oaIter_oaAnalysisLib, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAnalysisLib* getNext()\n"
"    Signature: getNext|ptr-oaAnalysisLib|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaAnalysisLib_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAnalysisLib data;
    int convert_status=PyoaIter_oaAnalysisLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAnalysisLibObject* self=(PyoaIter_oaAnalysisLibObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAnalysisLibp result= (data.DataCall()->getNext());
        return PyoaAnalysisLib_FromoaAnalysisLib(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAnalysisLib_next_doc[] = 
"Class: oaIter_oaAnalysisLib, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAnalysisLib* next()\n"
"    Signature: next|ptr-oaAnalysisLib|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAnalysisLib_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAnalysisLib data;
    int convert_status=PyoaIter_oaAnalysisLib_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAnalysisLibObject* self=(PyoaIter_oaAnalysisLibObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAnalysisLibp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAnalysisLib_FromoaAnalysisLib(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAnalysisLib_assign_doc[] = 
"Class: oaIter_oaAnalysisLib, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAnalysisLib_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAnalysisLib data;
  int convert_status=PyoaIter_oaAnalysisLib_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAnalysisLib p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAnalysisLib_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAnalysisLib_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAnalysisLib_getNext,METH_VARARGS,oaIter_oaAnalysisLib_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAnalysisLib_next,METH_VARARGS,oaIter_oaAnalysisLib_next_doc},
    {"assign",(PyCFunction)oaIter_oaAnalysisLib_tp_assign,METH_VARARGS,oaIter_oaAnalysisLib_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAnalysisLib_doc[] = 
"Class: oaIter_oaAnalysisLib\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaAnalysisLib(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaAnalysisLib||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaAnalysisLib)\n"
"    Calls: oaIter_oaAnalysisLib(const oaIter_oaAnalysisLib& iterIn)\n"
"    Signature: oaIter_oaAnalysisLib||cref-oaIter_oaAnalysisLib,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaAnalysisLib)\n"
"    Calls: (const oaIter_oaAnalysisLib&)\n"
"    Signature: oaIter_oaAnalysisLib||cref-oaIter_oaAnalysisLib,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAnalysisLib_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAnalysisLib",
    sizeof(PyoaIter_oaAnalysisLibObject),
    0,
    (destructor)oaIter_oaAnalysisLib_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAnalysisLib_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAnalysisLib_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAnalysisLib_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAnalysisLib_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAnalysisLib_iternext,	/* tp_iternext */
    oaIter_oaAnalysisLib_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAnalysisLib_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAnalysisLib_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAnalysisLib_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAnalysisLib\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAnalysisLib",
           (PyObject*)(&PyoaIter_oaAnalysisLib_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAnalysisLib\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAnalysisOpPoint
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisOpPoint_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAnalysisOpPoint_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAnalysisOpPointObject* self = (PyoaIter_oaAnalysisOpPointObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAnalysisOpPoint(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAnalysisOpPoint)
    {
        PyParamoaIter_oaAnalysisOpPoint p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAnalysisOpPoint_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAnalysisOpPoint(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAnalysisOpPoint, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaAnalysisOpPoint)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAnalysisOpPoint_tp_dealloc(PyoaIter_oaAnalysisOpPointObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaAnalysisOpPoint*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisOpPoint_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAnalysisOpPoint value;
    int convert_status=PyoaIter_oaAnalysisOpPoint_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaIter_oaAnalysisOpPoint::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAnalysisOpPoint_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAnalysisOpPoint v1;
    PyParamoaIter_oaAnalysisOpPoint v2;
    int convert_status1=PyoaIter_oaAnalysisOpPoint_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAnalysisOpPoint_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisOpPoint_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisOpPoint_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAnalysisOpPoint ob;
    int convert_status=PyoaIter_oaAnalysisOpPoint_Convert(self,&ob);
    assert(convert_status!=0);
    oaAnalysisOpPoint* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAnalysisOpPoint_FromoaAnalysisOpPoint(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAnalysisOpPoint_Convert(PyObject* ob,PyParamoaIter_oaAnalysisOpPoint* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAnalysisOpPoint_Check(ob)) {
        result->SetData( (oaIter_oaAnalysisOpPoint*) ((PyoaIter_oaAnalysisOpPointObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAnalysisOpPoint Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAnalysisOpPoint_FromoaIter_oaAnalysisOpPoint(oaIter_oaAnalysisOpPoint* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAnalysisOpPoint_Type.tp_alloc(&PyoaIter_oaAnalysisOpPoint_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAnalysisOpPointObject* self = (PyoaIter_oaAnalysisOpPointObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAnalysisOpPoint_getNext_doc[] = 
"Class: oaIter_oaAnalysisOpPoint, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAnalysisOpPoint* getNext()\n"
"    Signature: getNext|ptr-oaAnalysisOpPoint|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaAnalysisOpPoint_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAnalysisOpPoint data;
    int convert_status=PyoaIter_oaAnalysisOpPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAnalysisOpPointObject* self=(PyoaIter_oaAnalysisOpPointObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAnalysisOpPointp result= (data.DataCall()->getNext());
        return PyoaAnalysisOpPoint_FromoaAnalysisOpPoint(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAnalysisOpPoint_next_doc[] = 
"Class: oaIter_oaAnalysisOpPoint, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAnalysisOpPoint* next()\n"
"    Signature: next|ptr-oaAnalysisOpPoint|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAnalysisOpPoint_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAnalysisOpPoint data;
    int convert_status=PyoaIter_oaAnalysisOpPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAnalysisOpPointObject* self=(PyoaIter_oaAnalysisOpPointObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAnalysisOpPointp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAnalysisOpPoint_FromoaAnalysisOpPoint(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAnalysisOpPoint_assign_doc[] = 
"Class: oaIter_oaAnalysisOpPoint, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAnalysisOpPoint_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAnalysisOpPoint data;
  int convert_status=PyoaIter_oaAnalysisOpPoint_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAnalysisOpPoint p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAnalysisOpPoint_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAnalysisOpPoint_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAnalysisOpPoint_getNext,METH_VARARGS,oaIter_oaAnalysisOpPoint_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAnalysisOpPoint_next,METH_VARARGS,oaIter_oaAnalysisOpPoint_next_doc},
    {"assign",(PyCFunction)oaIter_oaAnalysisOpPoint_tp_assign,METH_VARARGS,oaIter_oaAnalysisOpPoint_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAnalysisOpPoint_doc[] = 
"Class: oaIter_oaAnalysisOpPoint\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaAnalysisOpPoint(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaAnalysisOpPoint||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaAnalysisOpPoint)\n"
"    Calls: oaIter_oaAnalysisOpPoint(const oaIter_oaAnalysisOpPoint& iterIn)\n"
"    Signature: oaIter_oaAnalysisOpPoint||cref-oaIter_oaAnalysisOpPoint,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaAnalysisOpPoint)\n"
"    Calls: (const oaIter_oaAnalysisOpPoint&)\n"
"    Signature: oaIter_oaAnalysisOpPoint||cref-oaIter_oaAnalysisOpPoint,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAnalysisOpPoint_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAnalysisOpPoint",
    sizeof(PyoaIter_oaAnalysisOpPointObject),
    0,
    (destructor)oaIter_oaAnalysisOpPoint_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAnalysisOpPoint_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAnalysisOpPoint_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAnalysisOpPoint_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAnalysisOpPoint_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAnalysisOpPoint_iternext,	/* tp_iternext */
    oaIter_oaAnalysisOpPoint_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAnalysisOpPoint_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAnalysisOpPoint_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAnalysisOpPoint_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAnalysisOpPoint\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAnalysisOpPoint",
           (PyObject*)(&PyoaIter_oaAnalysisOpPoint_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAnalysisOpPoint\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAnalysisPoint
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisPoint_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAnalysisPoint_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAnalysisPointObject* self = (PyoaIter_oaAnalysisPointObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAnalysisPoint(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAnalysisPoint)
    {
        PyParamoaIter_oaAnalysisPoint p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAnalysisPoint_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAnalysisPoint(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAnalysisPoint, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaAnalysisPoint)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAnalysisPoint_tp_dealloc(PyoaIter_oaAnalysisPointObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaAnalysisPoint*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisPoint_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAnalysisPoint value;
    int convert_status=PyoaIter_oaAnalysisPoint_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaIter_oaAnalysisPoint::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAnalysisPoint_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAnalysisPoint v1;
    PyParamoaIter_oaAnalysisPoint v2;
    int convert_status1=PyoaIter_oaAnalysisPoint_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAnalysisPoint_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisPoint_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAnalysisPoint_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAnalysisPoint ob;
    int convert_status=PyoaIter_oaAnalysisPoint_Convert(self,&ob);
    assert(convert_status!=0);
    oaAnalysisPoint* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAnalysisPoint_FromoaAnalysisPoint(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAnalysisPoint_Convert(PyObject* ob,PyParamoaIter_oaAnalysisPoint* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAnalysisPoint_Check(ob)) {
        result->SetData( (oaIter_oaAnalysisPoint*) ((PyoaIter_oaAnalysisPointObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAnalysisPoint Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAnalysisPoint_FromoaIter_oaAnalysisPoint(oaIter_oaAnalysisPoint* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAnalysisPoint_Type.tp_alloc(&PyoaIter_oaAnalysisPoint_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAnalysisPointObject* self = (PyoaIter_oaAnalysisPointObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAnalysisPoint_getNext_doc[] = 
"Class: oaIter_oaAnalysisPoint, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAnalysisPoint* getNext()\n"
"    Signature: getNext|ptr-oaAnalysisPoint|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaAnalysisPoint_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAnalysisPoint data;
    int convert_status=PyoaIter_oaAnalysisPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAnalysisPointObject* self=(PyoaIter_oaAnalysisPointObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAnalysisPointp result= (data.DataCall()->getNext());
        return PyoaAnalysisPoint_FromoaAnalysisPoint(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAnalysisPoint_next_doc[] = 
"Class: oaIter_oaAnalysisPoint, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAnalysisPoint* next()\n"
"    Signature: next|ptr-oaAnalysisPoint|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAnalysisPoint_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAnalysisPoint data;
    int convert_status=PyoaIter_oaAnalysisPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAnalysisPointObject* self=(PyoaIter_oaAnalysisPointObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAnalysisPointp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAnalysisPoint_FromoaAnalysisPoint(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAnalysisPoint_assign_doc[] = 
"Class: oaIter_oaAnalysisPoint, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAnalysisPoint_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAnalysisPoint data;
  int convert_status=PyoaIter_oaAnalysisPoint_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAnalysisPoint p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAnalysisPoint_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAnalysisPoint_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAnalysisPoint_getNext,METH_VARARGS,oaIter_oaAnalysisPoint_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAnalysisPoint_next,METH_VARARGS,oaIter_oaAnalysisPoint_next_doc},
    {"assign",(PyCFunction)oaIter_oaAnalysisPoint_tp_assign,METH_VARARGS,oaIter_oaAnalysisPoint_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAnalysisPoint_doc[] = 
"Class: oaIter_oaAnalysisPoint\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaAnalysisPoint(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaAnalysisPoint||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaAnalysisPoint)\n"
"    Calls: oaIter_oaAnalysisPoint(const oaIter_oaAnalysisPoint& iterIn)\n"
"    Signature: oaIter_oaAnalysisPoint||cref-oaIter_oaAnalysisPoint,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaAnalysisPoint)\n"
"    Calls: (const oaIter_oaAnalysisPoint&)\n"
"    Signature: oaIter_oaAnalysisPoint||cref-oaIter_oaAnalysisPoint,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAnalysisPoint_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAnalysisPoint",
    sizeof(PyoaIter_oaAnalysisPointObject),
    0,
    (destructor)oaIter_oaAnalysisPoint_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAnalysisPoint_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAnalysisPoint_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAnalysisPoint_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAnalysisPoint_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAnalysisPoint_iternext,	/* tp_iternext */
    oaIter_oaAnalysisPoint_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAnalysisPoint_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAnalysisPoint_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAnalysisPoint_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAnalysisPoint\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAnalysisPoint",
           (PyObject*)(&PyoaIter_oaAnalysisPoint_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAnalysisPoint\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAppDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAppDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAppDefObject* self = (PyoaIter_oaAppDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaCollection_oaAppDef_oaSession)
    {
        PyParamoaCollection_oaAppDef_oaSession p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaCollection_oaAppDef_oaSession_Convert,&p1)) {
            self->value =  new oaIter_oaAppDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaCollection_oaAppDef_oaObject)
    {
        PyParamoaCollection_oaAppDef_oaObject p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaCollection_oaAppDef_oaObject_Convert,&p1)) {
            self->value =  new oaIter_oaAppDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAppDef)
    {
        PyParamoaIter_oaAppDef p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAppDef_Convert,&p1)) {
            self->value =  new oaIter_oaAppDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAppDef, Choices are:\n"
        "    (oaCollection_oaAppDef_oaSession)\n"
        "    (oaCollection_oaAppDef_oaObject)\n"
        "    (oaIter_oaAppDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAppDef_tp_dealloc(PyoaIter_oaAppDefObject* self)
{
    if (!self->borrow) {
        delete (self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppDef_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAppDef value;
    int convert_status=PyoaIter_oaAppDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[37];
    sprintf(buffer,"<oaIter_oaAppDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAppDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAppDef v1;
    PyParamoaIter_oaAppDef v2;
    int convert_status1=PyoaIter_oaAppDef_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAppDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppDef_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppDef_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAppDef ob;
    int convert_status=PyoaIter_oaAppDef_Convert(self,&ob);
    assert(convert_status!=0);
    oaAppDef* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAppDef_FromoaAppDef(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAppDef_Convert(PyObject* ob,PyParamoaIter_oaAppDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAppDef_Check(ob)) {
        result->SetData(  ((PyoaIter_oaAppDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAppDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAppDef_FromoaIter_oaAppDef(oaIter_oaAppDef* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAppDef_Type.tp_alloc(&PyoaIter_oaAppDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAppDefObject* self = (PyoaIter_oaAppDefObject*)bself;
        self->value =  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAppDef_getNext_doc[] = 
"Class: oaIter_oaAppDef, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAppDef* getNext()\n"
"    Signature: getNext|ptr-oaAppDef|\n"
"    BrowseData: 1\n"
"    Function getNext\n"
;

static PyObject*
oaIter_oaAppDef_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppDef data;
    int convert_status=PyoaIter_oaAppDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppDefObject* self=(PyoaIter_oaAppDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAppDefp result= (data.DataCall()->getNext());
        return PyoaAppDef_FromoaAppDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAppDef_next_doc[] = 
"Class: oaIter_oaAppDef, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAppDef* next()\n"
"    Signature: next|ptr-oaAppDef|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAppDef_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppDef data;
    int convert_status=PyoaIter_oaAppDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppDefObject* self=(PyoaIter_oaAppDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAppDefp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAppDef_FromoaAppDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAppDef_reset_doc[] = 
"Class: oaIter_oaAppDef, Function: reset\n"
"  Paramegers: ()\n"
"    Calls: void reset()\n"
"    Signature: reset|void-void|\n"
"    BrowseData: 0\n"
"    Function reset\n"
;

static PyObject*
oaIter_oaAppDef_reset(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppDef data;
    int convert_status=PyoaIter_oaAppDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppDefObject* self=(PyoaIter_oaAppDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        data.DataCall()->reset();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAppDef_assign_doc[] = 
"Class: oaIter_oaAppDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAppDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAppDef data;
  int convert_status=PyoaIter_oaAppDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAppDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAppDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAppDef_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAppDef_getNext,METH_VARARGS,oaIter_oaAppDef_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAppDef_next,METH_VARARGS,oaIter_oaAppDef_next_doc},
    {"reset",(PyCFunction)oaIter_oaAppDef_reset,METH_VARARGS,oaIter_oaAppDef_reset_doc},
    {"assign",(PyCFunction)oaIter_oaAppDef_tp_assign,METH_VARARGS,oaIter_oaAppDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAppDef_doc[] = 
"Class: oaIter_oaAppDef\n"
"  Class type oaIter_oaAppDef\n"
"Constructors:\n"
"  Paramegers: (oaCollection_oaAppDef_oaSession)\n"
"    Calls: oaIter_oaAppDef(const oaCollection_oaAppDef_oaSession& c)\n"
"    Signature: oaIter_oaAppDef||cref-oaCollection_oaAppDef_oaSession,\n"
"    Constructor oaIter_oaAppDef\n"
"  Paramegers: (oaCollection_oaAppDef_oaObject)\n"
"    Calls: oaIter_oaAppDef(const oaCollection_oaAppDef_oaObject& c)\n"
"    Signature: oaIter_oaAppDef||cref-oaCollection_oaAppDef_oaObject,\n"
"    Constructor oaIter_oaAppDef\n"
"  Paramegers: (oaIter_oaAppDef)\n"
"    Calls: oaIter_oaAppDef(const oaIter_oaAppDef& iterIn)\n"
"    Signature: oaIter_oaAppDef||cref-oaIter_oaAppDef,\n"
"    Constructor oaIter_oaAppDef\n"
"  Paramegers: (oaIter_oaAppDef)\n"
"    Calls: (const oaIter_oaAppDef&)\n"
"    Signature: oaIter_oaAppDef||cref-oaIter_oaAppDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAppDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAppDef",
    sizeof(PyoaIter_oaAppDefObject),
    0,
    (destructor)oaIter_oaAppDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAppDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAppDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAppDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAppDef_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAppDef_iternext,	/* tp_iternext */
    oaIter_oaAppDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    0,					/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAppDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAppDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAppDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAppDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAppDef",
           (PyObject*)(&PyoaIter_oaAppDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAppDef\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAppObject
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObject_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAppObject_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAppObjectObject* self = (PyoaIter_oaAppObjectObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaAppObjectCollection)
    {
        PyParamoaAppObjectCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaAppObjectCollection_Convert,&p1)) {
            self->value =  new oaIter_oaAppObject(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAppObject)
    {
        PyParamoaIter_oaAppObject p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAppObject_Convert,&p1)) {
            self->value =  new oaIter_oaAppObject(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAppObject, Choices are:\n"
        "    (oaAppObjectCollection)\n"
        "    (oaIter_oaAppObject)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAppObject_tp_dealloc(PyoaIter_oaAppObjectObject* self)
{
    if (!self->borrow) {
        delete (self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObject_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAppObject value;
    int convert_status=PyoaIter_oaAppObject_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaIter_oaAppObject::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAppObject_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAppObject v1;
    PyParamoaIter_oaAppObject v2;
    int convert_status1=PyoaIter_oaAppObject_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAppObject_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObject_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObject_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAppObject ob;
    int convert_status=PyoaIter_oaAppObject_Convert(self,&ob);
    assert(convert_status!=0);
    oaAppObject* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAppObject_FromoaAppObject(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAppObject_Convert(PyObject* ob,PyParamoaIter_oaAppObject* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAppObject_Check(ob)) {
        result->SetData(  ((PyoaIter_oaAppObjectObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAppObject Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAppObject_FromoaIter_oaAppObject(oaIter_oaAppObject* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAppObject_Type.tp_alloc(&PyoaIter_oaAppObject_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAppObjectObject* self = (PyoaIter_oaAppObjectObject*)bself;
        self->value =  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAppObject_getNext_doc[] = 
"Class: oaIter_oaAppObject, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAppObject* getNext()\n"
"    Signature: getNext|ptr-oaAppObject|\n"
"    BrowseData: 1\n"
"    Function getNext\n"
;

static PyObject*
oaIter_oaAppObject_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppObject data;
    int convert_status=PyoaIter_oaAppObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppObjectObject* self=(PyoaIter_oaAppObjectObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAppObjectp result= (data.DataCall()->getNext());
        return PyoaAppObject_FromoaAppObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAppObject_next_doc[] = 
"Class: oaIter_oaAppObject, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAppObject* next()\n"
"    Signature: next|ptr-oaAppObject|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAppObject_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppObject data;
    int convert_status=PyoaIter_oaAppObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppObjectObject* self=(PyoaIter_oaAppObjectObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAppObjectp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAppObject_FromoaAppObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAppObject_reset_doc[] = 
"Class: oaIter_oaAppObject, Function: reset\n"
"  Paramegers: ()\n"
"    Calls: void reset()\n"
"    Signature: reset|void-void|\n"
"    BrowseData: 0\n"
"    Function reset\n"
"  Paramegers: (oaAppObjectCollection)\n"
"    Calls: void reset(const oaAppObjectCollection& c)\n"
"    Signature: reset|void-void|cref-oaAppObjectCollection,\n"
"    Function reset\n"
;

static PyObject*
oaIter_oaAppObject_reset(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppObject data;
    int convert_status=PyoaIter_oaAppObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppObjectObject* self=(PyoaIter_oaAppObjectObject*)ob;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            data.DataCall()->reset();
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaAppObjectCollection)
    {
        PyParamoaAppObjectCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaAppObjectCollection_Convert,&p1)) {
            data.DataCall()->reset(p1.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaIter_oaAppObject, function: reset, Choices are:\n"
        "    ()\n"
        "    (oaAppObjectCollection)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAppObject_assign_doc[] = 
"Class: oaIter_oaAppObject, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAppObject_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAppObject data;
  int convert_status=PyoaIter_oaAppObject_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAppObject p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAppObject_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAppObject_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAppObject_getNext,METH_VARARGS,oaIter_oaAppObject_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAppObject_next,METH_VARARGS,oaIter_oaAppObject_next_doc},
    {"reset",(PyCFunction)oaIter_oaAppObject_reset,METH_VARARGS,oaIter_oaAppObject_reset_doc},
    {"assign",(PyCFunction)oaIter_oaAppObject_tp_assign,METH_VARARGS,oaIter_oaAppObject_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAppObject_doc[] = 
"Class: oaIter_oaAppObject\n"
"  Class type oaIter_oaAppObject\n"
"Constructors:\n"
"  Paramegers: (oaAppObjectCollection)\n"
"    Calls: oaIter_oaAppObject(const oaAppObjectCollection& c)\n"
"    Signature: oaIter_oaAppObject||cref-oaAppObjectCollection,\n"
"    Constructor oaIter_oaAppObject\n"
"  Paramegers: (oaIter_oaAppObject)\n"
"    Calls: oaIter_oaAppObject(const oaIter_oaAppObject& iterIn)\n"
"    Signature: oaIter_oaAppObject||cref-oaIter_oaAppObject,\n"
"    Constructor oaIter_oaAppObject\n"
"  Paramegers: (oaIter_oaAppObject)\n"
"    Calls: (const oaIter_oaAppObject&)\n"
"    Signature: oaIter_oaAppObject||cref-oaIter_oaAppObject,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAppObject_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAppObject",
    sizeof(PyoaIter_oaAppObjectObject),
    0,
    (destructor)oaIter_oaAppObject_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAppObject_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAppObject_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAppObject_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAppObject_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAppObject_iternext,	/* tp_iternext */
    oaIter_oaAppObject_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    0,					/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAppObject_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAppObject_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAppObject_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAppObject\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAppObject",
           (PyObject*)(&PyoaIter_oaAppObject_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAppObject\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAppObjectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObjectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAppObjectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAppObjectDefObject* self = (PyoaIter_oaAppObjectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaAppObjectDefCollection)
    {
        PyParamoaAppObjectDefCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaAppObjectDefCollection_Convert,&p1)) {
            self->value =  new oaIter_oaAppObjectDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaCollection_oaAppObjectDef_oaSession)
    {
        PyParamoaCollection_oaAppObjectDef_oaSession p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaCollection_oaAppObjectDef_oaSession_Convert,&p1)) {
            self->value =  new oaIter_oaAppObjectDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAppObjectDef)
    {
        PyParamoaIter_oaAppObjectDef p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAppObjectDef_Convert,&p1)) {
            self->value =  new oaIter_oaAppObjectDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAppObjectDef, Choices are:\n"
        "    (oaAppObjectDefCollection)\n"
        "    (oaCollection_oaAppObjectDef_oaSession)\n"
        "    (oaIter_oaAppObjectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAppObjectDef_tp_dealloc(PyoaIter_oaAppObjectDefObject* self)
{
    if (!self->borrow) {
        delete (self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObjectDef_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAppObjectDef value;
    int convert_status=PyoaIter_oaAppObjectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIter_oaAppObjectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAppObjectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAppObjectDef v1;
    PyParamoaIter_oaAppObjectDef v2;
    int convert_status1=PyoaIter_oaAppObjectDef_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAppObjectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObjectDef_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAppObjectDef_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAppObjectDef ob;
    int convert_status=PyoaIter_oaAppObjectDef_Convert(self,&ob);
    assert(convert_status!=0);
    oaAppObjectDef* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAppObjectDef_FromoaAppObjectDef(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAppObjectDef_Convert(PyObject* ob,PyParamoaIter_oaAppObjectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAppObjectDef_Check(ob)) {
        result->SetData(  ((PyoaIter_oaAppObjectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAppObjectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAppObjectDef_FromoaIter_oaAppObjectDef(oaIter_oaAppObjectDef* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAppObjectDef_Type.tp_alloc(&PyoaIter_oaAppObjectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAppObjectDefObject* self = (PyoaIter_oaAppObjectDefObject*)bself;
        self->value =  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAppObjectDef_getNext_doc[] = 
"Class: oaIter_oaAppObjectDef, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAppObjectDef* getNext()\n"
"    Signature: getNext|ptr-oaAppObjectDef|\n"
"    BrowseData: 1\n"
"    Function getNext\n"
;

static PyObject*
oaIter_oaAppObjectDef_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppObjectDef data;
    int convert_status=PyoaIter_oaAppObjectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppObjectDefObject* self=(PyoaIter_oaAppObjectDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAppObjectDefp result= (data.DataCall()->getNext());
        return PyoaAppObjectDef_FromoaAppObjectDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAppObjectDef_next_doc[] = 
"Class: oaIter_oaAppObjectDef, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAppObjectDef* next()\n"
"    Signature: next|ptr-oaAppObjectDef|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAppObjectDef_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppObjectDef data;
    int convert_status=PyoaIter_oaAppObjectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppObjectDefObject* self=(PyoaIter_oaAppObjectDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAppObjectDefp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAppObjectDef_FromoaAppObjectDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAppObjectDef_reset_doc[] = 
"Class: oaIter_oaAppObjectDef, Function: reset\n"
"  Paramegers: ()\n"
"    Calls: void reset()\n"
"    Signature: reset|void-void|\n"
"    BrowseData: 0\n"
"    Function reset\n"
;

static PyObject*
oaIter_oaAppObjectDef_reset(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAppObjectDef data;
    int convert_status=PyoaIter_oaAppObjectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAppObjectDefObject* self=(PyoaIter_oaAppObjectDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        data.DataCall()->reset();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAppObjectDef_assign_doc[] = 
"Class: oaIter_oaAppObjectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAppObjectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAppObjectDef data;
  int convert_status=PyoaIter_oaAppObjectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAppObjectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAppObjectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAppObjectDef_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAppObjectDef_getNext,METH_VARARGS,oaIter_oaAppObjectDef_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAppObjectDef_next,METH_VARARGS,oaIter_oaAppObjectDef_next_doc},
    {"reset",(PyCFunction)oaIter_oaAppObjectDef_reset,METH_VARARGS,oaIter_oaAppObjectDef_reset_doc},
    {"assign",(PyCFunction)oaIter_oaAppObjectDef_tp_assign,METH_VARARGS,oaIter_oaAppObjectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAppObjectDef_doc[] = 
"Class: oaIter_oaAppObjectDef\n"
"  Class type oaIter_oaAppObjectDef\n"
"Constructors:\n"
"  Paramegers: (oaAppObjectDefCollection)\n"
"    Calls: oaIter_oaAppObjectDef(const oaAppObjectDefCollection& c)\n"
"    Signature: oaIter_oaAppObjectDef||cref-oaAppObjectDefCollection,\n"
"    Constructor oaIter_oaAppObjectDef\n"
"  Paramegers: (oaCollection_oaAppObjectDef_oaSession)\n"
"    Calls: oaIter_oaAppObjectDef(const oaCollection_oaAppObjectDef_oaSession& c)\n"
"    Signature: oaIter_oaAppObjectDef||cref-oaCollection_oaAppObjectDef_oaSession,\n"
"    Constructor oaIter_oaAppObjectDef\n"
"  Paramegers: (oaIter_oaAppObjectDef)\n"
"    Calls: oaIter_oaAppObjectDef(const oaIter_oaAppObjectDef& iterIn)\n"
"    Signature: oaIter_oaAppObjectDef||cref-oaIter_oaAppObjectDef,\n"
"    Constructor oaIter_oaAppObjectDef\n"
"  Paramegers: (oaIter_oaAppObjectDef)\n"
"    Calls: (const oaIter_oaAppObjectDef&)\n"
"    Signature: oaIter_oaAppObjectDef||cref-oaIter_oaAppObjectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAppObjectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAppObjectDef",
    sizeof(PyoaIter_oaAppObjectDefObject),
    0,
    (destructor)oaIter_oaAppObjectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAppObjectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAppObjectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAppObjectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAppObjectDef_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAppObjectDef_iternext,	/* tp_iternext */
    oaIter_oaAppObjectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    0,					/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAppObjectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAppObjectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAppObjectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAppObjectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAppObjectDef",
           (PyObject*)(&PyoaIter_oaAppObjectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAppObjectDef\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAreaBoundary
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAreaBoundary_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAreaBoundary_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAreaBoundaryObject* self = (PyoaIter_oaAreaBoundaryObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAreaBoundary(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAreaBoundary)
    {
        PyParamoaIter_oaAreaBoundary p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAreaBoundary_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAreaBoundary(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAreaBoundary, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaAreaBoundary)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAreaBoundary_tp_dealloc(PyoaIter_oaAreaBoundaryObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaAreaBoundary*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAreaBoundary_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAreaBoundary value;
    int convert_status=PyoaIter_oaAreaBoundary_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[43];
    sprintf(buffer,"<oaIter_oaAreaBoundary::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAreaBoundary_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAreaBoundary v1;
    PyParamoaIter_oaAreaBoundary v2;
    int convert_status1=PyoaIter_oaAreaBoundary_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAreaBoundary_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAreaBoundary_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAreaBoundary_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAreaBoundary ob;
    int convert_status=PyoaIter_oaAreaBoundary_Convert(self,&ob);
    assert(convert_status!=0);
    oaAreaBoundary* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAreaBoundary_FromoaAreaBoundary(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAreaBoundary_Convert(PyObject* ob,PyParamoaIter_oaAreaBoundary* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAreaBoundary_Check(ob)) {
        result->SetData( (oaIter_oaAreaBoundary*) ((PyoaIter_oaAreaBoundaryObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAreaBoundary Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAreaBoundary_FromoaIter_oaAreaBoundary(oaIter_oaAreaBoundary* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAreaBoundary_Type.tp_alloc(&PyoaIter_oaAreaBoundary_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAreaBoundaryObject* self = (PyoaIter_oaAreaBoundaryObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAreaBoundary_getNext_doc[] = 
"Class: oaIter_oaAreaBoundary, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAreaBoundary* getNext()\n"
"    Signature: getNext|ptr-oaAreaBoundary|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaAreaBoundary_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAreaBoundary data;
    int convert_status=PyoaIter_oaAreaBoundary_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAreaBoundaryObject* self=(PyoaIter_oaAreaBoundaryObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAreaBoundaryp result= (data.DataCall()->getNext());
        return PyoaAreaBoundary_FromoaAreaBoundary(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAreaBoundary_next_doc[] = 
"Class: oaIter_oaAreaBoundary, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAreaBoundary* next()\n"
"    Signature: next|ptr-oaAreaBoundary|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAreaBoundary_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAreaBoundary data;
    int convert_status=PyoaIter_oaAreaBoundary_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAreaBoundaryObject* self=(PyoaIter_oaAreaBoundaryObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAreaBoundaryp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAreaBoundary_FromoaAreaBoundary(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAreaBoundary_assign_doc[] = 
"Class: oaIter_oaAreaBoundary, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAreaBoundary_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAreaBoundary data;
  int convert_status=PyoaIter_oaAreaBoundary_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAreaBoundary p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAreaBoundary_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAreaBoundary_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAreaBoundary_getNext,METH_VARARGS,oaIter_oaAreaBoundary_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAreaBoundary_next,METH_VARARGS,oaIter_oaAreaBoundary_next_doc},
    {"assign",(PyCFunction)oaIter_oaAreaBoundary_tp_assign,METH_VARARGS,oaIter_oaAreaBoundary_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAreaBoundary_doc[] = 
"Class: oaIter_oaAreaBoundary\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaAreaBoundary(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaAreaBoundary||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaAreaBoundary)\n"
"    Calls: oaIter_oaAreaBoundary(const oaIter_oaAreaBoundary& iterIn)\n"
"    Signature: oaIter_oaAreaBoundary||cref-oaIter_oaAreaBoundary,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaAreaBoundary)\n"
"    Calls: (const oaIter_oaAreaBoundary&)\n"
"    Signature: oaIter_oaAreaBoundary||cref-oaIter_oaAreaBoundary,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAreaBoundary_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAreaBoundary",
    sizeof(PyoaIter_oaAreaBoundaryObject),
    0,
    (destructor)oaIter_oaAreaBoundary_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAreaBoundary_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAreaBoundary_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAreaBoundary_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAreaBoundary_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAreaBoundary_iternext,	/* tp_iternext */
    oaIter_oaAreaBoundary_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAreaBoundary_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAreaBoundary_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAreaBoundary_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAreaBoundary\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAreaBoundary",
           (PyObject*)(&PyoaIter_oaAreaBoundary_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAreaBoundary\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaAssignmentObject* self = (PyoaIter_oaAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAssignment(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaAssignment)
    {
        PyParamoaIter_oaAssignment p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaAssignment_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaAssignment(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaAssignment, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaAssignment_tp_dealloc(PyoaIter_oaAssignmentObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaAssignment*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAssignment_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaAssignment value;
    int convert_status=PyoaIter_oaAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[41];
    sprintf(buffer,"<oaIter_oaAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaAssignment v1;
    PyParamoaIter_oaAssignment v2;
    int convert_status1=PyoaIter_oaAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaAssignment_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaAssignment_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaAssignment ob;
    int convert_status=PyoaIter_oaAssignment_Convert(self,&ob);
    assert(convert_status!=0);
    oaAssignment* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaAssignment_FromoaAssignment(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaAssignment_Convert(PyObject* ob,PyParamoaIter_oaAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaAssignment_Check(ob)) {
        result->SetData( (oaIter_oaAssignment*) ((PyoaIter_oaAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaAssignment_FromoaIter_oaAssignment(oaIter_oaAssignment* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaAssignment_Type.tp_alloc(&PyoaIter_oaAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaAssignmentObject* self = (PyoaIter_oaAssignmentObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAssignment_getNext_doc[] = 
"Class: oaIter_oaAssignment, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaAssignment* getNext()\n"
"    Signature: getNext|ptr-oaAssignment|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaAssignment_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAssignment data;
    int convert_status=PyoaIter_oaAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAssignmentObject* self=(PyoaIter_oaAssignmentObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAssignmentp result= (data.DataCall()->getNext());
        return PyoaAssignment_FromoaAssignment(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaAssignment_next_doc[] = 
"Class: oaIter_oaAssignment, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaAssignment* next()\n"
"    Signature: next|ptr-oaAssignment|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaAssignment_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaAssignment data;
    int convert_status=PyoaIter_oaAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaAssignmentObject* self=(PyoaIter_oaAssignmentObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaAssignmentp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaAssignment_FromoaAssignment(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaAssignment_assign_doc[] = 
"Class: oaIter_oaAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaAssignment data;
  int convert_status=PyoaIter_oaAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaAssignment_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaAssignment_getNext,METH_VARARGS,oaIter_oaAssignment_getNext_doc},
    {"next",(PyCFunction)oaIter_oaAssignment_next,METH_VARARGS,oaIter_oaAssignment_next_doc},
    {"assign",(PyCFunction)oaIter_oaAssignment_tp_assign,METH_VARARGS,oaIter_oaAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaAssignment_doc[] = 
"Class: oaIter_oaAssignment\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaAssignment(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaAssignment||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaAssignment)\n"
"    Calls: oaIter_oaAssignment(const oaIter_oaAssignment& iterIn)\n"
"    Signature: oaIter_oaAssignment||cref-oaIter_oaAssignment,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaAssignment)\n"
"    Calls: (const oaIter_oaAssignment&)\n"
"    Signature: oaIter_oaAssignment||cref-oaIter_oaAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaAssignment",
    sizeof(PyoaIter_oaAssignmentObject),
    0,
    (destructor)oaIter_oaAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaAssignment_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaAssignment_iternext,	/* tp_iternext */
    oaIter_oaAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaAssignment",
           (PyObject*)(&PyoaIter_oaAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaAssignment\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBitNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBitNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBitNetObject* self = (PyoaIter_oaBitNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBitNet(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBitNet)
    {
        PyParamoaIter_oaBitNet p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBitNet_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBitNet(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBitNet, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaBitNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBitNet_tp_dealloc(PyoaIter_oaBitNetObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBitNet*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitNet_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBitNet value;
    int convert_status=PyoaIter_oaBitNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[37];
    sprintf(buffer,"<oaIter_oaBitNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBitNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBitNet v1;
    PyParamoaIter_oaBitNet v2;
    int convert_status1=PyoaIter_oaBitNet_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBitNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitNet_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitNet_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBitNet ob;
    int convert_status=PyoaIter_oaBitNet_Convert(self,&ob);
    assert(convert_status!=0);
    oaBitNet* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBitNet_FromoaBitNet(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBitNet_Convert(PyObject* ob,PyParamoaIter_oaBitNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBitNet_Check(ob)) {
        result->SetData( (oaIter_oaBitNet*) ((PyoaIter_oaBitNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBitNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBitNet_FromoaIter_oaBitNet(oaIter_oaBitNet* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBitNet_Type.tp_alloc(&PyoaIter_oaBitNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBitNetObject* self = (PyoaIter_oaBitNetObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBitNet_getNext_doc[] = 
"Class: oaIter_oaBitNet, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBitNet* getNext()\n"
"    Signature: getNext|ptr-oaBitNet|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaBitNet_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBitNet data;
    int convert_status=PyoaIter_oaBitNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBitNetObject* self=(PyoaIter_oaBitNetObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBitNetp result= (data.DataCall()->getNext());
        return PyoaBitNet_FromoaBitNet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBitNet_next_doc[] = 
"Class: oaIter_oaBitNet, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBitNet* next()\n"
"    Signature: next|ptr-oaBitNet|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBitNet_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBitNet data;
    int convert_status=PyoaIter_oaBitNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBitNetObject* self=(PyoaIter_oaBitNetObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBitNetp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBitNet_FromoaBitNet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBitNet_assign_doc[] = 
"Class: oaIter_oaBitNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBitNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBitNet data;
  int convert_status=PyoaIter_oaBitNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBitNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBitNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBitNet_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBitNet_getNext,METH_VARARGS,oaIter_oaBitNet_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBitNet_next,METH_VARARGS,oaIter_oaBitNet_next_doc},
    {"assign",(PyCFunction)oaIter_oaBitNet_tp_assign,METH_VARARGS,oaIter_oaBitNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBitNet_doc[] = 
"Class: oaIter_oaBitNet\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaBitNet(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaBitNet||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaBitNet)\n"
"    Calls: oaIter_oaBitNet(const oaIter_oaBitNet& iterIn)\n"
"    Signature: oaIter_oaBitNet||cref-oaIter_oaBitNet,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaBitNet)\n"
"    Calls: (const oaIter_oaBitNet&)\n"
"    Signature: oaIter_oaBitNet||cref-oaIter_oaBitNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBitNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBitNet",
    sizeof(PyoaIter_oaBitNetObject),
    0,
    (destructor)oaIter_oaBitNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBitNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBitNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBitNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBitNet_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBitNet_iternext,	/* tp_iternext */
    oaIter_oaBitNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBitNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBitNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBitNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBitNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBitNet",
           (PyObject*)(&PyoaIter_oaBitNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBitNet\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBitTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBitTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBitTermObject* self = (PyoaIter_oaBitTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBitTerm(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBitTerm)
    {
        PyParamoaIter_oaBitTerm p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBitTerm_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBitTerm(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBitTerm, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaBitTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBitTerm_tp_dealloc(PyoaIter_oaBitTermObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBitTerm*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitTerm_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBitTerm value;
    int convert_status=PyoaIter_oaBitTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[38];
    sprintf(buffer,"<oaIter_oaBitTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBitTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBitTerm v1;
    PyParamoaIter_oaBitTerm v2;
    int convert_status1=PyoaIter_oaBitTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBitTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitTerm_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBitTerm_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBitTerm ob;
    int convert_status=PyoaIter_oaBitTerm_Convert(self,&ob);
    assert(convert_status!=0);
    oaBitTerm* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBitTerm_FromoaBitTerm(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBitTerm_Convert(PyObject* ob,PyParamoaIter_oaBitTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBitTerm_Check(ob)) {
        result->SetData( (oaIter_oaBitTerm*) ((PyoaIter_oaBitTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBitTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBitTerm_FromoaIter_oaBitTerm(oaIter_oaBitTerm* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBitTerm_Type.tp_alloc(&PyoaIter_oaBitTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBitTermObject* self = (PyoaIter_oaBitTermObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBitTerm_getNext_doc[] = 
"Class: oaIter_oaBitTerm, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBitTerm* getNext()\n"
"    Signature: getNext|ptr-oaBitTerm|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaBitTerm_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBitTerm data;
    int convert_status=PyoaIter_oaBitTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBitTermObject* self=(PyoaIter_oaBitTermObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBitTermp result= (data.DataCall()->getNext());
        return PyoaBitTerm_FromoaBitTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBitTerm_next_doc[] = 
"Class: oaIter_oaBitTerm, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBitTerm* next()\n"
"    Signature: next|ptr-oaBitTerm|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBitTerm_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBitTerm data;
    int convert_status=PyoaIter_oaBitTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBitTermObject* self=(PyoaIter_oaBitTermObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBitTermp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBitTerm_FromoaBitTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBitTerm_assign_doc[] = 
"Class: oaIter_oaBitTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBitTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBitTerm data;
  int convert_status=PyoaIter_oaBitTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBitTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBitTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBitTerm_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBitTerm_getNext,METH_VARARGS,oaIter_oaBitTerm_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBitTerm_next,METH_VARARGS,oaIter_oaBitTerm_next_doc},
    {"assign",(PyCFunction)oaIter_oaBitTerm_tp_assign,METH_VARARGS,oaIter_oaBitTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBitTerm_doc[] = 
"Class: oaIter_oaBitTerm\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaBitTerm(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaBitTerm||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaBitTerm)\n"
"    Calls: oaIter_oaBitTerm(const oaIter_oaBitTerm& iterIn)\n"
"    Signature: oaIter_oaBitTerm||cref-oaIter_oaBitTerm,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaBitTerm)\n"
"    Calls: (const oaIter_oaBitTerm&)\n"
"    Signature: oaIter_oaBitTerm||cref-oaIter_oaBitTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBitTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBitTerm",
    sizeof(PyoaIter_oaBitTermObject),
    0,
    (destructor)oaIter_oaBitTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBitTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBitTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBitTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBitTerm_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBitTerm_iternext,	/* tp_iternext */
    oaIter_oaBitTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBitTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBitTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBitTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBitTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBitTerm",
           (PyObject*)(&PyoaIter_oaBitTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBitTerm\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBlockObject
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockObject_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBlockObject_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBlockObjectObject* self = (PyoaIter_oaBlockObjectObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaCollection_oaBlockObject_oaMarker)
    {
        PyParamoaCollection_oaBlockObject_oaMarker p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaCollection_oaBlockObject_oaMarker_Convert,&p1)) {
            self->value = (oaBlockObjectIter*)  new oaIter_oaBlockObject(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBlockObject)
    {
        PyParamoaIter_oaBlockObject p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBlockObject_Convert,&p1)) {
            self->value = (oaBlockObjectIter*)  new oaIter_oaBlockObject(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBlockObject, Choices are:\n"
        "    (oaCollection_oaBlockObject_oaMarker)\n"
        "    (oaIter_oaBlockObject)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBlockObject_tp_dealloc(PyoaIter_oaBlockObjectObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBlockObject*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockObject_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBlockObject value;
    int convert_status=PyoaIter_oaBlockObject_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[42];
    sprintf(buffer,"<oaIter_oaBlockObject::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBlockObject_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBlockObject v1;
    PyParamoaIter_oaBlockObject v2;
    int convert_status1=PyoaIter_oaBlockObject_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBlockObject_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockObject_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockObject_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBlockObject ob;
    int convert_status=PyoaIter_oaBlockObject_Convert(self,&ob);
    assert(convert_status!=0);
    oaBlockObject* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBlockObject_FromoaBlockObject(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBlockObject_Convert(PyObject* ob,PyParamoaIter_oaBlockObject* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBlockObject_Check(ob)) {
        result->SetData( (oaIter_oaBlockObject*) ((PyoaIter_oaBlockObjectObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBlockObject Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBlockObject_FromoaIter_oaBlockObject(oaIter_oaBlockObject* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBlockObject_Type.tp_alloc(&PyoaIter_oaBlockObject_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBlockObjectObject* self = (PyoaIter_oaBlockObjectObject*)bself;
        self->value = (oaBlockObjectIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBlockObject_getNext_doc[] = 
"Class: oaIter_oaBlockObject, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBlockObject* getNext()\n"
"    Signature: getNext|ptr-oaBlockObject|\n"
"    BrowseData: 1\n"
"    Function getNext\n"
;

static PyObject*
oaIter_oaBlockObject_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBlockObject data;
    int convert_status=PyoaIter_oaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBlockObjectObject* self=(PyoaIter_oaBlockObjectObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockObjectp result= (data.DataCall()->getNext());
        return PyoaBlockObject_FromoaBlockObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBlockObject_next_doc[] = 
"Class: oaIter_oaBlockObject, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBlockObject* next()\n"
"    Signature: next|ptr-oaBlockObject|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBlockObject_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBlockObject data;
    int convert_status=PyoaIter_oaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBlockObjectObject* self=(PyoaIter_oaBlockObjectObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockObjectp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBlockObject_FromoaBlockObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBlockObject_assign_doc[] = 
"Class: oaIter_oaBlockObject, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBlockObject_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBlockObject data;
  int convert_status=PyoaIter_oaBlockObject_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBlockObject p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBlockObject_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBlockObject_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBlockObject_getNext,METH_VARARGS,oaIter_oaBlockObject_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBlockObject_next,METH_VARARGS,oaIter_oaBlockObject_next_doc},
    {"assign",(PyCFunction)oaIter_oaBlockObject_tp_assign,METH_VARARGS,oaIter_oaBlockObject_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBlockObject_doc[] = 
"Class: oaIter_oaBlockObject\n"
"  Class type oaIter_oaBlockObject\n"
"Constructors:\n"
"  Paramegers: (oaCollection_oaBlockObject_oaMarker)\n"
"    Calls: oaIter_oaBlockObject(const oaCollection_oaBlockObject_oaMarker& c)\n"
"    Signature: oaIter_oaBlockObject||cref-oaCollection_oaBlockObject_oaMarker,\n"
"    Constructor oaIter_oaBlockObject\n"
"  Paramegers: (oaIter_oaBlockObject)\n"
"    Calls: oaIter_oaBlockObject(const oaIter_oaBlockObject& iter)\n"
"    Signature: oaIter_oaBlockObject||cref-oaIter_oaBlockObject,\n"
"    Constructor oaIter_oaBlockObject\n"
"  Paramegers: (oaIter_oaBlockObject)\n"
"    Calls: (const oaIter_oaBlockObject&)\n"
"    Signature: oaIter_oaBlockObject||cref-oaIter_oaBlockObject,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBlockObject_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBlockObject",
    sizeof(PyoaIter_oaBlockObjectObject),
    0,
    (destructor)oaIter_oaBlockObject_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBlockObject_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBlockObject_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBlockObject_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBlockObject_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBlockObject_iternext,	/* tp_iternext */
    oaIter_oaBlockObject_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBlockObjectIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBlockObject_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBlockObject_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBlockObject_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBlockObject\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBlockObject",
           (PyObject*)(&PyoaIter_oaBlockObject_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBlockObject\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBlockage
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockage_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBlockage_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBlockageObject* self = (PyoaIter_oaBlockageObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBlockage(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBlockage)
    {
        PyParamoaIter_oaBlockage p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBlockage_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBlockage(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBlockage, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaBlockage)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBlockage_tp_dealloc(PyoaIter_oaBlockageObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBlockage*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockage_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBlockage value;
    int convert_status=PyoaIter_oaBlockage_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[39];
    sprintf(buffer,"<oaIter_oaBlockage::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBlockage_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBlockage v1;
    PyParamoaIter_oaBlockage v2;
    int convert_status1=PyoaIter_oaBlockage_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBlockage_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockage_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBlockage_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBlockage ob;
    int convert_status=PyoaIter_oaBlockage_Convert(self,&ob);
    assert(convert_status!=0);
    oaBlockage* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBlockage_FromoaBlockage(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBlockage_Convert(PyObject* ob,PyParamoaIter_oaBlockage* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBlockage_Check(ob)) {
        result->SetData( (oaIter_oaBlockage*) ((PyoaIter_oaBlockageObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBlockage Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBlockage_FromoaIter_oaBlockage(oaIter_oaBlockage* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBlockage_Type.tp_alloc(&PyoaIter_oaBlockage_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBlockageObject* self = (PyoaIter_oaBlockageObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBlockage_getNext_doc[] = 
"Class: oaIter_oaBlockage, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBlockage* getNext()\n"
"    Signature: getNext|ptr-oaBlockage|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaBlockage_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBlockage data;
    int convert_status=PyoaIter_oaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBlockageObject* self=(PyoaIter_oaBlockageObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockagep result= (data.DataCall()->getNext());
        return PyoaBlockage_FromoaBlockage(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBlockage_next_doc[] = 
"Class: oaIter_oaBlockage, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBlockage* next()\n"
"    Signature: next|ptr-oaBlockage|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBlockage_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBlockage data;
    int convert_status=PyoaIter_oaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBlockageObject* self=(PyoaIter_oaBlockageObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockagep result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBlockage_FromoaBlockage(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBlockage_assign_doc[] = 
"Class: oaIter_oaBlockage, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBlockage_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBlockage data;
  int convert_status=PyoaIter_oaBlockage_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBlockage p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBlockage_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBlockage_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBlockage_getNext,METH_VARARGS,oaIter_oaBlockage_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBlockage_next,METH_VARARGS,oaIter_oaBlockage_next_doc},
    {"assign",(PyCFunction)oaIter_oaBlockage_tp_assign,METH_VARARGS,oaIter_oaBlockage_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBlockage_doc[] = 
"Class: oaIter_oaBlockage\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaBlockage(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaBlockage||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaBlockage)\n"
"    Calls: oaIter_oaBlockage(const oaIter_oaBlockage& iterIn)\n"
"    Signature: oaIter_oaBlockage||cref-oaIter_oaBlockage,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaBlockage)\n"
"    Calls: (const oaIter_oaBlockage&)\n"
"    Signature: oaIter_oaBlockage||cref-oaIter_oaBlockage,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBlockage_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBlockage",
    sizeof(PyoaIter_oaBlockageObject),
    0,
    (destructor)oaIter_oaBlockage_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBlockage_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBlockage_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBlockage_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBlockage_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBlockage_iternext,	/* tp_iternext */
    oaIter_oaBlockage_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBlockage_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBlockage_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBlockage_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBlockage\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBlockage",
           (PyObject*)(&PyoaIter_oaBlockage_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBlockage\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBusNet
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNet_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBusNet_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBusNetObject* self = (PyoaIter_oaBusNetObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusNet(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBusNet)
    {
        PyParamoaIter_oaBusNet p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBusNet_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusNet(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBusNet, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaBusNet)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBusNet_tp_dealloc(PyoaIter_oaBusNetObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBusNet*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNet_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBusNet value;
    int convert_status=PyoaIter_oaBusNet_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[37];
    sprintf(buffer,"<oaIter_oaBusNet::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBusNet_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBusNet v1;
    PyParamoaIter_oaBusNet v2;
    int convert_status1=PyoaIter_oaBusNet_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBusNet_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNet_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNet_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBusNet ob;
    int convert_status=PyoaIter_oaBusNet_Convert(self,&ob);
    assert(convert_status!=0);
    oaBusNet* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBusNet_FromoaBusNet(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBusNet_Convert(PyObject* ob,PyParamoaIter_oaBusNet* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBusNet_Check(ob)) {
        result->SetData( (oaIter_oaBusNet*) ((PyoaIter_oaBusNetObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBusNet Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBusNet_FromoaIter_oaBusNet(oaIter_oaBusNet* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBusNet_Type.tp_alloc(&PyoaIter_oaBusNet_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBusNetObject* self = (PyoaIter_oaBusNetObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusNet_getNext_doc[] = 
"Class: oaIter_oaBusNet, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBusNet* getNext()\n"
"    Signature: getNext|ptr-oaBusNet|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaBusNet_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusNet data;
    int convert_status=PyoaIter_oaBusNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusNetObject* self=(PyoaIter_oaBusNetObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusNetp result= (data.DataCall()->getNext());
        return PyoaBusNet_FromoaBusNet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBusNet_next_doc[] = 
"Class: oaIter_oaBusNet, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBusNet* next()\n"
"    Signature: next|ptr-oaBusNet|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBusNet_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusNet data;
    int convert_status=PyoaIter_oaBusNet_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusNetObject* self=(PyoaIter_oaBusNetObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusNetp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBusNet_FromoaBusNet(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBusNet_assign_doc[] = 
"Class: oaIter_oaBusNet, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBusNet_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBusNet data;
  int convert_status=PyoaIter_oaBusNet_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBusNet p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBusNet_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBusNet_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBusNet_getNext,METH_VARARGS,oaIter_oaBusNet_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBusNet_next,METH_VARARGS,oaIter_oaBusNet_next_doc},
    {"assign",(PyCFunction)oaIter_oaBusNet_tp_assign,METH_VARARGS,oaIter_oaBusNet_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusNet_doc[] = 
"Class: oaIter_oaBusNet\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaBusNet(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaBusNet||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaBusNet)\n"
"    Calls: oaIter_oaBusNet(const oaIter_oaBusNet& iterIn)\n"
"    Signature: oaIter_oaBusNet||cref-oaIter_oaBusNet,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaBusNet)\n"
"    Calls: (const oaIter_oaBusNet&)\n"
"    Signature: oaIter_oaBusNet||cref-oaIter_oaBusNet,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBusNet_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBusNet",
    sizeof(PyoaIter_oaBusNetObject),
    0,
    (destructor)oaIter_oaBusNet_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBusNet_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBusNet_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBusNet_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBusNet_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBusNet_iternext,	/* tp_iternext */
    oaIter_oaBusNet_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBusNet_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBusNet_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBusNet_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBusNet\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBusNet",
           (PyObject*)(&PyoaIter_oaBusNet_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBusNet\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBusNetBit
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetBit_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBusNetBit_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBusNetBitObject* self = (PyoaIter_oaBusNetBitObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusNetBit(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBusNetBit)
    {
        PyParamoaIter_oaBusNetBit p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBusNetBit_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusNetBit(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBusNetBit, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaBusNetBit)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBusNetBit_tp_dealloc(PyoaIter_oaBusNetBitObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBusNetBit*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetBit_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBusNetBit value;
    int convert_status=PyoaIter_oaBusNetBit_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaIter_oaBusNetBit::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBusNetBit_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBusNetBit v1;
    PyParamoaIter_oaBusNetBit v2;
    int convert_status1=PyoaIter_oaBusNetBit_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBusNetBit_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetBit_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetBit_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBusNetBit ob;
    int convert_status=PyoaIter_oaBusNetBit_Convert(self,&ob);
    assert(convert_status!=0);
    oaBusNetBit* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBusNetBit_FromoaBusNetBit(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBusNetBit_Convert(PyObject* ob,PyParamoaIter_oaBusNetBit* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBusNetBit_Check(ob)) {
        result->SetData( (oaIter_oaBusNetBit*) ((PyoaIter_oaBusNetBitObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBusNetBit Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBusNetBit_FromoaIter_oaBusNetBit(oaIter_oaBusNetBit* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBusNetBit_Type.tp_alloc(&PyoaIter_oaBusNetBit_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBusNetBitObject* self = (PyoaIter_oaBusNetBitObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusNetBit_getNext_doc[] = 
"Class: oaIter_oaBusNetBit, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBusNetBit* getNext()\n"
"    Signature: getNext|ptr-oaBusNetBit|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaBusNetBit_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusNetBit data;
    int convert_status=PyoaIter_oaBusNetBit_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusNetBitObject* self=(PyoaIter_oaBusNetBitObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusNetBitp result= (data.DataCall()->getNext());
        return PyoaBusNetBit_FromoaBusNetBit(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBusNetBit_next_doc[] = 
"Class: oaIter_oaBusNetBit, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBusNetBit* next()\n"
"    Signature: next|ptr-oaBusNetBit|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBusNetBit_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusNetBit data;
    int convert_status=PyoaIter_oaBusNetBit_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusNetBitObject* self=(PyoaIter_oaBusNetBitObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusNetBitp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBusNetBit_FromoaBusNetBit(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBusNetBit_assign_doc[] = 
"Class: oaIter_oaBusNetBit, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBusNetBit_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBusNetBit data;
  int convert_status=PyoaIter_oaBusNetBit_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBusNetBit p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBusNetBit_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBusNetBit_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBusNetBit_getNext,METH_VARARGS,oaIter_oaBusNetBit_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBusNetBit_next,METH_VARARGS,oaIter_oaBusNetBit_next_doc},
    {"assign",(PyCFunction)oaIter_oaBusNetBit_tp_assign,METH_VARARGS,oaIter_oaBusNetBit_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusNetBit_doc[] = 
"Class: oaIter_oaBusNetBit\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaBusNetBit(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaBusNetBit||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaBusNetBit)\n"
"    Calls: oaIter_oaBusNetBit(const oaIter_oaBusNetBit& iterIn)\n"
"    Signature: oaIter_oaBusNetBit||cref-oaIter_oaBusNetBit,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaBusNetBit)\n"
"    Calls: (const oaIter_oaBusNetBit&)\n"
"    Signature: oaIter_oaBusNetBit||cref-oaIter_oaBusNetBit,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBusNetBit_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBusNetBit",
    sizeof(PyoaIter_oaBusNetBitObject),
    0,
    (destructor)oaIter_oaBusNetBit_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBusNetBit_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBusNetBit_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBusNetBit_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBusNetBit_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBusNetBit_iternext,	/* tp_iternext */
    oaIter_oaBusNetBit_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBusNetBit_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBusNetBit_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBusNetBit_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBusNetBit\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBusNetBit",
           (PyObject*)(&PyoaIter_oaBusNetBit_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBusNetBit\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBusNetDefObject* self = (PyoaIter_oaBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusNetDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBusNetDef)
    {
        PyParamoaIter_oaBusNetDef p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBusNetDef_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusNetDef(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBusNetDef, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBusNetDef_tp_dealloc(PyoaIter_oaBusNetDefObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBusNetDef*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBusNetDef value;
    int convert_status=PyoaIter_oaBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[40];
    sprintf(buffer,"<oaIter_oaBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBusNetDef v1;
    PyParamoaIter_oaBusNetDef v2;
    int convert_status1=PyoaIter_oaBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetDef_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusNetDef_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBusNetDef ob;
    int convert_status=PyoaIter_oaBusNetDef_Convert(self,&ob);
    assert(convert_status!=0);
    oaBusNetDef* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBusNetDef_FromoaBusNetDef(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBusNetDef_Convert(PyObject* ob,PyParamoaIter_oaBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBusNetDef_Check(ob)) {
        result->SetData( (oaIter_oaBusNetDef*) ((PyoaIter_oaBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBusNetDef_FromoaIter_oaBusNetDef(oaIter_oaBusNetDef* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBusNetDef_Type.tp_alloc(&PyoaIter_oaBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBusNetDefObject* self = (PyoaIter_oaBusNetDefObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusNetDef_getNext_doc[] = 
"Class: oaIter_oaBusNetDef, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBusNetDef* getNext()\n"
"    Signature: getNext|ptr-oaBusNetDef|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaBusNetDef_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusNetDef data;
    int convert_status=PyoaIter_oaBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusNetDefObject* self=(PyoaIter_oaBusNetDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusNetDefp result= (data.DataCall()->getNext());
        return PyoaBusNetDef_FromoaBusNetDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBusNetDef_next_doc[] = 
"Class: oaIter_oaBusNetDef, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBusNetDef* next()\n"
"    Signature: next|ptr-oaBusNetDef|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBusNetDef_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusNetDef data;
    int convert_status=PyoaIter_oaBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusNetDefObject* self=(PyoaIter_oaBusNetDefObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusNetDefp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBusNetDef_FromoaBusNetDef(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBusNetDef_assign_doc[] = 
"Class: oaIter_oaBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBusNetDef data;
  int convert_status=PyoaIter_oaBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBusNetDef_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBusNetDef_getNext,METH_VARARGS,oaIter_oaBusNetDef_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBusNetDef_next,METH_VARARGS,oaIter_oaBusNetDef_next_doc},
    {"assign",(PyCFunction)oaIter_oaBusNetDef_tp_assign,METH_VARARGS,oaIter_oaBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusNetDef_doc[] = 
"Class: oaIter_oaBusNetDef\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaBusNetDef(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaBusNetDef||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaBusNetDef)\n"
"    Calls: oaIter_oaBusNetDef(const oaIter_oaBusNetDef& iterIn)\n"
"    Signature: oaIter_oaBusNetDef||cref-oaIter_oaBusNetDef,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaBusNetDef)\n"
"    Calls: (const oaIter_oaBusNetDef&)\n"
"    Signature: oaIter_oaBusNetDef||cref-oaIter_oaBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBusNetDef",
    sizeof(PyoaIter_oaBusNetDefObject),
    0,
    (destructor)oaIter_oaBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBusNetDef_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBusNetDef_iternext,	/* tp_iternext */
    oaIter_oaBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBusNetDef",
           (PyObject*)(&PyoaIter_oaBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBusNetDef\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaIter_oaBusTerm
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusTerm_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaIter_oaBusTerm_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaIter_oaBusTermObject* self = (PyoaIter_oaBusTermObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBaseCollection)
    {
        PyParamoaBaseCollection p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBaseCollection_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusTerm(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaIter_oaBusTerm)
    {
        PyParamoaIter_oaBusTerm p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaIter_oaBusTerm_Convert,&p1)) {
            self->value = (oaBaseIter*)  new oaIter_oaBusTerm(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaIter_oaBusTerm, Choices are:\n"
        "    (oaBaseCollection)\n"
        "    (oaIter_oaBusTerm)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaIter_oaBusTerm_tp_dealloc(PyoaIter_oaBusTermObject* self)
{
    if (!self->borrow) {
        delete (oaIter_oaBusTerm*)(self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusTerm_tp_repr(PyObject *ob)
{
    PyParamoaIter_oaBusTerm value;
    int convert_status=PyoaIter_oaBusTerm_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[38];
    sprintf(buffer,"<oaIter_oaBusTerm::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaIter_oaBusTerm_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaIter_oaBusTerm v1;
    PyParamoaIter_oaBusTerm v2;
    int convert_status1=PyoaIter_oaBusTerm_Convert(ob1,&v1);
    int convert_status2=PyoaIter_oaBusTerm_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusTerm_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaIter_oaBusTerm_iternext(PyObject *self)
{
  try {
    PyParamoaIter_oaBusTerm ob;
    int convert_status=PyoaIter_oaBusTerm_Convert(self,&ob);
    assert(convert_status!=0);
    oaBusTerm* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBusTerm_FromoaBusTerm(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaIter_oaBusTerm_Convert(PyObject* ob,PyParamoaIter_oaBusTerm* result)
{
    if (ob == NULL) return 1;
    if (PyoaIter_oaBusTerm_Check(ob)) {
        result->SetData( (oaIter_oaBusTerm*) ((PyoaIter_oaBusTermObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaIter_oaBusTerm Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaIter_oaBusTerm_FromoaIter_oaBusTerm(oaIter_oaBusTerm* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaIter_oaBusTerm_Type.tp_alloc(&PyoaIter_oaBusTerm_Type,0);
        if (bself == NULL) return bself;
        PyoaIter_oaBusTermObject* self = (PyoaIter_oaBusTermObject*)bself;
        self->value = (oaBaseIter*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusTerm_getNext_doc[] = 
"Class: oaIter_oaBusTerm, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBusTerm* getNext()\n"
"    Signature: getNext|ptr-oaBusTerm|\n"
"    BrowseData: 1\n"
"    This function returns the next object in the collection that is being iterated. NULL is returned when there are no more objects to return.\n"
"    The order in which objects are returned by oaIter::getNext() is not guaranteed to be the same:\n"
"    between two separate instantiations of an oaIter class over the same set of objects\n"
"    after calling oaIter::reset()\n"
"    When an iterator is active it is safe to delete objects that have already been returned by that iterator, including the most recent getNext() call. Such deletion will not cause the iterator to return invalid objects or to skip other objects in the collection that is being iterated over.\n"
"    It is not safe to delete an object in the collection that has not yet been returned by the iterator. Such deletion will invalidate the iterator and can cause problem results, including returning invalid objects, throwing exceptions, and skipping members of the collection.\n"
"    Further, adding objects to a collection while iterating over the collection is not recommended since subsequent getNext() return results on a collection after the addition of objects to the collection are undefined.\n"
;

static PyObject*
oaIter_oaBusTerm_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusTerm data;
    int convert_status=PyoaIter_oaBusTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusTermObject* self=(PyoaIter_oaBusTermObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusTermp result= (data.DataCall()->getNext());
        return PyoaBusTerm_FromoaBusTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaIter_oaBusTerm_next_doc[] = 
"Class: oaIter_oaBusTerm, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBusTerm* next()\n"
"    Signature: next|ptr-oaBusTerm|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaIter_oaBusTerm_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaIter_oaBusTerm data;
    int convert_status=PyoaIter_oaBusTerm_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaIter_oaBusTermObject* self=(PyoaIter_oaBusTermObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBusTermp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBusTerm_FromoaBusTerm(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaIter_oaBusTerm_assign_doc[] = 
"Class: oaIter_oaBusTerm, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaIter_oaBusTerm_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaIter_oaBusTerm data;
  int convert_status=PyoaIter_oaBusTerm_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaIter_oaBusTerm p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaIter_oaBusTerm_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaIter_oaBusTerm_methodlist[] = {
    {"getNext",(PyCFunction)oaIter_oaBusTerm_getNext,METH_VARARGS,oaIter_oaBusTerm_getNext_doc},
    {"next",(PyCFunction)oaIter_oaBusTerm_next,METH_VARARGS,oaIter_oaBusTerm_next_doc},
    {"assign",(PyCFunction)oaIter_oaBusTerm_tp_assign,METH_VARARGS,oaIter_oaBusTerm_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaIter_oaBusTerm_doc[] = 
"Class: oaIter_oaBusTerm\n"
"  The oaIter class is used to iterate over the objects in an oaCollection . oaCollections are used wherever the database needs to return multiple objects in some relationship to a single starting object. The oaIter class allows the caller to return one object in the collection at a time and to test when all the objects are returned.\n"
"  The intended usage of the oaIter class is shown in the following example:\n"
"  oaIter<oaShape> sIter(view->getShapes()); oaShape *myshape; while (myshape = sIter.getNext()) { ... }\n"
"  Note that some collections use special case iterators that do not belong to the oaIter class. This happens where the getNext() function has a different signature.\n"
"Constructors:\n"
"  Paramegers: (oaBaseCollection)\n"
"    Calls: oaIter_oaBusTerm(const oaBaseCollection& coll)\n"
"    Signature: oaIter_oaBusTerm||cref-oaBaseCollection,\n"
"    This function constructs an oaIter object that is associated with the specified oaBaseCollection coll .\n"
"  Paramegers: (oaIter_oaBusTerm)\n"
"    Calls: oaIter_oaBusTerm(const oaIter_oaBusTerm& iterIn)\n"
"    Signature: oaIter_oaBusTerm||cref-oaIter_oaBusTerm,\n"
"    This function constructs an oaIter object that iterates over the same set of objects as the specified iterator iterIn .\n"
"    Note: When an iterator is copied, the new copy retains the state of the original. For example, if the original iterator is in the middle of a collection at the time of the copy, the new copy of the iterator will be at middle of the collection. In other words, this copy constructor function does not reset the iterator to point to the beginning of the collection.\n"
"  Paramegers: (oaIter_oaBusTerm)\n"
"    Calls: (const oaIter_oaBusTerm&)\n"
"    Signature: oaIter_oaBusTerm||cref-oaIter_oaBusTerm,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaIter_oaBusTerm_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaIter_oaBusTerm",
    sizeof(PyoaIter_oaBusTermObject),
    0,
    (destructor)oaIter_oaBusTerm_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaIter_oaBusTerm_tp_compare,	/* tp_compare */
    (reprfunc)oaIter_oaBusTerm_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaIter_oaBusTerm_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaIter_oaBusTerm_getiter,	/* tp_iter */
    (iternextfunc)oaIter_oaBusTerm_iternext,	/* tp_iternext */
    oaIter_oaBusTerm_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBaseIter_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaIter_oaBusTerm_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaIter_oaBusTerm_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaIter_oaBusTerm_Type)<0) {
      printf("** PyType_Ready failed for: oaIter_oaBusTerm\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaIter_oaBusTerm",
           (PyObject*)(&PyoaIter_oaBusTerm_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaIter_oaBusTerm\n");
       return -1;
    }
    return 0;
}

