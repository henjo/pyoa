
/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlock
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBlock_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBlock_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBlockObject* self = (PyoaBlockObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBlock)
    {
        PyParamoaBlock p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBlock_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBlock, Choices are:\n"
        "    (oaBlock)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBlock_tp_dealloc(PyoaBlockObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBlock_tp_repr(PyObject *ob)
{
    PyParamoaBlock value;
    int convert_status=PyoaBlock_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;
    if (!value.Data()) {
        oaString buffer("<oaBlock::NULL>");
        result=PyString_FromString((char*)(const char*)buffer);
    }
    else {
        oaString sresult;
        oaString sep=" ";
        sep[(oaUInt4)0]=oacInternalHierDelimiter;
        oaScalarName name;
        oaString str;
        value.DataCall()->getDesign()->getLibName(name);
        name.get(str);
        sresult+=oaString(str);
        sresult+=sep;
        value.DataCall()->getDesign()->getCellName(name);
        name.get(str);
        sresult+=oaString(str);
        sresult+=sep;
        value.DataCall()->getDesign()->getViewName(name);
        name.get(str);
        sresult+=oaString(str);
    
        char addr[29];
        sprintf(addr,DISPLAY_FORMAT,POINTER_AS_DISPLAY(value.DataCall()));
        oaString buffer;
        buffer+=oaString("<oaBlock::");
        buffer+=oaString(addr);
        buffer+=oaString("::");
        buffer+=oaString(sresult);
        buffer+=oaString(">");
        result=PyString_FromString((char*)(const char*)buffer);
    
    }
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBlock_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBlock v1;
    PyParamoaBlock v2;
    int convert_status1=PyoaBlock_Convert(ob1,&v1);
    int convert_status2=PyoaBlock_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBlock_Convert(PyObject* ob,PyParamoaBlock* result)
{
    if (ob == NULL) return 1;
    if (PyoaBlock_Check(ob)) {
        result->SetData( (oaBlock**) ((PyoaBlockObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlock Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBlock_FromoaBlock(oaBlock** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBlock* data=*value;
        PyObject* bself = PyoaBlock_Type.tp_alloc(&PyoaBlock_Type,0);
        if (bself == NULL) return bself;
        PyoaBlockObject* self = (PyoaBlockObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBlock_FromoaBlock(oaBlock* data)
{
    if (data) {
       PyObject* bself = PyoaBlock_Type.tp_alloc(&PyoaBlock_Type,0);
       if (bself == NULL) return bself;
       PyoaBlockObject* self = (PyoaBlockObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlock_destroy_doc[] = 
"Class: oaBlock, Function: destroy\n"
"  Paramegers: ()\n"
"    Calls: void destroy()\n"
"    Signature: destroy|void-void|\n"
"    BrowseData: 0\n"
"    This function destroys this block. All objects that belong to this block also will be destroyed.\n"
;

static PyObject*
oaBlock_destroy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        data.DataCall()->destroy();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getAssignments_doc[] = 
"Class: oaBlock, Function: getAssignments\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaAssignment_oaBlock getAssignments() const\n"
"    Signature: getAssignments|simple-oaCollection_oaAssignment_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of assignments in this block.\n"
;

static PyObject*
oaBlock_getAssignments(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaAssignment_oaBlock* result= new oaCollection_oaAssignment_oaBlock(data.DataCall()->getAssignments());
        return PyoaCollection_oaAssignment_oaBlock_FromoaCollection_oaAssignment_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getAssignmentsIter_doc[] = 
"Class: oaBlock, Function: getAssignmentsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaAssignment getAssignmentsIter() const\n"
"    Signature: getAssignmentsIter|simple-oaIter_oaAssignment|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of assignments in this block.\n"
;

static PyObject*
oaBlock_getAssignmentsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaAssignment* result= new oaIter_oaAssignment(data.DataCall()->getAssignments());
        return PyoaIter_oaAssignment_FromoaIter_oaAssignment(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBBox_doc[] = 
"Class: oaBlock, Function: getBBox\n"
"  Paramegers: (oaBox)\n"
"    Calls: void getBBox(oaBox& bBox) const\n"
"    Signature: getBBox|void-void|ref-oaBox,\n"
"    BrowseData: 0,oaBox\n"
"    This function returns the bounding box of this oaDesign object. If the bounding box is out of date, it is updated.\n"
"    bBox\n"
"    The bounding box to return\n"
;

static PyObject*
oaBlock_getBBox(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBox p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBox_Convert,&p1)) {
        data.DataCall()->getBBox(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBlockages_doc[] = 
"Class: oaBlock, Function: getBlockages\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaBlockage_oaBlock getBlockages() const\n"
"    Signature: getBlockages|simple-oaCollection_oaBlockage_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of blockages in this block.\n"
;

static PyObject*
oaBlock_getBlockages(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaBlockage_oaBlock* result= new oaCollection_oaBlockage_oaBlock(data.DataCall()->getBlockages());
        return PyoaCollection_oaBlockage_oaBlock_FromoaCollection_oaBlockage_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBlockagesIter_doc[] = 
"Class: oaBlock, Function: getBlockagesIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaBlockage getBlockagesIter() const\n"
"    Signature: getBlockagesIter|simple-oaIter_oaBlockage|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of blockages in this block.\n"
;

static PyObject*
oaBlock_getBlockagesIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaBlockage* result= new oaIter_oaBlockage(data.DataCall()->getBlockages());
        return PyoaIter_oaBlockage_FromoaIter_oaBlockage(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBoundaries_doc[] = 
"Class: oaBlock, Function: getBoundaries\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaAreaBoundary_oaBlock getBoundaries() const\n"
"    Signature: getBoundaries|simple-oaCollection_oaAreaBoundary_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of area boundaries in this block.\n"
;

static PyObject*
oaBlock_getBoundaries(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaAreaBoundary_oaBlock* result= new oaCollection_oaAreaBoundary_oaBlock(data.DataCall()->getBoundaries());
        return PyoaCollection_oaAreaBoundary_oaBlock_FromoaCollection_oaAreaBoundary_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBoundariesIter_doc[] = 
"Class: oaBlock, Function: getBoundariesIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaAreaBoundary getBoundariesIter() const\n"
"    Signature: getBoundariesIter|simple-oaIter_oaAreaBoundary|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of area boundaries in this block.\n"
;

static PyObject*
oaBlock_getBoundariesIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaAreaBoundary* result= new oaIter_oaAreaBoundary(data.DataCall()->getBoundaries());
        return PyoaIter_oaAreaBoundary_FromoaIter_oaAreaBoundary(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBusNetDefs_doc[] = 
"Class: oaBlock, Function: getBusNetDefs\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaBusNetDef_oaBlock getBusNetDefs() const\n"
"    Signature: getBusNetDefs|simple-oaCollection_oaBusNetDef_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of busNetDefs in this block.\n"
;

static PyObject*
oaBlock_getBusNetDefs(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaBusNetDef_oaBlock* result= new oaCollection_oaBusNetDef_oaBlock(data.DataCall()->getBusNetDefs());
        return PyoaCollection_oaBusNetDef_oaBlock_FromoaCollection_oaBusNetDef_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBusNetDefsIter_doc[] = 
"Class: oaBlock, Function: getBusNetDefsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaBusNetDef getBusNetDefsIter() const\n"
"    Signature: getBusNetDefsIter|simple-oaIter_oaBusNetDef|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of busNetDefs in this block.\n"
;

static PyObject*
oaBlock_getBusNetDefsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaBusNetDef* result= new oaIter_oaBusNetDef(data.DataCall()->getBusNetDefs());
        return PyoaIter_oaBusNetDef_FromoaIter_oaBusNetDef(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBusTermDefs_doc[] = 
"Class: oaBlock, Function: getBusTermDefs\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaBusTermDef_oaBlock getBusTermDefs() const\n"
"    Signature: getBusTermDefs|simple-oaCollection_oaBusTermDef_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of busTermDefs in this block.\n"
;

static PyObject*
oaBlock_getBusTermDefs(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaBusTermDef_oaBlock* result= new oaCollection_oaBusTermDef_oaBlock(data.DataCall()->getBusTermDefs());
        return PyoaCollection_oaBusTermDef_oaBlock_FromoaCollection_oaBusTermDef_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getBusTermDefsIter_doc[] = 
"Class: oaBlock, Function: getBusTermDefsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaBusTermDef getBusTermDefsIter() const\n"
"    Signature: getBusTermDefsIter|simple-oaIter_oaBusTermDef|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of busTermDefs in this block.\n"
;

static PyObject*
oaBlock_getBusTermDefsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaBusTermDef* result= new oaIter_oaBusTermDef(data.DataCall()->getBusTermDefs());
        return PyoaIter_oaBusTermDef_FromoaIter_oaBusTermDef(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getClusters_doc[] = 
"Class: oaBlock, Function: getClusters\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaCluster_oaBlock getClusters() const\n"
"    Signature: getClusters|simple-oaCollection_oaCluster_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of clusters in this block.\n"
;

static PyObject*
oaBlock_getClusters(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaCluster_oaBlock* result= new oaCollection_oaCluster_oaBlock(data.DataCall()->getClusters());
        return PyoaCollection_oaCluster_oaBlock_FromoaCollection_oaCluster_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getClustersIter_doc[] = 
"Class: oaBlock, Function: getClustersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaCluster getClustersIter() const\n"
"    Signature: getClustersIter|simple-oaIter_oaCluster|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of clusters in this block.\n"
;

static PyObject*
oaBlock_getClustersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaCluster* result= new oaIter_oaCluster(data.DataCall()->getClusters());
        return PyoaIter_oaCluster_FromoaIter_oaCluster(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getConnectDefs_doc[] = 
"Class: oaBlock, Function: getConnectDefs\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaConnectDef_oaBlock getConnectDefs() const\n"
"    Signature: getConnectDefs|simple-oaCollection_oaConnectDef_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of connectDefs in this block.\n"
;

static PyObject*
oaBlock_getConnectDefs(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaConnectDef_oaBlock* result= new oaCollection_oaConnectDef_oaBlock(data.DataCall()->getConnectDefs());
        return PyoaCollection_oaConnectDef_oaBlock_FromoaCollection_oaConnectDef_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getConnectDefsIter_doc[] = 
"Class: oaBlock, Function: getConnectDefsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaConnectDef getConnectDefsIter() const\n"
"    Signature: getConnectDefsIter|simple-oaIter_oaConnectDef|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of connectDefs in this block.\n"
;

static PyObject*
oaBlock_getConnectDefsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaConnectDef* result= new oaIter_oaConnectDef(data.DataCall()->getConnectDefs());
        return PyoaIter_oaConnectDef_FromoaIter_oaConnectDef(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getDBUPerUU_doc[] = 
"Class: oaBlock, Function: getDBUPerUU\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getDBUPerUU() const\n"
"    Signature: getDBUPerUU|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the database-units-per-user-units scale factor for this block.\n"
;

static PyObject*
oaBlock_getDBUPerUU(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getDBUPerUU());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getDefaultConstraintGroup_doc[] = 
"Class: oaBlock, Function: getDefaultConstraintGroup\n"
"  Paramegers: ()\n"
"    Calls: oaConstraintGroup* getDefaultConstraintGroup() const\n"
"    Signature: getDefaultConstraintGroup|ptr-oaConstraintGroup|\n"
"    BrowseData: 1\n"
"    oaBlock::getDefaultConstraintGroup\n"
"    This function returns the constraint group for this block. Constraints in this constraint group apply to all of the objects within the block. A new group is created if no constraints exist on the block.\n"
;

static PyObject*
oaBlock_getDefaultConstraintGroup(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaConstraintGroupp result= (data.DataCall()->getDefaultConstraintGroup());
        return PyoaConstraintGroup_FromoaConstraintGroup(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getEEQMaster_doc[] = 
"Class: oaBlock, Function: getEEQMaster\n"
"  Paramegers: (oaString)\n"
"    Calls: void getEEQMaster(oaString& master) const\n"
"    Signature: getEEQMaster|void-void|ref-oaString,\n"
"    BrowseData: 0,oaString\n"
"    This function gets the electrically equivalent master (EEQMaster) of this block. If an EEQMaster does not exist, an empty string is returned.\n"
;

static PyObject*
oaBlock_getEEQMaster(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaString p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaString_Convert,&p1)) {
        data.DataCall()->getEEQMaster(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getFigGroups_doc[] = 
"Class: oaBlock, Function: getFigGroups\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaFigGroup_oaBlock getFigGroups() const\n"
"    Signature: getFigGroups|simple-oaCollection_oaFigGroup_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of the figGroups in this block.\n"
;

static PyObject*
oaBlock_getFigGroups(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaFigGroup_oaBlock* result= new oaCollection_oaFigGroup_oaBlock(data.DataCall()->getFigGroups());
        return PyoaCollection_oaFigGroup_oaBlock_FromoaCollection_oaFigGroup_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getFigGroupsIter_doc[] = 
"Class: oaBlock, Function: getFigGroupsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaFigGroup getFigGroupsIter() const\n"
"    Signature: getFigGroupsIter|simple-oaIter_oaFigGroup|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of the figGroups in this block.\n"
;

static PyObject*
oaBlock_getFigGroupsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaFigGroup* result= new oaIter_oaFigGroup(data.DataCall()->getFigGroups());
        return PyoaIter_oaFigGroup_FromoaIter_oaFigGroup(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getGCellPatterns_doc[] = 
"Class: oaBlock, Function: getGCellPatterns\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaGCellPattern_oaBlock getGCellPatterns() const\n"
"    Signature: getGCellPatterns|simple-oaCollection_oaGCellPattern_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns the gCell patterns of this block.\n"
;

static PyObject*
oaBlock_getGCellPatterns(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaGCellPattern_oaBlock* result= new oaCollection_oaGCellPattern_oaBlock(data.DataCall()->getGCellPatterns());
        return PyoaCollection_oaGCellPattern_oaBlock_FromoaCollection_oaGCellPattern_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getGCellPatternsIter_doc[] = 
"Class: oaBlock, Function: getGCellPatternsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaGCellPattern getGCellPatternsIter() const\n"
"    Signature: getGCellPatternsIter|simple-oaIter_oaGCellPattern|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns the gCell patterns of this block.\n"
;

static PyObject*
oaBlock_getGCellPatternsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaGCellPattern* result= new oaIter_oaGCellPattern(data.DataCall()->getGCellPatterns());
        return PyoaIter_oaGCellPattern_FromoaIter_oaGCellPattern(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getGuides_doc[] = 
"Class: oaBlock, Function: getGuides\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaGuide_oaBlock getGuides() const\n"
"    Signature: getGuides|simple-oaCollection_oaGuide_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of guides in this block.\n"
;

static PyObject*
oaBlock_getGuides(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaGuide_oaBlock* result= new oaCollection_oaGuide_oaBlock(data.DataCall()->getGuides());
        return PyoaCollection_oaGuide_oaBlock_FromoaCollection_oaGuide_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getGuidesIter_doc[] = 
"Class: oaBlock, Function: getGuidesIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaGuide getGuidesIter() const\n"
"    Signature: getGuidesIter|simple-oaIter_oaGuide|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of guides in this block.\n"
;

static PyObject*
oaBlock_getGuidesIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaGuide* result= new oaIter_oaGuide(data.DataCall()->getGuides());
        return PyoaIter_oaGuide_FromoaIter_oaGuide(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getInstHeaders_doc[] = 
"Class: oaBlock, Function: getInstHeaders\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaInstHeader_oaBlock getInstHeaders() const\n"
"    Signature: getInstHeaders|simple-oaCollection_oaInstHeader_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of instHeaders in this block.\n"
;

static PyObject*
oaBlock_getInstHeaders(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaInstHeader_oaBlock* result= new oaCollection_oaInstHeader_oaBlock(data.DataCall()->getInstHeaders());
        return PyoaCollection_oaInstHeader_oaBlock_FromoaCollection_oaInstHeader_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getInstHeadersIter_doc[] = 
"Class: oaBlock, Function: getInstHeadersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaInstHeader getInstHeadersIter() const\n"
"    Signature: getInstHeadersIter|simple-oaIter_oaInstHeader|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of instHeaders in this block.\n"
;

static PyObject*
oaBlock_getInstHeadersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaInstHeader* result= new oaIter_oaInstHeader(data.DataCall()->getInstHeaders());
        return PyoaIter_oaInstHeader_FromoaIter_oaInstHeader(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getInstTerms_doc[] = 
"Class: oaBlock, Function: getInstTerms\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaInstTerm_oaBlock getInstTerms() const\n"
"    Signature: getInstTerms|simple-oaCollection_oaInstTerm_oaBlock|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    This function returns a collection of instTerms in this block.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bits flags are defined as follows:\n"
"    oacInstTermIterNotImplicit: the collection will only contain instTerms that were explicitly created\n"
"    oacInstTermIterSingleBit: the collection will only contain instTerms that make a single-bit connection\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaCollection_oaInstTerm_oaBlock getInstTerms(oaUInt4 filterFlags) const\n"
"    Signature: getInstTerms|simple-oaCollection_oaInstTerm_oaBlock|simple-oaUInt4,\n"
"    This function returns a collection of instTerms in this block.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bits flags are defined as follows:\n"
"    oacInstTermIterNotImplicit: the collection will only contain instTerms that were explicitly created\n"
"    oacInstTermIterSingleBit: the collection will only contain instTerms that make a single-bit connection\n"
;

static PyObject*
oaBlock_getInstTerms(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaCollection_oaInstTerm_oaBlock* result= new oaCollection_oaInstTerm_oaBlock(data.DataCall()->getInstTerms());
            return PyoaCollection_oaInstTerm_oaBlock_FromoaCollection_oaInstTerm_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaCollection_oaInstTerm_oaBlock* result= new oaCollection_oaInstTerm_oaBlock(data.DataCall()->getInstTerms(p1.Data()));
            return PyoaCollection_oaInstTerm_oaBlock_FromoaCollection_oaInstTerm_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getInstTerms, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getInstTermsIter_doc[] = 
"Class: oaBlock, Function: getInstTermsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaInstTerm getInstTermsIter() const\n"
"    Signature: getInstTermsIter|simple-oaIter_oaInstTerm|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of instTerms in this block.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bits flags are defined as follows:\n"
"    oacInstTermIterNotImplicit: the collection will only contain instTerms that were explicitly created\n"
"    oacInstTermIterSingleBit: the collection will only contain instTerms that make a single-bit connection\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaIter_oaInstTerm getInstTermsIter(oaUInt4 filterFlags) const\n"
"    Signature: getInstTermsIter|simple-oaIter_oaInstTerm|simple-oaUInt4,\n"
"    This function returns an Iterator over the following collection: This function returns a collection of instTerms in this block.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bits flags are defined as follows:\n"
"    oacInstTermIterNotImplicit: the collection will only contain instTerms that were explicitly created\n"
"    oacInstTermIterSingleBit: the collection will only contain instTerms that make a single-bit connection\n"
;

static PyObject*
oaBlock_getInstTermsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaIter_oaInstTerm* result= new oaIter_oaInstTerm(data.DataCall()->getInstTerms());
            return PyoaIter_oaInstTerm_FromoaIter_oaInstTerm(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaIter_oaInstTerm* result= new oaIter_oaInstTerm(data.DataCall()->getInstTerms(p1.Data()));
            return PyoaIter_oaInstTerm_FromoaIter_oaInstTerm(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getInstTermsIter, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getInsts_doc[] = 
"Class: oaBlock, Function: getInsts\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaInst_oaBlock getInsts() const\n"
"    Signature: getInsts|simple-oaCollection_oaInst_oaBlock|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    This function returns a collection of instances in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacInstIterSingleBit: the collection contains single-bit instances\n"
"    oacInstIterNotImplicit: the collection will not contain any implicitly created instances\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaCollection_oaInst_oaBlock getInsts(oaUInt4 filterFlags) const\n"
"    Signature: getInsts|simple-oaCollection_oaInst_oaBlock|simple-oaUInt4,\n"
"    This function returns a collection of instances in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacInstIterSingleBit: the collection contains single-bit instances\n"
"    oacInstIterNotImplicit: the collection will not contain any implicitly created instances\n"
;

static PyObject*
oaBlock_getInsts(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaCollection_oaInst_oaBlock* result= new oaCollection_oaInst_oaBlock(data.DataCall()->getInsts());
            return PyoaCollection_oaInst_oaBlock_FromoaCollection_oaInst_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaCollection_oaInst_oaBlock* result= new oaCollection_oaInst_oaBlock(data.DataCall()->getInsts(p1.Data()));
            return PyoaCollection_oaInst_oaBlock_FromoaCollection_oaInst_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getInsts, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getInstsIter_doc[] = 
"Class: oaBlock, Function: getInstsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaInst getInstsIter() const\n"
"    Signature: getInstsIter|simple-oaIter_oaInst|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of instances in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacInstIterSingleBit: the collection contains single-bit instances\n"
"    oacInstIterNotImplicit: the collection will not contain any implicitly created instances\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaIter_oaInst getInstsIter(oaUInt4 filterFlags) const\n"
"    Signature: getInstsIter|simple-oaIter_oaInst|simple-oaUInt4,\n"
"    This function returns an Iterator over the following collection: This function returns a collection of instances in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacInstIterSingleBit: the collection contains single-bit instances\n"
"    oacInstIterNotImplicit: the collection will not contain any implicitly created instances\n"
;

static PyObject*
oaBlock_getInstsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaIter_oaInst* result= new oaIter_oaInst(data.DataCall()->getInsts());
            return PyoaIter_oaInst_FromoaIter_oaInst(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaIter_oaInst* result= new oaIter_oaInst(data.DataCall()->getInsts(p1.Data()));
            return PyoaIter_oaInst_FromoaIter_oaInst(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getInstsIter, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getLPPHeaders_doc[] = 
"Class: oaBlock, Function: getLPPHeaders\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaLPPHeader_oaBlock getLPPHeaders() const\n"
"    Signature: getLPPHeaders|simple-oaCollection_oaLPPHeader_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of layer/purpose pair headers in this block.\n"
;

static PyObject*
oaBlock_getLPPHeaders(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaLPPHeader_oaBlock* result= new oaCollection_oaLPPHeader_oaBlock(data.DataCall()->getLPPHeaders());
        return PyoaCollection_oaLPPHeader_oaBlock_FromoaCollection_oaLPPHeader_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getLPPHeadersIter_doc[] = 
"Class: oaBlock, Function: getLPPHeadersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaLPPHeader getLPPHeadersIter() const\n"
"    Signature: getLPPHeadersIter|simple-oaIter_oaLPPHeader|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of layer/purpose pair headers in this block.\n"
;

static PyObject*
oaBlock_getLPPHeadersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaLPPHeader* result= new oaIter_oaLPPHeader(data.DataCall()->getLPPHeaders());
        return PyoaIter_oaLPPHeader_FromoaIter_oaLPPHeader(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getLayerHeaders_doc[] = 
"Class: oaBlock, Function: getLayerHeaders\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaLayerHeader_oaBlock getLayerHeaders() const\n"
"    Signature: getLayerHeaders|simple-oaCollection_oaLayerHeader_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of layerHeaders in this block.\n"
;

static PyObject*
oaBlock_getLayerHeaders(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaLayerHeader_oaBlock* result= new oaCollection_oaLayerHeader_oaBlock(data.DataCall()->getLayerHeaders());
        return PyoaCollection_oaLayerHeader_oaBlock_FromoaCollection_oaLayerHeader_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getLayerHeadersIter_doc[] = 
"Class: oaBlock, Function: getLayerHeadersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaLayerHeader getLayerHeadersIter() const\n"
"    Signature: getLayerHeadersIter|simple-oaIter_oaLayerHeader|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of layerHeaders in this block.\n"
;

static PyObject*
oaBlock_getLayerHeadersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaLayerHeader* result= new oaIter_oaLayerHeader(data.DataCall()->getLayerHeaders());
        return PyoaIter_oaLayerHeader_FromoaIter_oaLayerHeader(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getMarkers_doc[] = 
"Class: oaBlock, Function: getMarkers\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaMarker_oaBlock getMarkers() const\n"
"    Signature: getMarkers|simple-oaCollection_oaMarker_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of markers in this block.\n"
;

static PyObject*
oaBlock_getMarkers(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaMarker_oaBlock* result= new oaCollection_oaMarker_oaBlock(data.DataCall()->getMarkers());
        return PyoaCollection_oaMarker_oaBlock_FromoaCollection_oaMarker_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getMarkersIter_doc[] = 
"Class: oaBlock, Function: getMarkersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaMarker getMarkersIter() const\n"
"    Signature: getMarkersIter|simple-oaIter_oaMarker|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of markers in this block.\n"
;

static PyObject*
oaBlock_getMarkersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaMarker* result= new oaIter_oaMarker(data.DataCall()->getMarkers());
        return PyoaIter_oaMarker_FromoaIter_oaMarker(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getModule_doc[] = 
"Class: oaBlock, Function: getModule\n"
"  Paramegers: ()\n"
"    Calls: oaModule* getModule() const\n"
"    Signature: getModule|ptr-oaModule|\n"
"    BrowseData: 1\n"
"    This function returns the top module that corresponds to this block. The top block in a design may have a corresponding top module. The correspondence of a top module and a top block is established by the visibleToBlock parameter passed to oaDesign::setTopModule and the visibleToModule parameter passed to oaBlock::create .\n"
"    This function returns NULL if this block does not have a corresponding top module, meaning this block is not visible in the module domain.\n"
;

static PyObject*
oaBlock_getModule(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaModulep result= (data.DataCall()->getModule());
        return PyoaModule_FromoaModule(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getNets_doc[] = 
"Class: oaBlock, Function: getNets\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaNet_oaBlock getNets() const\n"
"    Signature: getNets|simple-oaCollection_oaNet_oaBlock|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    oaBlock::getNets\n"
"    This function returns a collection of nets in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    This specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacNetIterAll: the collection contains all nets\n"
"    oacNetIterSingleBit: the collection contains single-bit nets\n"
"    oacNetIterBundle: the collection contains all the bundleNets in the block\n"
"    oacNetIterPreferred: the collection only contains the preferred nets; equivalent nets are omitted\n"
"    oacNetIterNotImplicit: the collection contains explicitly created nets\n"
"    oacInvalidBlockNetIterFlags\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaCollection_oaNet_oaBlock getNets(oaUInt4 filterFlags) const\n"
"    Signature: getNets|simple-oaCollection_oaNet_oaBlock|simple-oaUInt4,\n"
"    oaBlock::getNets\n"
"    This function returns a collection of nets in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    This specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacNetIterAll: the collection contains all nets\n"
"    oacNetIterSingleBit: the collection contains single-bit nets\n"
"    oacNetIterBundle: the collection contains all the bundleNets in the block\n"
"    oacNetIterPreferred: the collection only contains the preferred nets; equivalent nets are omitted\n"
"    oacNetIterNotImplicit: the collection contains explicitly created nets\n"
"    oacInvalidBlockNetIterFlags\n"
;

static PyObject*
oaBlock_getNets(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaCollection_oaNet_oaBlock* result= new oaCollection_oaNet_oaBlock(data.DataCall()->getNets());
            return PyoaCollection_oaNet_oaBlock_FromoaCollection_oaNet_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaCollection_oaNet_oaBlock* result= new oaCollection_oaNet_oaBlock(data.DataCall()->getNets(p1.Data()));
            return PyoaCollection_oaNet_oaBlock_FromoaCollection_oaNet_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getNets, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getNetsIter_doc[] = 
"Class: oaBlock, Function: getNetsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaNet getNetsIter() const\n"
"    Signature: getNetsIter|simple-oaIter_oaNet|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: oaBlock::getNets\n"
"    This function returns a collection of nets in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    This specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacNetIterAll: the collection contains all nets\n"
"    oacNetIterSingleBit: the collection contains single-bit nets\n"
"    oacNetIterBundle: the collection contains all the bundleNets in the block\n"
"    oacNetIterPreferred: the collection only contains the preferred nets; equivalent nets are omitted\n"
"    oacNetIterNotImplicit: the collection contains explicitly created nets\n"
"    oacInvalidBlockNetIterFlags\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaIter_oaNet getNetsIter(oaUInt4 filterFlags) const\n"
"    Signature: getNetsIter|simple-oaIter_oaNet|simple-oaUInt4,\n"
"    This function returns an Iterator over the following collection: oaBlock::getNets\n"
"    This function returns a collection of nets in this block. The filter flag bits are defined below and may be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    This specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacNetIterAll: the collection contains all nets\n"
"    oacNetIterSingleBit: the collection contains single-bit nets\n"
"    oacNetIterBundle: the collection contains all the bundleNets in the block\n"
"    oacNetIterPreferred: the collection only contains the preferred nets; equivalent nets are omitted\n"
"    oacNetIterNotImplicit: the collection contains explicitly created nets\n"
"    oacInvalidBlockNetIterFlags\n"
;

static PyObject*
oaBlock_getNetsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaIter_oaNet* result= new oaIter_oaNet(data.DataCall()->getNets());
            return PyoaIter_oaNet_FromoaIter_oaNet(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaIter_oaNet* result= new oaIter_oaNet(data.DataCall()->getNets(p1.Data()));
            return PyoaIter_oaNet_FromoaIter_oaNet(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getNetsIter, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getPins_doc[] = 
"Class: oaBlock, Function: getPins\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaPin_oaBlock getPins() const\n"
"    Signature: getPins|simple-oaCollection_oaPin_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of pins in this block.\n"
;

static PyObject*
oaBlock_getPins(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaPin_oaBlock* result= new oaCollection_oaPin_oaBlock(data.DataCall()->getPins());
        return PyoaCollection_oaPin_oaBlock_FromoaCollection_oaPin_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getPinsIter_doc[] = 
"Class: oaBlock, Function: getPinsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaPin getPinsIter() const\n"
"    Signature: getPinsIter|simple-oaIter_oaPin|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of pins in this block.\n"
;

static PyObject*
oaBlock_getPinsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaPin* result= new oaIter_oaPin(data.DataCall()->getPins());
        return PyoaIter_oaPin_FromoaIter_oaPin(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getRoutes_doc[] = 
"Class: oaBlock, Function: getRoutes\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaRoute_oaBlock getRoutes() const\n"
"    Signature: getRoutes|simple-oaCollection_oaRoute_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of routes in this block.\n"
;

static PyObject*
oaBlock_getRoutes(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaRoute_oaBlock* result= new oaCollection_oaRoute_oaBlock(data.DataCall()->getRoutes());
        return PyoaCollection_oaRoute_oaBlock_FromoaCollection_oaRoute_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getRoutesIter_doc[] = 
"Class: oaBlock, Function: getRoutesIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaRoute getRoutesIter() const\n"
"    Signature: getRoutesIter|simple-oaIter_oaRoute|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of routes in this block.\n"
;

static PyObject*
oaBlock_getRoutesIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaRoute* result= new oaIter_oaRoute(data.DataCall()->getRoutes());
        return PyoaIter_oaRoute_FromoaIter_oaRoute(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getRowHeaders_doc[] = 
"Class: oaBlock, Function: getRowHeaders\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaRowHeader_oaBlock getRowHeaders() const\n"
"    Signature: getRowHeaders|simple-oaCollection_oaRowHeader_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of rowHeaders in this block.\n"
;

static PyObject*
oaBlock_getRowHeaders(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaRowHeader_oaBlock* result= new oaCollection_oaRowHeader_oaBlock(data.DataCall()->getRowHeaders());
        return PyoaCollection_oaRowHeader_oaBlock_FromoaCollection_oaRowHeader_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getRowHeadersIter_doc[] = 
"Class: oaBlock, Function: getRowHeadersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaRowHeader getRowHeadersIter() const\n"
"    Signature: getRowHeadersIter|simple-oaIter_oaRowHeader|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of rowHeaders in this block.\n"
;

static PyObject*
oaBlock_getRowHeadersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaRowHeader* result= new oaIter_oaRowHeader(data.DataCall()->getRowHeaders());
        return PyoaIter_oaRowHeader_FromoaIter_oaRowHeader(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getRows_doc[] = 
"Class: oaBlock, Function: getRows\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaRow_oaBlock getRows() const\n"
"    Signature: getRows|simple-oaCollection_oaRow_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of rows in this block.\n"
;

static PyObject*
oaBlock_getRows(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaRow_oaBlock* result= new oaCollection_oaRow_oaBlock(data.DataCall()->getRows());
        return PyoaCollection_oaRow_oaBlock_FromoaCollection_oaRow_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getRowsIter_doc[] = 
"Class: oaBlock, Function: getRowsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaRow getRowsIter() const\n"
"    Signature: getRowsIter|simple-oaIter_oaRow|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of rows in this block.\n"
;

static PyObject*
oaBlock_getRowsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaRow* result= new oaIter_oaRow(data.DataCall()->getRows());
        return PyoaIter_oaRow_FromoaIter_oaRow(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getScanChains_doc[] = 
"Class: oaBlock, Function: getScanChains\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaScanChain_oaBlock getScanChains() const\n"
"    Signature: getScanChains|simple-oaCollection_oaScanChain_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of scan chains in this block.\n"
;

static PyObject*
oaBlock_getScanChains(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaScanChain_oaBlock* result= new oaCollection_oaScanChain_oaBlock(data.DataCall()->getScanChains());
        return PyoaCollection_oaScanChain_oaBlock_FromoaCollection_oaScanChain_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getScanChainsIter_doc[] = 
"Class: oaBlock, Function: getScanChainsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaScanChain getScanChainsIter() const\n"
"    Signature: getScanChainsIter|simple-oaIter_oaScanChain|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of scan chains in this block.\n"
;

static PyObject*
oaBlock_getScanChainsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaScanChain* result= new oaIter_oaScanChain(data.DataCall()->getScanChains());
        return PyoaIter_oaScanChain_FromoaIter_oaScanChain(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getShapes_doc[] = 
"Class: oaBlock, Function: getShapes\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaShape_oaBlock getShapes() const\n"
"    Signature: getShapes|simple-oaCollection_oaShape_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of shapes in this block.\n"
;

static PyObject*
oaBlock_getShapes(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaShape_oaBlock* result= new oaCollection_oaShape_oaBlock(data.DataCall()->getShapes());
        return PyoaCollection_oaShape_oaBlock_FromoaCollection_oaShape_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getShapesIter_doc[] = 
"Class: oaBlock, Function: getShapesIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaShape getShapesIter() const\n"
"    Signature: getShapesIter|simple-oaIter_oaShape|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of shapes in this block.\n"
;

static PyObject*
oaBlock_getShapesIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaShape* result= new oaIter_oaShape(data.DataCall()->getShapes());
        return PyoaIter_oaShape_FromoaIter_oaShape(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getSitePattern_doc[] = 
"Class: oaBlock, Function: getSitePattern\n"
"  Paramegers: (oaSitePattern)\n"
"    Calls: void getSitePattern(oaSitePattern& pattern) const\n"
"    Signature: getSitePattern|void-void|ref-oaSitePattern,\n"
"    BrowseData: 0,oaSitePattern\n"
"    This function returns the site pattern of this design.\n"
;

static PyObject*
oaBlock_getSitePattern(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSitePattern p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSitePattern_Convert,&p1)) {
        data.DataCall()->getSitePattern(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getSteiners_doc[] = 
"Class: oaBlock, Function: getSteiners\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaSteiner_oaBlock getSteiners() const\n"
"    Signature: getSteiners|simple-oaCollection_oaSteiner_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of Steiners in this block.\n"
;

static PyObject*
oaBlock_getSteiners(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaSteiner_oaBlock* result= new oaCollection_oaSteiner_oaBlock(data.DataCall()->getSteiners());
        return PyoaCollection_oaSteiner_oaBlock_FromoaCollection_oaSteiner_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getSteinersIter_doc[] = 
"Class: oaBlock, Function: getSteinersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaSteiner getSteinersIter() const\n"
"    Signature: getSteinersIter|simple-oaIter_oaSteiner|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of Steiners in this block.\n"
;

static PyObject*
oaBlock_getSteinersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaSteiner* result= new oaIter_oaSteiner(data.DataCall()->getSteiners());
        return PyoaIter_oaSteiner_FromoaIter_oaSteiner(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getSymmetry_doc[] = 
"Class: oaBlock, Function: getSymmetry\n"
"  Paramegers: ()\n"
"    Calls: oaSymmetry getSymmetry() const\n"
"    Signature: getSymmetry|simple-oaSymmetry|\n"
"    BrowseData: 1\n"
"    This function returns the symmetry associated with this block.\n"
;

static PyObject*
oaBlock_getSymmetry(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaSymmetry* result= new oaSymmetry(data.DataCall()->getSymmetry());
        return PyoaSymmetry_FromoaSymmetry(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getTerms_doc[] = 
"Class: oaBlock, Function: getTerms\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaTerm_oaBlock getTerms() const\n"
"    Signature: getTerms|simple-oaCollection_oaTerm_oaBlock|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    This function returns a collection of terms in this block. The filter flag bits can be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacTermIterAll: the collection contains all terminals\n"
"    oacTermIterSingleBit: the collection contains single-bit terminals\n"
"    oacTermIterBundle: the collection contains all the bundleTerms in the block\n"
"    oacTermIterNotImplicit: the collection contains explicitly created terminals\n"
"    oacInvalidBlockTermIterFlags\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaCollection_oaTerm_oaBlock getTerms(oaUInt4 filterFlags) const\n"
"    Signature: getTerms|simple-oaCollection_oaTerm_oaBlock|simple-oaUInt4,\n"
"    This function returns a collection of terms in this block. The filter flag bits can be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacTermIterAll: the collection contains all terminals\n"
"    oacTermIterSingleBit: the collection contains single-bit terminals\n"
"    oacTermIterBundle: the collection contains all the bundleTerms in the block\n"
"    oacTermIterNotImplicit: the collection contains explicitly created terminals\n"
"    oacInvalidBlockTermIterFlags\n"
;

static PyObject*
oaBlock_getTerms(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaCollection_oaTerm_oaBlock* result= new oaCollection_oaTerm_oaBlock(data.DataCall()->getTerms());
            return PyoaCollection_oaTerm_oaBlock_FromoaCollection_oaTerm_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaCollection_oaTerm_oaBlock* result= new oaCollection_oaTerm_oaBlock(data.DataCall()->getTerms(p1.Data()));
            return PyoaCollection_oaTerm_oaBlock_FromoaCollection_oaTerm_oaBlock(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getTerms, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getTermsByPosition_doc[] = 
"Class: oaBlock, Function: getTermsByPosition\n"
"  Paramegers: (oaTermArray)\n"
"    Calls: void getTermsByPosition(oaTermArray& array) const\n"
"    Signature: getTermsByPosition|void-void|ref-oaTermArray,\n"
"    BrowseData: 0,oaTermArray\n"
"    This function retrieves the terminals in this block that have been assigned a position and returns them in the specified oaTermArray . A position in the array may be NULL to reflect that there is no terminal assigned to that position. The position of a terminal in the array reflects the position assigned to the terminal.\n"
;

static PyObject*
oaBlock_getTermsByPosition(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaTermArray p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaTermArray_Convert,&p1)) {
        data.DataCall()->getTermsByPosition(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getTermsIter_doc[] = 
"Class: oaBlock, Function: getTermsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaTerm getTermsIter() const\n"
"    Signature: getTermsIter|simple-oaIter_oaTerm|simple-oaUInt4,\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of terms in this block. The filter flag bits can be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacTermIterAll: the collection contains all terminals\n"
"    oacTermIterSingleBit: the collection contains single-bit terminals\n"
"    oacTermIterBundle: the collection contains all the bundleTerms in the block\n"
"    oacTermIterNotImplicit: the collection contains explicitly created terminals\n"
"    oacInvalidBlockTermIterFlags\n"
"  Paramegers: (oaUInt4)\n"
"    Calls: oaIter_oaTerm getTermsIter(oaUInt4 filterFlags) const\n"
"    Signature: getTermsIter|simple-oaIter_oaTerm|simple-oaUInt4,\n"
"    This function returns an Iterator over the following collection: This function returns a collection of terms in this block. The filter flag bits can be logically OR'd together to refine the contents of the collection.\n"
"    filterFlags\n"
"    Specifies what the collection contains. The bit flags are defined as follows:\n"
"    oacTermIterAll: the collection contains all terminals\n"
"    oacTermIterSingleBit: the collection contains single-bit terminals\n"
"    oacTermIterBundle: the collection contains all the bundleTerms in the block\n"
"    oacTermIterNotImplicit: the collection contains explicitly created terminals\n"
"    oacInvalidBlockTermIterFlags\n"
;

static PyObject*
oaBlock_getTermsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    // Case: ()
    {
        if (PyArg_ParseTuple(args,"")) {
            oaIter_oaTerm* result= new oaIter_oaTerm(data.DataCall()->getTerms());
            return PyoaIter_oaTerm_FromoaIter_oaTerm(result,0,NULL);
        }
    }
    PyErr_Clear();
    // Case: (oaUInt4)
    {
        PyParamoaUInt4 p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaUInt4_Convert,&p1)) {
            oaIter_oaTerm* result= new oaIter_oaTerm(data.DataCall()->getTerms(p1.Data()));
            return PyoaIter_oaTerm_FromoaIter_oaTerm(result,0,NULL);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: getTermsIter, Choices are:\n"
        "    ()\n"
        "    (oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getTrackPatterns_doc[] = 
"Class: oaBlock, Function: getTrackPatterns\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaTrackPattern_oaBlock getTrackPatterns() const\n"
"    Signature: getTrackPatterns|simple-oaCollection_oaTrackPattern_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of trackPatterns in this block.\n"
;

static PyObject*
oaBlock_getTrackPatterns(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaTrackPattern_oaBlock* result= new oaCollection_oaTrackPattern_oaBlock(data.DataCall()->getTrackPatterns());
        return PyoaCollection_oaTrackPattern_oaBlock_FromoaCollection_oaTrackPattern_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getTrackPatternsIter_doc[] = 
"Class: oaBlock, Function: getTrackPatternsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaTrackPattern getTrackPatternsIter() const\n"
"    Signature: getTrackPatternsIter|simple-oaIter_oaTrackPattern|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of trackPatterns in this block.\n"
;

static PyObject*
oaBlock_getTrackPatternsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaTrackPattern* result= new oaIter_oaTrackPattern(data.DataCall()->getTrackPatterns());
        return PyoaIter_oaTrackPattern_FromoaIter_oaTrackPattern(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getUserUnits_doc[] = 
"Class: oaBlock, Function: getUserUnits\n"
"  Paramegers: ()\n"
"    Calls: oaUserUnitsType getUserUnits() const\n"
"    Signature: getUserUnits|simple-oaUserUnitsType|\n"
"    BrowseData: 1\n"
"    This function returns the requested user-unit information for the block.\n"
;

static PyObject*
oaBlock_getUserUnits(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUserUnitsType* result= new oaUserUnitsType(data.DataCall()->getUserUnits());
        return PyoaUserUnitsType_FromoaUserUnitsType(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getVectorInstDefs_doc[] = 
"Class: oaBlock, Function: getVectorInstDefs\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaVectorInstDef_oaBlock getVectorInstDefs() const\n"
"    Signature: getVectorInstDefs|simple-oaCollection_oaVectorInstDef_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of vectorInstDefs in this block.\n"
;

static PyObject*
oaBlock_getVectorInstDefs(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaVectorInstDef_oaBlock* result= new oaCollection_oaVectorInstDef_oaBlock(data.DataCall()->getVectorInstDefs());
        return PyoaCollection_oaVectorInstDef_oaBlock_FromoaCollection_oaVectorInstDef_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getVectorInstDefsIter_doc[] = 
"Class: oaBlock, Function: getVectorInstDefsIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaVectorInstDef getVectorInstDefsIter() const\n"
"    Signature: getVectorInstDefsIter|simple-oaIter_oaVectorInstDef|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of vectorInstDefs in this block.\n"
;

static PyObject*
oaBlock_getVectorInstDefsIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaVectorInstDef* result= new oaIter_oaVectorInstDef(data.DataCall()->getVectorInstDefs());
        return PyoaIter_oaVectorInstDef_FromoaIter_oaVectorInstDef(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getViaHeaders_doc[] = 
"Class: oaBlock, Function: getViaHeaders\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaViaHeader_oaBlock getViaHeaders() const\n"
"    Signature: getViaHeaders|simple-oaCollection_oaViaHeader_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of viaHeaders in this block.\n"
;

static PyObject*
oaBlock_getViaHeaders(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaViaHeader_oaBlock* result= new oaCollection_oaViaHeader_oaBlock(data.DataCall()->getViaHeaders());
        return PyoaCollection_oaViaHeader_oaBlock_FromoaCollection_oaViaHeader_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getViaHeadersIter_doc[] = 
"Class: oaBlock, Function: getViaHeadersIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaViaHeader getViaHeadersIter() const\n"
"    Signature: getViaHeadersIter|simple-oaIter_oaViaHeader|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of viaHeaders in this block.\n"
;

static PyObject*
oaBlock_getViaHeadersIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaViaHeader* result= new oaIter_oaViaHeader(data.DataCall()->getViaHeaders());
        return PyoaIter_oaViaHeader_FromoaIter_oaViaHeader(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getVias_doc[] = 
"Class: oaBlock, Function: getVias\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaVia_oaBlock getVias() const\n"
"    Signature: getVias|simple-oaCollection_oaVia_oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns a collection of vias in this block.\n"
;

static PyObject*
oaBlock_getVias(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaVia_oaBlock* result= new oaCollection_oaVia_oaBlock(data.DataCall()->getVias());
        return PyoaCollection_oaVia_oaBlock_FromoaCollection_oaVia_oaBlock(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_getViasIter_doc[] = 
"Class: oaBlock, Function: getViasIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaVia getViasIter() const\n"
"    Signature: getViasIter|simple-oaIter_oaVia|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of vias in this block.\n"
;

static PyObject*
oaBlock_getViasIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaVia* result= new oaIter_oaVia(data.DataCall()->getVias());
        return PyoaIter_oaVia_FromoaIter_oaVia(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_hasConnectivity_doc[] = 
"Class: oaBlock, Function: hasConnectivity\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasConnectivity() const\n"
"    Signature: hasConnectivity|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if this block contains any connectivity.\n"
;

static PyObject*
oaBlock_hasConnectivity(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->hasConnectivity());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_hasDefaultConstraintGroup_doc[] = 
"Class: oaBlock, Function: hasDefaultConstraintGroup\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasDefaultConstraintGroup() const\n"
"    Signature: hasDefaultConstraintGroup|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns a boolean indicating whether there are constraints associated with this block.\n"
;

static PyObject*
oaBlock_hasDefaultConstraintGroup(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->hasDefaultConstraintGroup());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_hasGlobalNet_doc[] = 
"Class: oaBlock, Function: hasGlobalNet\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasGlobalNet() const\n"
"    Signature: hasGlobalNet|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if this block contains any global nets.\n"
;

static PyObject*
oaBlock_hasGlobalNet(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->hasGlobalNet());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_hasMultiBitNet_doc[] = 
"Class: oaBlock, Function: hasMultiBitNet\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasMultiBitNet() const\n"
"    Signature: hasMultiBitNet|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if this block contains any multiple bit nets.\n"
;

static PyObject*
oaBlock_hasMultiBitNet(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->hasMultiBitNet());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_hasMultiBitTerm_doc[] = 
"Class: oaBlock, Function: hasMultiBitTerm\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasMultiBitTerm() const\n"
"    Signature: hasMultiBitTerm|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if this block contains any multiple bit terminals.\n"
;

static PyObject*
oaBlock_hasMultiBitTerm(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->hasMultiBitTerm());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_hasMultiTermNet_doc[] = 
"Class: oaBlock, Function: hasMultiTermNet\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean hasMultiTermNet() const\n"
"    Signature: hasMultiTermNet|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns true if this block contains any nets that have more than one terminal associated with it.\n"
;

static PyObject*
oaBlock_hasMultiTermNet(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->hasMultiTermNet());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_initForRegionQuery_doc[] = 
"Class: oaBlock, Function: initForRegionQuery\n"
"  Paramegers: ()\n"
"    Calls: void initForRegionQuery()\n"
"    Signature: initForRegionQuery|void-void|\n"
"    BrowseData: 0\n"
"    oaBlock::initForRegionQuery\n"
"    This function initializes the regionQuery structures used by this block and all blocks bound into its hierarchy. This can be used to do all the prep work at once rather than doing it on demand.\n"
;

static PyObject*
oaBlock_initForRegionQuery(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        data.DataCall()->initForRegionQuery();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_isVisibleToModule_doc[] = 
"Class: oaBlock, Function: isVisibleToModule\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isVisibleToModule() const\n"
"    Signature: isVisibleToModule|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns a boolean indicating whether this block is visible to the module domain.\n"
;

static PyObject*
oaBlock_isVisibleToModule(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isVisibleToModule());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_setEEQMaster_doc[] = 
"Class: oaBlock, Function: setEEQMaster\n"
"  Paramegers: (oaString)\n"
"    Calls: void setEEQMaster(const oaString& master)\n"
"    Signature: setEEQMaster|void-void|cref-oaString,\n"
"    This function sets the electrically equivalent master of this design.\n"
;

static PyObject*
oaBlock_setEEQMaster(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaString p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaString_Convert,&p1)) {
        data.DataCall()->setEEQMaster(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_setSitePattern_doc[] = 
"Class: oaBlock, Function: setSitePattern\n"
"  Paramegers: (oaSitePattern)\n"
"    Calls: void setSitePattern(const oaSitePattern& pattern)\n"
"    Signature: setSitePattern|void-void|cref-oaSitePattern,\n"
"    This function sets the site pattern of this design.\n"
;

static PyObject*
oaBlock_setSitePattern(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSitePattern p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSitePattern_Convert,&p1)) {
        data.DataCall()->setSitePattern(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_setSymmetry_doc[] = 
"Class: oaBlock, Function: setSymmetry\n"
"  Paramegers: (oaSymmetry)\n"
"    Calls: void setSymmetry(oaSymmetry val)\n"
"    Signature: setSymmetry|void-void|simple-oaSymmetry,\n"
"    This function sets the symmetry of this block.\n"
;

static PyObject*
oaBlock_setSymmetry(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaSymmetry p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaSymmetry_Convert,&p1)) {
        data.DataCall()->setSymmetry(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_setVisibleToModule_doc[] = 
"Class: oaBlock, Function: setVisibleToModule\n"
"  Paramegers: ()\n"
"    Calls: void setVisibleToModule()\n"
"    Signature: setVisibleToModule|void-void|\n"
"    BrowseData: 0\n"
"    This function sets this block to be visible to the module domain. If this block is already visible to module, this function does nothing. Otherwise, this function creates a top module which inherits all the existing occ/block objects in the top occurrence (top block), then sets the top block to be visible to module.\n"
;

static PyObject*
oaBlock_setVisibleToModule(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObject* self=(PyoaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        data.DataCall()->setVisibleToModule();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlock_isNull_doc[] =
"Class: oaBlock, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBlock_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBlock data;
    int convert_status=PyoaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBlock_assign_doc[] = 
"Class: oaBlock, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBlock_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBlock data;
  int convert_status=PyoaBlock_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBlock p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBlock_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBlock_methodlist[] = {
    {"destroy",(PyCFunction)oaBlock_destroy,METH_VARARGS,oaBlock_destroy_doc},
    {"getAssignments",(PyCFunction)oaBlock_getAssignments,METH_VARARGS,oaBlock_getAssignments_doc},
    {"getAssignmentsIter",(PyCFunction)oaBlock_getAssignmentsIter,METH_VARARGS,oaBlock_getAssignmentsIter_doc},
    {"getBBox",(PyCFunction)oaBlock_getBBox,METH_VARARGS,oaBlock_getBBox_doc},
    {"getBlockages",(PyCFunction)oaBlock_getBlockages,METH_VARARGS,oaBlock_getBlockages_doc},
    {"getBlockagesIter",(PyCFunction)oaBlock_getBlockagesIter,METH_VARARGS,oaBlock_getBlockagesIter_doc},
    {"getBoundaries",(PyCFunction)oaBlock_getBoundaries,METH_VARARGS,oaBlock_getBoundaries_doc},
    {"getBoundariesIter",(PyCFunction)oaBlock_getBoundariesIter,METH_VARARGS,oaBlock_getBoundariesIter_doc},
    {"getBusNetDefs",(PyCFunction)oaBlock_getBusNetDefs,METH_VARARGS,oaBlock_getBusNetDefs_doc},
    {"getBusNetDefsIter",(PyCFunction)oaBlock_getBusNetDefsIter,METH_VARARGS,oaBlock_getBusNetDefsIter_doc},
    {"getBusTermDefs",(PyCFunction)oaBlock_getBusTermDefs,METH_VARARGS,oaBlock_getBusTermDefs_doc},
    {"getBusTermDefsIter",(PyCFunction)oaBlock_getBusTermDefsIter,METH_VARARGS,oaBlock_getBusTermDefsIter_doc},
    {"getClusters",(PyCFunction)oaBlock_getClusters,METH_VARARGS,oaBlock_getClusters_doc},
    {"getClustersIter",(PyCFunction)oaBlock_getClustersIter,METH_VARARGS,oaBlock_getClustersIter_doc},
    {"getConnectDefs",(PyCFunction)oaBlock_getConnectDefs,METH_VARARGS,oaBlock_getConnectDefs_doc},
    {"getConnectDefsIter",(PyCFunction)oaBlock_getConnectDefsIter,METH_VARARGS,oaBlock_getConnectDefsIter_doc},
    {"getDBUPerUU",(PyCFunction)oaBlock_getDBUPerUU,METH_VARARGS,oaBlock_getDBUPerUU_doc},
    {"getDefaultConstraintGroup",(PyCFunction)oaBlock_getDefaultConstraintGroup,METH_VARARGS,oaBlock_getDefaultConstraintGroup_doc},
    {"getEEQMaster",(PyCFunction)oaBlock_getEEQMaster,METH_VARARGS,oaBlock_getEEQMaster_doc},
    {"getFigGroups",(PyCFunction)oaBlock_getFigGroups,METH_VARARGS,oaBlock_getFigGroups_doc},
    {"getFigGroupsIter",(PyCFunction)oaBlock_getFigGroupsIter,METH_VARARGS,oaBlock_getFigGroupsIter_doc},
    {"getGCellPatterns",(PyCFunction)oaBlock_getGCellPatterns,METH_VARARGS,oaBlock_getGCellPatterns_doc},
    {"getGCellPatternsIter",(PyCFunction)oaBlock_getGCellPatternsIter,METH_VARARGS,oaBlock_getGCellPatternsIter_doc},
    {"getGuides",(PyCFunction)oaBlock_getGuides,METH_VARARGS,oaBlock_getGuides_doc},
    {"getGuidesIter",(PyCFunction)oaBlock_getGuidesIter,METH_VARARGS,oaBlock_getGuidesIter_doc},
    {"getInstHeaders",(PyCFunction)oaBlock_getInstHeaders,METH_VARARGS,oaBlock_getInstHeaders_doc},
    {"getInstHeadersIter",(PyCFunction)oaBlock_getInstHeadersIter,METH_VARARGS,oaBlock_getInstHeadersIter_doc},
    {"getInstTerms",(PyCFunction)oaBlock_getInstTerms,METH_VARARGS,oaBlock_getInstTerms_doc},
    {"getInstTermsIter",(PyCFunction)oaBlock_getInstTermsIter,METH_VARARGS,oaBlock_getInstTermsIter_doc},
    {"getInsts",(PyCFunction)oaBlock_getInsts,METH_VARARGS,oaBlock_getInsts_doc},
    {"getInstsIter",(PyCFunction)oaBlock_getInstsIter,METH_VARARGS,oaBlock_getInstsIter_doc},
    {"getLPPHeaders",(PyCFunction)oaBlock_getLPPHeaders,METH_VARARGS,oaBlock_getLPPHeaders_doc},
    {"getLPPHeadersIter",(PyCFunction)oaBlock_getLPPHeadersIter,METH_VARARGS,oaBlock_getLPPHeadersIter_doc},
    {"getLayerHeaders",(PyCFunction)oaBlock_getLayerHeaders,METH_VARARGS,oaBlock_getLayerHeaders_doc},
    {"getLayerHeadersIter",(PyCFunction)oaBlock_getLayerHeadersIter,METH_VARARGS,oaBlock_getLayerHeadersIter_doc},
    {"getMarkers",(PyCFunction)oaBlock_getMarkers,METH_VARARGS,oaBlock_getMarkers_doc},
    {"getMarkersIter",(PyCFunction)oaBlock_getMarkersIter,METH_VARARGS,oaBlock_getMarkersIter_doc},
    {"getModule",(PyCFunction)oaBlock_getModule,METH_VARARGS,oaBlock_getModule_doc},
    {"getNets",(PyCFunction)oaBlock_getNets,METH_VARARGS,oaBlock_getNets_doc},
    {"getNetsIter",(PyCFunction)oaBlock_getNetsIter,METH_VARARGS,oaBlock_getNetsIter_doc},
    {"getPins",(PyCFunction)oaBlock_getPins,METH_VARARGS,oaBlock_getPins_doc},
    {"getPinsIter",(PyCFunction)oaBlock_getPinsIter,METH_VARARGS,oaBlock_getPinsIter_doc},
    {"getRoutes",(PyCFunction)oaBlock_getRoutes,METH_VARARGS,oaBlock_getRoutes_doc},
    {"getRoutesIter",(PyCFunction)oaBlock_getRoutesIter,METH_VARARGS,oaBlock_getRoutesIter_doc},
    {"getRowHeaders",(PyCFunction)oaBlock_getRowHeaders,METH_VARARGS,oaBlock_getRowHeaders_doc},
    {"getRowHeadersIter",(PyCFunction)oaBlock_getRowHeadersIter,METH_VARARGS,oaBlock_getRowHeadersIter_doc},
    {"getRows",(PyCFunction)oaBlock_getRows,METH_VARARGS,oaBlock_getRows_doc},
    {"getRowsIter",(PyCFunction)oaBlock_getRowsIter,METH_VARARGS,oaBlock_getRowsIter_doc},
    {"getScanChains",(PyCFunction)oaBlock_getScanChains,METH_VARARGS,oaBlock_getScanChains_doc},
    {"getScanChainsIter",(PyCFunction)oaBlock_getScanChainsIter,METH_VARARGS,oaBlock_getScanChainsIter_doc},
    {"getShapes",(PyCFunction)oaBlock_getShapes,METH_VARARGS,oaBlock_getShapes_doc},
    {"getShapesIter",(PyCFunction)oaBlock_getShapesIter,METH_VARARGS,oaBlock_getShapesIter_doc},
    {"getSitePattern",(PyCFunction)oaBlock_getSitePattern,METH_VARARGS,oaBlock_getSitePattern_doc},
    {"getSteiners",(PyCFunction)oaBlock_getSteiners,METH_VARARGS,oaBlock_getSteiners_doc},
    {"getSteinersIter",(PyCFunction)oaBlock_getSteinersIter,METH_VARARGS,oaBlock_getSteinersIter_doc},
    {"getSymmetry",(PyCFunction)oaBlock_getSymmetry,METH_VARARGS,oaBlock_getSymmetry_doc},
    {"getTerms",(PyCFunction)oaBlock_getTerms,METH_VARARGS,oaBlock_getTerms_doc},
    {"getTermsByPosition",(PyCFunction)oaBlock_getTermsByPosition,METH_VARARGS,oaBlock_getTermsByPosition_doc},
    {"getTermsIter",(PyCFunction)oaBlock_getTermsIter,METH_VARARGS,oaBlock_getTermsIter_doc},
    {"getTrackPatterns",(PyCFunction)oaBlock_getTrackPatterns,METH_VARARGS,oaBlock_getTrackPatterns_doc},
    {"getTrackPatternsIter",(PyCFunction)oaBlock_getTrackPatternsIter,METH_VARARGS,oaBlock_getTrackPatternsIter_doc},
    {"getUserUnits",(PyCFunction)oaBlock_getUserUnits,METH_VARARGS,oaBlock_getUserUnits_doc},
    {"getVectorInstDefs",(PyCFunction)oaBlock_getVectorInstDefs,METH_VARARGS,oaBlock_getVectorInstDefs_doc},
    {"getVectorInstDefsIter",(PyCFunction)oaBlock_getVectorInstDefsIter,METH_VARARGS,oaBlock_getVectorInstDefsIter_doc},
    {"getViaHeaders",(PyCFunction)oaBlock_getViaHeaders,METH_VARARGS,oaBlock_getViaHeaders_doc},
    {"getViaHeadersIter",(PyCFunction)oaBlock_getViaHeadersIter,METH_VARARGS,oaBlock_getViaHeadersIter_doc},
    {"getVias",(PyCFunction)oaBlock_getVias,METH_VARARGS,oaBlock_getVias_doc},
    {"getViasIter",(PyCFunction)oaBlock_getViasIter,METH_VARARGS,oaBlock_getViasIter_doc},
    {"hasConnectivity",(PyCFunction)oaBlock_hasConnectivity,METH_VARARGS,oaBlock_hasConnectivity_doc},
    {"hasDefaultConstraintGroup",(PyCFunction)oaBlock_hasDefaultConstraintGroup,METH_VARARGS,oaBlock_hasDefaultConstraintGroup_doc},
    {"hasGlobalNet",(PyCFunction)oaBlock_hasGlobalNet,METH_VARARGS,oaBlock_hasGlobalNet_doc},
    {"hasMultiBitNet",(PyCFunction)oaBlock_hasMultiBitNet,METH_VARARGS,oaBlock_hasMultiBitNet_doc},
    {"hasMultiBitTerm",(PyCFunction)oaBlock_hasMultiBitTerm,METH_VARARGS,oaBlock_hasMultiBitTerm_doc},
    {"hasMultiTermNet",(PyCFunction)oaBlock_hasMultiTermNet,METH_VARARGS,oaBlock_hasMultiTermNet_doc},
    {"initForRegionQuery",(PyCFunction)oaBlock_initForRegionQuery,METH_VARARGS,oaBlock_initForRegionQuery_doc},
    {"isVisibleToModule",(PyCFunction)oaBlock_isVisibleToModule,METH_VARARGS,oaBlock_isVisibleToModule_doc},
    {"setEEQMaster",(PyCFunction)oaBlock_setEEQMaster,METH_VARARGS,oaBlock_setEEQMaster_doc},
    {"setSitePattern",(PyCFunction)oaBlock_setSitePattern,METH_VARARGS,oaBlock_setSitePattern_doc},
    {"setSymmetry",(PyCFunction)oaBlock_setSymmetry,METH_VARARGS,oaBlock_setSymmetry_doc},
    {"setVisibleToModule",(PyCFunction)oaBlock_setVisibleToModule,METH_VARARGS,oaBlock_setVisibleToModule_doc},
    {"isNull",(PyCFunction)oaBlock_tp_isNull,METH_VARARGS,oaBlock_isNull_doc},
    {"assign",(PyCFunction)oaBlock_tp_assign,METH_VARARGS,oaBlock_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlock_doc[] = 
"Class: oaBlock\n"
"  The oaBlock class is a container for the physical implementation of a design. There is at most one oaBlock object per design which contains all the figures for its design. An oaBlock also contains the physical netlist in the form of oaInst and oaNet objects.\n"
"  The oaBlock class can be observed by deriving from\n"
"Constructors:\n"
"  Paramegers: (oaBlock)\n"
"    Calls: (const oaBlock&)\n"
"    Signature: oaBlock||cref-oaBlock,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBlock_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBlock",
    sizeof(PyoaBlockObject),
    0,
    (destructor)oaBlock_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBlock_tp_compare,	/* tp_compare */
    (reprfunc)oaBlock_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBlock_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBlock_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaBlockObject_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBlock_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlock_static_create_doc[] = 
"Class: oaBlock, Function: create\n"
"  Paramegers: (oaDesign)\n"
"    Calls: oaBlock* create(const oaDesign* design)\n"
"    Signature: create|ptr-oaBlock|cptr-oaDesign,simple-oaBoolean,\n"
"    oaBlock::create\n"
"    This function creates the top block in the specified design. The visibleToModule argument specifies whether the block data in the design is to be visible to the module domain or not. Note! It is possible to specify when a creating a connectivity object whether or not that object is visible to the module domain. If the block is visible to the module domain, a top module will be created if it does not, or the existing top module will be set to be visible to block. Exceptions are thrown if the top block already exists, or if is tries to create a block which is not visible to module domain in a design with module, or if there's a conflict on the names with the existing modules.\n"
"    design\n"
"    The design in which to create the block.\n"
"    visibleToModule\n"
"    If true, the block data in this design is visible to the module domain.\n"
"    oacTopBlockAlreadyExists\n"
"    oacCannotCreateBlockOnlyInModuleDesign\n"
"    oacModuleExists\n"
"  Paramegers: (oaDesign,oaBoolean)\n"
"    Calls: oaBlock* create(const oaDesign* design,oaBoolean visibleToModule)\n"
"    Signature: create|ptr-oaBlock|cptr-oaDesign,simple-oaBoolean,\n"
"    oaBlock::create\n"
"    This function creates the top block in the specified design. The visibleToModule argument specifies whether the block data in the design is to be visible to the module domain or not. Note! It is possible to specify when a creating a connectivity object whether or not that object is visible to the module domain. If the block is visible to the module domain, a top module will be created if it does not, or the existing top module will be set to be visible to block. Exceptions are thrown if the top block already exists, or if is tries to create a block which is not visible to module domain in a design with module, or if there's a conflict on the names with the existing modules.\n"
"    design\n"
"    The design in which to create the block.\n"
"    visibleToModule\n"
"    If true, the block data in this design is visible to the module domain.\n"
"    oacTopBlockAlreadyExists\n"
"    oacCannotCreateBlockOnlyInModuleDesign\n"
"    oacModuleExists\n"
;

static PyObject*
oaBlock_static_create(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaDesign)
    {
        PyParamoaDesign p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaDesign_Convert,&p1)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            oaBlockp result= (oaBlock::create(p1.Data()));
            return PyoaBlock_FromoaBlock(result);
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBoolean)
    {
        PyParamoaDesign p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            oaBlockp result= (oaBlock::create(p1.Data(),p2.Data()));
            return PyoaBlock_FromoaBlock(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlock, function: create, Choices are:\n"
        "    (oaDesign)\n"
        "    (oaDesign,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBlock_staticmethodlist[] = {
    {"static_create",(PyCFunction)oaBlock_static_create,METH_VARARGS,oaBlock_static_create_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBlock_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBlock_Type)<0) {
      printf("** PyType_Ready failed for: oaBlock\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBlock",
           (PyObject*)(&PyoaBlock_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBlock\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBlock_Type.tp_dict;
    for(method=oaBlock_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockDomainVisibility
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBlockDomainVisibility_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBlockDomainVisibility_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBlockDomainVisibilityObject* self = (PyoaBlockDomainVisibilityObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBlockDomainVisibilityEnum)
    {
        PyParamoaBlockDomainVisibilityEnum p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBlockDomainVisibilityEnum_Convert,&p1)) {
            self->value =  new oaBlockDomainVisibility(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            self->value =  new oaBlockDomainVisibility(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaBlockDomainVisibility)
    {
        PyParamoaBlockDomainVisibility p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBlockDomainVisibility_Convert,&p1)) {
            self->value= new oaBlockDomainVisibility(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBlockDomainVisibility, Choices are:\n"
        "    (oaBlockDomainVisibilityEnum)\n"
        "    (oaString)\n"
        "    (oaBlockDomainVisibility)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBlockDomainVisibility_tp_dealloc(PyoaBlockDomainVisibilityObject* self)
{
    if (!self->borrow) {
        delete (self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBlockDomainVisibility_tp_repr(PyObject *ob)
{
    PyParamoaBlockDomainVisibility value;
    int convert_status=PyoaBlockDomainVisibility_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;
    oaString sresult(value.DataCall()->getName());

    char addr[45];
    sprintf(addr,DISPLAY_FORMAT,POINTER_AS_DISPLAY(value.DataCall()));
    oaString buffer;
    buffer+=oaString("<oaBlockDomainVisibility::");
    buffer+=oaString(addr);
    buffer+=oaString("::");
    buffer+=oaString(sresult);
    buffer+=oaString(">");
    result=PyString_FromString((char*)(const char*)buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBlockDomainVisibility_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBlockDomainVisibility v1;
    PyParamoaBlockDomainVisibility v2;
    int convert_status1=PyoaBlockDomainVisibility_Convert(ob1,&v1);
    int convert_status2=PyoaBlockDomainVisibility_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBlockDomainVisibility_Convert(PyObject* ob,PyParamoaBlockDomainVisibility* result)
{
    if (ob == NULL) return 1;
    if (PyoaBlockDomainVisibility_Check(ob)) {
        result->SetData(  ((PyoaBlockDomainVisibilityObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockDomainVisibility Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockDomainVisibility_FromoaBlockDomainVisibility(oaBlockDomainVisibility* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaBlockDomainVisibility_Type.tp_alloc(&PyoaBlockDomainVisibility_Type,0);
        if (bself == NULL) return bself;
        PyoaBlockDomainVisibilityObject* self = (PyoaBlockDomainVisibilityObject*)bself;
        self->value =  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockDomainVisibility_getName_doc[] = 
"Class: oaBlockDomainVisibility, Function: getName\n"
"  Paramegers: ()\n"
"    Calls: const oaString& getName() const\n"
"    Signature: getName|cref-oaString|\n"
"    BrowseData: 1\n"
"    This function returns the name string associated with the encapsulated #oaBlockDomainVisibilityEnum object.\n"
;

static PyObject*
oaBlockDomainVisibility_getName(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockDomainVisibility data;
    int convert_status=PyoaBlockDomainVisibility_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockDomainVisibilityObject* self=(PyoaBlockDomainVisibilityObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaString result= (data.DataCall()->getName());
        return PyoaString_FromoaString(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockDomainVisibility_oaBlockDomainVisibilityEnum_doc[] = 
"Class: oaBlockDomainVisibility, Function: oaBlockDomainVisibilityEnum\n"
"  Paramegers: ()\n"
"    Calls: oaBlockDomainVisibilityEnum oaBlockDomainVisibilityEnum() const\n"
"    Signature: operator oaBlockDomainVisibilityEnum|simple-oaBlockDomainVisibilityEnum|\n"
"    BrowseData: 1\n"
"    This operator casts this oaBlockDomainVisibility object into the corresponding #oaBlockDomainVisibilityEnum value.\n"
;

static PyObject*
oaBlockDomainVisibility_oaBlockDomainVisibilityEnum(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockDomainVisibility data;
    int convert_status=PyoaBlockDomainVisibility_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockDomainVisibilityObject* self=(PyoaBlockDomainVisibilityObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockDomainVisibilityEnum result= (data.DataCall()->operator oaBlockDomainVisibilityEnum());
        return PyoaBlockDomainVisibilityEnum_FromoaBlockDomainVisibilityEnum(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaBlockDomainVisibility_assign_doc[] = 
"Class: oaBlockDomainVisibility, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBlockDomainVisibility_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBlockDomainVisibility data;
  int convert_status=PyoaBlockDomainVisibility_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBlockDomainVisibility p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBlockDomainVisibility_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBlockDomainVisibility_methodlist[] = {
    {"getName",(PyCFunction)oaBlockDomainVisibility_getName,METH_VARARGS,oaBlockDomainVisibility_getName_doc},
    {"oaBlockDomainVisibilityEnum",(PyCFunction)oaBlockDomainVisibility_oaBlockDomainVisibilityEnum,METH_VARARGS,oaBlockDomainVisibility_oaBlockDomainVisibilityEnum_doc},
    {"assign",(PyCFunction)oaBlockDomainVisibility_tp_assign,METH_VARARGS,oaBlockDomainVisibility_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockDomainVisibility_doc[] = 
"Class: oaBlockDomainVisibility\n"
"  The oaBlockDomainVisibility class is an enum wrapper class that can indicate how an object in the block domain relates to objects in the module domain.\n"
"  See Enum Wrappers in the Programmers Guide for a discussion of enum wrappers.\n"
"  oaBlockDomainVisibilityEnum\n"
"Constructors:\n"
"  Paramegers: (oaBlockDomainVisibilityEnum)\n"
"    Calls: oaBlockDomainVisibility(oaBlockDomainVisibilityEnum valueIn)\n"
"    Signature: oaBlockDomainVisibility||simple-oaBlockDomainVisibilityEnum,\n"
"    This function constructs an instance of an oaBlockDomainVisibility class using the specified #oaBlockDomainVisibilityEnum value.\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBlockDomainVisibility(const oaString& name)\n"
"    Signature: oaBlockDomainVisibility||cref-oaString,\n"
"    This function constructs an instance of an oaBlockDomainVisibility class using the #oaBlockDomainVisibilityEnum associated with the specified string name . This name must be defined in the legal set of names associated with #oaBlockDomainVisibilityEnum.\n"
"    oacInvalidBlockDomainVisibilityName\n"
"  Paramegers: (oaBlockDomainVisibility)\n"
"    Calls: (const oaBlockDomainVisibility&)\n"
"    Signature: oaBlockDomainVisibility||cref-oaBlockDomainVisibility,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBlockDomainVisibility_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBlockDomainVisibility",
    sizeof(PyoaBlockDomainVisibilityObject),
    0,
    (destructor)oaBlockDomainVisibility_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBlockDomainVisibility_tp_compare,	/* tp_compare */
    (reprfunc)oaBlockDomainVisibility_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBlockDomainVisibility_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBlockDomainVisibility_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    0,					/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBlockDomainVisibility_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBlockDomainVisibility_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBlockDomainVisibility_Type)<0) {
      printf("** PyType_Ready failed for: oaBlockDomainVisibility\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBlockDomainVisibility",
           (PyObject*)(&PyoaBlockDomainVisibility_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBlockDomainVisibility\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockDomainVisibilityEnum
// ==================================================================

// ------------------------------------------------------------------

int
PyoaBlockDomainVisibilityEnum_Convert(PyObject* ob,PyParamoaBlockDomainVisibilityEnum* result)
{
    if (ob == NULL) return 1;
    if (PyString_Check(ob)) {
        char* str=PyString_AsString(ob);
        if (strcasecmp(str,"oacInheritFromTopBlock")==0) { result->SetData(oacInheritFromTopBlock); return 1;}
        if (strcasecmp(str,"oacExcludeFromModuleDomain")==0) { result->SetData(oacExcludeFromModuleDomain); return 1;}
    }            
    if (PyInt_Check(ob)) {
        long val=PyInt_AsLong(ob);
        result->SetData((oaBlockDomainVisibilityEnum)val);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockDomainVisibilityEnum Failed");
    return 0;
}
// ------------------------------------------------------------------

PyObject* PyoaBlockDomainVisibilityEnum_FromoaBlockDomainVisibilityEnum(oaBlockDomainVisibilityEnum ob)
{
    if (ob==oacInheritFromTopBlock) return PyString_FromString("oacInheritFromTopBlock");
    if (ob==oacExcludeFromModuleDomain) return PyString_FromString("oacExcludeFromModuleDomain");

    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
//  Enum Typecast function:
// ------------------------------------------------------------------

static PyObject*
PyoaBlockDomainVisibilityEnum_TypeFunction(PyObject* mod,PyObject* args)
{
    int v;
    oaBlockDomainVisibilityEnum e;
    if (PyArg_ParseTuple(args,(char*)"i",&v)) {
       return PyoaBlockDomainVisibilityEnum_FromoaBlockDomainVisibilityEnum(oaBlockDomainVisibilityEnum(v));
    }
    PyErr_Clear();
    if (PyArg_ParseTuple(args,(char*)"O&",&PyoaBlockDomainVisibilityEnum_Convert,&e)) {
       return PyInt_FromLong(long(e));
    }
    return NULL;
}
static char oaBlockDomainVisibilityEnum_doc[] =
"Type convert function for enum: oaBlockDomainVisibilityEnum";
                               
static PyMethodDef PyoaBlockDomainVisibilityEnum_method =
  {"oaBlockDomainVisibilityEnum",(PyCFunction)PyoaBlockDomainVisibilityEnum_TypeFunction,METH_VARARGS,oaBlockDomainVisibilityEnum_doc};
  

// ------------------------------------------------------------------
//  Enum Init:
// ------------------------------------------------------------------

int
PyoaBlockDomainVisibilityEnum_TypeInit(PyObject* mod_dict)
{
    // Put Enum values in Dictionary
    PyObject* value;
    value=PyString_FromString("oacInheritFromTopBlock");
    PyDict_SetItemString(mod_dict,"oacInheritFromTopBlock",value);
    Py_DECREF(value);
    value=PyString_FromString("oacExcludeFromModuleDomain");
    PyDict_SetItemString(mod_dict,"oacExcludeFromModuleDomain",value);
    Py_DECREF(value);

    // Put Enum name function in Dictionary
    value=PyCFunction_New(&PyoaBlockDomainVisibilityEnum_method,NULL);
    if (PyDict_SetItemString(mod_dict,"oaBlockDomainVisibilityEnum",value)!=0) {
    Py_DECREF(value);
        printf("** Failed to add enum function to module dictionary for: oaBlockDomainVisibilityEnum\n");
        return -1;
    }
    Py_DECREF(value);
    return 0;
}

/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockModTypeEnum
// ==================================================================

// ------------------------------------------------------------------

int
PyoaBlockModTypeEnum_Convert(PyObject* ob,PyParamoaBlockModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyString_Check(ob)) {
        char* str=PyString_AsString(ob);
        if (strcasecmp(str,"oacSetSymmetryBlockModType")==0) { result->SetData(oacSetSymmetryBlockModType); return 1;}
        if (strcasecmp(str,"oacSetEEQMasterBlockModType")==0) { result->SetData(oacSetEEQMasterBlockModType); return 1;}
        if (strcasecmp(str,"oacSetSitePatternBlockModType")==0) { result->SetData(oacSetSitePatternBlockModType); return 1;}
        if (strcasecmp(str,"oacSetDefaultConstraintGroupBlockModType")==0) { result->SetData(oacSetDefaultConstraintGroupBlockModType); return 1;}
        if (strcasecmp(str,"oacSetVisibleToModuleBlockModType")==0) { result->SetData(oacSetVisibleToModuleBlockModType); return 1;}
    }            
    if (PyInt_Check(ob)) {
        long val=PyInt_AsLong(ob);
        result->SetData((oaBlockModTypeEnum)val);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------

PyObject* PyoaBlockModTypeEnum_FromoaBlockModTypeEnum(oaBlockModTypeEnum ob)
{
    if (ob==oacSetSymmetryBlockModType) return PyString_FromString("oacSetSymmetryBlockModType");
    if (ob==oacSetEEQMasterBlockModType) return PyString_FromString("oacSetEEQMasterBlockModType");
    if (ob==oacSetSitePatternBlockModType) return PyString_FromString("oacSetSitePatternBlockModType");
    if (ob==oacSetDefaultConstraintGroupBlockModType) return PyString_FromString("oacSetDefaultConstraintGroupBlockModType");
    if (ob==oacSetVisibleToModuleBlockModType) return PyString_FromString("oacSetVisibleToModuleBlockModType");

    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
//  Enum Typecast function:
// ------------------------------------------------------------------

static PyObject*
PyoaBlockModTypeEnum_TypeFunction(PyObject* mod,PyObject* args)
{
    int v;
    oaBlockModTypeEnum e;
    if (PyArg_ParseTuple(args,(char*)"i",&v)) {
       return PyoaBlockModTypeEnum_FromoaBlockModTypeEnum(oaBlockModTypeEnum(v));
    }
    PyErr_Clear();
    if (PyArg_ParseTuple(args,(char*)"O&",&PyoaBlockModTypeEnum_Convert,&e)) {
       return PyInt_FromLong(long(e));
    }
    return NULL;
}
static char oaBlockModTypeEnum_doc[] =
"Type convert function for enum: oaBlockModTypeEnum";
                               
static PyMethodDef PyoaBlockModTypeEnum_method =
  {"oaBlockModTypeEnum",(PyCFunction)PyoaBlockModTypeEnum_TypeFunction,METH_VARARGS,oaBlockModTypeEnum_doc};
  

// ------------------------------------------------------------------
//  Enum Init:
// ------------------------------------------------------------------

int
PyoaBlockModTypeEnum_TypeInit(PyObject* mod_dict)
{
    // Put Enum values in Dictionary
    PyObject* value;
    value=PyString_FromString("oacSetSymmetryBlockModType");
    PyDict_SetItemString(mod_dict,"oacSetSymmetryBlockModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetEEQMasterBlockModType");
    PyDict_SetItemString(mod_dict,"oacSetEEQMasterBlockModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetSitePatternBlockModType");
    PyDict_SetItemString(mod_dict,"oacSetSitePatternBlockModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetDefaultConstraintGroupBlockModType");
    PyDict_SetItemString(mod_dict,"oacSetDefaultConstraintGroupBlockModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetVisibleToModuleBlockModType");
    PyDict_SetItemString(mod_dict,"oacSetVisibleToModuleBlockModType",value);
    Py_DECREF(value);

    // Put Enum name function in Dictionary
    value=PyCFunction_New(&PyoaBlockModTypeEnum_method,NULL);
    if (PyDict_SetItemString(mod_dict,"oaBlockModTypeEnum",value)!=0) {
    Py_DECREF(value);
        printf("** Failed to add enum function to module dictionary for: oaBlockModTypeEnum\n");
        return -1;
    }
    Py_DECREF(value);
    return 0;
}

/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockObject
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBlockObject_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBlockObject_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBlockObjectObject* self = (PyoaBlockObjectObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBlockObject)
    {
        PyParamoaBlockObject p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBlockObject_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBlockObject, Choices are:\n"
        "    (oaBlockObject)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBlockObject_tp_dealloc(PyoaBlockObjectObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBlockObject_tp_repr(PyObject *ob)
{
    PyParamoaBlockObject value;
    int convert_status=PyoaBlockObject_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[35];
    sprintf(buffer,"<oaBlockObject::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBlockObject_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBlockObject v1;
    PyParamoaBlockObject v2;
    int convert_status1=PyoaBlockObject_Convert(ob1,&v1);
    int convert_status2=PyoaBlockObject_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBlockObject_Convert(PyObject* ob,PyParamoaBlockObject* result)
{
    if (ob == NULL) return 1;
    if (PyoaBlockObject_Check(ob)) {
        result->SetData( (oaBlockObject**) ((PyoaBlockObjectObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockObject Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockObject_FromoaBlockObject(oaBlockObject** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBlockObject* data=*value;
        if (data->isViaHeader()) return PyoaViaHeader_FromoaViaHeader((oaViaHeader**)value,borrow,lock);
        if (data->getType()==oacRowHeaderType) return PyoaRowHeader_FromoaRowHeader((oaRowHeader**)value,borrow,lock);
        if (data->getType()==oacVectorInstDefType) return PyoaVectorInstDef_FromoaVectorInstDef((oaVectorInstDef**)value,borrow,lock);
        if (data->getType()==oacFigGroupMemType) return PyoaFigGroupMem_FromoaFigGroupMem((oaFigGroupMem**)value,borrow,lock);
        if (data->getType()==oacScanChainSetType) return PyoaScanChainSet_FromoaScanChainSet((oaScanChainSet**)value,borrow,lock);
        if (data->getType()==oacBusTermDefType) return PyoaBusTermDef_FromoaBusTermDef((oaBusTermDef**)value,borrow,lock);
        if (data->getType()==oacInstTermType) return PyoaInstTerm_FromoaInstTerm((oaInstTerm**)value,borrow,lock);
        if (data->getType()==oacClusterType) return PyoaCluster_FromoaCluster((oaCluster**)value,borrow,lock);
        if (data->getType()==oacLPPHeaderType) return PyoaLPPHeader_FromoaLPPHeader((oaLPPHeader**)value,borrow,lock);
        if (data->getType()==oacTrackPatternType) return PyoaTrackPattern_FromoaTrackPattern((oaTrackPattern**)value,borrow,lock);
        if (data->getType()==oacScanChainInstType) return PyoaScanChainInst_FromoaScanChainInst((oaScanChainInst**)value,borrow,lock);
        if (data->getType()==oacInstHeaderType) return PyoaInstHeader_FromoaInstHeader((oaInstHeader**)value,borrow,lock);
        if (data->getType()==oacBlockType) return PyoaBlock_FromoaBlock((oaBlock**)value,borrow,lock);
        if (data->isNet()) return PyoaNet_FromoaNet((oaNet**)value,borrow,lock);
        if (data->isTerm()) return PyoaTerm_FromoaTerm((oaTerm**)value,borrow,lock);
        if (data->getType()==oacCMapType) return PyoaCMap_FromoaCMap((oaCMap**)value,borrow,lock);
        if (data->getType()==oacBusNetDefType) return PyoaBusNetDef_FromoaBusNetDef((oaBusNetDef**)value,borrow,lock);
        if (data->getType()==oacGCellPatternType) return PyoaGCellPattern_FromoaGCellPattern((oaGCellPattern**)value,borrow,lock);
        if (data->getType()==oacPinType) return PyoaPin_FromoaPin((oaPin**)value,borrow,lock);
        if (data->isOccShape()) return PyoaOccShape_FromoaOccShape((oaOccShape**)value,borrow,lock);
        if (data->getType()==oacScanChainType) return PyoaScanChain_FromoaScanChain((oaScanChain**)value,borrow,lock);
        if (data->isFig()) return PyoaFig_FromoaFig((oaFig**)value,borrow,lock);
        if (data->getType()==oacLayerHeaderType) return PyoaLayerHeader_FromoaLayerHeader((oaLayerHeader**)value,borrow,lock);
        if (data->isAssignment()) return PyoaAssignment_FromoaAssignment((oaAssignment**)value,borrow,lock);
        if (data->isConnectDef()) return PyoaConnectDef_FromoaConnectDef((oaConnectDef**)value,borrow,lock);
        PyObject* bself = PyoaBlockObject_Type.tp_alloc(&PyoaBlockObject_Type,0);
        if (bself == NULL) return bself;
        PyoaBlockObjectObject* self = (PyoaBlockObjectObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockObject_FromoaBlockObject(oaBlockObject* data)
{
    if (data) {
        if (data->isViaHeader()) return PyoaViaHeader_FromoaViaHeader((oaViaHeader*)data);
        if (data->getType()==oacRowHeaderType) return PyoaRowHeader_FromoaRowHeader((oaRowHeader*)data);
        if (data->getType()==oacVectorInstDefType) return PyoaVectorInstDef_FromoaVectorInstDef((oaVectorInstDef*)data);
        if (data->getType()==oacFigGroupMemType) return PyoaFigGroupMem_FromoaFigGroupMem((oaFigGroupMem*)data);
        if (data->getType()==oacScanChainSetType) return PyoaScanChainSet_FromoaScanChainSet((oaScanChainSet*)data);
        if (data->getType()==oacBusTermDefType) return PyoaBusTermDef_FromoaBusTermDef((oaBusTermDef*)data);
        if (data->getType()==oacInstTermType) return PyoaInstTerm_FromoaInstTerm((oaInstTerm*)data);
        if (data->getType()==oacClusterType) return PyoaCluster_FromoaCluster((oaCluster*)data);
        if (data->getType()==oacLPPHeaderType) return PyoaLPPHeader_FromoaLPPHeader((oaLPPHeader*)data);
        if (data->getType()==oacTrackPatternType) return PyoaTrackPattern_FromoaTrackPattern((oaTrackPattern*)data);
        if (data->getType()==oacScanChainInstType) return PyoaScanChainInst_FromoaScanChainInst((oaScanChainInst*)data);
        if (data->getType()==oacInstHeaderType) return PyoaInstHeader_FromoaInstHeader((oaInstHeader*)data);
        if (data->getType()==oacBlockType) return PyoaBlock_FromoaBlock((oaBlock*)data);
        if (data->isNet()) return PyoaNet_FromoaNet((oaNet*)data);
        if (data->isTerm()) return PyoaTerm_FromoaTerm((oaTerm*)data);
        if (data->getType()==oacCMapType) return PyoaCMap_FromoaCMap((oaCMap*)data);
        if (data->getType()==oacBusNetDefType) return PyoaBusNetDef_FromoaBusNetDef((oaBusNetDef*)data);
        if (data->getType()==oacGCellPatternType) return PyoaGCellPattern_FromoaGCellPattern((oaGCellPattern*)data);
        if (data->getType()==oacPinType) return PyoaPin_FromoaPin((oaPin*)data);
        if (data->isOccShape()) return PyoaOccShape_FromoaOccShape((oaOccShape*)data);
        if (data->getType()==oacScanChainType) return PyoaScanChain_FromoaScanChain((oaScanChain*)data);
        if (data->isFig()) return PyoaFig_FromoaFig((oaFig*)data);
        if (data->getType()==oacLayerHeaderType) return PyoaLayerHeader_FromoaLayerHeader((oaLayerHeader*)data);
        if (data->isAssignment()) return PyoaAssignment_FromoaAssignment((oaAssignment*)data);
        if (data->isConnectDef()) return PyoaConnectDef_FromoaConnectDef((oaConnectDef*)data);
       PyObject* bself = PyoaBlockObject_Type.tp_alloc(&PyoaBlockObject_Type,0);
       if (bself == NULL) return bself;
       PyoaBlockObjectObject* self = (PyoaBlockObjectObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockObject_getBlock_doc[] = 
"Class: oaBlockObject, Function: getBlock\n"
"  Paramegers: ()\n"
"    Calls: oaBlock* getBlock()\n"
"    Signature: getBlock|ptr-oaBlock|\n"
"    BrowseData: 1\n"
"    This function returns the oaBlock that contains this object.\n"
;

static PyObject*
oaBlockObject_getBlock(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockp result= (data.DataCall()->getBlock());
        return PyoaBlock_FromoaBlock(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_getMarkersOwnedBy_doc[] = 
"Class: oaBlockObject, Function: getMarkersOwnedBy\n"
"  Paramegers: ()\n"
"    Calls: oaCollection_oaMarker_oaBlockObject getMarkersOwnedBy() const\n"
"    Signature: getMarkersOwnedBy|simple-oaCollection_oaMarker_oaBlockObject|\n"
"    BrowseData: 1\n"
"    This function returns a collection of markers in this block.\n"
;

static PyObject*
oaBlockObject_getMarkersOwnedBy(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaCollection_oaMarker_oaBlockObject* result= new oaCollection_oaMarker_oaBlockObject(data.DataCall()->getMarkersOwnedBy());
        return PyoaCollection_oaMarker_oaBlockObject_FromoaCollection_oaMarker_oaBlockObject(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_getMarkersOwnedByIter_doc[] = 
"Class: oaBlockObject, Function: getMarkersOwnedByIter\n"
"  Paramegers: ()\n"
"    Calls: oaIter_oaMarker getMarkersOwnedByIter() const\n"
"    Signature: getMarkersOwnedByIter|simple-oaIter_oaMarker|\n"
"    BrowseData: 1\n"
"    This function returns an Iterator over the following collection: This function returns a collection of markers in this block.\n"
;

static PyObject*
oaBlockObject_getMarkersOwnedByIter(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaIter_oaMarker* result= new oaIter_oaMarker(data.DataCall()->getMarkersOwnedBy());
        return PyoaIter_oaMarker_FromoaIter_oaMarker(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isAssignment_doc[] = 
"Class: oaBlockObject, Function: isAssignment\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isAssignment() const\n"
"    Signature: isAssignment|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaAssignment class. The function returns a boolean value of true if the oaBlockObject is an oaAssignment object.\n"
;

static PyObject*
oaBlockObject_isAssignment(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isAssignment());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isBitInst_doc[] = 
"Class: oaBlockObject, Function: isBitInst\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isBitInst() const\n"
"    Signature: isBitInst|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaBitInst class. The function returns a boolean value of true if the oaBlockObject is an oaBitInst object.\n"
;

static PyObject*
oaBlockObject_isBitInst(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isBitInst());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isBitNet_doc[] = 
"Class: oaBlockObject, Function: isBitNet\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isBitNet() const\n"
"    Signature: isBitNet|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaBitNet class. The function returns a boolean value of true if the oaBlockObject is an oaBitNet object.\n"
;

static PyObject*
oaBlockObject_isBitNet(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isBitNet());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isBitTerm_doc[] = 
"Class: oaBlockObject, Function: isBitTerm\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isBitTerm() const\n"
"    Signature: isBitTerm|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaBitTerm class. The function returns a boolean value of true if the oaBlockObject is an oaBitTerm object.\n"
;

static PyObject*
oaBlockObject_isBitTerm(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isBitTerm());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isBlockage_doc[] = 
"Class: oaBlockObject, Function: isBlockage\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isBlockage() const\n"
"    Signature: isBlockage|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaBlockage class. This function returns a boolean value of true if the oaBlockObject is an oaBlockage object.\n"
;

static PyObject*
oaBlockObject_isBlockage(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isBlockage());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isBoundary_doc[] = 
"Class: oaBlockObject, Function: isBoundary\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isBoundary() const\n"
"    Signature: isBoundary|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaBoundary class. This function returns a boolean value of true if the oaBlockObject is an oaBoundary object.\n"
;

static PyObject*
oaBlockObject_isBoundary(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isBoundary());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isConnFig_doc[] = 
"Class: oaBlockObject, Function: isConnFig\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isConnFig() const\n"
"    Signature: isConnFig|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaConnFig class. The function returns a boolean value of true if the oaBlockObject is a connectivity figure.\n"
;

static PyObject*
oaBlockObject_isConnFig(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isConnFig());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isConnectDef_doc[] = 
"Class: oaBlockObject, Function: isConnectDef\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isConnectDef() const\n"
"    Signature: isConnectDef|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaConnectDef class. The function returns a boolean value of true if the oaBlockObject is an oaConnectDef .\n"
;

static PyObject*
oaBlockObject_isConnectDef(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isConnectDef());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isFig_doc[] = 
"Class: oaBlockObject, Function: isFig\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isFig() const\n"
"    Signature: isFig|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaFig class. The function returns a boolean value of true if the oaBlockObject is a figure.\n"
;

static PyObject*
oaBlockObject_isFig(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isFig());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isInst_doc[] = 
"Class: oaBlockObject, Function: isInst\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isInst() const\n"
"    Signature: isInst|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaInst class. The function returns a boolean value of true if the oaBlockObject is an instance.\n"
;

static PyObject*
oaBlockObject_isInst(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isInst());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isNet_doc[] = 
"Class: oaBlockObject, Function: isNet\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isNet() const\n"
"    Signature: isNet|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaNet class. The function returns a boolean value of true if the oaBlockObject is a net.\n"
;

static PyObject*
oaBlockObject_isNet(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isNet());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isOccShape_doc[] = 
"Class: oaBlockObject, Function: isOccShape\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isOccShape() const\n"
"    Signature: isOccShape|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaOccShape class. The function returns a boolean value of true if the oaBlockObject is an occShape.\n"
;

static PyObject*
oaBlockObject_isOccShape(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isOccShape());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isOccTextDisplay_doc[] = 
"Class: oaBlockObject, Function: isOccTextDisplay\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isOccTextDisplay() const\n"
"    Signature: isOccTextDisplay|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaOccTextDisplay class. The function returns a boolean value of true if the oaBlockObject is an occTextDisplay.\n"
;

static PyObject*
oaBlockObject_isOccTextDisplay(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isOccTextDisplay());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isPinFig_doc[] = 
"Class: oaBlockObject, Function: isPinFig\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isPinFig() const\n"
"    Signature: isPinFig|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaPinFig class. The function returns a boolean value of true if the oaBlockObject is a pin figure.\n"
;

static PyObject*
oaBlockObject_isPinFig(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isPinFig());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isRef_doc[] = 
"Class: oaBlockObject, Function: isRef\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isRef() const\n"
"    Signature: isRef|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaRef class. The function returns a boolean value of true if the oaBlockObject is an oaRef .\n"
;

static PyObject*
oaBlockObject_isRef(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isRef());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isShape_doc[] = 
"Class: oaBlockObject, Function: isShape\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isShape() const\n"
"    Signature: isShape|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaShape class. The function returns a boolean value of true if the oaBlockObject is a shape.\n"
;

static PyObject*
oaBlockObject_isShape(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isShape());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isTerm_doc[] = 
"Class: oaBlockObject, Function: isTerm\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isTerm() const\n"
"    Signature: isTerm|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaTerm class. The function returns a boolean value of true if the oaBlockObject is a terminal.\n"
;

static PyObject*
oaBlockObject_isTerm(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isTerm());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isTextDisplay_doc[] = 
"Class: oaBlockObject, Function: isTextDisplay\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isTextDisplay() const\n"
"    Signature: isTextDisplay|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaTextDisplay class. The function returns a boolean value of true if the oaBlockObject is a textDisplay object.\n"
;

static PyObject*
oaBlockObject_isTextDisplay(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isTextDisplay());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isVia_doc[] = 
"Class: oaBlockObject, Function: isVia\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isVia() const\n"
"    Signature: isVia|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaVia class. The function returns a boolean value of true if the oaBlockObject is an oaVia .\n"
;

static PyObject*
oaBlockObject_isVia(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isVia());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isViaHeader_doc[] = 
"Class: oaBlockObject, Function: isViaHeader\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isViaHeader() const\n"
"    Signature: isViaHeader|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function determines if this object is an instance of one of the classes derived from the oaViaHeader class. The function returns a boolean value of true if the oaBlockObject is a via header.\n"
;

static PyObject*
oaBlockObject_isViaHeader(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectObject* self=(PyoaBlockObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isViaHeader());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObject_isNull_doc[] =
"Class: oaBlockObject, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBlockObject_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBlockObject data;
    int convert_status=PyoaBlockObject_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBlockObject_assign_doc[] = 
"Class: oaBlockObject, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBlockObject_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBlockObject data;
  int convert_status=PyoaBlockObject_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBlockObject p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBlockObject_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBlockObject_methodlist[] = {
    {"getBlock",(PyCFunction)oaBlockObject_getBlock,METH_VARARGS,oaBlockObject_getBlock_doc},
    {"getMarkersOwnedBy",(PyCFunction)oaBlockObject_getMarkersOwnedBy,METH_VARARGS,oaBlockObject_getMarkersOwnedBy_doc},
    {"getMarkersOwnedByIter",(PyCFunction)oaBlockObject_getMarkersOwnedByIter,METH_VARARGS,oaBlockObject_getMarkersOwnedByIter_doc},
    {"isAssignment",(PyCFunction)oaBlockObject_isAssignment,METH_VARARGS,oaBlockObject_isAssignment_doc},
    {"isBitInst",(PyCFunction)oaBlockObject_isBitInst,METH_VARARGS,oaBlockObject_isBitInst_doc},
    {"isBitNet",(PyCFunction)oaBlockObject_isBitNet,METH_VARARGS,oaBlockObject_isBitNet_doc},
    {"isBitTerm",(PyCFunction)oaBlockObject_isBitTerm,METH_VARARGS,oaBlockObject_isBitTerm_doc},
    {"isBlockage",(PyCFunction)oaBlockObject_isBlockage,METH_VARARGS,oaBlockObject_isBlockage_doc},
    {"isBoundary",(PyCFunction)oaBlockObject_isBoundary,METH_VARARGS,oaBlockObject_isBoundary_doc},
    {"isConnFig",(PyCFunction)oaBlockObject_isConnFig,METH_VARARGS,oaBlockObject_isConnFig_doc},
    {"isConnectDef",(PyCFunction)oaBlockObject_isConnectDef,METH_VARARGS,oaBlockObject_isConnectDef_doc},
    {"isFig",(PyCFunction)oaBlockObject_isFig,METH_VARARGS,oaBlockObject_isFig_doc},
    {"isInst",(PyCFunction)oaBlockObject_isInst,METH_VARARGS,oaBlockObject_isInst_doc},
    {"isNet",(PyCFunction)oaBlockObject_isNet,METH_VARARGS,oaBlockObject_isNet_doc},
    {"isOccShape",(PyCFunction)oaBlockObject_isOccShape,METH_VARARGS,oaBlockObject_isOccShape_doc},
    {"isOccTextDisplay",(PyCFunction)oaBlockObject_isOccTextDisplay,METH_VARARGS,oaBlockObject_isOccTextDisplay_doc},
    {"isPinFig",(PyCFunction)oaBlockObject_isPinFig,METH_VARARGS,oaBlockObject_isPinFig_doc},
    {"isRef",(PyCFunction)oaBlockObject_isRef,METH_VARARGS,oaBlockObject_isRef_doc},
    {"isShape",(PyCFunction)oaBlockObject_isShape,METH_VARARGS,oaBlockObject_isShape_doc},
    {"isTerm",(PyCFunction)oaBlockObject_isTerm,METH_VARARGS,oaBlockObject_isTerm_doc},
    {"isTextDisplay",(PyCFunction)oaBlockObject_isTextDisplay,METH_VARARGS,oaBlockObject_isTextDisplay_doc},
    {"isVia",(PyCFunction)oaBlockObject_isVia,METH_VARARGS,oaBlockObject_isVia_doc},
    {"isViaHeader",(PyCFunction)oaBlockObject_isViaHeader,METH_VARARGS,oaBlockObject_isViaHeader_doc},
    {"isNull",(PyCFunction)oaBlockObject_tp_isNull,METH_VARARGS,oaBlockObject_isNull_doc},
    {"assign",(PyCFunction)oaBlockObject_tp_assign,METH_VARARGS,oaBlockObject_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockObject_doc[] = 
"Class: oaBlockObject\n"
"  The oaBlockObject class is an abstract base class for all physical objects in a design database. For the classes derived from oaBlockObject that are themselves base classes, oaBlockObject has functions to test for membership in that base class.\n"
"Constructors:\n"
"  Paramegers: (oaBlockObject)\n"
"    Calls: (const oaBlockObject&)\n"
"    Signature: oaBlockObject||cref-oaBlockObject,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBlockObject_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBlockObject",
    sizeof(PyoaBlockObjectObject),
    0,
    (destructor)oaBlockObject_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBlockObject_tp_compare,	/* tp_compare */
    (reprfunc)oaBlockObject_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBlockObject_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBlockObject_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaDesignObject_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBlockObject_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBlockObject_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBlockObject_Type)<0) {
      printf("** PyType_Ready failed for: oaBlockObject\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBlockObject",
           (PyObject*)(&PyoaBlockObject_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBlockObject\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockObjectIter
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBlockObjectIter_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBlockObjectIter_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBlockObjectIterObject* self = (PyoaBlockObjectIterObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaCollection_oaBlockObject_oaMarker)
    {
        PyParamoaCollection_oaBlockObject_oaMarker p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaCollection_oaBlockObject_oaMarker_Convert,&p1)) {
            self->value =  new oaBlockObjectIter(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaBlockObjectIter)
    {
        PyParamoaBlockObjectIter p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBlockObjectIter_Convert,&p1)) {
            self->value =  new oaBlockObjectIter(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBlockObjectIter, Choices are:\n"
        "    (oaCollection_oaBlockObject_oaMarker)\n"
        "    (oaBlockObjectIter)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBlockObjectIter_tp_dealloc(PyoaBlockObjectIterObject* self)
{
    if (!self->borrow) {
        delete (self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBlockObjectIter_tp_repr(PyObject *ob)
{
    PyParamoaBlockObjectIter value;
    int convert_status=PyoaBlockObjectIter_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[39];
    sprintf(buffer,"<oaBlockObjectIter::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBlockObjectIter_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBlockObjectIter v1;
    PyParamoaBlockObjectIter v2;
    int convert_status1=PyoaBlockObjectIter_Convert(ob1,&v1);
    int convert_status2=PyoaBlockObjectIter_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
static PyObject*
oaBlockObjectIter_getiter(PyObject *self)
{
    Py_INCREF(self);
    return self;
}

// ------------------------------------------------------------------
static PyObject*
oaBlockObjectIter_iternext(PyObject *self)
{
  try {
    PyParamoaBlockObjectIter ob;
    int convert_status=PyoaBlockObjectIter_Convert(self,&ob);
    assert(convert_status!=0);
    oaBlockObject* result;
    result=ob.DataCall()->getNext();
    if (result==NULL) {
       PyErr_SetObject(PyExc_StopIteration,Py_None);
       return NULL;
    }
    return PyoaBlockObject_FromoaBlockObject(result);
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
int
PyoaBlockObjectIter_Convert(PyObject* ob,PyParamoaBlockObjectIter* result)
{
    if (ob == NULL) return 1;
    if (PyoaBlockObjectIter_Check(ob)) {
        result->SetData(  ((PyoaBlockObjectIterObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockObjectIter Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockObjectIter_FromoaBlockObjectIter(oaBlockObjectIter* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaBlockObjectIter_Type.tp_alloc(&PyoaBlockObjectIter_Type,0);
        if (bself == NULL) return bself;
        PyoaBlockObjectIterObject* self = (PyoaBlockObjectIterObject*)bself;
        self->value =  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockObjectIter_getNext_doc[] = 
"Class: oaBlockObjectIter, Function: getNext\n"
"  Paramegers: ()\n"
"    Calls: oaBlockObject* getNext()\n"
"    Signature: getNext|ptr-oaBlockObject|\n"
"    BrowseData: 1\n"
"    Function getNext\n"
;

static PyObject*
oaBlockObjectIter_getNext(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObjectIter data;
    int convert_status=PyoaBlockObjectIter_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectIterObject* self=(PyoaBlockObjectIterObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockObjectp result= (data.DataCall()->getNext());
        return PyoaBlockObject_FromoaBlockObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObjectIter_next_doc[] = 
"Class: oaBlockObjectIter, Function: next\n"
"  Paramegers: ()\n"
"    Calls: oaBlockObject* next()\n"
"    Signature: next|ptr-oaBlockObject|,\n"
"    BrowseData: 1\n"
"    get next value or raise StopIteration\n"
;

static PyObject*
oaBlockObjectIter_next(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObjectIter data;
    int convert_status=PyoaBlockObjectIter_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectIterObject* self=(PyoaBlockObjectIterObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockObjectp result= (data.DataCall()->getNext());
        if (result==NULL) {
            PyErr_SetObject(PyExc_StopIteration,Py_None);
            return NULL;
        }
        return PyoaBlockObject_FromoaBlockObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockObjectIter_reset_doc[] = 
"Class: oaBlockObjectIter, Function: reset\n"
"  Paramegers: ()\n"
"    Calls: void reset()\n"
"    Signature: reset|void-void|\n"
"    BrowseData: 0\n"
"    Function reset\n"
;

static PyObject*
oaBlockObjectIter_reset(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockObjectIter data;
    int convert_status=PyoaBlockObjectIter_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockObjectIterObject* self=(PyoaBlockObjectIterObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        data.DataCall()->reset();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaBlockObjectIter_assign_doc[] = 
"Class: oaBlockObjectIter, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBlockObjectIter_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBlockObjectIter data;
  int convert_status=PyoaBlockObjectIter_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBlockObjectIter p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBlockObjectIter_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBlockObjectIter_methodlist[] = {
    {"getNext",(PyCFunction)oaBlockObjectIter_getNext,METH_VARARGS,oaBlockObjectIter_getNext_doc},
    {"next",(PyCFunction)oaBlockObjectIter_next,METH_VARARGS,oaBlockObjectIter_next_doc},
    {"reset",(PyCFunction)oaBlockObjectIter_reset,METH_VARARGS,oaBlockObjectIter_reset_doc},
    {"assign",(PyCFunction)oaBlockObjectIter_tp_assign,METH_VARARGS,oaBlockObjectIter_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockObjectIter_doc[] = 
"Class: oaBlockObjectIter\n"
"  Class type oaBlockObjectIter\n"
"Constructors:\n"
"  Paramegers: (oaCollection_oaBlockObject_oaMarker)\n"
"    Calls: oaBlockObjectIter(const oaCollection_oaBlockObject_oaMarker& c)\n"
"    Signature: oaBlockObjectIter||cref-oaCollection_oaBlockObject_oaMarker,\n"
"    Constructor oaBlockObjectIter\n"
"  Paramegers: (oaBlockObjectIter)\n"
"    Calls: oaBlockObjectIter(const oaBlockObjectIter& iter)\n"
"    Signature: oaBlockObjectIter||cref-oaBlockObjectIter,\n"
"    Constructor oaBlockObjectIter\n"
"  Paramegers: (oaBlockObjectIter)\n"
"    Calls: (const oaBlockObjectIter&)\n"
"    Signature: oaBlockObjectIter||cref-oaBlockObjectIter,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBlockObjectIter_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBlockObjectIter",
    sizeof(PyoaBlockObjectIterObject),
    0,
    (destructor)oaBlockObjectIter_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBlockObjectIter_tp_compare,	/* tp_compare */
    (reprfunc)oaBlockObjectIter_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBlockObjectIter_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    (getiterfunc)oaBlockObjectIter_getiter,	/* tp_iter */
    (iternextfunc)oaBlockObjectIter_iternext,	/* tp_iternext */
    oaBlockObjectIter_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    0,					/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBlockObjectIter_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBlockObjectIter_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBlockObjectIter_Type)<0) {
      printf("** PyType_Ready failed for: oaBlockObjectIter\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBlockObjectIter",
           (PyObject*)(&PyoaBlockObjectIter_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBlockObjectIter\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockage
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBlockage_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBlockage_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBlockageObject* self = (PyoaBlockageObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBlockage)
    {
        PyParamoaBlockage p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBlockage_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBlockage, Choices are:\n"
        "    (oaBlockage)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBlockage_tp_dealloc(PyoaBlockageObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBlockage_tp_repr(PyObject *ob)
{
    PyParamoaBlockage value;
    int convert_status=PyoaBlockage_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[32];
    sprintf(buffer,"<oaBlockage::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBlockage_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBlockage v1;
    PyParamoaBlockage v2;
    int convert_status1=PyoaBlockage_Convert(ob1,&v1);
    int convert_status2=PyoaBlockage_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBlockage_Convert(PyObject* ob,PyParamoaBlockage* result)
{
    if (ob == NULL) return 1;
    if (PyoaBlockage_Check(ob)) {
        result->SetData( (oaBlockage**) ((PyoaBlockageObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockage Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockage_FromoaBlockage(oaBlockage** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBlockage* data=*value;
        if (data->getType()==oacAreaBlockageType) return PyoaAreaBlockage_FromoaAreaBlockage((oaAreaBlockage**)value,borrow,lock);
        if (data->getType()==oacLayerHaloType) return PyoaLayerHalo_FromoaLayerHalo((oaLayerHalo**)value,borrow,lock);
        if (data->getType()==oacLayerBlockageType) return PyoaLayerBlockage_FromoaLayerBlockage((oaLayerBlockage**)value,borrow,lock);
        if (data->getType()==oacAreaHaloType) return PyoaAreaHalo_FromoaAreaHalo((oaAreaHalo**)value,borrow,lock);
        PyObject* bself = PyoaBlockage_Type.tp_alloc(&PyoaBlockage_Type,0);
        if (bself == NULL) return bself;
        PyoaBlockageObject* self = (PyoaBlockageObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockage_FromoaBlockage(oaBlockage* data)
{
    if (data) {
        if (data->getType()==oacAreaBlockageType) return PyoaAreaBlockage_FromoaAreaBlockage((oaAreaBlockage*)data);
        if (data->getType()==oacLayerHaloType) return PyoaLayerHalo_FromoaLayerHalo((oaLayerHalo*)data);
        if (data->getType()==oacLayerBlockageType) return PyoaLayerBlockage_FromoaLayerBlockage((oaLayerBlockage*)data);
        if (data->getType()==oacAreaHaloType) return PyoaAreaHalo_FromoaAreaHalo((oaAreaHalo*)data);
       PyObject* bself = PyoaBlockage_Type.tp_alloc(&PyoaBlockage_Type,0);
       if (bself == NULL) return bself;
       PyoaBlockageObject* self = (PyoaBlockageObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockage_getBlockageType_doc[] = 
"Class: oaBlockage, Function: getBlockageType\n"
"  Paramegers: ()\n"
"    Calls: oaBlockageType getBlockageType() const\n"
"    Signature: getBlockageType|simple-oaBlockageType|\n"
"    BrowseData: 1\n"
"    This function returns the type of this blockage. The type determines which kinds of objects are being blocked.\n"
;

static PyObject*
oaBlockage_getBlockageType(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockageType* result= new oaBlockageType(data.DataCall()->getBlockageType());
        return PyoaBlockageType_FromoaBlockageType(result,0,NULL);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_getDensity_doc[] = 
"Class: oaBlockage, Function: getDensity\n"
"  Paramegers: ()\n"
"    Calls: oaFloat getDensity() const\n"
"    Signature: getDensity|simple-oaFloat|\n"
"    BrowseData: 1\n"
"    This function returns the value of the density attribute for this blockage as an integer percentage from 0 to 100. If a density attribute has not been set, the default value of 100 percent is returned.\n"
;

static PyObject*
oaBlockage_getDensity(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaFloat result= (data.DataCall()->getDensity());
        return PyoaFloat_FromoaFloat(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_getNumPoints_doc[] = 
"Class: oaBlockage, Function: getNumPoints\n"
"  Paramegers: ()\n"
"    Calls: oaUInt4 getNumPoints() const\n"
"    Signature: getNumPoints|simple-oaUInt4|\n"
"    BrowseData: 1\n"
"    This function returns the number of points in the point array for this blockage.\n"
;

static PyObject*
oaBlockage_getNumPoints(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaUInt4 result= (data.DataCall()->getNumPoints());
        return PyoaUInt4_FromoaUInt4(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_getOwner_doc[] = 
"Class: oaBlockage, Function: getOwner\n"
"  Paramegers: ()\n"
"    Calls: oaBlockObject* getOwner() const\n"
"    Signature: getOwner|ptr-oaBlockObject|\n"
"    BrowseData: 1\n"
"    This function returns the owner of this blockage.\n"
;

static PyObject*
oaBlockage_getOwner(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockObjectp result= (data.DataCall()->getOwner());
        return PyoaBlockObject_FromoaBlockObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_getPoints_doc[] = 
"Class: oaBlockage, Function: getPoints\n"
"  Paramegers: (oaPointArray)\n"
"    Calls: void getPoints(oaPointArray& points) const\n"
"    Signature: getPoints|void-void|ref-oaPointArray,\n"
"    BrowseData: 0,oaPointArray\n"
"    This function fills out points with the points of this blockage.\n"
"    For halo blockages, the point array is determined by applying each offset to all edges of the corresponding type defined by the pointArray for the owner. For a rectilinear boundary there may be multiple such edges. The left and bottom offsets are subtracted, while the right and bottom offsets are added.\n"
"    When the owner of a halo blockage is an instance, the points in the blockage are calculated from the prBoundary of the instance's master. The instance's transform is included in the points for the halo blockage.\n"
"    When the owner of a halo blockage is a prBoundary, the blockage represents a master-based blockage that is the default for all instances of the master. Master-based blockages are defined within the design for the master, but are used in the design that instantiates the master. The application is responsible for applying the instance's transform to a master-based blockage.\n"
"    For area blockages, the points correspond directly to the point array specified for the blockage.\n"
"    points\n"
"    The point array to fill out\n"
;

static PyObject*
oaBlockage_getPoints(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaPointArray p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaPointArray_Convert,&p1)) {
        data.DataCall()->getPoints(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_isPushedDown_doc[] = 
"Class: oaBlockage, Function: isPushedDown\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean isPushedDown() const\n"
"    Signature: isPushedDown|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns a boolean value that indicates if this blockage has been pushed down from a higher level block.\n"
;

static PyObject*
oaBlockage_isPushedDown(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->isPushedDown());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_setDensity_doc[] = 
"Class: oaBlockage, Function: setDensity\n"
"  Paramegers: (oaFloat)\n"
"    Calls: void setDensity(oaFloat density)\n"
"    Signature: setDensity|void-void|simple-oaFloat,\n"
"    This function sets the density attribute of this blockage. The density value is a percentage, so should be between 0 and 100 inclusive.\n"
"    density\n"
"    The density value\n"
;

static PyObject*
oaBlockage_setDensity(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFloat p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFloat_Convert,&p1)) {
        data.DataCall()->setDensity(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_setOwner_doc[] = 
"Class: oaBlockage, Function: setOwner\n"
"  Paramegers: (oaBlockObject)\n"
"    Calls: void setOwner(oaBlockObject* owner)\n"
"    Signature: setOwner|void-void|ptr-oaBlockObject,\n"
"    This function sets the owner of this blockage to the specified blockObject.\n"
"    owner\n"
"    The blockObject to use as owner for this blockage\n"
;

static PyObject*
oaBlockage_setOwner(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBlockObject p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBlockObject_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->setOwner(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_setPushedDown_doc[] = 
"Class: oaBlockage, Function: setPushedDown\n"
"  Paramegers: (oaBoolean)\n"
"    Calls: void setPushedDown(oaBoolean flag)\n"
"    Signature: setPushedDown|void-void|simple-oaBoolean,\n"
"    This function sets or unsets the flag that indicates if this blockage has been pushed down from a cell higher in the view hierarchy.\n"
"    flag\n"
"    Boolean to indicate push down status\n"
;

static PyObject*
oaBlockage_setPushedDown(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageObject* self=(PyoaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBoolean p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBoolean_Convert,&p1)) {
        data.DataCall()->setPushedDown(p1.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockage_isNull_doc[] =
"Class: oaBlockage, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBlockage_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBlockage data;
    int convert_status=PyoaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBlockage_assign_doc[] = 
"Class: oaBlockage, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBlockage_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBlockage data;
  int convert_status=PyoaBlockage_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBlockage p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBlockage_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBlockage_methodlist[] = {
    {"getBlockageType",(PyCFunction)oaBlockage_getBlockageType,METH_VARARGS,oaBlockage_getBlockageType_doc},
    {"getDensity",(PyCFunction)oaBlockage_getDensity,METH_VARARGS,oaBlockage_getDensity_doc},
    {"getNumPoints",(PyCFunction)oaBlockage_getNumPoints,METH_VARARGS,oaBlockage_getNumPoints_doc},
    {"getOwner",(PyCFunction)oaBlockage_getOwner,METH_VARARGS,oaBlockage_getOwner_doc},
    {"getPoints",(PyCFunction)oaBlockage_getPoints,METH_VARARGS,oaBlockage_getPoints_doc},
    {"isPushedDown",(PyCFunction)oaBlockage_isPushedDown,METH_VARARGS,oaBlockage_isPushedDown_doc},
    {"setDensity",(PyCFunction)oaBlockage_setDensity,METH_VARARGS,oaBlockage_setDensity_doc},
    {"setOwner",(PyCFunction)oaBlockage_setOwner,METH_VARARGS,oaBlockage_setOwner_doc},
    {"setPushedDown",(PyCFunction)oaBlockage_setPushedDown,METH_VARARGS,oaBlockage_setPushedDown_doc},
    {"isNull",(PyCFunction)oaBlockage_tp_isNull,METH_VARARGS,oaBlockage_isNull_doc},
    {"assign",(PyCFunction)oaBlockage_tp_assign,METH_VARARGS,oaBlockage_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockage_doc[] = 
"Class: oaBlockage\n"
"  The oaBlockage class of objects indicate areas in a design where certain object types cannot be located. The type of objects to exclude from these areas depends on the blockage type, as indicated by oaBlockageType .\n"
"  Note: LayerBlockages (both oaLayerBlockage and oaLayerHalo ) will never have a blockageType of oacPlacementBlockageType. AreaBlockages (both oaAreaBlockage and oaAreaHalo ) always will be of type oacPlacementBlockageType, and this type is automatically set on oaAreaBlockages. For additional information on blockage types, see oaBlockageType .\n"
"  All blockage types may be associated with an owner. The type of owner allowed depends on the type blockage . If a blockage has an associated owner, it will be moved and destroyed along with its owner.\n"
"  The optional pushdown attribute indicates that this blockage has been pushed down from a higher level in the hierarchy. This is used in hierarchical designs where the blockage represents geometry that is in a parent block on top of a lower level block.\n"
"  The screen and fill blockage types can have an optional density value, indicating the percentage of the area specified by the blockage that can be used by nets or fills respectively.\n"
"  Blockages are not enforced by the database. The restrictions they specify are implemented by place and route tools.\n"
"  The oaBlockage class can be observed by deriving from\n"
"Constructors:\n"
"  Paramegers: (oaBlockage)\n"
"    Calls: (const oaBlockage&)\n"
"    Signature: oaBlockage||cref-oaBlockage,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBlockage_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBlockage",
    sizeof(PyoaBlockageObject),
    0,
    (destructor)oaBlockage_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBlockage_tp_compare,	/* tp_compare */
    (reprfunc)oaBlockage_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBlockage_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBlockage_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaFig_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBlockage_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBlockage_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBlockage_Type)<0) {
      printf("** PyType_Ready failed for: oaBlockage\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBlockage",
           (PyObject*)(&PyoaBlockage_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBlockage\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockageModTypeEnum
// ==================================================================

// ------------------------------------------------------------------

int
PyoaBlockageModTypeEnum_Convert(PyObject* ob,PyParamoaBlockageModTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyString_Check(ob)) {
        char* str=PyString_AsString(ob);
        if (strcasecmp(str,"oacSetLayerBlockageModType")==0) { result->SetData(oacSetLayerBlockageModType); return 1;}
        if (strcasecmp(str,"oacSetOwnerBlockageModType")==0) { result->SetData(oacSetOwnerBlockageModType); return 1;}
        if (strcasecmp(str,"oacSetPointsBlockageModType")==0) { result->SetData(oacSetPointsBlockageModType); return 1;}
        if (strcasecmp(str,"oacSetPushedDownBlockageModType")==0) { result->SetData(oacSetPushedDownBlockageModType); return 1;}
        if (strcasecmp(str,"oacSetDensityBlockageModType")==0) { result->SetData(oacSetDensityBlockageModType); return 1;}
        if (strcasecmp(str,"oacSetOffsetsBlockageModType")==0) { result->SetData(oacSetOffsetsBlockageModType); return 1;}
        if (strcasecmp(str,"oacSetEffectiveWidthBlockageModType")==0) { result->SetData(oacSetEffectiveWidthBlockageModType); return 1;}
        if (strcasecmp(str,"oacAddToFigGroupBlockageModType")==0) { result->SetData(oacAddToFigGroupBlockageModType); return 1;}
        if (strcasecmp(str,"oacRemoveFromFigGroupBlockageModType")==0) { result->SetData(oacRemoveFromFigGroupBlockageModType); return 1;}
    }            
    if (PyInt_Check(ob)) {
        long val=PyInt_AsLong(ob);
        result->SetData((oaBlockageModTypeEnum)val);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockageModTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------

PyObject* PyoaBlockageModTypeEnum_FromoaBlockageModTypeEnum(oaBlockageModTypeEnum ob)
{
    if (ob==oacSetLayerBlockageModType) return PyString_FromString("oacSetLayerBlockageModType");
    if (ob==oacSetOwnerBlockageModType) return PyString_FromString("oacSetOwnerBlockageModType");
    if (ob==oacSetPointsBlockageModType) return PyString_FromString("oacSetPointsBlockageModType");
    if (ob==oacSetPushedDownBlockageModType) return PyString_FromString("oacSetPushedDownBlockageModType");
    if (ob==oacSetDensityBlockageModType) return PyString_FromString("oacSetDensityBlockageModType");
    if (ob==oacSetOffsetsBlockageModType) return PyString_FromString("oacSetOffsetsBlockageModType");
    if (ob==oacSetEffectiveWidthBlockageModType) return PyString_FromString("oacSetEffectiveWidthBlockageModType");
    if (ob==oacAddToFigGroupBlockageModType) return PyString_FromString("oacAddToFigGroupBlockageModType");
    if (ob==oacRemoveFromFigGroupBlockageModType) return PyString_FromString("oacRemoveFromFigGroupBlockageModType");

    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
//  Enum Typecast function:
// ------------------------------------------------------------------

static PyObject*
PyoaBlockageModTypeEnum_TypeFunction(PyObject* mod,PyObject* args)
{
    int v;
    oaBlockageModTypeEnum e;
    if (PyArg_ParseTuple(args,(char*)"i",&v)) {
       return PyoaBlockageModTypeEnum_FromoaBlockageModTypeEnum(oaBlockageModTypeEnum(v));
    }
    PyErr_Clear();
    if (PyArg_ParseTuple(args,(char*)"O&",&PyoaBlockageModTypeEnum_Convert,&e)) {
       return PyInt_FromLong(long(e));
    }
    return NULL;
}
static char oaBlockageModTypeEnum_doc[] =
"Type convert function for enum: oaBlockageModTypeEnum";
                               
static PyMethodDef PyoaBlockageModTypeEnum_method =
  {"oaBlockageModTypeEnum",(PyCFunction)PyoaBlockageModTypeEnum_TypeFunction,METH_VARARGS,oaBlockageModTypeEnum_doc};
  

// ------------------------------------------------------------------
//  Enum Init:
// ------------------------------------------------------------------

int
PyoaBlockageModTypeEnum_TypeInit(PyObject* mod_dict)
{
    // Put Enum values in Dictionary
    PyObject* value;
    value=PyString_FromString("oacSetLayerBlockageModType");
    PyDict_SetItemString(mod_dict,"oacSetLayerBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetOwnerBlockageModType");
    PyDict_SetItemString(mod_dict,"oacSetOwnerBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetPointsBlockageModType");
    PyDict_SetItemString(mod_dict,"oacSetPointsBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetPushedDownBlockageModType");
    PyDict_SetItemString(mod_dict,"oacSetPushedDownBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetDensityBlockageModType");
    PyDict_SetItemString(mod_dict,"oacSetDensityBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetOffsetsBlockageModType");
    PyDict_SetItemString(mod_dict,"oacSetOffsetsBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSetEffectiveWidthBlockageModType");
    PyDict_SetItemString(mod_dict,"oacSetEffectiveWidthBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacAddToFigGroupBlockageModType");
    PyDict_SetItemString(mod_dict,"oacAddToFigGroupBlockageModType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacRemoveFromFigGroupBlockageModType");
    PyDict_SetItemString(mod_dict,"oacRemoveFromFigGroupBlockageModType",value);
    Py_DECREF(value);

    // Put Enum name function in Dictionary
    value=PyCFunction_New(&PyoaBlockageModTypeEnum_method,NULL);
    if (PyDict_SetItemString(mod_dict,"oaBlockageModTypeEnum",value)!=0) {
    Py_DECREF(value);
        printf("** Failed to add enum function to module dictionary for: oaBlockageModTypeEnum\n");
        return -1;
    }
    Py_DECREF(value);
    return 0;
}

/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockageQuery
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBlockageQuery_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBlockageQuery_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBlockageQueryObject* self = (PyoaBlockageQueryObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    if (is_raw) {
        PyErr_SetString(PyExc_TypeError,
            "No Constructor for pure-virtual class: oaBlockageQuery");
    }
    else {
        pyv_oaBlockageQuery* p = new pyv_oaBlockageQuery();
        p->pyob=self;
        self->value= (oaRegionQuery*)  p;
        return bself;
    }
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBlockageQuery_tp_dealloc(PyoaBlockageQueryObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBlockageQuery_tp_repr(PyObject *ob)
{
    PyParamoaBlockageQuery value;
    int convert_status=PyoaBlockageQuery_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[37];
    sprintf(buffer,"<oaBlockageQuery::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBlockageQuery_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBlockageQuery v1;
    PyParamoaBlockageQuery v2;
    int convert_status1=PyoaBlockageQuery_Convert(ob1,&v1);
    int convert_status2=PyoaBlockageQuery_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBlockageQuery_Convert(PyObject* ob,PyParamoaBlockageQuery* result)
{
    if (ob == NULL) return 1;
    if (PyoaBlockageQuery_Check(ob)) {
        result->SetData( (oaBlockageQuery*) ((PyoaBlockageQueryObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockageQuery Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockageQuery_FromoaBlockageQuery(oaBlockageQuery* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaBlockageQuery_Type.tp_alloc(&PyoaBlockageQuery_Type,0);
        if (bself == NULL) return bself;
        PyoaBlockageQueryObject* self = (PyoaBlockageQueryObject*)bself;
        self->value = (oaRegionQuery*)  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// Virtual Functions:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
pyv_oaBlockageQuery::pyv_oaBlockageQuery()
 : pyob(NULL),
   oaBlockageQuery()
{
}

// ------------------------------------------------------------------
pyv_oaBlockageQuery::pyv_oaBlockageQuery(const oaBlockageQuery& p)
 : pyob(NULL),
   oaBlockageQuery(p)
{
}

// ------------------------------------------------------------------
void pyv_oaBlockageQuery::queryBlockage(oaBlockage* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"queryBlockage");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::queryBlockage was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaBlockage_FromoaBlockage(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::queryBlockage had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaBlockageQuery::queryPlacementBlockage(oaBlockage* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"queryPlacementBlockage");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::queryPlacementBlockage was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaBlockage_FromoaBlockage(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::queryPlacementBlockage had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaBlockageQuery::endRef(oaRef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"endRef");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::endRef was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRef_FromoaRef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::endRef had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaBlockageQuery::endRef(oaRef* p1,oaUInt4 p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"endRef");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::endRef was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRef_FromoaRef(p1));
    PyTuple_SetItem(args,1,PyoaUInt4_FromoaUInt4(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::endRef had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
void pyv_oaBlockageQuery::endRef(oaRef* p1,oaUInt4 p2,oaUInt4 p3)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"endRef");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::endRef was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(3);
    PyTuple_SetItem(args,0,PyoaRef_FromoaRef(p1));
    PyTuple_SetItem(args,1,PyoaUInt4_FromoaUInt4(p2));
    PyTuple_SetItem(args,2,PyoaUInt4_FromoaUInt4(p3));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::endRef had an error.");
    }
    Py_DECREF(result);
}

// ------------------------------------------------------------------
oaBoolean pyv_oaBlockageQuery::startRef(oaRef* p1)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"startRef");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::startRef was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(1);
    PyTuple_SetItem(args,0,PyoaRef_FromoaRef(p1));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::startRef had an error.");
    }
    PyParamoaBoolean rv;
    if (PyoaBoolean_Convert(result,&rv)==0) {
        throw oaPythonException("Python Virtual Function oaBoolean::startRef has incorrect return type.");
    }
    Py_DECREF(result);
    return rv.Data();
}

// ------------------------------------------------------------------
oaBoolean pyv_oaBlockageQuery::startRef(oaRef* p1,oaUInt4 p2)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"startRef");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::startRef was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(2);
    PyTuple_SetItem(args,0,PyoaRef_FromoaRef(p1));
    PyTuple_SetItem(args,1,PyoaUInt4_FromoaUInt4(p2));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::startRef had an error.");
    }
    PyParamoaBoolean rv;
    if (PyoaBoolean_Convert(result,&rv)==0) {
        throw oaPythonException("Python Virtual Function oaBoolean::startRef has incorrect return type.");
    }
    Py_DECREF(result);
    return rv.Data();
}

// ------------------------------------------------------------------
oaBoolean pyv_oaBlockageQuery::startRef(oaRef* p1,oaUInt4 p2,oaUInt4 p3)
{
    PyObject* md=PyObject_GetAttrString((PyObject*)pyob,"startRef");
    if (!PyCallable_Check(md)) {
        Py_DECREF(md);
        throw oaPythonException("Python Virtual Function oaBlockageQuery::startRef was unable to find a callable python routine.");
    }
    PyObject* args=PyTuple_New(3);
    PyTuple_SetItem(args,0,PyoaRef_FromoaRef(p1));
    PyTuple_SetItem(args,1,PyoaUInt4_FromoaUInt4(p2));
    PyTuple_SetItem(args,2,PyoaUInt4_FromoaUInt4(p3));
    PyObject* result=PyObject_CallObject(md,args);
    Py_DECREF(md);
    Py_DECREF(args);
    if (result==NULL) {
        throw oaPythonException("Python Virtual Function oaBlockageQuery::startRef had an error.");
    }
    PyParamoaBoolean rv;
    if (PyoaBoolean_Convert(result,&rv)==0) {
        throw oaPythonException("Python Virtual Function oaBoolean::startRef has incorrect return type.");
    }
    Py_DECREF(result);
    return rv.Data();
}


// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockageQuery_getLayerNum_doc[] = 
"Class: oaBlockageQuery, Function: getLayerNum\n"
"  Paramegers: ()\n"
"    Calls: oaLayerNum getLayerNum() const\n"
"    Signature: getLayerNum|simple-oaLayerNum|\n"
"    BrowseData: 1\n"
"    This function returns the layer number that is associated with the current query.\n"
;

static PyObject*
oaBlockageQuery_getLayerNum(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockageQuery data;
    int convert_status=PyoaBlockageQuery_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageQueryObject* self=(PyoaBlockageQueryObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaLayerNum result= (data.DataCall()->getLayerNum());
        return PyoaLayerNum_FromoaLayerNum(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockageQuery_query_doc[] = 
"Class: oaBlockageQuery, Function: query\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox,oaDist)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region,oaDist filterSize)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox,oaDist,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region,oaDist filterSize,oaUInt4 startLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox,oaDist,oaUInt4,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region,oaDist filterSize,oaUInt4 startLevel,oaUInt4 stopLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox,oaDist)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region,oaDist filterSize)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox,oaDist,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region,oaDist filterSize,oaUInt4 startLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox,oaDist,oaUInt4,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region,oaDist filterSize,oaUInt4 startLevel,oaUInt4 stopLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox,oaTransform)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region,const oaTransform& xform)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region,const oaTransform& xform,oaDist filterSize)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region,const oaTransform& xform,oaDist filterSize,oaUInt4 startLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist,oaUInt4,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,oaLayerNum layerNum,const oaBox& region,const oaTransform& xform,oaDist filterSize,oaUInt4 startLevel,oaUInt4 stopLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,simple-oaLayerNum,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating blockages on the specified layer in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    layerNum\n"
"    Only query objects who has this layer number\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox,oaTransform)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region,const oaTransform& xform)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox,oaTransform,oaDist)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region,const oaTransform& xform,oaDist filterSize)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox,oaTransform,oaDist,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region,const oaTransform& xform,oaDist filterSize,oaUInt4 startLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
"  Paramegers: (oaDesign,oaBox,oaTransform,oaDist,oaUInt4,oaUInt4)\n"
"    Calls: void query(oaDesign* topDesign,const oaBox& region,const oaTransform& xform,oaDist filterSize,oaUInt4 startLevel,oaUInt4 stopLevel)\n"
"    Signature: query|void-void|ptr-oaDesign,cref-oaBox,cref-oaTransform,simple-oaDist,simple-oaUInt4,simple-oaUInt4,\n"
"    This function begins the query process to start generating placement blockages in the specified region of the specified design hierarchy.\n"
"    topDesign\n"
"    Pointer to the top design\n"
"    region\n"
"    The region of interest\n"
"    xform\n"
"    The current transform that is applied to the design\n"
"    filterSize\n"
"    Only query objects whose size is equal to or larger than filterSize\n"
"    startLevel\n"
"    The level of block hierarchy to start the querying\n"
"    stopLevel\n"
"    The level of block hierarchy to stop the querying\n"
;

static PyObject*
oaBlockageQuery_query(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockageQuery data;
    int convert_status=PyoaBlockageQuery_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageQueryObject* self=(PyoaBlockageQueryObject*)ob;

    // Case: (oaDesign,oaLayerNum,oaBox)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaLayerNum,oaBox,oaDist)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        PyParamoaDist p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3,
              &PyoaDist_Convert,&p4)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaLayerNum,oaBox,oaDist,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        PyParamoaDist p4;
        PyParamoaUInt4 p5;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3,
              &PyoaDist_Convert,&p4,
              &PyoaUInt4_Convert,&p5)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaLayerNum,oaBox,oaDist,oaUInt4,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        PyParamoaDist p4;
        PyParamoaUInt4 p5;
        PyParamoaUInt4 p6;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3,
              &PyoaDist_Convert,&p4,
              &PyoaUInt4_Convert,&p5,
              &PyoaUInt4_Convert,&p6)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data(),p6.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox,oaDist)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        PyParamoaDist p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2,
              &PyoaDist_Convert,&p3)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox,oaDist,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        PyParamoaDist p3;
        PyParamoaUInt4 p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2,
              &PyoaDist_Convert,&p3,
              &PyoaUInt4_Convert,&p4)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox,oaDist,oaUInt4,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        PyParamoaDist p3;
        PyParamoaUInt4 p4;
        PyParamoaUInt4 p5;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2,
              &PyoaDist_Convert,&p3,
              &PyoaUInt4_Convert,&p4,
              &PyoaUInt4_Convert,&p5)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaLayerNum,oaBox,oaTransform)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        PyParamoaTransform p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3,
              &PyoaTransform_Convert,&p4)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        PyParamoaTransform p4;
        PyParamoaDist p5;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3,
              &PyoaTransform_Convert,&p4,
              &PyoaDist_Convert,&p5)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        PyParamoaTransform p4;
        PyParamoaDist p5;
        PyParamoaUInt4 p6;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3,
              &PyoaTransform_Convert,&p4,
              &PyoaDist_Convert,&p5,
              &PyoaUInt4_Convert,&p6)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data(),p6.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist,oaUInt4,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaLayerNum p2;
        PyParamoaBox p3;
        PyParamoaTransform p4;
        PyParamoaDist p5;
        PyParamoaUInt4 p6;
        PyParamoaUInt4 p7;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaLayerNum_Convert,&p2,
              &PyoaBox_Convert,&p3,
              &PyoaTransform_Convert,&p4,
              &PyoaDist_Convert,&p5,
              &PyoaUInt4_Convert,&p6,
              &PyoaUInt4_Convert,&p7)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data(),p6.Data(),p7.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox,oaTransform)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        PyParamoaTransform p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2,
              &PyoaTransform_Convert,&p3)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox,oaTransform,oaDist)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        PyParamoaTransform p3;
        PyParamoaDist p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2,
              &PyoaTransform_Convert,&p3,
              &PyoaDist_Convert,&p4)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox,oaTransform,oaDist,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        PyParamoaTransform p3;
        PyParamoaDist p4;
        PyParamoaUInt4 p5;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2,
              &PyoaTransform_Convert,&p3,
              &PyoaDist_Convert,&p4,
              &PyoaUInt4_Convert,&p5)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    // Case: (oaDesign,oaBox,oaTransform,oaDist,oaUInt4,oaUInt4)
    {
        PyParamoaDesign p1;
        PyParamoaBox p2;
        PyParamoaTransform p3;
        PyParamoaDist p4;
        PyParamoaUInt4 p5;
        PyParamoaUInt4 p6;
        if (PyArg_ParseTuple(args,"O&O&O&O&O&O&",
              &PyoaDesign_Convert,&p1,
              &PyoaBox_Convert,&p2,
              &PyoaTransform_Convert,&p3,
              &PyoaDist_Convert,&p4,
              &PyoaUInt4_Convert,&p5,
              &PyoaUInt4_Convert,&p6)) {
            if (!PyValidateDbObject(p1.Data(),1)) return NULL;
            data.DataCall()->query(p1.Data(),p2.Data(),p3.Data(),p4.Data(),p5.Data(),p6.Data());
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBlockageQuery, function: query, Choices are:\n"
        "    (oaDesign,oaLayerNum,oaBox)\n"
        "    (oaDesign,oaLayerNum,oaBox,oaDist)\n"
        "    (oaDesign,oaLayerNum,oaBox,oaDist,oaUInt4)\n"
        "    (oaDesign,oaLayerNum,oaBox,oaDist,oaUInt4,oaUInt4)\n"
        "    (oaDesign,oaBox)\n"
        "    (oaDesign,oaBox,oaDist)\n"
        "    (oaDesign,oaBox,oaDist,oaUInt4)\n"
        "    (oaDesign,oaBox,oaDist,oaUInt4,oaUInt4)\n"
        "    (oaDesign,oaLayerNum,oaBox,oaTransform)\n"
        "    (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist)\n"
        "    (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist,oaUInt4)\n"
        "    (oaDesign,oaLayerNum,oaBox,oaTransform,oaDist,oaUInt4,oaUInt4)\n"
        "    (oaDesign,oaBox,oaTransform)\n"
        "    (oaDesign,oaBox,oaTransform,oaDist)\n"
        "    (oaDesign,oaBox,oaTransform,oaDist,oaUInt4)\n"
        "    (oaDesign,oaBox,oaTransform,oaDist,oaUInt4,oaUInt4)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockageQuery_queryBlockage_doc[] = 
"Class: oaBlockageQuery, Function: queryBlockage\n"
"  Paramegers: (oaBlockage)\n"
"    Calls: virtual void queryBlockage(oaBlockage* blockage)\n"
"    Signature: queryBlockage|void-void|ptr-oaBlockage,\n"
"    This function processes each result of the blockage query.\n"
"    blockage\n"
"    The pointer to the oaBlockage queried\n"
;

static PyObject*
oaBlockageQuery_queryBlockage(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockageQuery data;
    int convert_status=PyoaBlockageQuery_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageQueryObject* self=(PyoaBlockageQueryObject*)ob;

    PyParamoaBlockage p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBlockage_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        PyErr_SetString(PyExc_TypeError,
            "Call to Pure-Virtual Function class: oaBlockageQuery, function: queryBlockage");
            return NULL;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockageQuery_queryPlacementBlockage_doc[] = 
"Class: oaBlockageQuery, Function: queryPlacementBlockage\n"
"  Paramegers: (oaBlockage)\n"
"    Calls: virtual void queryPlacementBlockage(oaBlockage* blockage)\n"
"    Signature: queryPlacementBlockage|void-void|ptr-oaBlockage,\n"
"    This function processes each result of the blockage query.\n"
"    blockage\n"
"    Pointer to the oaBlockage object that is being queried.\n"
;

static PyObject*
oaBlockageQuery_queryPlacementBlockage(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockageQuery data;
    int convert_status=PyoaBlockageQuery_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageQueryObject* self=(PyoaBlockageQueryObject*)ob;

    PyParamoaBlockage p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBlockage_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        PyErr_SetString(PyExc_TypeError,
            "Call to Pure-Virtual Function class: oaBlockageQuery, function: queryPlacementBlockage");
            return NULL;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaBlockageQuery_assign_doc[] = 
"Class: oaBlockageQuery, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBlockageQuery_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBlockageQuery data;
  int convert_status=PyoaBlockageQuery_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBlockageQuery p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBlockageQuery_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBlockageQuery_methodlist[] = {
    {"getLayerNum",(PyCFunction)oaBlockageQuery_getLayerNum,METH_VARARGS,oaBlockageQuery_getLayerNum_doc},
    {"query",(PyCFunction)oaBlockageQuery_query,METH_VARARGS,oaBlockageQuery_query_doc},
    {"queryBlockage",(PyCFunction)oaBlockageQuery_queryBlockage,METH_VARARGS,oaBlockageQuery_queryBlockage_doc},
    {"queryPlacementBlockage",(PyCFunction)oaBlockageQuery_queryPlacementBlockage,METH_VARARGS,oaBlockageQuery_queryPlacementBlockage_doc},
    {"assign",(PyCFunction)oaBlockageQuery_tp_assign,METH_VARARGS,oaBlockageQuery_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockageQuery_doc[] = 
"Class: oaBlockageQuery\n"
"  This file contains the definitions for the public regionQuery classes. These classes implement functionality to query a specified region in a design hierarchy and quickly return objects of a specified type that overlap the region. These classes are all abstract; applications must derive their own sub-classes to use them. The classes implemented include:\n"
"  oaRegionQuery This is the common base class for all types of query objects.\n"
"Constructors:\n"
"  Paramegers: ()\n"
"    Calls: oaBlockageQuery()\n"
"    Signature: oaBlockageQuery||\n"
"    This is the constructor for oaBlockQuery.\n"
"  Paramegers: (oaBlockageQuery)\n"
"    Calls: (const oaBlockageQuery&)\n"
"    Signature: oaBlockageQuery||cref-oaBlockageQuery,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBlockageQuery_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBlockageQuery",
    sizeof(PyoaBlockageQueryObject),
    0,
    (destructor)oaBlockageQuery_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBlockageQuery_tp_compare,	/* tp_compare */
    (reprfunc)oaBlockageQuery_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBlockageQuery_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBlockageQuery_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaRegionQuery_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBlockageQuery_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBlockageQuery_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBlockageQuery_Type)<0) {
      printf("** PyType_Ready failed for: oaBlockageQuery\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBlockageQuery",
           (PyObject*)(&PyoaBlockageQuery_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBlockageQuery\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockageType
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBlockageType_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBlockageType_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBlockageTypeObject* self = (PyoaBlockageTypeObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBlockageTypeEnum)
    {
        PyParamoaBlockageTypeEnum p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaBlockageTypeEnum_Convert,&p1)) {
            self->value =  new oaBlockageType(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            self->value =  new oaBlockageType(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    // Case: (oaBlockageType)
    {
        PyParamoaBlockageType p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBlockageType_Convert,&p1)) {
            self->value= new oaBlockageType(p1.Data());
            return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBlockageType, Choices are:\n"
        "    (oaBlockageTypeEnum)\n"
        "    (oaString)\n"
        "    (oaBlockageType)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBlockageType_tp_dealloc(PyoaBlockageTypeObject* self)
{
    if (!self->borrow) {
        delete (self->value);
    }
    Py_XDECREF(self->locks);
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBlockageType_tp_repr(PyObject *ob)
{
    PyParamoaBlockageType value;
    int convert_status=PyoaBlockageType_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;
    oaString sresult(value.DataCall()->getName());

    char addr[36];
    sprintf(addr,DISPLAY_FORMAT,POINTER_AS_DISPLAY(value.DataCall()));
    oaString buffer;
    buffer+=oaString("<oaBlockageType::");
    buffer+=oaString(addr);
    buffer+=oaString("::");
    buffer+=oaString(sresult);
    buffer+=oaString(">");
    result=PyString_FromString((char*)(const char*)buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBlockageType_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBlockageType v1;
    PyParamoaBlockageType v2;
    int convert_status1=PyoaBlockageType_Convert(ob1,&v1);
    int convert_status2=PyoaBlockageType_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBlockageType_Convert(PyObject* ob,PyParamoaBlockageType* result)
{
    if (ob == NULL) return 1;
    if (PyoaBlockageType_Check(ob)) {
        result->SetData(  ((PyoaBlockageTypeObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockageType Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBlockageType_FromoaBlockageType(oaBlockageType* data,int borrow,PyObject* lock)
{
    if (data) {
        PyObject* bself = PyoaBlockageType_Type.tp_alloc(&PyoaBlockageType_Type,0);
        if (bself == NULL) return bself;
        PyoaBlockageTypeObject* self = (PyoaBlockageTypeObject*)bself;
        self->value =  data;
        self->locks = NULL;
        self->borrow = borrow;
        if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockageType_getName_doc[] = 
"Class: oaBlockageType, Function: getName\n"
"  Paramegers: ()\n"
"    Calls: const oaString& getName()\n"
"    Signature: getName|cref-oaString|\n"
"    BrowseData: 1\n"
"    This function returns the name string associated with the encapsulated #oaBlockageTypeEnum object.\n"
;

static PyObject*
oaBlockageType_getName(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockageType data;
    int convert_status=PyoaBlockageType_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageTypeObject* self=(PyoaBlockageTypeObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaString result= (data.DataCall()->getName());
        return PyoaString_FromoaString(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBlockageType_oaBlockageTypeEnum_doc[] = 
"Class: oaBlockageType, Function: oaBlockageTypeEnum\n"
"  Paramegers: ()\n"
"    Calls: oaBlockageTypeEnum oaBlockageTypeEnum() const\n"
"    Signature: operator oaBlockageTypeEnum|simple-oaBlockageTypeEnum|\n"
"    BrowseData: 1\n"
"    This operator casts this oaBlockageType object into the corresponding #oaBlockageTypeEnum value.\n"
;

static PyObject*
oaBlockageType_oaBlockageTypeEnum(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBlockageType data;
    int convert_status=PyoaBlockageType_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBlockageTypeObject* self=(PyoaBlockageTypeObject*)ob;

    if (PyArg_ParseTuple(args,"")) {
        oaBlockageTypeEnum result= (data.DataCall()->operator oaBlockageTypeEnum());
        return PyoaBlockageTypeEnum_FromoaBlockageTypeEnum(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

static char oaBlockageType_assign_doc[] = 
"Class: oaBlockageType, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBlockageType_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBlockageType data;
  int convert_status=PyoaBlockageType_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBlockageType p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBlockageType_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBlockageType_methodlist[] = {
    {"getName",(PyCFunction)oaBlockageType_getName,METH_VARARGS,oaBlockageType_getName_doc},
    {"oaBlockageTypeEnum",(PyCFunction)oaBlockageType_oaBlockageTypeEnum,METH_VARARGS,oaBlockageType_oaBlockageTypeEnum_doc},
    {"assign",(PyCFunction)oaBlockageType_tp_assign,METH_VARARGS,oaBlockageType_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBlockageType_doc[] = 
"Class: oaBlockageType\n"
"  The oaBlockageType is an enum wrapper class that indicates the different kinds of oaBlockage objects. Each type of blockage blocks a specific kind of object. See oaBlockageTypeEnum for a description of each blockage type.\n"
"  See Enum Wrappers in the Programmers Guide for a discussion of enum wrappers.\n"
"  oaBlockageTypeEnum\n"
"Constructors:\n"
"  Paramegers: (oaBlockageTypeEnum)\n"
"    Calls: oaBlockageType(oaBlockageTypeEnum valueIn)\n"
"    Signature: oaBlockageType||simple-oaBlockageTypeEnum,\n"
"    This function constructs an instance of an oaBlockageType object using the specified #oaBlockageTypeEnum value.\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBlockageType(const oaString& name)\n"
"    Signature: oaBlockageType||cref-oaString,\n"
"    This function constructs an instance of an oaBlockageType class using the #oaBlockageTypeEnum associated with the specified string name . This name must be defined in the legal set of names associated with #oaBlockageTypeEnum.\n"
"    oacInvalidBlockageTypeName\n"
"  Paramegers: (oaBlockageType)\n"
"    Calls: (const oaBlockageType&)\n"
"    Signature: oaBlockageType||cref-oaBlockageType,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBlockageType_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBlockageType",
    sizeof(PyoaBlockageTypeObject),
    0,
    (destructor)oaBlockageType_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBlockageType_tp_compare,	/* tp_compare */
    (reprfunc)oaBlockageType_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBlockageType_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBlockageType_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    0,					/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBlockageType_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBlockageType_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBlockageType_Type)<0) {
      printf("** PyType_Ready failed for: oaBlockageType\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBlockageType",
           (PyObject*)(&PyoaBlockageType_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBlockageType\n");
       return -1;
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBlockageTypeEnum
// ==================================================================

// ------------------------------------------------------------------

int
PyoaBlockageTypeEnum_Convert(PyObject* ob,PyParamoaBlockageTypeEnum* result)
{
    if (ob == NULL) return 1;
    if (PyString_Check(ob)) {
        char* str=PyString_AsString(ob);
        if (strcasecmp(str,"oacRoutingBlockageType")==0) { result->SetData(oacRoutingBlockageType); return 1;}
        if (strcasecmp(str,"oacViaBlockageType")==0) { result->SetData(oacViaBlockageType); return 1;}
        if (strcasecmp(str,"oacPlacementBlockageType")==0) { result->SetData(oacPlacementBlockageType); return 1;}
        if (strcasecmp(str,"oacWiringBlockageType")==0) { result->SetData(oacWiringBlockageType); return 1;}
        if (strcasecmp(str,"oacFillBlockageType")==0) { result->SetData(oacFillBlockageType); return 1;}
        if (strcasecmp(str,"oacSlotBlockageType")==0) { result->SetData(oacSlotBlockageType); return 1;}
        if (strcasecmp(str,"oacPinBlockageType")==0) { result->SetData(oacPinBlockageType); return 1;}
        if (strcasecmp(str,"oacFeedthruBlockageType")==0) { result->SetData(oacFeedthruBlockageType); return 1;}
        if (strcasecmp(str,"oacScreenBlockageType")==0) { result->SetData(oacScreenBlockageType); return 1;}
    }            
    if (PyInt_Check(ob)) {
        long val=PyInt_AsLong(ob);
        result->SetData((oaBlockageTypeEnum)val);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBlockageTypeEnum Failed");
    return 0;
}
// ------------------------------------------------------------------

PyObject* PyoaBlockageTypeEnum_FromoaBlockageTypeEnum(oaBlockageTypeEnum ob)
{
    if (ob==oacRoutingBlockageType) return PyString_FromString("oacRoutingBlockageType");
    if (ob==oacViaBlockageType) return PyString_FromString("oacViaBlockageType");
    if (ob==oacPlacementBlockageType) return PyString_FromString("oacPlacementBlockageType");
    if (ob==oacWiringBlockageType) return PyString_FromString("oacWiringBlockageType");
    if (ob==oacFillBlockageType) return PyString_FromString("oacFillBlockageType");
    if (ob==oacSlotBlockageType) return PyString_FromString("oacSlotBlockageType");
    if (ob==oacPinBlockageType) return PyString_FromString("oacPinBlockageType");
    if (ob==oacFeedthruBlockageType) return PyString_FromString("oacFeedthruBlockageType");
    if (ob==oacScreenBlockageType) return PyString_FromString("oacScreenBlockageType");

    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
//  Enum Typecast function:
// ------------------------------------------------------------------

static PyObject*
PyoaBlockageTypeEnum_TypeFunction(PyObject* mod,PyObject* args)
{
    int v;
    oaBlockageTypeEnum e;
    if (PyArg_ParseTuple(args,(char*)"i",&v)) {
       return PyoaBlockageTypeEnum_FromoaBlockageTypeEnum(oaBlockageTypeEnum(v));
    }
    PyErr_Clear();
    if (PyArg_ParseTuple(args,(char*)"O&",&PyoaBlockageTypeEnum_Convert,&e)) {
       return PyInt_FromLong(long(e));
    }
    return NULL;
}
static char oaBlockageTypeEnum_doc[] =
"Type convert function for enum: oaBlockageTypeEnum";
                               
static PyMethodDef PyoaBlockageTypeEnum_method =
  {"oaBlockageTypeEnum",(PyCFunction)PyoaBlockageTypeEnum_TypeFunction,METH_VARARGS,oaBlockageTypeEnum_doc};
  

// ------------------------------------------------------------------
//  Enum Init:
// ------------------------------------------------------------------

int
PyoaBlockageTypeEnum_TypeInit(PyObject* mod_dict)
{
    // Put Enum values in Dictionary
    PyObject* value;
    value=PyString_FromString("oacRoutingBlockageType");
    PyDict_SetItemString(mod_dict,"oacRoutingBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacViaBlockageType");
    PyDict_SetItemString(mod_dict,"oacViaBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacPlacementBlockageType");
    PyDict_SetItemString(mod_dict,"oacPlacementBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacWiringBlockageType");
    PyDict_SetItemString(mod_dict,"oacWiringBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacFillBlockageType");
    PyDict_SetItemString(mod_dict,"oacFillBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacSlotBlockageType");
    PyDict_SetItemString(mod_dict,"oacSlotBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacPinBlockageType");
    PyDict_SetItemString(mod_dict,"oacPinBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacFeedthruBlockageType");
    PyDict_SetItemString(mod_dict,"oacFeedthruBlockageType",value);
    Py_DECREF(value);
    value=PyString_FromString("oacScreenBlockageType");
    PyDict_SetItemString(mod_dict,"oacScreenBlockageType",value);
    Py_DECREF(value);

    // Put Enum name function in Dictionary
    value=PyCFunction_New(&PyoaBlockageTypeEnum_method,NULL);
    if (PyDict_SetItemString(mod_dict,"oaBlockageTypeEnum",value)!=0) {
    Py_DECREF(value);
        printf("** Failed to add enum function to module dictionary for: oaBlockageTypeEnum\n");
        return -1;
    }
    Py_DECREF(value);
    return 0;
}

/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaAnalysisOpPoint
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaAnalysisOpPoint_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaAnalysisOpPointObject* self = (PyoaBooleanAppDef_oaAnalysisOpPointObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaAnalysisOpPoint)
    {
        PyParamoaBooleanAppDef_oaAnalysisOpPoint p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaAnalysisOpPoint_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaAnalysisOpPoint, Choices are:\n"
        "    (oaBooleanAppDef_oaAnalysisOpPoint)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaAnalysisOpPoint_tp_dealloc(PyoaBooleanAppDef_oaAnalysisOpPointObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaAnalysisOpPoint value;
    int convert_status=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaBooleanAppDef_oaAnalysisOpPoint::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaAnalysisOpPoint_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaAnalysisOpPoint v1;
    PyParamoaBooleanAppDef_oaAnalysisOpPoint v2;
    int convert_status1=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaAnalysisOpPoint* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaAnalysisOpPoint_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaAnalysisOpPoint**) ((PyoaBooleanAppDef_oaAnalysisOpPointObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaAnalysisOpPoint Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(oaBooleanAppDef_oaAnalysisOpPoint** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaAnalysisOpPoint* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaAnalysisOpPoint_Type.tp_alloc(&PyoaBooleanAppDef_oaAnalysisOpPoint_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaAnalysisOpPointObject* self = (PyoaBooleanAppDef_oaAnalysisOpPointObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(oaBooleanAppDef_oaAnalysisOpPoint* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaAnalysisOpPoint_Type.tp_alloc(&PyoaBooleanAppDef_oaAnalysisOpPoint_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaAnalysisOpPointObject* self = (PyoaBooleanAppDef_oaAnalysisOpPointObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisOpPoint_get_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisOpPoint, Function: get\n"
"  Paramegers: (oaAnalysisOpPoint)\n"
"    Calls: oaBoolean get(const oaAnalysisOpPoint* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaAnalysisOpPoint,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAnalysisOpPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAnalysisOpPointObject* self=(PyoaBooleanAppDef_oaAnalysisOpPointObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAnalysisOpPoint p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaAnalysisOpPoint_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisOpPoint_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisOpPoint, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAnalysisOpPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAnalysisOpPointObject* self=(PyoaBooleanAppDef_oaAnalysisOpPointObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisOpPoint_set_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisOpPoint, Function: set\n"
"  Paramegers: (oaAnalysisOpPoint,oaBoolean)\n"
"    Calls: void set(oaAnalysisOpPoint* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaAnalysisOpPoint,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAnalysisOpPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAnalysisOpPointObject* self=(PyoaBooleanAppDef_oaAnalysisOpPointObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAnalysisOpPoint p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaAnalysisOpPoint_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisOpPoint_isNull_doc[] =
"Class: oaBooleanAppDef_oaAnalysisOpPoint, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaAnalysisOpPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaAnalysisOpPoint_assign_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisOpPoint, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaAnalysisOpPoint data;
  int convert_status=PyoaBooleanAppDef_oaAnalysisOpPoint_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaAnalysisOpPoint p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaAnalysisOpPoint_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaAnalysisOpPoint_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaAnalysisOpPoint_get,METH_VARARGS,oaBooleanAppDef_oaAnalysisOpPoint_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaAnalysisOpPoint_getDefault,METH_VARARGS,oaBooleanAppDef_oaAnalysisOpPoint_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaAnalysisOpPoint_set,METH_VARARGS,oaBooleanAppDef_oaAnalysisOpPoint_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaAnalysisOpPoint_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaAnalysisOpPoint_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaAnalysisOpPoint_tp_assign,METH_VARARGS,oaBooleanAppDef_oaAnalysisOpPoint_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisOpPoint_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisOpPoint\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaAnalysisOpPoint)\n"
"    Calls: (const oaBooleanAppDef_oaAnalysisOpPoint&)\n"
"    Signature: oaBooleanAppDef_oaAnalysisOpPoint||cref-oaBooleanAppDef_oaAnalysisOpPoint,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaAnalysisOpPoint_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaAnalysisOpPoint",
    sizeof(PyoaBooleanAppDef_oaAnalysisOpPointObject),
    0,
    (destructor)oaBooleanAppDef_oaAnalysisOpPoint_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaAnalysisOpPoint_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaAnalysisOpPoint_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaAnalysisOpPoint_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaAnalysisOpPoint_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaAnalysisOpPoint_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisOpPoint_static_find_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisOpPoint, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::find(p1.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaAnalysisOpPoint, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisOpPoint_static_get_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisOpPoint, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisOpPoint* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisOpPoint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisOpPoint_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::get(p1.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisOpPointp result= (oaBooleanAppDef_oaAnalysisOpPoint::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaAnalysisOpPoint_FromoaBooleanAppDef_oaAnalysisOpPoint(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaAnalysisOpPoint, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaAnalysisOpPoint_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaAnalysisOpPoint_static_find,METH_VARARGS,oaBooleanAppDef_oaAnalysisOpPoint_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaAnalysisOpPoint_static_get,METH_VARARGS,oaBooleanAppDef_oaAnalysisOpPoint_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaAnalysisOpPoint_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaAnalysisOpPoint_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaAnalysisOpPoint\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaAnalysisOpPoint",
           (PyObject*)(&PyoaBooleanAppDef_oaAnalysisOpPoint_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaAnalysisOpPoint\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaAnalysisOpPoint_Type.tp_dict;
    for(method=oaBooleanAppDef_oaAnalysisOpPoint_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaAnalysisPoint
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAnalysisPoint_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaAnalysisPoint_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaAnalysisPointObject* self = (PyoaBooleanAppDef_oaAnalysisPointObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaAnalysisPoint)
    {
        PyParamoaBooleanAppDef_oaAnalysisPoint p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaAnalysisPoint_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaAnalysisPoint, Choices are:\n"
        "    (oaBooleanAppDef_oaAnalysisPoint)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaAnalysisPoint_tp_dealloc(PyoaBooleanAppDef_oaAnalysisPointObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAnalysisPoint_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaAnalysisPoint value;
    int convert_status=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaBooleanAppDef_oaAnalysisPoint::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaAnalysisPoint_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaAnalysisPoint v1;
    PyParamoaBooleanAppDef_oaAnalysisPoint v2;
    int convert_status1=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaAnalysisPoint_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaAnalysisPoint* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaAnalysisPoint_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaAnalysisPoint**) ((PyoaBooleanAppDef_oaAnalysisPointObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaAnalysisPoint Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(oaBooleanAppDef_oaAnalysisPoint** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaAnalysisPoint* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaAnalysisPoint_Type.tp_alloc(&PyoaBooleanAppDef_oaAnalysisPoint_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaAnalysisPointObject* self = (PyoaBooleanAppDef_oaAnalysisPointObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(oaBooleanAppDef_oaAnalysisPoint* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaAnalysisPoint_Type.tp_alloc(&PyoaBooleanAppDef_oaAnalysisPoint_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaAnalysisPointObject* self = (PyoaBooleanAppDef_oaAnalysisPointObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisPoint_get_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisPoint, Function: get\n"
"  Paramegers: (oaAnalysisPoint)\n"
"    Calls: oaBoolean get(const oaAnalysisPoint* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaAnalysisPoint,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisPoint_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAnalysisPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAnalysisPointObject* self=(PyoaBooleanAppDef_oaAnalysisPointObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAnalysisPoint p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaAnalysisPoint_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisPoint_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisPoint, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisPoint_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAnalysisPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAnalysisPointObject* self=(PyoaBooleanAppDef_oaAnalysisPointObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisPoint_set_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisPoint, Function: set\n"
"  Paramegers: (oaAnalysisPoint,oaBoolean)\n"
"    Calls: void set(oaAnalysisPoint* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaAnalysisPoint,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisPoint_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAnalysisPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAnalysisPointObject* self=(PyoaBooleanAppDef_oaAnalysisPointObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAnalysisPoint p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaAnalysisPoint_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisPoint_isNull_doc[] =
"Class: oaBooleanAppDef_oaAnalysisPoint, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisPoint_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaAnalysisPoint data;
    int convert_status=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaAnalysisPoint_assign_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisPoint, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisPoint_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaAnalysisPoint data;
  int convert_status=PyoaBooleanAppDef_oaAnalysisPoint_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaAnalysisPoint p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaAnalysisPoint_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaAnalysisPoint_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaAnalysisPoint_get,METH_VARARGS,oaBooleanAppDef_oaAnalysisPoint_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaAnalysisPoint_getDefault,METH_VARARGS,oaBooleanAppDef_oaAnalysisPoint_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaAnalysisPoint_set,METH_VARARGS,oaBooleanAppDef_oaAnalysisPoint_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaAnalysisPoint_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaAnalysisPoint_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaAnalysisPoint_tp_assign,METH_VARARGS,oaBooleanAppDef_oaAnalysisPoint_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisPoint_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisPoint\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaAnalysisPoint)\n"
"    Calls: (const oaBooleanAppDef_oaAnalysisPoint&)\n"
"    Signature: oaBooleanAppDef_oaAnalysisPoint||cref-oaBooleanAppDef_oaAnalysisPoint,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaAnalysisPoint_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaAnalysisPoint",
    sizeof(PyoaBooleanAppDef_oaAnalysisPointObject),
    0,
    (destructor)oaBooleanAppDef_oaAnalysisPoint_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaAnalysisPoint_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaAnalysisPoint_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaAnalysisPoint_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaAnalysisPoint_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaAnalysisPoint_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisPoint_static_find_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisPoint, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisPoint_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::find(p1.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaAnalysisPoint, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAnalysisPoint_static_get_doc[] = 
"Class: oaBooleanAppDef_oaAnalysisPoint, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAnalysisPoint* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAnalysisPoint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaAnalysisPoint_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::get(p1.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAnalysisPointp result= (oaBooleanAppDef_oaAnalysisPoint::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaAnalysisPoint_FromoaBooleanAppDef_oaAnalysisPoint(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaAnalysisPoint, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaAnalysisPoint_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaAnalysisPoint_static_find,METH_VARARGS,oaBooleanAppDef_oaAnalysisPoint_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaAnalysisPoint_static_get,METH_VARARGS,oaBooleanAppDef_oaAnalysisPoint_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaAnalysisPoint_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaAnalysisPoint_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaAnalysisPoint\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaAnalysisPoint",
           (PyObject*)(&PyoaBooleanAppDef_oaAnalysisPoint_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaAnalysisPoint\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaAnalysisPoint_Type.tp_dict;
    for(method=oaBooleanAppDef_oaAnalysisPoint_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaAppObject
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAppObject_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaAppObject_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaAppObjectObject* self = (PyoaBooleanAppDef_oaAppObjectObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaAppObject)
    {
        PyParamoaBooleanAppDef_oaAppObject p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaAppObject_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaAppObject, Choices are:\n"
        "    (oaBooleanAppDef_oaAppObject)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaAppObject_tp_dealloc(PyoaBooleanAppDef_oaAppObjectObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAppObject_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaAppObject value;
    int convert_status=PyoaBooleanAppDef_oaAppObject_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaBooleanAppDef_oaAppObject::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaAppObject_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaAppObject v1;
    PyParamoaBooleanAppDef_oaAppObject v2;
    int convert_status1=PyoaBooleanAppDef_oaAppObject_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaAppObject_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaAppObject_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaAppObject* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaAppObject_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaAppObject**) ((PyoaBooleanAppDef_oaAppObjectObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaAppObject Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAppObject_FromoaBooleanAppDef_oaAppObject(oaBooleanAppDef_oaAppObject** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaAppObject* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaAppObject_Type.tp_alloc(&PyoaBooleanAppDef_oaAppObject_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaAppObjectObject* self = (PyoaBooleanAppDef_oaAppObjectObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAppObject_FromoaBooleanAppDef_oaAppObject(oaBooleanAppDef_oaAppObject* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaAppObject_Type.tp_alloc(&PyoaBooleanAppDef_oaAppObject_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaAppObjectObject* self = (PyoaBooleanAppDef_oaAppObjectObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAppObject_get_doc[] = 
"Class: oaBooleanAppDef_oaAppObject, Function: get\n"
"  Paramegers: (oaAppObject)\n"
"    Calls: oaBoolean get(const oaAppObject* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaAppObject,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAppObject_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAppObject data;
    int convert_status=PyoaBooleanAppDef_oaAppObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAppObjectObject* self=(PyoaBooleanAppDef_oaAppObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAppObject p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaAppObject_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAppObject_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaAppObject, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaAppObject_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAppObject data;
    int convert_status=PyoaBooleanAppDef_oaAppObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAppObjectObject* self=(PyoaBooleanAppDef_oaAppObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAppObject_set_doc[] = 
"Class: oaBooleanAppDef_oaAppObject, Function: set\n"
"  Paramegers: (oaAppObject,oaBoolean)\n"
"    Calls: void set(oaAppObject* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaAppObject,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAppObject_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAppObject data;
    int convert_status=PyoaBooleanAppDef_oaAppObject_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAppObjectObject* self=(PyoaBooleanAppDef_oaAppObjectObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAppObject p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaAppObject_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAppObject_isNull_doc[] =
"Class: oaBooleanAppDef_oaAppObject, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaAppObject_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaAppObject data;
    int convert_status=PyoaBooleanAppDef_oaAppObject_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaAppObject_assign_doc[] = 
"Class: oaBooleanAppDef_oaAppObject, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaAppObject_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaAppObject data;
  int convert_status=PyoaBooleanAppDef_oaAppObject_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaAppObject p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaAppObject_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaAppObject_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaAppObject_get,METH_VARARGS,oaBooleanAppDef_oaAppObject_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaAppObject_getDefault,METH_VARARGS,oaBooleanAppDef_oaAppObject_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaAppObject_set,METH_VARARGS,oaBooleanAppDef_oaAppObject_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaAppObject_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaAppObject_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaAppObject_tp_assign,METH_VARARGS,oaBooleanAppDef_oaAppObject_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAppObject_doc[] = 
"Class: oaBooleanAppDef_oaAppObject\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaAppObject)\n"
"    Calls: (const oaBooleanAppDef_oaAppObject&)\n"
"    Signature: oaBooleanAppDef_oaAppObject||cref-oaBooleanAppDef_oaAppObject,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaAppObject_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaAppObject",
    sizeof(PyoaBooleanAppDef_oaAppObjectObject),
    0,
    (destructor)oaBooleanAppDef_oaAppObject_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaAppObject_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaAppObject_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaAppObject_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaAppObject_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaAppObject_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAppObject_static_find_doc[] = 
"Class: oaBooleanAppDef_oaAppObject, Function: find\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAppObject* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaAppObject|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaAppObject_static_find(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaString p1;
    PyParamoaAppObjectDef p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaString_Convert,&p1,
          &PyoaAppObjectDef_Convert,&p2)) {
        if (!PyValidateDbObject(p2.Data(),2)) return NULL;
        oaBooleanAppDef_oaAppObjectp result= (oaBooleanAppDef_oaAppObject::find(p1.Data(),p2.Data()));
        return PyoaBooleanAppDef_oaAppObject_FromoaBooleanAppDef_oaAppObject(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAppObject_static_get_doc[] = 
"Class: oaBooleanAppDef_oaAppObject, Function: get\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAppObject* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAppObject|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAppObject* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAppObject|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAppObject* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAppObject|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaAppObject_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAppObjectp result= (oaBooleanAppDef_oaAppObject::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAppObject_FromoaBooleanAppDef_oaAppObject(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAppObjectp result= (oaBooleanAppDef_oaAppObject::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaAppObject_FromoaBooleanAppDef_oaAppObject(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAppObjectp result= (oaBooleanAppDef_oaAppObject::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaAppObject_FromoaBooleanAppDef_oaAppObject(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaAppObject, function: get, Choices are:\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaAppObject_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaAppObject_static_find,METH_VARARGS,oaBooleanAppDef_oaAppObject_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaAppObject_static_get,METH_VARARGS,oaBooleanAppDef_oaAppObject_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaAppObject_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaAppObject_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaAppObject\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaAppObject",
           (PyObject*)(&PyoaBooleanAppDef_oaAppObject_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaAppObject\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaAppObject_Type.tp_dict;
    for(method=oaBooleanAppDef_oaAppObject_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaAssignment
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAssignment_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaAssignment_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaAssignmentObject* self = (PyoaBooleanAppDef_oaAssignmentObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaAssignment)
    {
        PyParamoaBooleanAppDef_oaAssignment p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaAssignment_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaAssignment, Choices are:\n"
        "    (oaBooleanAppDef_oaAssignment)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaAssignment_tp_dealloc(PyoaBooleanAppDef_oaAssignmentObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaAssignment_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaAssignment value;
    int convert_status=PyoaBooleanAppDef_oaAssignment_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaBooleanAppDef_oaAssignment::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaAssignment_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaAssignment v1;
    PyParamoaBooleanAppDef_oaAssignment v2;
    int convert_status1=PyoaBooleanAppDef_oaAssignment_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaAssignment_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaAssignment_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaAssignment* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaAssignment_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaAssignment**) ((PyoaBooleanAppDef_oaAssignmentObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaAssignment Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(oaBooleanAppDef_oaAssignment** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaAssignment* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaAssignment_Type.tp_alloc(&PyoaBooleanAppDef_oaAssignment_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaAssignmentObject* self = (PyoaBooleanAppDef_oaAssignmentObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(oaBooleanAppDef_oaAssignment* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaAssignment_Type.tp_alloc(&PyoaBooleanAppDef_oaAssignment_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaAssignmentObject* self = (PyoaBooleanAppDef_oaAssignmentObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAssignment_get_doc[] = 
"Class: oaBooleanAppDef_oaAssignment, Function: get\n"
"  Paramegers: (oaAssignment)\n"
"    Calls: oaBoolean get(const oaAssignment* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaAssignment,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAssignment_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAssignment data;
    int convert_status=PyoaBooleanAppDef_oaAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAssignmentObject* self=(PyoaBooleanAppDef_oaAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAssignment p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaAssignment_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAssignment_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaAssignment, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaAssignment_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAssignment data;
    int convert_status=PyoaBooleanAppDef_oaAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAssignmentObject* self=(PyoaBooleanAppDef_oaAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAssignment_set_doc[] = 
"Class: oaBooleanAppDef_oaAssignment, Function: set\n"
"  Paramegers: (oaAssignment,oaBoolean)\n"
"    Calls: void set(oaAssignment* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaAssignment,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaAssignment_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaAssignment data;
    int convert_status=PyoaBooleanAppDef_oaAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaAssignmentObject* self=(PyoaBooleanAppDef_oaAssignmentObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaAssignment p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaAssignment_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAssignment_isNull_doc[] =
"Class: oaBooleanAppDef_oaAssignment, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaAssignment_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaAssignment data;
    int convert_status=PyoaBooleanAppDef_oaAssignment_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaAssignment_assign_doc[] = 
"Class: oaBooleanAppDef_oaAssignment, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaAssignment_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaAssignment data;
  int convert_status=PyoaBooleanAppDef_oaAssignment_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaAssignment p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaAssignment_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaAssignment_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaAssignment_get,METH_VARARGS,oaBooleanAppDef_oaAssignment_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaAssignment_getDefault,METH_VARARGS,oaBooleanAppDef_oaAssignment_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaAssignment_set,METH_VARARGS,oaBooleanAppDef_oaAssignment_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaAssignment_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaAssignment_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaAssignment_tp_assign,METH_VARARGS,oaBooleanAppDef_oaAssignment_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAssignment_doc[] = 
"Class: oaBooleanAppDef_oaAssignment\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaAssignment)\n"
"    Calls: (const oaBooleanAppDef_oaAssignment&)\n"
"    Signature: oaBooleanAppDef_oaAssignment||cref-oaBooleanAppDef_oaAssignment,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaAssignment_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaAssignment",
    sizeof(PyoaBooleanAppDef_oaAssignmentObject),
    0,
    (destructor)oaBooleanAppDef_oaAssignment_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaAssignment_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaAssignment_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaAssignment_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaAssignment_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaAssignment_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAssignment_static_find_doc[] = 
"Class: oaBooleanAppDef_oaAssignment, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaAssignment* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAssignment* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaAssignment_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::find(p1.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaAssignment, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaAssignment_static_get_doc[] = 
"Class: oaBooleanAppDef_oaAssignment, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaAssignment* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAssignment* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAssignment* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaAssignment* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaAssignment* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaAssignment|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaAssignment_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::get(p1.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaAssignmentp result= (oaBooleanAppDef_oaAssignment::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaAssignment_FromoaBooleanAppDef_oaAssignment(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaAssignment, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaAssignment_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaAssignment_static_find,METH_VARARGS,oaBooleanAppDef_oaAssignment_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaAssignment_static_get,METH_VARARGS,oaBooleanAppDef_oaAssignment_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaAssignment_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaAssignment_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaAssignment\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaAssignment",
           (PyObject*)(&PyoaBooleanAppDef_oaAssignment_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaAssignment\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaAssignment_Type.tp_dict;
    for(method=oaBooleanAppDef_oaAssignment_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaBlock
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBlock_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaBlock_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaBlockObject* self = (PyoaBooleanAppDef_oaBlockObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaBlock)
    {
        PyParamoaBooleanAppDef_oaBlock p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaBlock_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaBlock, Choices are:\n"
        "    (oaBooleanAppDef_oaBlock)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaBlock_tp_dealloc(PyoaBooleanAppDef_oaBlockObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBlock_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaBlock value;
    int convert_status=PyoaBooleanAppDef_oaBlock_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaBooleanAppDef_oaBlock::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaBlock_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaBlock v1;
    PyParamoaBooleanAppDef_oaBlock v2;
    int convert_status1=PyoaBooleanAppDef_oaBlock_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaBlock_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaBlock_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaBlock* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaBlock_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaBlock**) ((PyoaBooleanAppDef_oaBlockObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaBlock Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(oaBooleanAppDef_oaBlock** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaBlock* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaBlock_Type.tp_alloc(&PyoaBooleanAppDef_oaBlock_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaBlockObject* self = (PyoaBooleanAppDef_oaBlockObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(oaBooleanAppDef_oaBlock* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaBlock_Type.tp_alloc(&PyoaBooleanAppDef_oaBlock_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaBlockObject* self = (PyoaBooleanAppDef_oaBlockObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlock_get_doc[] = 
"Class: oaBooleanAppDef_oaBlock, Function: get\n"
"  Paramegers: (oaBlock)\n"
"    Calls: oaBoolean get(const oaBlock* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaBlock,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBlock_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBlock data;
    int convert_status=PyoaBooleanAppDef_oaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBlockObject* self=(PyoaBooleanAppDef_oaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBlock p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBlock_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlock_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaBlock, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaBlock_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBlock data;
    int convert_status=PyoaBooleanAppDef_oaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBlockObject* self=(PyoaBooleanAppDef_oaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlock_set_doc[] = 
"Class: oaBooleanAppDef_oaBlock, Function: set\n"
"  Paramegers: (oaBlock,oaBoolean)\n"
"    Calls: void set(oaBlock* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaBlock,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBlock_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBlock data;
    int convert_status=PyoaBooleanAppDef_oaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBlockObject* self=(PyoaBooleanAppDef_oaBlockObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBlock p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaBlock_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlock_isNull_doc[] =
"Class: oaBooleanAppDef_oaBlock, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaBlock_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaBlock data;
    int convert_status=PyoaBooleanAppDef_oaBlock_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaBlock_assign_doc[] = 
"Class: oaBooleanAppDef_oaBlock, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaBlock_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaBlock data;
  int convert_status=PyoaBooleanAppDef_oaBlock_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaBlock p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaBlock_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaBlock_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaBlock_get,METH_VARARGS,oaBooleanAppDef_oaBlock_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaBlock_getDefault,METH_VARARGS,oaBooleanAppDef_oaBlock_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaBlock_set,METH_VARARGS,oaBooleanAppDef_oaBlock_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaBlock_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaBlock_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaBlock_tp_assign,METH_VARARGS,oaBooleanAppDef_oaBlock_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlock_doc[] = 
"Class: oaBooleanAppDef_oaBlock\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaBlock)\n"
"    Calls: (const oaBooleanAppDef_oaBlock&)\n"
"    Signature: oaBooleanAppDef_oaBlock||cref-oaBooleanAppDef_oaBlock,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaBlock_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaBlock",
    sizeof(PyoaBooleanAppDef_oaBlockObject),
    0,
    (destructor)oaBooleanAppDef_oaBlock_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaBlock_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaBlock_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaBlock_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaBlock_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaBlock_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlock_static_find_doc[] = 
"Class: oaBooleanAppDef_oaBlock, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBlock* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBlock|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBlock* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBlock|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaBlock_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::find(p1.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBlock, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlock_static_get_doc[] = 
"Class: oaBooleanAppDef_oaBlock, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBlock* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlock|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlock* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlock|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlock* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlock|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBlock* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlock|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlock* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlock|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlock* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlock|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaBlock_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::get(p1.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockp result= (oaBooleanAppDef_oaBlock::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaBlock_FromoaBooleanAppDef_oaBlock(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBlock, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaBlock_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaBlock_static_find,METH_VARARGS,oaBooleanAppDef_oaBlock_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaBlock_static_get,METH_VARARGS,oaBooleanAppDef_oaBlock_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaBlock_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaBlock_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaBlock\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaBlock",
           (PyObject*)(&PyoaBooleanAppDef_oaBlock_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaBlock\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaBlock_Type.tp_dict;
    for(method=oaBooleanAppDef_oaBlock_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaBlockage
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBlockage_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaBlockage_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaBlockageObject* self = (PyoaBooleanAppDef_oaBlockageObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaBlockage)
    {
        PyParamoaBooleanAppDef_oaBlockage p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaBlockage_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaBlockage, Choices are:\n"
        "    (oaBooleanAppDef_oaBlockage)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaBlockage_tp_dealloc(PyoaBooleanAppDef_oaBlockageObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBlockage_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaBlockage value;
    int convert_status=PyoaBooleanAppDef_oaBlockage_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaBooleanAppDef_oaBlockage::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaBlockage_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaBlockage v1;
    PyParamoaBooleanAppDef_oaBlockage v2;
    int convert_status1=PyoaBooleanAppDef_oaBlockage_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaBlockage_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaBlockage_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaBlockage* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaBlockage_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaBlockage**) ((PyoaBooleanAppDef_oaBlockageObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaBlockage Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(oaBooleanAppDef_oaBlockage** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaBlockage* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaBlockage_Type.tp_alloc(&PyoaBooleanAppDef_oaBlockage_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaBlockageObject* self = (PyoaBooleanAppDef_oaBlockageObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(oaBooleanAppDef_oaBlockage* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaBlockage_Type.tp_alloc(&PyoaBooleanAppDef_oaBlockage_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaBlockageObject* self = (PyoaBooleanAppDef_oaBlockageObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlockage_get_doc[] = 
"Class: oaBooleanAppDef_oaBlockage, Function: get\n"
"  Paramegers: (oaBlockage)\n"
"    Calls: oaBoolean get(const oaBlockage* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaBlockage,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBlockage_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBlockage data;
    int convert_status=PyoaBooleanAppDef_oaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBlockageObject* self=(PyoaBooleanAppDef_oaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBlockage p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBlockage_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlockage_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaBlockage, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaBlockage_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBlockage data;
    int convert_status=PyoaBooleanAppDef_oaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBlockageObject* self=(PyoaBooleanAppDef_oaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlockage_set_doc[] = 
"Class: oaBooleanAppDef_oaBlockage, Function: set\n"
"  Paramegers: (oaBlockage,oaBoolean)\n"
"    Calls: void set(oaBlockage* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaBlockage,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBlockage_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBlockage data;
    int convert_status=PyoaBooleanAppDef_oaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBlockageObject* self=(PyoaBooleanAppDef_oaBlockageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBlockage p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaBlockage_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlockage_isNull_doc[] =
"Class: oaBooleanAppDef_oaBlockage, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaBlockage_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaBlockage data;
    int convert_status=PyoaBooleanAppDef_oaBlockage_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaBlockage_assign_doc[] = 
"Class: oaBooleanAppDef_oaBlockage, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaBlockage_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaBlockage data;
  int convert_status=PyoaBooleanAppDef_oaBlockage_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaBlockage p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaBlockage_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaBlockage_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaBlockage_get,METH_VARARGS,oaBooleanAppDef_oaBlockage_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaBlockage_getDefault,METH_VARARGS,oaBooleanAppDef_oaBlockage_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaBlockage_set,METH_VARARGS,oaBooleanAppDef_oaBlockage_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaBlockage_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaBlockage_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaBlockage_tp_assign,METH_VARARGS,oaBooleanAppDef_oaBlockage_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlockage_doc[] = 
"Class: oaBooleanAppDef_oaBlockage\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaBlockage)\n"
"    Calls: (const oaBooleanAppDef_oaBlockage&)\n"
"    Signature: oaBooleanAppDef_oaBlockage||cref-oaBooleanAppDef_oaBlockage,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaBlockage_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaBlockage",
    sizeof(PyoaBooleanAppDef_oaBlockageObject),
    0,
    (destructor)oaBooleanAppDef_oaBlockage_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaBlockage_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaBlockage_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaBlockage_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaBlockage_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaBlockage_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlockage_static_find_doc[] = 
"Class: oaBooleanAppDef_oaBlockage, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBlockage* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBlockage* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaBlockage_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::find(p1.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBlockage, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBlockage_static_get_doc[] = 
"Class: oaBooleanAppDef_oaBlockage, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBlockage* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlockage* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlockage* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBlockage* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlockage* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBlockage* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBlockage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaBlockage_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::get(p1.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBlockagep result= (oaBooleanAppDef_oaBlockage::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaBlockage_FromoaBooleanAppDef_oaBlockage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBlockage, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaBlockage_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaBlockage_static_find,METH_VARARGS,oaBooleanAppDef_oaBlockage_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaBlockage_static_get,METH_VARARGS,oaBooleanAppDef_oaBlockage_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaBlockage_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaBlockage_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaBlockage\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaBlockage",
           (PyObject*)(&PyoaBooleanAppDef_oaBlockage_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaBlockage\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaBlockage_Type.tp_dict;
    for(method=oaBooleanAppDef_oaBlockage_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaBoundary
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBoundary_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaBoundary_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaBoundaryObject* self = (PyoaBooleanAppDef_oaBoundaryObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaBoundary)
    {
        PyParamoaBooleanAppDef_oaBoundary p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaBoundary_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaBoundary, Choices are:\n"
        "    (oaBooleanAppDef_oaBoundary)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaBoundary_tp_dealloc(PyoaBooleanAppDef_oaBoundaryObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBoundary_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaBoundary value;
    int convert_status=PyoaBooleanAppDef_oaBoundary_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaBooleanAppDef_oaBoundary::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaBoundary_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaBoundary v1;
    PyParamoaBooleanAppDef_oaBoundary v2;
    int convert_status1=PyoaBooleanAppDef_oaBoundary_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaBoundary_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaBoundary_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaBoundary* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaBoundary_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaBoundary**) ((PyoaBooleanAppDef_oaBoundaryObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaBoundary Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(oaBooleanAppDef_oaBoundary** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaBoundary* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaBoundary_Type.tp_alloc(&PyoaBooleanAppDef_oaBoundary_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaBoundaryObject* self = (PyoaBooleanAppDef_oaBoundaryObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(oaBooleanAppDef_oaBoundary* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaBoundary_Type.tp_alloc(&PyoaBooleanAppDef_oaBoundary_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaBoundaryObject* self = (PyoaBooleanAppDef_oaBoundaryObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBoundary_get_doc[] = 
"Class: oaBooleanAppDef_oaBoundary, Function: get\n"
"  Paramegers: (oaBoundary)\n"
"    Calls: oaBoolean get(const oaBoundary* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaBoundary,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBoundary_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBoundary data;
    int convert_status=PyoaBooleanAppDef_oaBoundary_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBoundaryObject* self=(PyoaBooleanAppDef_oaBoundaryObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBoundary p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBoundary_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBoundary_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaBoundary, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaBoundary_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBoundary data;
    int convert_status=PyoaBooleanAppDef_oaBoundary_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBoundaryObject* self=(PyoaBooleanAppDef_oaBoundaryObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBoundary_set_doc[] = 
"Class: oaBooleanAppDef_oaBoundary, Function: set\n"
"  Paramegers: (oaBoundary,oaBoolean)\n"
"    Calls: void set(oaBoundary* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaBoundary,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBoundary_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBoundary data;
    int convert_status=PyoaBooleanAppDef_oaBoundary_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBoundaryObject* self=(PyoaBooleanAppDef_oaBoundaryObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBoundary p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaBoundary_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBoundary_isNull_doc[] =
"Class: oaBooleanAppDef_oaBoundary, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaBoundary_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaBoundary data;
    int convert_status=PyoaBooleanAppDef_oaBoundary_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaBoundary_assign_doc[] = 
"Class: oaBooleanAppDef_oaBoundary, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaBoundary_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaBoundary data;
  int convert_status=PyoaBooleanAppDef_oaBoundary_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaBoundary p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaBoundary_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaBoundary_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaBoundary_get,METH_VARARGS,oaBooleanAppDef_oaBoundary_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaBoundary_getDefault,METH_VARARGS,oaBooleanAppDef_oaBoundary_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaBoundary_set,METH_VARARGS,oaBooleanAppDef_oaBoundary_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaBoundary_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaBoundary_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaBoundary_tp_assign,METH_VARARGS,oaBooleanAppDef_oaBoundary_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBoundary_doc[] = 
"Class: oaBooleanAppDef_oaBoundary\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaBoundary)\n"
"    Calls: (const oaBooleanAppDef_oaBoundary&)\n"
"    Signature: oaBooleanAppDef_oaBoundary||cref-oaBooleanAppDef_oaBoundary,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaBoundary_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaBoundary",
    sizeof(PyoaBooleanAppDef_oaBoundaryObject),
    0,
    (destructor)oaBooleanAppDef_oaBoundary_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaBoundary_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaBoundary_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaBoundary_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaBoundary_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaBoundary_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBoundary_static_find_doc[] = 
"Class: oaBooleanAppDef_oaBoundary, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBoundary* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBoundary* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaBoundary_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::find(p1.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBoundary, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBoundary_static_get_doc[] = 
"Class: oaBooleanAppDef_oaBoundary, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBoundary* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBoundary* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBoundary* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBoundary* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBoundary* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBoundary* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBoundary|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaBoundary_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::get(p1.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBoundaryp result= (oaBooleanAppDef_oaBoundary::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaBoundary_FromoaBooleanAppDef_oaBoundary(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBoundary, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaBoundary_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaBoundary_static_find,METH_VARARGS,oaBooleanAppDef_oaBoundary_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaBoundary_static_get,METH_VARARGS,oaBooleanAppDef_oaBoundary_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaBoundary_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaBoundary_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaBoundary\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaBoundary",
           (PyObject*)(&PyoaBooleanAppDef_oaBoundary_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaBoundary\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaBoundary_Type.tp_dict;
    for(method=oaBooleanAppDef_oaBoundary_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaBusNetDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBusNetDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaBusNetDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaBusNetDefObject* self = (PyoaBooleanAppDef_oaBusNetDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaBusNetDef)
    {
        PyParamoaBooleanAppDef_oaBusNetDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaBusNetDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaBusNetDef, Choices are:\n"
        "    (oaBooleanAppDef_oaBusNetDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaBusNetDef_tp_dealloc(PyoaBooleanAppDef_oaBusNetDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBusNetDef_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaBusNetDef value;
    int convert_status=PyoaBooleanAppDef_oaBusNetDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaBooleanAppDef_oaBusNetDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaBusNetDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaBusNetDef v1;
    PyParamoaBooleanAppDef_oaBusNetDef v2;
    int convert_status1=PyoaBooleanAppDef_oaBusNetDef_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaBusNetDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaBusNetDef_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaBusNetDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaBusNetDef_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaBusNetDef**) ((PyoaBooleanAppDef_oaBusNetDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaBusNetDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(oaBooleanAppDef_oaBusNetDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaBusNetDef* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaBusNetDef_Type.tp_alloc(&PyoaBooleanAppDef_oaBusNetDef_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaBusNetDefObject* self = (PyoaBooleanAppDef_oaBusNetDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(oaBooleanAppDef_oaBusNetDef* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaBusNetDef_Type.tp_alloc(&PyoaBooleanAppDef_oaBusNetDef_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaBusNetDefObject* self = (PyoaBooleanAppDef_oaBusNetDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusNetDef_get_doc[] = 
"Class: oaBooleanAppDef_oaBusNetDef, Function: get\n"
"  Paramegers: (oaBusNetDef)\n"
"    Calls: oaBoolean get(const oaBusNetDef* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaBusNetDef,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBusNetDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBusNetDef data;
    int convert_status=PyoaBooleanAppDef_oaBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBusNetDefObject* self=(PyoaBooleanAppDef_oaBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBusNetDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBusNetDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusNetDef_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaBusNetDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaBusNetDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBusNetDef data;
    int convert_status=PyoaBooleanAppDef_oaBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBusNetDefObject* self=(PyoaBooleanAppDef_oaBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusNetDef_set_doc[] = 
"Class: oaBooleanAppDef_oaBusNetDef, Function: set\n"
"  Paramegers: (oaBusNetDef,oaBoolean)\n"
"    Calls: void set(oaBusNetDef* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaBusNetDef,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBusNetDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBusNetDef data;
    int convert_status=PyoaBooleanAppDef_oaBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBusNetDefObject* self=(PyoaBooleanAppDef_oaBusNetDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBusNetDef p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaBusNetDef_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusNetDef_isNull_doc[] =
"Class: oaBooleanAppDef_oaBusNetDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaBusNetDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaBusNetDef data;
    int convert_status=PyoaBooleanAppDef_oaBusNetDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaBusNetDef_assign_doc[] = 
"Class: oaBooleanAppDef_oaBusNetDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaBusNetDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaBusNetDef data;
  int convert_status=PyoaBooleanAppDef_oaBusNetDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaBusNetDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaBusNetDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaBusNetDef_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaBusNetDef_get,METH_VARARGS,oaBooleanAppDef_oaBusNetDef_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaBusNetDef_getDefault,METH_VARARGS,oaBooleanAppDef_oaBusNetDef_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaBusNetDef_set,METH_VARARGS,oaBooleanAppDef_oaBusNetDef_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaBusNetDef_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaBusNetDef_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaBusNetDef_tp_assign,METH_VARARGS,oaBooleanAppDef_oaBusNetDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusNetDef_doc[] = 
"Class: oaBooleanAppDef_oaBusNetDef\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaBusNetDef)\n"
"    Calls: (const oaBooleanAppDef_oaBusNetDef&)\n"
"    Signature: oaBooleanAppDef_oaBusNetDef||cref-oaBooleanAppDef_oaBusNetDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaBusNetDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaBusNetDef",
    sizeof(PyoaBooleanAppDef_oaBusNetDefObject),
    0,
    (destructor)oaBooleanAppDef_oaBusNetDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaBusNetDef_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaBusNetDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaBusNetDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaBusNetDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaBusNetDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusNetDef_static_find_doc[] = 
"Class: oaBooleanAppDef_oaBusNetDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaBusNetDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::find(p1.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBusNetDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusNetDef_static_get_doc[] = 
"Class: oaBooleanAppDef_oaBusNetDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusNetDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusNetDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaBusNetDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::get(p1.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusNetDefp result= (oaBooleanAppDef_oaBusNetDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaBusNetDef_FromoaBooleanAppDef_oaBusNetDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBusNetDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaBusNetDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaBusNetDef_static_find,METH_VARARGS,oaBooleanAppDef_oaBusNetDef_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaBusNetDef_static_get,METH_VARARGS,oaBooleanAppDef_oaBusNetDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaBusNetDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaBusNetDef_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaBusNetDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaBusNetDef",
           (PyObject*)(&PyoaBooleanAppDef_oaBusNetDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaBusNetDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaBusNetDef_Type.tp_dict;
    for(method=oaBooleanAppDef_oaBusNetDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaBusTermDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBusTermDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaBusTermDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaBusTermDefObject* self = (PyoaBooleanAppDef_oaBusTermDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaBusTermDef)
    {
        PyParamoaBooleanAppDef_oaBusTermDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaBusTermDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaBusTermDef, Choices are:\n"
        "    (oaBooleanAppDef_oaBusTermDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaBusTermDef_tp_dealloc(PyoaBooleanAppDef_oaBusTermDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaBusTermDef_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaBusTermDef value;
    int convert_status=PyoaBooleanAppDef_oaBusTermDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaBooleanAppDef_oaBusTermDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaBusTermDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaBusTermDef v1;
    PyParamoaBooleanAppDef_oaBusTermDef v2;
    int convert_status1=PyoaBooleanAppDef_oaBusTermDef_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaBusTermDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaBusTermDef_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaBusTermDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaBusTermDef_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaBusTermDef**) ((PyoaBooleanAppDef_oaBusTermDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaBusTermDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(oaBooleanAppDef_oaBusTermDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaBusTermDef* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaBusTermDef_Type.tp_alloc(&PyoaBooleanAppDef_oaBusTermDef_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaBusTermDefObject* self = (PyoaBooleanAppDef_oaBusTermDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(oaBooleanAppDef_oaBusTermDef* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaBusTermDef_Type.tp_alloc(&PyoaBooleanAppDef_oaBusTermDef_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaBusTermDefObject* self = (PyoaBooleanAppDef_oaBusTermDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusTermDef_get_doc[] = 
"Class: oaBooleanAppDef_oaBusTermDef, Function: get\n"
"  Paramegers: (oaBusTermDef)\n"
"    Calls: oaBoolean get(const oaBusTermDef* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaBusTermDef,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBusTermDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBusTermDef data;
    int convert_status=PyoaBooleanAppDef_oaBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBusTermDefObject* self=(PyoaBooleanAppDef_oaBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBusTermDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaBusTermDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusTermDef_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaBusTermDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaBusTermDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBusTermDef data;
    int convert_status=PyoaBooleanAppDef_oaBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBusTermDefObject* self=(PyoaBooleanAppDef_oaBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusTermDef_set_doc[] = 
"Class: oaBooleanAppDef_oaBusTermDef, Function: set\n"
"  Paramegers: (oaBusTermDef,oaBoolean)\n"
"    Calls: void set(oaBusTermDef* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaBusTermDef,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaBusTermDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaBusTermDef data;
    int convert_status=PyoaBooleanAppDef_oaBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaBusTermDefObject* self=(PyoaBooleanAppDef_oaBusTermDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaBusTermDef p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaBusTermDef_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusTermDef_isNull_doc[] =
"Class: oaBooleanAppDef_oaBusTermDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaBusTermDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaBusTermDef data;
    int convert_status=PyoaBooleanAppDef_oaBusTermDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaBusTermDef_assign_doc[] = 
"Class: oaBooleanAppDef_oaBusTermDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaBusTermDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaBusTermDef data;
  int convert_status=PyoaBooleanAppDef_oaBusTermDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaBusTermDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaBusTermDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaBusTermDef_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaBusTermDef_get,METH_VARARGS,oaBooleanAppDef_oaBusTermDef_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaBusTermDef_getDefault,METH_VARARGS,oaBooleanAppDef_oaBusTermDef_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaBusTermDef_set,METH_VARARGS,oaBooleanAppDef_oaBusTermDef_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaBusTermDef_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaBusTermDef_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaBusTermDef_tp_assign,METH_VARARGS,oaBooleanAppDef_oaBusTermDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusTermDef_doc[] = 
"Class: oaBooleanAppDef_oaBusTermDef\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaBusTermDef)\n"
"    Calls: (const oaBooleanAppDef_oaBusTermDef&)\n"
"    Signature: oaBooleanAppDef_oaBusTermDef||cref-oaBooleanAppDef_oaBusTermDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaBusTermDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaBusTermDef",
    sizeof(PyoaBooleanAppDef_oaBusTermDefObject),
    0,
    (destructor)oaBooleanAppDef_oaBusTermDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaBusTermDef_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaBusTermDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaBusTermDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaBusTermDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaBusTermDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusTermDef_static_find_doc[] = 
"Class: oaBooleanAppDef_oaBusTermDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaBusTermDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::find(p1.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBusTermDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaBusTermDef_static_get_doc[] = 
"Class: oaBooleanAppDef_oaBusTermDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaBusTermDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaBusTermDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaBusTermDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::get(p1.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaBusTermDefp result= (oaBooleanAppDef_oaBusTermDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaBusTermDef_FromoaBooleanAppDef_oaBusTermDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaBusTermDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaBusTermDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaBusTermDef_static_find,METH_VARARGS,oaBooleanAppDef_oaBusTermDef_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaBusTermDef_static_get,METH_VARARGS,oaBooleanAppDef_oaBusTermDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaBusTermDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaBusTermDef_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaBusTermDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaBusTermDef",
           (PyObject*)(&PyoaBooleanAppDef_oaBusTermDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaBusTermDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaBusTermDef_Type.tp_dict;
    for(method=oaBooleanAppDef_oaBusTermDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaCMap
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCMap_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaCMap_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaCMapObject* self = (PyoaBooleanAppDef_oaCMapObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaCMap)
    {
        PyParamoaBooleanAppDef_oaCMap p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaCMap_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaCMap, Choices are:\n"
        "    (oaBooleanAppDef_oaCMap)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaCMap_tp_dealloc(PyoaBooleanAppDef_oaCMapObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCMap_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaCMap value;
    int convert_status=PyoaBooleanAppDef_oaCMap_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaBooleanAppDef_oaCMap::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaCMap_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaCMap v1;
    PyParamoaBooleanAppDef_oaCMap v2;
    int convert_status1=PyoaBooleanAppDef_oaCMap_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaCMap_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaCMap_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaCMap* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaCMap_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaCMap**) ((PyoaBooleanAppDef_oaCMapObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaCMap Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(oaBooleanAppDef_oaCMap** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaCMap* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaCMap_Type.tp_alloc(&PyoaBooleanAppDef_oaCMap_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaCMapObject* self = (PyoaBooleanAppDef_oaCMapObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(oaBooleanAppDef_oaCMap* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaCMap_Type.tp_alloc(&PyoaBooleanAppDef_oaCMap_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaCMapObject* self = (PyoaBooleanAppDef_oaCMapObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCMap_get_doc[] = 
"Class: oaBooleanAppDef_oaCMap, Function: get\n"
"  Paramegers: (oaCMap)\n"
"    Calls: oaBoolean get(const oaCMap* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaCMap,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCMap_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCMap data;
    int convert_status=PyoaBooleanAppDef_oaCMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCMapObject* self=(PyoaBooleanAppDef_oaCMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCMap p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaCMap_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCMap_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaCMap, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaCMap_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCMap data;
    int convert_status=PyoaBooleanAppDef_oaCMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCMapObject* self=(PyoaBooleanAppDef_oaCMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCMap_set_doc[] = 
"Class: oaBooleanAppDef_oaCMap, Function: set\n"
"  Paramegers: (oaCMap,oaBoolean)\n"
"    Calls: void set(oaCMap* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaCMap,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCMap_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCMap data;
    int convert_status=PyoaBooleanAppDef_oaCMap_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCMapObject* self=(PyoaBooleanAppDef_oaCMapObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCMap p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaCMap_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCMap_isNull_doc[] =
"Class: oaBooleanAppDef_oaCMap, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaCMap_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaCMap data;
    int convert_status=PyoaBooleanAppDef_oaCMap_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaCMap_assign_doc[] = 
"Class: oaBooleanAppDef_oaCMap, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaCMap_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaCMap data;
  int convert_status=PyoaBooleanAppDef_oaCMap_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaCMap p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaCMap_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaCMap_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaCMap_get,METH_VARARGS,oaBooleanAppDef_oaCMap_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaCMap_getDefault,METH_VARARGS,oaBooleanAppDef_oaCMap_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaCMap_set,METH_VARARGS,oaBooleanAppDef_oaCMap_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaCMap_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaCMap_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaCMap_tp_assign,METH_VARARGS,oaBooleanAppDef_oaCMap_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCMap_doc[] = 
"Class: oaBooleanAppDef_oaCMap\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaCMap)\n"
"    Calls: (const oaBooleanAppDef_oaCMap&)\n"
"    Signature: oaBooleanAppDef_oaCMap||cref-oaBooleanAppDef_oaCMap,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaCMap_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaCMap",
    sizeof(PyoaBooleanAppDef_oaCMapObject),
    0,
    (destructor)oaBooleanAppDef_oaCMap_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaCMap_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaCMap_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaCMap_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaCMap_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaCMap_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCMap_static_find_doc[] = 
"Class: oaBooleanAppDef_oaCMap, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCMap* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCMap|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCMap* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCMap|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaCMap_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::find(p1.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCMap, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCMap_static_get_doc[] = 
"Class: oaBooleanAppDef_oaCMap, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCMap* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCMap|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCMap* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCMap|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCMap* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCMap|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCMap* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCMap|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCMap* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCMap|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCMap* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCMap|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaCMap_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::get(p1.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCMapp result= (oaBooleanAppDef_oaCMap::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaCMap_FromoaBooleanAppDef_oaCMap(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCMap, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaCMap_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaCMap_static_find,METH_VARARGS,oaBooleanAppDef_oaCMap_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaCMap_static_get,METH_VARARGS,oaBooleanAppDef_oaCMap_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaCMap_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaCMap_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaCMap\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaCMap",
           (PyObject*)(&PyoaBooleanAppDef_oaCMap_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaCMap\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaCMap_Type.tp_dict;
    for(method=oaBooleanAppDef_oaCMap_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaCell
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCell_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaCell_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaCellObject* self = (PyoaBooleanAppDef_oaCellObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaCell)
    {
        PyParamoaBooleanAppDef_oaCell p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaCell_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaCell, Choices are:\n"
        "    (oaBooleanAppDef_oaCell)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaCell_tp_dealloc(PyoaBooleanAppDef_oaCellObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCell_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaCell value;
    int convert_status=PyoaBooleanAppDef_oaCell_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaBooleanAppDef_oaCell::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaCell_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaCell v1;
    PyParamoaBooleanAppDef_oaCell v2;
    int convert_status1=PyoaBooleanAppDef_oaCell_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaCell_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaCell_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaCell* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaCell_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaCell**) ((PyoaBooleanAppDef_oaCellObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaCell Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(oaBooleanAppDef_oaCell** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaCell* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaCell_Type.tp_alloc(&PyoaBooleanAppDef_oaCell_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaCellObject* self = (PyoaBooleanAppDef_oaCellObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(oaBooleanAppDef_oaCell* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaCell_Type.tp_alloc(&PyoaBooleanAppDef_oaCell_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaCellObject* self = (PyoaBooleanAppDef_oaCellObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCell_get_doc[] = 
"Class: oaBooleanAppDef_oaCell, Function: get\n"
"  Paramegers: (oaCell)\n"
"    Calls: oaBoolean get(const oaCell* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaCell,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCell_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCell data;
    int convert_status=PyoaBooleanAppDef_oaCell_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCellObject* self=(PyoaBooleanAppDef_oaCellObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCell p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaCell_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCell_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaCell, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaCell_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCell data;
    int convert_status=PyoaBooleanAppDef_oaCell_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCellObject* self=(PyoaBooleanAppDef_oaCellObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCell_set_doc[] = 
"Class: oaBooleanAppDef_oaCell, Function: set\n"
"  Paramegers: (oaCell,oaBoolean)\n"
"    Calls: void set(oaCell* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaCell,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCell_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCell data;
    int convert_status=PyoaBooleanAppDef_oaCell_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCellObject* self=(PyoaBooleanAppDef_oaCellObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCell p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaCell_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCell_isNull_doc[] =
"Class: oaBooleanAppDef_oaCell, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaCell_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaCell data;
    int convert_status=PyoaBooleanAppDef_oaCell_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaCell_assign_doc[] = 
"Class: oaBooleanAppDef_oaCell, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaCell_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaCell data;
  int convert_status=PyoaBooleanAppDef_oaCell_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaCell p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaCell_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaCell_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaCell_get,METH_VARARGS,oaBooleanAppDef_oaCell_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaCell_getDefault,METH_VARARGS,oaBooleanAppDef_oaCell_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaCell_set,METH_VARARGS,oaBooleanAppDef_oaCell_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaCell_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaCell_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaCell_tp_assign,METH_VARARGS,oaBooleanAppDef_oaCell_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCell_doc[] = 
"Class: oaBooleanAppDef_oaCell\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaCell)\n"
"    Calls: (const oaBooleanAppDef_oaCell&)\n"
"    Signature: oaBooleanAppDef_oaCell||cref-oaBooleanAppDef_oaCell,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaCell_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaCell",
    sizeof(PyoaBooleanAppDef_oaCellObject),
    0,
    (destructor)oaBooleanAppDef_oaCell_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaCell_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaCell_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaCell_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaCell_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaCell_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCell_static_find_doc[] = 
"Class: oaBooleanAppDef_oaCell, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCell* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCell|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCell* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCell|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaCell_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::find(p1.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCell, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCell_static_get_doc[] = 
"Class: oaBooleanAppDef_oaCell, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCell* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCell|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCell* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCell|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCell* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCell|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCell* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCell|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCell* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCell|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCell* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCell|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaCell_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::get(p1.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellp result= (oaBooleanAppDef_oaCell::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaCell_FromoaBooleanAppDef_oaCell(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCell, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaCell_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaCell_static_find,METH_VARARGS,oaBooleanAppDef_oaCell_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaCell_static_get,METH_VARARGS,oaBooleanAppDef_oaCell_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaCell_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaCell_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaCell\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaCell",
           (PyObject*)(&PyoaBooleanAppDef_oaCell_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaCell\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaCell_Type.tp_dict;
    for(method=oaBooleanAppDef_oaCell_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaCellView
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCellView_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaCellView_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaCellViewObject* self = (PyoaBooleanAppDef_oaCellViewObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaCellView)
    {
        PyParamoaBooleanAppDef_oaCellView p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaCellView_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaCellView, Choices are:\n"
        "    (oaBooleanAppDef_oaCellView)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaCellView_tp_dealloc(PyoaBooleanAppDef_oaCellViewObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCellView_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaCellView value;
    int convert_status=PyoaBooleanAppDef_oaCellView_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaBooleanAppDef_oaCellView::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaCellView_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaCellView v1;
    PyParamoaBooleanAppDef_oaCellView v2;
    int convert_status1=PyoaBooleanAppDef_oaCellView_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaCellView_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaCellView_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaCellView* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaCellView_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaCellView**) ((PyoaBooleanAppDef_oaCellViewObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaCellView Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(oaBooleanAppDef_oaCellView** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaCellView* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaCellView_Type.tp_alloc(&PyoaBooleanAppDef_oaCellView_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaCellViewObject* self = (PyoaBooleanAppDef_oaCellViewObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(oaBooleanAppDef_oaCellView* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaCellView_Type.tp_alloc(&PyoaBooleanAppDef_oaCellView_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaCellViewObject* self = (PyoaBooleanAppDef_oaCellViewObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCellView_get_doc[] = 
"Class: oaBooleanAppDef_oaCellView, Function: get\n"
"  Paramegers: (oaCellView)\n"
"    Calls: oaBoolean get(const oaCellView* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaCellView,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCellView_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCellView data;
    int convert_status=PyoaBooleanAppDef_oaCellView_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCellViewObject* self=(PyoaBooleanAppDef_oaCellViewObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCellView p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaCellView_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCellView_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaCellView, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaCellView_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCellView data;
    int convert_status=PyoaBooleanAppDef_oaCellView_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCellViewObject* self=(PyoaBooleanAppDef_oaCellViewObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCellView_set_doc[] = 
"Class: oaBooleanAppDef_oaCellView, Function: set\n"
"  Paramegers: (oaCellView,oaBoolean)\n"
"    Calls: void set(oaCellView* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaCellView,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCellView_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCellView data;
    int convert_status=PyoaBooleanAppDef_oaCellView_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaCellViewObject* self=(PyoaBooleanAppDef_oaCellViewObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCellView p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaCellView_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCellView_isNull_doc[] =
"Class: oaBooleanAppDef_oaCellView, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaCellView_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaCellView data;
    int convert_status=PyoaBooleanAppDef_oaCellView_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaCellView_assign_doc[] = 
"Class: oaBooleanAppDef_oaCellView, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaCellView_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaCellView data;
  int convert_status=PyoaBooleanAppDef_oaCellView_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaCellView p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaCellView_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaCellView_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaCellView_get,METH_VARARGS,oaBooleanAppDef_oaCellView_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaCellView_getDefault,METH_VARARGS,oaBooleanAppDef_oaCellView_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaCellView_set,METH_VARARGS,oaBooleanAppDef_oaCellView_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaCellView_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaCellView_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaCellView_tp_assign,METH_VARARGS,oaBooleanAppDef_oaCellView_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCellView_doc[] = 
"Class: oaBooleanAppDef_oaCellView\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaCellView)\n"
"    Calls: (const oaBooleanAppDef_oaCellView&)\n"
"    Signature: oaBooleanAppDef_oaCellView||cref-oaBooleanAppDef_oaCellView,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaCellView_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaCellView",
    sizeof(PyoaBooleanAppDef_oaCellViewObject),
    0,
    (destructor)oaBooleanAppDef_oaCellView_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaCellView_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaCellView_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaCellView_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaCellView_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaCellView_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCellView_static_find_doc[] = 
"Class: oaBooleanAppDef_oaCellView, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCellView* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCellView|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCellView* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCellView|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaCellView_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::find(p1.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCellView, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCellView_static_get_doc[] = 
"Class: oaBooleanAppDef_oaCellView, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCellView* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCellView|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCellView* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCellView|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCellView* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCellView|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCellView* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCellView|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCellView* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCellView|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCellView* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCellView|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaCellView_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::get(p1.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaCellViewp result= (oaBooleanAppDef_oaCellView::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaCellView_FromoaBooleanAppDef_oaCellView(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCellView, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaCellView_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaCellView_static_find,METH_VARARGS,oaBooleanAppDef_oaCellView_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaCellView_static_get,METH_VARARGS,oaBooleanAppDef_oaCellView_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaCellView_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaCellView_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaCellView\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaCellView",
           (PyObject*)(&PyoaBooleanAppDef_oaCellView_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaCellView\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaCellView_Type.tp_dict;
    for(method=oaBooleanAppDef_oaCellView_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaCluster
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCluster_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaCluster_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaClusterObject* self = (PyoaBooleanAppDef_oaClusterObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaCluster)
    {
        PyParamoaBooleanAppDef_oaCluster p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaCluster_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaCluster, Choices are:\n"
        "    (oaBooleanAppDef_oaCluster)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaCluster_tp_dealloc(PyoaBooleanAppDef_oaClusterObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaCluster_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaCluster value;
    int convert_status=PyoaBooleanAppDef_oaCluster_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[47];
    sprintf(buffer,"<oaBooleanAppDef_oaCluster::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaCluster_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaCluster v1;
    PyParamoaBooleanAppDef_oaCluster v2;
    int convert_status1=PyoaBooleanAppDef_oaCluster_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaCluster_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaCluster_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaCluster* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaCluster_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaCluster**) ((PyoaBooleanAppDef_oaClusterObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaCluster Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(oaBooleanAppDef_oaCluster** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaCluster* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaCluster_Type.tp_alloc(&PyoaBooleanAppDef_oaCluster_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaClusterObject* self = (PyoaBooleanAppDef_oaClusterObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(oaBooleanAppDef_oaCluster* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaCluster_Type.tp_alloc(&PyoaBooleanAppDef_oaCluster_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaClusterObject* self = (PyoaBooleanAppDef_oaClusterObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCluster_get_doc[] = 
"Class: oaBooleanAppDef_oaCluster, Function: get\n"
"  Paramegers: (oaCluster)\n"
"    Calls: oaBoolean get(const oaCluster* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaCluster,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCluster_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCluster data;
    int convert_status=PyoaBooleanAppDef_oaCluster_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaClusterObject* self=(PyoaBooleanAppDef_oaClusterObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCluster p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaCluster_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCluster_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaCluster, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaCluster_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCluster data;
    int convert_status=PyoaBooleanAppDef_oaCluster_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaClusterObject* self=(PyoaBooleanAppDef_oaClusterObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCluster_set_doc[] = 
"Class: oaBooleanAppDef_oaCluster, Function: set\n"
"  Paramegers: (oaCluster,oaBoolean)\n"
"    Calls: void set(oaCluster* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaCluster,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaCluster_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaCluster data;
    int convert_status=PyoaBooleanAppDef_oaCluster_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaClusterObject* self=(PyoaBooleanAppDef_oaClusterObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaCluster p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaCluster_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCluster_isNull_doc[] =
"Class: oaBooleanAppDef_oaCluster, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaCluster_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaCluster data;
    int convert_status=PyoaBooleanAppDef_oaCluster_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaCluster_assign_doc[] = 
"Class: oaBooleanAppDef_oaCluster, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaCluster_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaCluster data;
  int convert_status=PyoaBooleanAppDef_oaCluster_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaCluster p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaCluster_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaCluster_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaCluster_get,METH_VARARGS,oaBooleanAppDef_oaCluster_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaCluster_getDefault,METH_VARARGS,oaBooleanAppDef_oaCluster_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaCluster_set,METH_VARARGS,oaBooleanAppDef_oaCluster_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaCluster_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaCluster_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaCluster_tp_assign,METH_VARARGS,oaBooleanAppDef_oaCluster_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCluster_doc[] = 
"Class: oaBooleanAppDef_oaCluster\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaCluster)\n"
"    Calls: (const oaBooleanAppDef_oaCluster&)\n"
"    Signature: oaBooleanAppDef_oaCluster||cref-oaBooleanAppDef_oaCluster,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaCluster_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaCluster",
    sizeof(PyoaBooleanAppDef_oaClusterObject),
    0,
    (destructor)oaBooleanAppDef_oaCluster_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaCluster_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaCluster_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaCluster_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaCluster_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaCluster_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCluster_static_find_doc[] = 
"Class: oaBooleanAppDef_oaCluster, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCluster* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCluster|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCluster* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaCluster|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaCluster_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::find(p1.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCluster, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaCluster_static_get_doc[] = 
"Class: oaBooleanAppDef_oaCluster, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaCluster* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCluster|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCluster* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCluster|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCluster* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCluster|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaCluster* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCluster|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCluster* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCluster|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaCluster* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaCluster|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaCluster_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::get(p1.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaClusterp result= (oaBooleanAppDef_oaCluster::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaCluster_FromoaBooleanAppDef_oaCluster(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaCluster, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaCluster_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaCluster_static_find,METH_VARARGS,oaBooleanAppDef_oaCluster_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaCluster_static_get,METH_VARARGS,oaBooleanAppDef_oaCluster_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaCluster_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaCluster_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaCluster\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaCluster",
           (PyObject*)(&PyoaBooleanAppDef_oaCluster_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaCluster\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaCluster_Type.tp_dict;
    for(method=oaBooleanAppDef_oaCluster_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConnectDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConnectDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConnectDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConnectDefObject* self = (PyoaBooleanAppDef_oaConnectDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConnectDef)
    {
        PyParamoaBooleanAppDef_oaConnectDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConnectDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConnectDef, Choices are:\n"
        "    (oaBooleanAppDef_oaConnectDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConnectDef_tp_dealloc(PyoaBooleanAppDef_oaConnectDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConnectDef_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConnectDef value;
    int convert_status=PyoaBooleanAppDef_oaConnectDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaBooleanAppDef_oaConnectDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConnectDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConnectDef v1;
    PyParamoaBooleanAppDef_oaConnectDef v2;
    int convert_status1=PyoaBooleanAppDef_oaConnectDef_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConnectDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConnectDef_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConnectDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConnectDef_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConnectDef**) ((PyoaBooleanAppDef_oaConnectDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConnectDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(oaBooleanAppDef_oaConnectDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConnectDef* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConnectDef_Type.tp_alloc(&PyoaBooleanAppDef_oaConnectDef_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConnectDefObject* self = (PyoaBooleanAppDef_oaConnectDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(oaBooleanAppDef_oaConnectDef* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConnectDef_Type.tp_alloc(&PyoaBooleanAppDef_oaConnectDef_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConnectDefObject* self = (PyoaBooleanAppDef_oaConnectDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConnectDef_get_doc[] = 
"Class: oaBooleanAppDef_oaConnectDef, Function: get\n"
"  Paramegers: (oaConnectDef)\n"
"    Calls: oaBoolean get(const oaConnectDef* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConnectDef,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConnectDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConnectDef data;
    int convert_status=PyoaBooleanAppDef_oaConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConnectDefObject* self=(PyoaBooleanAppDef_oaConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConnectDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConnectDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConnectDef_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConnectDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConnectDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConnectDef data;
    int convert_status=PyoaBooleanAppDef_oaConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConnectDefObject* self=(PyoaBooleanAppDef_oaConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConnectDef_set_doc[] = 
"Class: oaBooleanAppDef_oaConnectDef, Function: set\n"
"  Paramegers: (oaConnectDef,oaBoolean)\n"
"    Calls: void set(oaConnectDef* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConnectDef,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConnectDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConnectDef data;
    int convert_status=PyoaBooleanAppDef_oaConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConnectDefObject* self=(PyoaBooleanAppDef_oaConnectDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConnectDef p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConnectDef_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConnectDef_isNull_doc[] =
"Class: oaBooleanAppDef_oaConnectDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConnectDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConnectDef data;
    int convert_status=PyoaBooleanAppDef_oaConnectDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConnectDef_assign_doc[] = 
"Class: oaBooleanAppDef_oaConnectDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConnectDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConnectDef data;
  int convert_status=PyoaBooleanAppDef_oaConnectDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConnectDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConnectDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConnectDef_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConnectDef_get,METH_VARARGS,oaBooleanAppDef_oaConnectDef_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConnectDef_getDefault,METH_VARARGS,oaBooleanAppDef_oaConnectDef_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConnectDef_set,METH_VARARGS,oaBooleanAppDef_oaConnectDef_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConnectDef_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConnectDef_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConnectDef_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConnectDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConnectDef_doc[] = 
"Class: oaBooleanAppDef_oaConnectDef\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConnectDef)\n"
"    Calls: (const oaBooleanAppDef_oaConnectDef&)\n"
"    Signature: oaBooleanAppDef_oaConnectDef||cref-oaBooleanAppDef_oaConnectDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConnectDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConnectDef",
    sizeof(PyoaBooleanAppDef_oaConnectDefObject),
    0,
    (destructor)oaBooleanAppDef_oaConnectDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConnectDef_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConnectDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConnectDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConnectDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConnectDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConnectDef_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConnectDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConnectDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::find(p1.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConnectDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConnectDef_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConnectDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConnectDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConnectDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConnectDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::get(p1.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConnectDefp result= (oaBooleanAppDef_oaConnectDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConnectDef_FromoaBooleanAppDef_oaConnectDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConnectDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConnectDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConnectDef_static_find,METH_VARARGS,oaBooleanAppDef_oaConnectDef_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConnectDef_static_get,METH_VARARGS,oaBooleanAppDef_oaConnectDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConnectDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConnectDef_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConnectDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConnectDef",
           (PyObject*)(&PyoaBooleanAppDef_oaConnectDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConnectDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConnectDef_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConnectDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConstraint
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraint_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConstraint_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConstraintObject* self = (PyoaBooleanAppDef_oaConstraintObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConstraint)
    {
        PyParamoaBooleanAppDef_oaConstraint p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConstraint_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConstraint, Choices are:\n"
        "    (oaBooleanAppDef_oaConstraint)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConstraint_tp_dealloc(PyoaBooleanAppDef_oaConstraintObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraint_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConstraint value;
    int convert_status=PyoaBooleanAppDef_oaConstraint_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaBooleanAppDef_oaConstraint::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConstraint_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConstraint v1;
    PyParamoaBooleanAppDef_oaConstraint v2;
    int convert_status1=PyoaBooleanAppDef_oaConstraint_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConstraint_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConstraint_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConstraint* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConstraint_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConstraint**) ((PyoaBooleanAppDef_oaConstraintObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConstraint Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(oaBooleanAppDef_oaConstraint** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConstraint* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConstraint_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraint_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConstraintObject* self = (PyoaBooleanAppDef_oaConstraintObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(oaBooleanAppDef_oaConstraint* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConstraint_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraint_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConstraintObject* self = (PyoaBooleanAppDef_oaConstraintObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraint_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraint, Function: get\n"
"  Paramegers: (oaConstraint)\n"
"    Calls: oaBoolean get(const oaConstraint* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConstraint,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraint_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraint data;
    int convert_status=PyoaBooleanAppDef_oaConstraint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintObject* self=(PyoaBooleanAppDef_oaConstraintObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraint p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConstraint_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraint_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConstraint, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraint_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraint data;
    int convert_status=PyoaBooleanAppDef_oaConstraint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintObject* self=(PyoaBooleanAppDef_oaConstraintObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraint_set_doc[] = 
"Class: oaBooleanAppDef_oaConstraint, Function: set\n"
"  Paramegers: (oaConstraint,oaBoolean)\n"
"    Calls: void set(oaConstraint* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConstraint,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraint_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraint data;
    int convert_status=PyoaBooleanAppDef_oaConstraint_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintObject* self=(PyoaBooleanAppDef_oaConstraintObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraint p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConstraint_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraint_isNull_doc[] =
"Class: oaBooleanAppDef_oaConstraint, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraint_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConstraint data;
    int convert_status=PyoaBooleanAppDef_oaConstraint_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConstraint_assign_doc[] = 
"Class: oaBooleanAppDef_oaConstraint, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraint_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConstraint data;
  int convert_status=PyoaBooleanAppDef_oaConstraint_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConstraint p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConstraint_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConstraint_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConstraint_get,METH_VARARGS,oaBooleanAppDef_oaConstraint_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConstraint_getDefault,METH_VARARGS,oaBooleanAppDef_oaConstraint_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConstraint_set,METH_VARARGS,oaBooleanAppDef_oaConstraint_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConstraint_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConstraint_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConstraint_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConstraint_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraint_doc[] = 
"Class: oaBooleanAppDef_oaConstraint\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConstraint)\n"
"    Calls: (const oaBooleanAppDef_oaConstraint&)\n"
"    Signature: oaBooleanAppDef_oaConstraint||cref-oaBooleanAppDef_oaConstraint,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConstraint_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConstraint",
    sizeof(PyoaBooleanAppDef_oaConstraintObject),
    0,
    (destructor)oaBooleanAppDef_oaConstraint_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConstraint_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConstraint_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConstraint_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConstraint_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConstraint_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraint_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConstraint, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraint* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraint* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConstraint_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::find(p1.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraint, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraint_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraint, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraint* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraint* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraint* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraint* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraint* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraint* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraint|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConstraint_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::get(p1.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintp result= (oaBooleanAppDef_oaConstraint::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConstraint_FromoaBooleanAppDef_oaConstraint(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraint, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConstraint_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConstraint_static_find,METH_VARARGS,oaBooleanAppDef_oaConstraint_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConstraint_static_get,METH_VARARGS,oaBooleanAppDef_oaConstraint_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConstraint_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConstraint_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConstraint\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConstraint",
           (PyObject*)(&PyoaBooleanAppDef_oaConstraint_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConstraint\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConstraint_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConstraint_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConstraintDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConstraintDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConstraintDefObject* self = (PyoaBooleanAppDef_oaConstraintDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConstraintDef)
    {
        PyParamoaBooleanAppDef_oaConstraintDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConstraintDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConstraintDef, Choices are:\n"
        "    (oaBooleanAppDef_oaConstraintDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConstraintDef_tp_dealloc(PyoaBooleanAppDef_oaConstraintDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintDef_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConstraintDef value;
    int convert_status=PyoaBooleanAppDef_oaConstraintDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[53];
    sprintf(buffer,"<oaBooleanAppDef_oaConstraintDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConstraintDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConstraintDef v1;
    PyParamoaBooleanAppDef_oaConstraintDef v2;
    int convert_status1=PyoaBooleanAppDef_oaConstraintDef_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConstraintDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConstraintDef_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConstraintDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConstraintDef_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConstraintDef**) ((PyoaBooleanAppDef_oaConstraintDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConstraintDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(oaBooleanAppDef_oaConstraintDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConstraintDef* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConstraintDef_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintDef_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConstraintDefObject* self = (PyoaBooleanAppDef_oaConstraintDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(oaBooleanAppDef_oaConstraintDef* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConstraintDef_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintDef_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConstraintDefObject* self = (PyoaBooleanAppDef_oaConstraintDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintDef_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintDef, Function: get\n"
"  Paramegers: (oaConstraintDef)\n"
"    Calls: oaBoolean get(const oaConstraintDef* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConstraintDef,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintDefObject* self=(PyoaBooleanAppDef_oaConstraintDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConstraintDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintDef_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConstraintDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintDefObject* self=(PyoaBooleanAppDef_oaConstraintDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintDef_set_doc[] = 
"Class: oaBooleanAppDef_oaConstraintDef, Function: set\n"
"  Paramegers: (oaConstraintDef,oaBoolean)\n"
"    Calls: void set(oaConstraintDef* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConstraintDef,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintDefObject* self=(PyoaBooleanAppDef_oaConstraintDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintDef p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConstraintDef_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintDef_isNull_doc[] =
"Class: oaBooleanAppDef_oaConstraintDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConstraintDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConstraintDef_assign_doc[] = 
"Class: oaBooleanAppDef_oaConstraintDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConstraintDef data;
  int convert_status=PyoaBooleanAppDef_oaConstraintDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConstraintDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConstraintDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConstraintDef_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConstraintDef_get,METH_VARARGS,oaBooleanAppDef_oaConstraintDef_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConstraintDef_getDefault,METH_VARARGS,oaBooleanAppDef_oaConstraintDef_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConstraintDef_set,METH_VARARGS,oaBooleanAppDef_oaConstraintDef_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConstraintDef_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConstraintDef_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConstraintDef_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConstraintDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintDef_doc[] = 
"Class: oaBooleanAppDef_oaConstraintDef\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConstraintDef)\n"
"    Calls: (const oaBooleanAppDef_oaConstraintDef&)\n"
"    Signature: oaBooleanAppDef_oaConstraintDef||cref-oaBooleanAppDef_oaConstraintDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConstraintDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConstraintDef",
    sizeof(PyoaBooleanAppDef_oaConstraintDefObject),
    0,
    (destructor)oaBooleanAppDef_oaConstraintDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConstraintDef_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConstraintDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConstraintDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConstraintDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConstraintDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintDef_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConstraintDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::find(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintDef_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::get(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintDefp result= (oaBooleanAppDef_oaConstraintDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConstraintDef_FromoaBooleanAppDef_oaConstraintDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConstraintDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConstraintDef_static_find,METH_VARARGS,oaBooleanAppDef_oaConstraintDef_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConstraintDef_static_get,METH_VARARGS,oaBooleanAppDef_oaConstraintDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConstraintDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConstraintDef_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConstraintDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConstraintDef",
           (PyObject*)(&PyoaBooleanAppDef_oaConstraintDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConstraintDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConstraintDef_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConstraintDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConstraintGroup
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintGroup_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConstraintGroup_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConstraintGroupObject* self = (PyoaBooleanAppDef_oaConstraintGroupObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConstraintGroup)
    {
        PyParamoaBooleanAppDef_oaConstraintGroup p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConstraintGroup_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConstraintGroup, Choices are:\n"
        "    (oaBooleanAppDef_oaConstraintGroup)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConstraintGroup_tp_dealloc(PyoaBooleanAppDef_oaConstraintGroupObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintGroup_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConstraintGroup value;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaBooleanAppDef_oaConstraintGroup::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConstraintGroup_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConstraintGroup v1;
    PyParamoaBooleanAppDef_oaConstraintGroup v2;
    int convert_status1=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConstraintGroup_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConstraintGroup* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConstraintGroup_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConstraintGroup**) ((PyoaBooleanAppDef_oaConstraintGroupObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConstraintGroup Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(oaBooleanAppDef_oaConstraintGroup** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConstraintGroup* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConstraintGroup_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintGroup_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConstraintGroupObject* self = (PyoaBooleanAppDef_oaConstraintGroupObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(oaBooleanAppDef_oaConstraintGroup* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConstraintGroup_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintGroup_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConstraintGroupObject* self = (PyoaBooleanAppDef_oaConstraintGroupObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroup_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroup, Function: get\n"
"  Paramegers: (oaConstraintGroup)\n"
"    Calls: oaBoolean get(const oaConstraintGroup* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConstraintGroup,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroup_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroup data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupObject* self=(PyoaBooleanAppDef_oaConstraintGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintGroup p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConstraintGroup_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroup_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroup, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroup_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroup data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupObject* self=(PyoaBooleanAppDef_oaConstraintGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroup_set_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroup, Function: set\n"
"  Paramegers: (oaConstraintGroup,oaBoolean)\n"
"    Calls: void set(oaConstraintGroup* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConstraintGroup,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroup_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroup data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupObject* self=(PyoaBooleanAppDef_oaConstraintGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintGroup p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConstraintGroup_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroup_isNull_doc[] =
"Class: oaBooleanAppDef_oaConstraintGroup, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroup_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConstraintGroup data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConstraintGroup_assign_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroup, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroup_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConstraintGroup data;
  int convert_status=PyoaBooleanAppDef_oaConstraintGroup_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConstraintGroup p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConstraintGroup_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConstraintGroup_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConstraintGroup_get,METH_VARARGS,oaBooleanAppDef_oaConstraintGroup_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConstraintGroup_getDefault,METH_VARARGS,oaBooleanAppDef_oaConstraintGroup_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConstraintGroup_set,METH_VARARGS,oaBooleanAppDef_oaConstraintGroup_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConstraintGroup_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConstraintGroup_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConstraintGroup_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConstraintGroup_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroup_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroup\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConstraintGroup)\n"
"    Calls: (const oaBooleanAppDef_oaConstraintGroup&)\n"
"    Signature: oaBooleanAppDef_oaConstraintGroup||cref-oaBooleanAppDef_oaConstraintGroup,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConstraintGroup_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConstraintGroup",
    sizeof(PyoaBooleanAppDef_oaConstraintGroupObject),
    0,
    (destructor)oaBooleanAppDef_oaConstraintGroup_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConstraintGroup_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConstraintGroup_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConstraintGroup_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConstraintGroup_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConstraintGroup_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroup_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroup, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroup_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::find(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintGroup, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroup_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroup, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroup_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::get(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupp result= (oaBooleanAppDef_oaConstraintGroup::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConstraintGroup_FromoaBooleanAppDef_oaConstraintGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintGroup, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConstraintGroup_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConstraintGroup_static_find,METH_VARARGS,oaBooleanAppDef_oaConstraintGroup_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConstraintGroup_static_get,METH_VARARGS,oaBooleanAppDef_oaConstraintGroup_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConstraintGroup_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConstraintGroup_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConstraintGroup\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConstraintGroup",
           (PyObject*)(&PyoaBooleanAppDef_oaConstraintGroup_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConstraintGroup\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConstraintGroup_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConstraintGroup_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConstraintGroupHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConstraintGroupHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConstraintGroupHeaderObject* self = (PyoaBooleanAppDef_oaConstraintGroupHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConstraintGroupHeader)
    {
        PyParamoaBooleanAppDef_oaConstraintGroupHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConstraintGroupHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConstraintGroupHeader, Choices are:\n"
        "    (oaBooleanAppDef_oaConstraintGroupHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConstraintGroupHeader_tp_dealloc(PyoaBooleanAppDef_oaConstraintGroupHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConstraintGroupHeader value;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[61];
    sprintf(buffer,"<oaBooleanAppDef_oaConstraintGroupHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConstraintGroupHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConstraintGroupHeader v1;
    PyParamoaBooleanAppDef_oaConstraintGroupHeader v2;
    int convert_status1=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConstraintGroupHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConstraintGroupHeader_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConstraintGroupHeader**) ((PyoaBooleanAppDef_oaConstraintGroupHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConstraintGroupHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(oaBooleanAppDef_oaConstraintGroupHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConstraintGroupHeader* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConstraintGroupHeader_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintGroupHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConstraintGroupHeaderObject* self = (PyoaBooleanAppDef_oaConstraintGroupHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(oaBooleanAppDef_oaConstraintGroupHeader* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConstraintGroupHeader_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintGroupHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConstraintGroupHeaderObject* self = (PyoaBooleanAppDef_oaConstraintGroupHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupHeader_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupHeader, Function: get\n"
"  Paramegers: (oaConstraintGroupHeader)\n"
"    Calls: oaBoolean get(const oaConstraintGroupHeader* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConstraintGroupHeader,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupHeader data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupHeaderObject* self=(PyoaBooleanAppDef_oaConstraintGroupHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintGroupHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConstraintGroupHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupHeader_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupHeader data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupHeaderObject* self=(PyoaBooleanAppDef_oaConstraintGroupHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupHeader_set_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupHeader, Function: set\n"
"  Paramegers: (oaConstraintGroupHeader,oaBoolean)\n"
"    Calls: void set(oaConstraintGroupHeader* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConstraintGroupHeader,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupHeader data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupHeaderObject* self=(PyoaBooleanAppDef_oaConstraintGroupHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintGroupHeader p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConstraintGroupHeader_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupHeader_isNull_doc[] =
"Class: oaBooleanAppDef_oaConstraintGroupHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConstraintGroupHeader data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConstraintGroupHeader_assign_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConstraintGroupHeader data;
  int convert_status=PyoaBooleanAppDef_oaConstraintGroupHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConstraintGroupHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConstraintGroupHeader_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConstraintGroupHeader_get,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupHeader_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConstraintGroupHeader_getDefault,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupHeader_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConstraintGroupHeader_set,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupHeader_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConstraintGroupHeader_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupHeader_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConstraintGroupHeader_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupHeader_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupHeader\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConstraintGroupHeader)\n"
"    Calls: (const oaBooleanAppDef_oaConstraintGroupHeader&)\n"
"    Signature: oaBooleanAppDef_oaConstraintGroupHeader||cref-oaBooleanAppDef_oaConstraintGroupHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConstraintGroupHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConstraintGroupHeader",
    sizeof(PyoaBooleanAppDef_oaConstraintGroupHeaderObject),
    0,
    (destructor)oaBooleanAppDef_oaConstraintGroupHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConstraintGroupHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConstraintGroupHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConstraintGroupHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConstraintGroupHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConstraintGroupHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupHeader_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::find(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintGroupHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupHeader_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::get(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupHeaderp result= (oaBooleanAppDef_oaConstraintGroupHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupHeader_FromoaBooleanAppDef_oaConstraintGroupHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintGroupHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConstraintGroupHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConstraintGroupHeader_static_find,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupHeader_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConstraintGroupHeader_static_get,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConstraintGroupHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConstraintGroupHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConstraintGroupHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConstraintGroupHeader",
           (PyObject*)(&PyoaBooleanAppDef_oaConstraintGroupHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConstraintGroupHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConstraintGroupHeader_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConstraintGroupHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConstraintGroupMem
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConstraintGroupMem_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConstraintGroupMemObject* self = (PyoaBooleanAppDef_oaConstraintGroupMemObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConstraintGroupMem)
    {
        PyParamoaBooleanAppDef_oaConstraintGroupMem p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConstraintGroupMem_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConstraintGroupMem, Choices are:\n"
        "    (oaBooleanAppDef_oaConstraintGroupMem)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConstraintGroupMem_tp_dealloc(PyoaBooleanAppDef_oaConstraintGroupMemObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConstraintGroupMem value;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaBooleanAppDef_oaConstraintGroupMem::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConstraintGroupMem_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConstraintGroupMem v1;
    PyParamoaBooleanAppDef_oaConstraintGroupMem v2;
    int convert_status1=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConstraintGroupMem_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConstraintGroupMem* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConstraintGroupMem_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConstraintGroupMem**) ((PyoaBooleanAppDef_oaConstraintGroupMemObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConstraintGroupMem Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(oaBooleanAppDef_oaConstraintGroupMem** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConstraintGroupMem* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConstraintGroupMem_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintGroupMem_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConstraintGroupMemObject* self = (PyoaBooleanAppDef_oaConstraintGroupMemObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(oaBooleanAppDef_oaConstraintGroupMem* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConstraintGroupMem_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintGroupMem_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConstraintGroupMemObject* self = (PyoaBooleanAppDef_oaConstraintGroupMemObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupMem_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupMem, Function: get\n"
"  Paramegers: (oaConstraintGroupMem)\n"
"    Calls: oaBoolean get(const oaConstraintGroupMem* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConstraintGroupMem,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupMemObject* self=(PyoaBooleanAppDef_oaConstraintGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintGroupMem p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConstraintGroupMem_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupMem_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupMem, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupMemObject* self=(PyoaBooleanAppDef_oaConstraintGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupMem_set_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupMem, Function: set\n"
"  Paramegers: (oaConstraintGroupMem,oaBoolean)\n"
"    Calls: void set(oaConstraintGroupMem* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConstraintGroupMem,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintGroupMemObject* self=(PyoaBooleanAppDef_oaConstraintGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintGroupMem p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConstraintGroupMem_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupMem_isNull_doc[] =
"Class: oaBooleanAppDef_oaConstraintGroupMem, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConstraintGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConstraintGroupMem_assign_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupMem, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConstraintGroupMem data;
  int convert_status=PyoaBooleanAppDef_oaConstraintGroupMem_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConstraintGroupMem p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConstraintGroupMem_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConstraintGroupMem_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConstraintGroupMem_get,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupMem_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConstraintGroupMem_getDefault,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupMem_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConstraintGroupMem_set,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupMem_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConstraintGroupMem_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupMem_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConstraintGroupMem_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupMem_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupMem_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupMem\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConstraintGroupMem)\n"
"    Calls: (const oaBooleanAppDef_oaConstraintGroupMem&)\n"
"    Signature: oaBooleanAppDef_oaConstraintGroupMem||cref-oaBooleanAppDef_oaConstraintGroupMem,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConstraintGroupMem_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConstraintGroupMem",
    sizeof(PyoaBooleanAppDef_oaConstraintGroupMemObject),
    0,
    (destructor)oaBooleanAppDef_oaConstraintGroupMem_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConstraintGroupMem_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConstraintGroupMem_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConstraintGroupMem_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConstraintGroupMem_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConstraintGroupMem_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupMem_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupMem, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::find(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintGroupMem, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintGroupMem_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintGroupMem, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintGroupMem* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintGroupMem_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::get(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintGroupMemp result= (oaBooleanAppDef_oaConstraintGroupMem::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConstraintGroupMem_FromoaBooleanAppDef_oaConstraintGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintGroupMem, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConstraintGroupMem_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConstraintGroupMem_static_find,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupMem_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConstraintGroupMem_static_get,METH_VARARGS,oaBooleanAppDef_oaConstraintGroupMem_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConstraintGroupMem_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConstraintGroupMem_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConstraintGroupMem\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConstraintGroupMem",
           (PyObject*)(&PyoaBooleanAppDef_oaConstraintGroupMem_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConstraintGroupMem\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConstraintGroupMem_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConstraintGroupMem_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConstraintParam
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintParam_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConstraintParam_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConstraintParamObject* self = (PyoaBooleanAppDef_oaConstraintParamObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConstraintParam)
    {
        PyParamoaBooleanAppDef_oaConstraintParam p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConstraintParam_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConstraintParam, Choices are:\n"
        "    (oaBooleanAppDef_oaConstraintParam)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConstraintParam_tp_dealloc(PyoaBooleanAppDef_oaConstraintParamObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintParam_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConstraintParam value;
    int convert_status=PyoaBooleanAppDef_oaConstraintParam_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[55];
    sprintf(buffer,"<oaBooleanAppDef_oaConstraintParam::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConstraintParam_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConstraintParam v1;
    PyParamoaBooleanAppDef_oaConstraintParam v2;
    int convert_status1=PyoaBooleanAppDef_oaConstraintParam_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConstraintParam_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConstraintParam_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConstraintParam* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConstraintParam_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConstraintParam**) ((PyoaBooleanAppDef_oaConstraintParamObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConstraintParam Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(oaBooleanAppDef_oaConstraintParam** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConstraintParam* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConstraintParam_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintParam_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConstraintParamObject* self = (PyoaBooleanAppDef_oaConstraintParamObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(oaBooleanAppDef_oaConstraintParam* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConstraintParam_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintParam_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConstraintParamObject* self = (PyoaBooleanAppDef_oaConstraintParamObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParam_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParam, Function: get\n"
"  Paramegers: (oaConstraintParam)\n"
"    Calls: oaBoolean get(const oaConstraintParam* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConstraintParam,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParam_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintParam data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintParamObject* self=(PyoaBooleanAppDef_oaConstraintParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintParam p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConstraintParam_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParam_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParam, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParam_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintParam data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintParamObject* self=(PyoaBooleanAppDef_oaConstraintParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParam_set_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParam, Function: set\n"
"  Paramegers: (oaConstraintParam,oaBoolean)\n"
"    Calls: void set(oaConstraintParam* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConstraintParam,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParam_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintParam data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintParamObject* self=(PyoaBooleanAppDef_oaConstraintParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintParam p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConstraintParam_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParam_isNull_doc[] =
"Class: oaBooleanAppDef_oaConstraintParam, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParam_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConstraintParam data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParam_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConstraintParam_assign_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParam, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParam_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConstraintParam data;
  int convert_status=PyoaBooleanAppDef_oaConstraintParam_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConstraintParam p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConstraintParam_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConstraintParam_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConstraintParam_get,METH_VARARGS,oaBooleanAppDef_oaConstraintParam_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConstraintParam_getDefault,METH_VARARGS,oaBooleanAppDef_oaConstraintParam_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConstraintParam_set,METH_VARARGS,oaBooleanAppDef_oaConstraintParam_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConstraintParam_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConstraintParam_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConstraintParam_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConstraintParam_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParam_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParam\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConstraintParam)\n"
"    Calls: (const oaBooleanAppDef_oaConstraintParam&)\n"
"    Signature: oaBooleanAppDef_oaConstraintParam||cref-oaBooleanAppDef_oaConstraintParam,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConstraintParam_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConstraintParam",
    sizeof(PyoaBooleanAppDef_oaConstraintParamObject),
    0,
    (destructor)oaBooleanAppDef_oaConstraintParam_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConstraintParam_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConstraintParam_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConstraintParam_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConstraintParam_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConstraintParam_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParam_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParam, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParam_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::find(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintParam, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParam_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParam, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParam* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParam_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::get(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamp result= (oaBooleanAppDef_oaConstraintParam::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConstraintParam_FromoaBooleanAppDef_oaConstraintParam(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintParam, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConstraintParam_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConstraintParam_static_find,METH_VARARGS,oaBooleanAppDef_oaConstraintParam_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConstraintParam_static_get,METH_VARARGS,oaBooleanAppDef_oaConstraintParam_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConstraintParam_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConstraintParam_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConstraintParam\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConstraintParam",
           (PyObject*)(&PyoaBooleanAppDef_oaConstraintParam_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConstraintParam\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConstraintParam_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConstraintParam_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaConstraintParamDef
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintParamDef_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaConstraintParamDef_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaConstraintParamDefObject* self = (PyoaBooleanAppDef_oaConstraintParamDefObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaConstraintParamDef)
    {
        PyParamoaBooleanAppDef_oaConstraintParamDef p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaConstraintParamDef_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaConstraintParamDef, Choices are:\n"
        "    (oaBooleanAppDef_oaConstraintParamDef)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaConstraintParamDef_tp_dealloc(PyoaBooleanAppDef_oaConstraintParamDefObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaConstraintParamDef_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaConstraintParamDef value;
    int convert_status=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[58];
    sprintf(buffer,"<oaBooleanAppDef_oaConstraintParamDef::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaConstraintParamDef_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaConstraintParamDef v1;
    PyParamoaBooleanAppDef_oaConstraintParamDef v2;
    int convert_status1=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaConstraintParamDef_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaConstraintParamDef* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaConstraintParamDef_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaConstraintParamDef**) ((PyoaBooleanAppDef_oaConstraintParamDefObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaConstraintParamDef Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(oaBooleanAppDef_oaConstraintParamDef** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaConstraintParamDef* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaConstraintParamDef_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintParamDef_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaConstraintParamDefObject* self = (PyoaBooleanAppDef_oaConstraintParamDefObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(oaBooleanAppDef_oaConstraintParamDef* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaConstraintParamDef_Type.tp_alloc(&PyoaBooleanAppDef_oaConstraintParamDef_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaConstraintParamDefObject* self = (PyoaBooleanAppDef_oaConstraintParamDefObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParamDef_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParamDef, Function: get\n"
"  Paramegers: (oaConstraintParamDef)\n"
"    Calls: oaBoolean get(const oaConstraintParamDef* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaConstraintParamDef,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParamDef_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintParamDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintParamDefObject* self=(PyoaBooleanAppDef_oaConstraintParamDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintParamDef p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaConstraintParamDef_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParamDef_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParamDef, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParamDef_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintParamDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintParamDefObject* self=(PyoaBooleanAppDef_oaConstraintParamDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParamDef_set_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParamDef, Function: set\n"
"  Paramegers: (oaConstraintParamDef,oaBoolean)\n"
"    Calls: void set(oaConstraintParamDef* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaConstraintParamDef,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParamDef_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaConstraintParamDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaConstraintParamDefObject* self=(PyoaBooleanAppDef_oaConstraintParamDefObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaConstraintParamDef p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaConstraintParamDef_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParamDef_isNull_doc[] =
"Class: oaBooleanAppDef_oaConstraintParamDef, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParamDef_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaConstraintParamDef data;
    int convert_status=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaConstraintParamDef_assign_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParamDef, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParamDef_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaConstraintParamDef data;
  int convert_status=PyoaBooleanAppDef_oaConstraintParamDef_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaConstraintParamDef p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaConstraintParamDef_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaConstraintParamDef_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaConstraintParamDef_get,METH_VARARGS,oaBooleanAppDef_oaConstraintParamDef_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaConstraintParamDef_getDefault,METH_VARARGS,oaBooleanAppDef_oaConstraintParamDef_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaConstraintParamDef_set,METH_VARARGS,oaBooleanAppDef_oaConstraintParamDef_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaConstraintParamDef_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaConstraintParamDef_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaConstraintParamDef_tp_assign,METH_VARARGS,oaBooleanAppDef_oaConstraintParamDef_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParamDef_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParamDef\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaConstraintParamDef)\n"
"    Calls: (const oaBooleanAppDef_oaConstraintParamDef&)\n"
"    Signature: oaBooleanAppDef_oaConstraintParamDef||cref-oaBooleanAppDef_oaConstraintParamDef,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaConstraintParamDef_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaConstraintParamDef",
    sizeof(PyoaBooleanAppDef_oaConstraintParamDefObject),
    0,
    (destructor)oaBooleanAppDef_oaConstraintParamDef_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaConstraintParamDef_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaConstraintParamDef_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaConstraintParamDef_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaConstraintParamDef_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaConstraintParamDef_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParamDef_static_find_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParamDef, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParamDef_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::find(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintParamDef, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaConstraintParamDef_static_get_doc[] = 
"Class: oaBooleanAppDef_oaConstraintParamDef, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaConstraintParamDef* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaConstraintParamDef|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaConstraintParamDef_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::get(p1.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaConstraintParamDefp result= (oaBooleanAppDef_oaConstraintParamDef::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaConstraintParamDef_FromoaBooleanAppDef_oaConstraintParamDef(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaConstraintParamDef, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaConstraintParamDef_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaConstraintParamDef_static_find,METH_VARARGS,oaBooleanAppDef_oaConstraintParamDef_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaConstraintParamDef_static_get,METH_VARARGS,oaBooleanAppDef_oaConstraintParamDef_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaConstraintParamDef_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaConstraintParamDef_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaConstraintParamDef\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaConstraintParamDef",
           (PyObject*)(&PyoaBooleanAppDef_oaConstraintParamDef_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaConstraintParamDef\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaConstraintParamDef_Type.tp_dict;
    for(method=oaBooleanAppDef_oaConstraintParamDef_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaDMData
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDMData_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaDMData_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaDMDataObject* self = (PyoaBooleanAppDef_oaDMDataObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaDMData)
    {
        PyParamoaBooleanAppDef_oaDMData p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaDMData_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaDMData, Choices are:\n"
        "    (oaBooleanAppDef_oaDMData)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaDMData_tp_dealloc(PyoaBooleanAppDef_oaDMDataObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDMData_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaDMData value;
    int convert_status=PyoaBooleanAppDef_oaDMData_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaBooleanAppDef_oaDMData::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaDMData_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaDMData v1;
    PyParamoaBooleanAppDef_oaDMData v2;
    int convert_status1=PyoaBooleanAppDef_oaDMData_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaDMData_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaDMData_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaDMData* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaDMData_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaDMData**) ((PyoaBooleanAppDef_oaDMDataObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaDMData Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(oaBooleanAppDef_oaDMData** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaDMData* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaDMData_Type.tp_alloc(&PyoaBooleanAppDef_oaDMData_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaDMDataObject* self = (PyoaBooleanAppDef_oaDMDataObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(oaBooleanAppDef_oaDMData* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaDMData_Type.tp_alloc(&PyoaBooleanAppDef_oaDMData_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaDMDataObject* self = (PyoaBooleanAppDef_oaDMDataObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMData_get_doc[] = 
"Class: oaBooleanAppDef_oaDMData, Function: get\n"
"  Paramegers: (oaDMData)\n"
"    Calls: oaBoolean get(const oaDMData* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaDMData,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDMData_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDMData data;
    int convert_status=PyoaBooleanAppDef_oaDMData_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDMDataObject* self=(PyoaBooleanAppDef_oaDMDataObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDMData p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDMData_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMData_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaDMData, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaDMData_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDMData data;
    int convert_status=PyoaBooleanAppDef_oaDMData_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDMDataObject* self=(PyoaBooleanAppDef_oaDMDataObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMData_set_doc[] = 
"Class: oaBooleanAppDef_oaDMData, Function: set\n"
"  Paramegers: (oaDMData,oaBoolean)\n"
"    Calls: void set(oaDMData* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaDMData,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDMData_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDMData data;
    int convert_status=PyoaBooleanAppDef_oaDMData_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDMDataObject* self=(PyoaBooleanAppDef_oaDMDataObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDMData p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDMData_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMData_isNull_doc[] =
"Class: oaBooleanAppDef_oaDMData, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaDMData_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaDMData data;
    int convert_status=PyoaBooleanAppDef_oaDMData_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaDMData_assign_doc[] = 
"Class: oaBooleanAppDef_oaDMData, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaDMData_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaDMData data;
  int convert_status=PyoaBooleanAppDef_oaDMData_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaDMData p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaDMData_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaDMData_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaDMData_get,METH_VARARGS,oaBooleanAppDef_oaDMData_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaDMData_getDefault,METH_VARARGS,oaBooleanAppDef_oaDMData_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaDMData_set,METH_VARARGS,oaBooleanAppDef_oaDMData_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaDMData_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaDMData_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaDMData_tp_assign,METH_VARARGS,oaBooleanAppDef_oaDMData_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMData_doc[] = 
"Class: oaBooleanAppDef_oaDMData\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaDMData)\n"
"    Calls: (const oaBooleanAppDef_oaDMData&)\n"
"    Signature: oaBooleanAppDef_oaDMData||cref-oaBooleanAppDef_oaDMData,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaDMData_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaDMData",
    sizeof(PyoaBooleanAppDef_oaDMDataObject),
    0,
    (destructor)oaBooleanAppDef_oaDMData_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaDMData_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaDMData_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaDMData_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaDMData_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaDMData_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMData_static_find_doc[] = 
"Class: oaBooleanAppDef_oaDMData, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDMData* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDMData|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDMData* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDMData|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaDMData_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::find(p1.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDMData, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMData_static_get_doc[] = 
"Class: oaBooleanAppDef_oaDMData, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDMData* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMData|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMData* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMData|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMData* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMData|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDMData* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMData|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMData* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMData|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMData* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMData|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaDMData_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::get(p1.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMDatap result= (oaBooleanAppDef_oaDMData::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaDMData_FromoaBooleanAppDef_oaDMData(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDMData, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaDMData_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaDMData_static_find,METH_VARARGS,oaBooleanAppDef_oaDMData_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaDMData_static_get,METH_VARARGS,oaBooleanAppDef_oaDMData_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaDMData_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaDMData_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaDMData\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaDMData",
           (PyObject*)(&PyoaBooleanAppDef_oaDMData_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaDMData\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaDMData_Type.tp_dict;
    for(method=oaBooleanAppDef_oaDMData_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaDMFile
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDMFile_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaDMFile_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaDMFileObject* self = (PyoaBooleanAppDef_oaDMFileObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaDMFile)
    {
        PyParamoaBooleanAppDef_oaDMFile p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaDMFile_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaDMFile, Choices are:\n"
        "    (oaBooleanAppDef_oaDMFile)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaDMFile_tp_dealloc(PyoaBooleanAppDef_oaDMFileObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDMFile_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaDMFile value;
    int convert_status=PyoaBooleanAppDef_oaDMFile_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaBooleanAppDef_oaDMFile::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaDMFile_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaDMFile v1;
    PyParamoaBooleanAppDef_oaDMFile v2;
    int convert_status1=PyoaBooleanAppDef_oaDMFile_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaDMFile_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaDMFile_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaDMFile* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaDMFile_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaDMFile**) ((PyoaBooleanAppDef_oaDMFileObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaDMFile Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(oaBooleanAppDef_oaDMFile** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaDMFile* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaDMFile_Type.tp_alloc(&PyoaBooleanAppDef_oaDMFile_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaDMFileObject* self = (PyoaBooleanAppDef_oaDMFileObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(oaBooleanAppDef_oaDMFile* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaDMFile_Type.tp_alloc(&PyoaBooleanAppDef_oaDMFile_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaDMFileObject* self = (PyoaBooleanAppDef_oaDMFileObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMFile_get_doc[] = 
"Class: oaBooleanAppDef_oaDMFile, Function: get\n"
"  Paramegers: (oaDMFile)\n"
"    Calls: oaBoolean get(const oaDMFile* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaDMFile,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDMFile_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDMFile data;
    int convert_status=PyoaBooleanAppDef_oaDMFile_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDMFileObject* self=(PyoaBooleanAppDef_oaDMFileObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDMFile p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDMFile_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMFile_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaDMFile, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaDMFile_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDMFile data;
    int convert_status=PyoaBooleanAppDef_oaDMFile_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDMFileObject* self=(PyoaBooleanAppDef_oaDMFileObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMFile_set_doc[] = 
"Class: oaBooleanAppDef_oaDMFile, Function: set\n"
"  Paramegers: (oaDMFile,oaBoolean)\n"
"    Calls: void set(oaDMFile* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaDMFile,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDMFile_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDMFile data;
    int convert_status=PyoaBooleanAppDef_oaDMFile_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDMFileObject* self=(PyoaBooleanAppDef_oaDMFileObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDMFile p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDMFile_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMFile_isNull_doc[] =
"Class: oaBooleanAppDef_oaDMFile, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaDMFile_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaDMFile data;
    int convert_status=PyoaBooleanAppDef_oaDMFile_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaDMFile_assign_doc[] = 
"Class: oaBooleanAppDef_oaDMFile, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaDMFile_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaDMFile data;
  int convert_status=PyoaBooleanAppDef_oaDMFile_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaDMFile p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaDMFile_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaDMFile_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaDMFile_get,METH_VARARGS,oaBooleanAppDef_oaDMFile_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaDMFile_getDefault,METH_VARARGS,oaBooleanAppDef_oaDMFile_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaDMFile_set,METH_VARARGS,oaBooleanAppDef_oaDMFile_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaDMFile_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaDMFile_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaDMFile_tp_assign,METH_VARARGS,oaBooleanAppDef_oaDMFile_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMFile_doc[] = 
"Class: oaBooleanAppDef_oaDMFile\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaDMFile)\n"
"    Calls: (const oaBooleanAppDef_oaDMFile&)\n"
"    Signature: oaBooleanAppDef_oaDMFile||cref-oaBooleanAppDef_oaDMFile,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaDMFile_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaDMFile",
    sizeof(PyoaBooleanAppDef_oaDMFileObject),
    0,
    (destructor)oaBooleanAppDef_oaDMFile_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaDMFile_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaDMFile_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaDMFile_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaDMFile_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaDMFile_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMFile_static_find_doc[] = 
"Class: oaBooleanAppDef_oaDMFile, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDMFile* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDMFile* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaDMFile_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::find(p1.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDMFile, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDMFile_static_get_doc[] = 
"Class: oaBooleanAppDef_oaDMFile, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDMFile* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMFile* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMFile* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDMFile* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMFile* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDMFile* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDMFile|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaDMFile_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::get(p1.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDMFilep result= (oaBooleanAppDef_oaDMFile::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaDMFile_FromoaBooleanAppDef_oaDMFile(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDMFile, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaDMFile_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaDMFile_static_find,METH_VARARGS,oaBooleanAppDef_oaDMFile_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaDMFile_static_get,METH_VARARGS,oaBooleanAppDef_oaDMFile_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaDMFile_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaDMFile_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaDMFile\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaDMFile",
           (PyObject*)(&PyoaBooleanAppDef_oaDMFile_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaDMFile\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaDMFile_Type.tp_dict;
    for(method=oaBooleanAppDef_oaDMFile_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaDerivedLayerParam
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaDerivedLayerParam_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaDerivedLayerParamObject* self = (PyoaBooleanAppDef_oaDerivedLayerParamObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaDerivedLayerParam)
    {
        PyParamoaBooleanAppDef_oaDerivedLayerParam p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaDerivedLayerParam_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaDerivedLayerParam, Choices are:\n"
        "    (oaBooleanAppDef_oaDerivedLayerParam)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaDerivedLayerParam_tp_dealloc(PyoaBooleanAppDef_oaDerivedLayerParamObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaDerivedLayerParam value;
    int convert_status=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[57];
    sprintf(buffer,"<oaBooleanAppDef_oaDerivedLayerParam::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaDerivedLayerParam_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaDerivedLayerParam v1;
    PyParamoaBooleanAppDef_oaDerivedLayerParam v2;
    int convert_status1=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaDerivedLayerParam_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaDerivedLayerParam* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaDerivedLayerParam_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaDerivedLayerParam**) ((PyoaBooleanAppDef_oaDerivedLayerParamObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaDerivedLayerParam Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(oaBooleanAppDef_oaDerivedLayerParam** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaDerivedLayerParam* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaDerivedLayerParam_Type.tp_alloc(&PyoaBooleanAppDef_oaDerivedLayerParam_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaDerivedLayerParamObject* self = (PyoaBooleanAppDef_oaDerivedLayerParamObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(oaBooleanAppDef_oaDerivedLayerParam* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaDerivedLayerParam_Type.tp_alloc(&PyoaBooleanAppDef_oaDerivedLayerParam_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaDerivedLayerParamObject* self = (PyoaBooleanAppDef_oaDerivedLayerParamObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDerivedLayerParam_get_doc[] = 
"Class: oaBooleanAppDef_oaDerivedLayerParam, Function: get\n"
"  Paramegers: (oaDerivedLayerParam)\n"
"    Calls: oaBoolean get(const oaDerivedLayerParam* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaDerivedLayerParam,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDerivedLayerParam data;
    int convert_status=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDerivedLayerParamObject* self=(PyoaBooleanAppDef_oaDerivedLayerParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDerivedLayerParam p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDerivedLayerParam_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDerivedLayerParam_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaDerivedLayerParam, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDerivedLayerParam data;
    int convert_status=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDerivedLayerParamObject* self=(PyoaBooleanAppDef_oaDerivedLayerParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDerivedLayerParam_set_doc[] = 
"Class: oaBooleanAppDef_oaDerivedLayerParam, Function: set\n"
"  Paramegers: (oaDerivedLayerParam,oaBoolean)\n"
"    Calls: void set(oaDerivedLayerParam* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaDerivedLayerParam,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDerivedLayerParam data;
    int convert_status=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDerivedLayerParamObject* self=(PyoaBooleanAppDef_oaDerivedLayerParamObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDerivedLayerParam p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDerivedLayerParam_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDerivedLayerParam_isNull_doc[] =
"Class: oaBooleanAppDef_oaDerivedLayerParam, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaDerivedLayerParam data;
    int convert_status=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaDerivedLayerParam_assign_doc[] = 
"Class: oaBooleanAppDef_oaDerivedLayerParam, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaDerivedLayerParam data;
  int convert_status=PyoaBooleanAppDef_oaDerivedLayerParam_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaDerivedLayerParam p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaDerivedLayerParam_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaDerivedLayerParam_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaDerivedLayerParam_get,METH_VARARGS,oaBooleanAppDef_oaDerivedLayerParam_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaDerivedLayerParam_getDefault,METH_VARARGS,oaBooleanAppDef_oaDerivedLayerParam_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaDerivedLayerParam_set,METH_VARARGS,oaBooleanAppDef_oaDerivedLayerParam_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaDerivedLayerParam_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaDerivedLayerParam_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaDerivedLayerParam_tp_assign,METH_VARARGS,oaBooleanAppDef_oaDerivedLayerParam_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDerivedLayerParam_doc[] = 
"Class: oaBooleanAppDef_oaDerivedLayerParam\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaDerivedLayerParam)\n"
"    Calls: (const oaBooleanAppDef_oaDerivedLayerParam&)\n"
"    Signature: oaBooleanAppDef_oaDerivedLayerParam||cref-oaBooleanAppDef_oaDerivedLayerParam,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaDerivedLayerParam_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaDerivedLayerParam",
    sizeof(PyoaBooleanAppDef_oaDerivedLayerParamObject),
    0,
    (destructor)oaBooleanAppDef_oaDerivedLayerParam_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaDerivedLayerParam_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaDerivedLayerParam_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaDerivedLayerParam_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaDerivedLayerParam_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaDerivedLayerParam_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDerivedLayerParam_static_find_doc[] = 
"Class: oaBooleanAppDef_oaDerivedLayerParam, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::find(p1.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDerivedLayerParam, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDerivedLayerParam_static_get_doc[] = 
"Class: oaBooleanAppDef_oaDerivedLayerParam, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDerivedLayerParam* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDerivedLayerParam|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaDerivedLayerParam_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::get(p1.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDerivedLayerParamp result= (oaBooleanAppDef_oaDerivedLayerParam::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaDerivedLayerParam_FromoaBooleanAppDef_oaDerivedLayerParam(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDerivedLayerParam, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaDerivedLayerParam_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaDerivedLayerParam_static_find,METH_VARARGS,oaBooleanAppDef_oaDerivedLayerParam_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaDerivedLayerParam_static_get,METH_VARARGS,oaBooleanAppDef_oaDerivedLayerParam_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaDerivedLayerParam_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaDerivedLayerParam_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaDerivedLayerParam\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaDerivedLayerParam",
           (PyObject*)(&PyoaBooleanAppDef_oaDerivedLayerParam_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaDerivedLayerParam\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaDerivedLayerParam_Type.tp_dict;
    for(method=oaBooleanAppDef_oaDerivedLayerParam_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaDesign
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDesign_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaDesign_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaDesignObject* self = (PyoaBooleanAppDef_oaDesignObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaDesign)
    {
        PyParamoaBooleanAppDef_oaDesign p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaDesign_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaDesign, Choices are:\n"
        "    (oaBooleanAppDef_oaDesign)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaDesign_tp_dealloc(PyoaBooleanAppDef_oaDesignObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDesign_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaDesign value;
    int convert_status=PyoaBooleanAppDef_oaDesign_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaBooleanAppDef_oaDesign::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaDesign_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaDesign v1;
    PyParamoaBooleanAppDef_oaDesign v2;
    int convert_status1=PyoaBooleanAppDef_oaDesign_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaDesign_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaDesign_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaDesign* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaDesign_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaDesign**) ((PyoaBooleanAppDef_oaDesignObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaDesign Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(oaBooleanAppDef_oaDesign** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaDesign* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaDesign_Type.tp_alloc(&PyoaBooleanAppDef_oaDesign_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaDesignObject* self = (PyoaBooleanAppDef_oaDesignObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(oaBooleanAppDef_oaDesign* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaDesign_Type.tp_alloc(&PyoaBooleanAppDef_oaDesign_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaDesignObject* self = (PyoaBooleanAppDef_oaDesignObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesign_get_doc[] = 
"Class: oaBooleanAppDef_oaDesign, Function: get\n"
"  Paramegers: (oaDesign)\n"
"    Calls: oaBoolean get(const oaDesign* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaDesign,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDesign_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDesign data;
    int convert_status=PyoaBooleanAppDef_oaDesign_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDesignObject* self=(PyoaBooleanAppDef_oaDesignObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesign p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDesign_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesign_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaDesign, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaDesign_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDesign data;
    int convert_status=PyoaBooleanAppDef_oaDesign_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDesignObject* self=(PyoaBooleanAppDef_oaDesignObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesign_set_doc[] = 
"Class: oaBooleanAppDef_oaDesign, Function: set\n"
"  Paramegers: (oaDesign,oaBoolean)\n"
"    Calls: void set(oaDesign* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaDesign,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDesign_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDesign data;
    int convert_status=PyoaBooleanAppDef_oaDesign_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDesignObject* self=(PyoaBooleanAppDef_oaDesignObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesign p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDesign_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesign_isNull_doc[] =
"Class: oaBooleanAppDef_oaDesign, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaDesign_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaDesign data;
    int convert_status=PyoaBooleanAppDef_oaDesign_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaDesign_assign_doc[] = 
"Class: oaBooleanAppDef_oaDesign, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaDesign_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaDesign data;
  int convert_status=PyoaBooleanAppDef_oaDesign_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaDesign p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaDesign_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaDesign_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaDesign_get,METH_VARARGS,oaBooleanAppDef_oaDesign_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaDesign_getDefault,METH_VARARGS,oaBooleanAppDef_oaDesign_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaDesign_set,METH_VARARGS,oaBooleanAppDef_oaDesign_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaDesign_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaDesign_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaDesign_tp_assign,METH_VARARGS,oaBooleanAppDef_oaDesign_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesign_doc[] = 
"Class: oaBooleanAppDef_oaDesign\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaDesign)\n"
"    Calls: (const oaBooleanAppDef_oaDesign&)\n"
"    Signature: oaBooleanAppDef_oaDesign||cref-oaBooleanAppDef_oaDesign,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaDesign_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaDesign",
    sizeof(PyoaBooleanAppDef_oaDesignObject),
    0,
    (destructor)oaBooleanAppDef_oaDesign_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaDesign_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaDesign_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaDesign_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaDesign_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaDesign_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesign_static_find_doc[] = 
"Class: oaBooleanAppDef_oaDesign, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDesign* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDesign|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDesign* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDesign|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaDesign_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::find(p1.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDesign, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesign_static_get_doc[] = 
"Class: oaBooleanAppDef_oaDesign, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDesign* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesign|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesign* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesign|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesign* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesign|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDesign* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesign|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesign* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesign|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesign* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesign|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaDesign_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::get(p1.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignp result= (oaBooleanAppDef_oaDesign::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaDesign_FromoaBooleanAppDef_oaDesign(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDesign, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaDesign_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaDesign_static_find,METH_VARARGS,oaBooleanAppDef_oaDesign_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaDesign_static_get,METH_VARARGS,oaBooleanAppDef_oaDesign_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaDesign_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaDesign_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaDesign\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaDesign",
           (PyObject*)(&PyoaBooleanAppDef_oaDesign_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaDesign\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaDesign_Type.tp_dict;
    for(method=oaBooleanAppDef_oaDesign_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaDesignInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDesignInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaDesignInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaDesignInstObject* self = (PyoaBooleanAppDef_oaDesignInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaDesignInst)
    {
        PyParamoaBooleanAppDef_oaDesignInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaDesignInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaDesignInst, Choices are:\n"
        "    (oaBooleanAppDef_oaDesignInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaDesignInst_tp_dealloc(PyoaBooleanAppDef_oaDesignInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDesignInst_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaDesignInst value;
    int convert_status=PyoaBooleanAppDef_oaDesignInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaBooleanAppDef_oaDesignInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaDesignInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaDesignInst v1;
    PyParamoaBooleanAppDef_oaDesignInst v2;
    int convert_status1=PyoaBooleanAppDef_oaDesignInst_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaDesignInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaDesignInst_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaDesignInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaDesignInst_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaDesignInst**) ((PyoaBooleanAppDef_oaDesignInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaDesignInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(oaBooleanAppDef_oaDesignInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaDesignInst* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaDesignInst_Type.tp_alloc(&PyoaBooleanAppDef_oaDesignInst_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaDesignInstObject* self = (PyoaBooleanAppDef_oaDesignInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(oaBooleanAppDef_oaDesignInst* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaDesignInst_Type.tp_alloc(&PyoaBooleanAppDef_oaDesignInst_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaDesignInstObject* self = (PyoaBooleanAppDef_oaDesignInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesignInst_get_doc[] = 
"Class: oaBooleanAppDef_oaDesignInst, Function: get\n"
"  Paramegers: (oaDesignInst)\n"
"    Calls: oaBoolean get(const oaDesignInst* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaDesignInst,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDesignInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDesignInst data;
    int convert_status=PyoaBooleanAppDef_oaDesignInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDesignInstObject* self=(PyoaBooleanAppDef_oaDesignInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesignInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDesignInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesignInst_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaDesignInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaDesignInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDesignInst data;
    int convert_status=PyoaBooleanAppDef_oaDesignInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDesignInstObject* self=(PyoaBooleanAppDef_oaDesignInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesignInst_set_doc[] = 
"Class: oaBooleanAppDef_oaDesignInst, Function: set\n"
"  Paramegers: (oaDesignInst,oaBoolean)\n"
"    Calls: void set(oaDesignInst* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaDesignInst,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDesignInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDesignInst data;
    int convert_status=PyoaBooleanAppDef_oaDesignInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDesignInstObject* self=(PyoaBooleanAppDef_oaDesignInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDesignInst p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDesignInst_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesignInst_isNull_doc[] =
"Class: oaBooleanAppDef_oaDesignInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaDesignInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaDesignInst data;
    int convert_status=PyoaBooleanAppDef_oaDesignInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaDesignInst_assign_doc[] = 
"Class: oaBooleanAppDef_oaDesignInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaDesignInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaDesignInst data;
  int convert_status=PyoaBooleanAppDef_oaDesignInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaDesignInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaDesignInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaDesignInst_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaDesignInst_get,METH_VARARGS,oaBooleanAppDef_oaDesignInst_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaDesignInst_getDefault,METH_VARARGS,oaBooleanAppDef_oaDesignInst_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaDesignInst_set,METH_VARARGS,oaBooleanAppDef_oaDesignInst_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaDesignInst_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaDesignInst_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaDesignInst_tp_assign,METH_VARARGS,oaBooleanAppDef_oaDesignInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesignInst_doc[] = 
"Class: oaBooleanAppDef_oaDesignInst\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaDesignInst)\n"
"    Calls: (const oaBooleanAppDef_oaDesignInst&)\n"
"    Signature: oaBooleanAppDef_oaDesignInst||cref-oaBooleanAppDef_oaDesignInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaDesignInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaDesignInst",
    sizeof(PyoaBooleanAppDef_oaDesignInstObject),
    0,
    (destructor)oaBooleanAppDef_oaDesignInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaDesignInst_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaDesignInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaDesignInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaDesignInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaDesignInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesignInst_static_find_doc[] = 
"Class: oaBooleanAppDef_oaDesignInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaDesignInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::find(p1.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDesignInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDesignInst_static_get_doc[] = 
"Class: oaBooleanAppDef_oaDesignInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDesignInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDesignInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaDesignInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::get(p1.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDesignInstp result= (oaBooleanAppDef_oaDesignInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaDesignInst_FromoaBooleanAppDef_oaDesignInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDesignInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaDesignInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaDesignInst_static_find,METH_VARARGS,oaBooleanAppDef_oaDesignInst_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaDesignInst_static_get,METH_VARARGS,oaBooleanAppDef_oaDesignInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaDesignInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaDesignInst_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaDesignInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaDesignInst",
           (PyObject*)(&PyoaBooleanAppDef_oaDesignInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaDesignInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaDesignInst_Type.tp_dict;
    for(method=oaBooleanAppDef_oaDesignInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaDevice
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDevice_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaDevice_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaDeviceObject* self = (PyoaBooleanAppDef_oaDeviceObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaDevice)
    {
        PyParamoaBooleanAppDef_oaDevice p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaDevice_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaDevice, Choices are:\n"
        "    (oaBooleanAppDef_oaDevice)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaDevice_tp_dealloc(PyoaBooleanAppDef_oaDeviceObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaDevice_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaDevice value;
    int convert_status=PyoaBooleanAppDef_oaDevice_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaBooleanAppDef_oaDevice::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaDevice_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaDevice v1;
    PyParamoaBooleanAppDef_oaDevice v2;
    int convert_status1=PyoaBooleanAppDef_oaDevice_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaDevice_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaDevice_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaDevice* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaDevice_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaDevice**) ((PyoaBooleanAppDef_oaDeviceObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaDevice Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(oaBooleanAppDef_oaDevice** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaDevice* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaDevice_Type.tp_alloc(&PyoaBooleanAppDef_oaDevice_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaDeviceObject* self = (PyoaBooleanAppDef_oaDeviceObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(oaBooleanAppDef_oaDevice* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaDevice_Type.tp_alloc(&PyoaBooleanAppDef_oaDevice_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaDeviceObject* self = (PyoaBooleanAppDef_oaDeviceObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDevice_get_doc[] = 
"Class: oaBooleanAppDef_oaDevice, Function: get\n"
"  Paramegers: (oaDevice)\n"
"    Calls: oaBoolean get(const oaDevice* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaDevice,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDevice_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDevice data;
    int convert_status=PyoaBooleanAppDef_oaDevice_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDeviceObject* self=(PyoaBooleanAppDef_oaDeviceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDevice p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaDevice_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDevice_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaDevice, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaDevice_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDevice data;
    int convert_status=PyoaBooleanAppDef_oaDevice_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDeviceObject* self=(PyoaBooleanAppDef_oaDeviceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDevice_set_doc[] = 
"Class: oaBooleanAppDef_oaDevice, Function: set\n"
"  Paramegers: (oaDevice,oaBoolean)\n"
"    Calls: void set(oaDevice* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaDevice,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaDevice_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaDevice data;
    int convert_status=PyoaBooleanAppDef_oaDevice_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaDeviceObject* self=(PyoaBooleanAppDef_oaDeviceObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaDevice p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaDevice_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDevice_isNull_doc[] =
"Class: oaBooleanAppDef_oaDevice, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaDevice_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaDevice data;
    int convert_status=PyoaBooleanAppDef_oaDevice_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaDevice_assign_doc[] = 
"Class: oaBooleanAppDef_oaDevice, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaDevice_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaDevice data;
  int convert_status=PyoaBooleanAppDef_oaDevice_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaDevice p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaDevice_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaDevice_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaDevice_get,METH_VARARGS,oaBooleanAppDef_oaDevice_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaDevice_getDefault,METH_VARARGS,oaBooleanAppDef_oaDevice_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaDevice_set,METH_VARARGS,oaBooleanAppDef_oaDevice_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaDevice_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaDevice_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaDevice_tp_assign,METH_VARARGS,oaBooleanAppDef_oaDevice_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDevice_doc[] = 
"Class: oaBooleanAppDef_oaDevice\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaDevice)\n"
"    Calls: (const oaBooleanAppDef_oaDevice&)\n"
"    Signature: oaBooleanAppDef_oaDevice||cref-oaBooleanAppDef_oaDevice,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaDevice_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaDevice",
    sizeof(PyoaBooleanAppDef_oaDeviceObject),
    0,
    (destructor)oaBooleanAppDef_oaDevice_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaDevice_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaDevice_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaDevice_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaDevice_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaDevice_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDevice_static_find_doc[] = 
"Class: oaBooleanAppDef_oaDevice, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDevice* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDevice|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDevice* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaDevice|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaDevice_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::find(p1.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDevice, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaDevice_static_get_doc[] = 
"Class: oaBooleanAppDef_oaDevice, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaDevice* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDevice|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDevice* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDevice|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDevice* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDevice|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaDevice* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDevice|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDevice* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDevice|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaDevice* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaDevice|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaDevice_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::get(p1.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaDevicep result= (oaBooleanAppDef_oaDevice::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaDevice_FromoaBooleanAppDef_oaDevice(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaDevice, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaDevice_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaDevice_static_find,METH_VARARGS,oaBooleanAppDef_oaDevice_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaDevice_static_get,METH_VARARGS,oaBooleanAppDef_oaDevice_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaDevice_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaDevice_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaDevice\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaDevice",
           (PyObject*)(&PyoaBooleanAppDef_oaDevice_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaDevice\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaDevice_Type.tp_dict;
    for(method=oaBooleanAppDef_oaDevice_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaElmore
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaElmore_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaElmore_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaElmoreObject* self = (PyoaBooleanAppDef_oaElmoreObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaElmore)
    {
        PyParamoaBooleanAppDef_oaElmore p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaElmore_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaElmore, Choices are:\n"
        "    (oaBooleanAppDef_oaElmore)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaElmore_tp_dealloc(PyoaBooleanAppDef_oaElmoreObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaElmore_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaElmore value;
    int convert_status=PyoaBooleanAppDef_oaElmore_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[46];
    sprintf(buffer,"<oaBooleanAppDef_oaElmore::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaElmore_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaElmore v1;
    PyParamoaBooleanAppDef_oaElmore v2;
    int convert_status1=PyoaBooleanAppDef_oaElmore_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaElmore_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaElmore_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaElmore* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaElmore_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaElmore**) ((PyoaBooleanAppDef_oaElmoreObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaElmore Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(oaBooleanAppDef_oaElmore** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaElmore* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaElmore_Type.tp_alloc(&PyoaBooleanAppDef_oaElmore_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaElmoreObject* self = (PyoaBooleanAppDef_oaElmoreObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(oaBooleanAppDef_oaElmore* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaElmore_Type.tp_alloc(&PyoaBooleanAppDef_oaElmore_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaElmoreObject* self = (PyoaBooleanAppDef_oaElmoreObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaElmore_get_doc[] = 
"Class: oaBooleanAppDef_oaElmore, Function: get\n"
"  Paramegers: (oaElmore)\n"
"    Calls: oaBoolean get(const oaElmore* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaElmore,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaElmore_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaElmore data;
    int convert_status=PyoaBooleanAppDef_oaElmore_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaElmoreObject* self=(PyoaBooleanAppDef_oaElmoreObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaElmore p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaElmore_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaElmore_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaElmore, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaElmore_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaElmore data;
    int convert_status=PyoaBooleanAppDef_oaElmore_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaElmoreObject* self=(PyoaBooleanAppDef_oaElmoreObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaElmore_set_doc[] = 
"Class: oaBooleanAppDef_oaElmore, Function: set\n"
"  Paramegers: (oaElmore,oaBoolean)\n"
"    Calls: void set(oaElmore* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaElmore,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaElmore_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaElmore data;
    int convert_status=PyoaBooleanAppDef_oaElmore_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaElmoreObject* self=(PyoaBooleanAppDef_oaElmoreObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaElmore p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaElmore_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaElmore_isNull_doc[] =
"Class: oaBooleanAppDef_oaElmore, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaElmore_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaElmore data;
    int convert_status=PyoaBooleanAppDef_oaElmore_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaElmore_assign_doc[] = 
"Class: oaBooleanAppDef_oaElmore, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaElmore_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaElmore data;
  int convert_status=PyoaBooleanAppDef_oaElmore_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaElmore p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaElmore_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaElmore_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaElmore_get,METH_VARARGS,oaBooleanAppDef_oaElmore_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaElmore_getDefault,METH_VARARGS,oaBooleanAppDef_oaElmore_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaElmore_set,METH_VARARGS,oaBooleanAppDef_oaElmore_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaElmore_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaElmore_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaElmore_tp_assign,METH_VARARGS,oaBooleanAppDef_oaElmore_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaElmore_doc[] = 
"Class: oaBooleanAppDef_oaElmore\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaElmore)\n"
"    Calls: (const oaBooleanAppDef_oaElmore&)\n"
"    Signature: oaBooleanAppDef_oaElmore||cref-oaBooleanAppDef_oaElmore,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaElmore_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaElmore",
    sizeof(PyoaBooleanAppDef_oaElmoreObject),
    0,
    (destructor)oaBooleanAppDef_oaElmore_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaElmore_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaElmore_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaElmore_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaElmore_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaElmore_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaElmore_static_find_doc[] = 
"Class: oaBooleanAppDef_oaElmore, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaElmore* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaElmore|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaElmore* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaElmore|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaElmore_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::find(p1.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaElmore, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaElmore_static_get_doc[] = 
"Class: oaBooleanAppDef_oaElmore, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaElmore* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaElmore|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaElmore* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaElmore|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaElmore* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaElmore|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaElmore* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaElmore|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaElmore* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaElmore|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaElmore* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaElmore|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaElmore_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::get(p1.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaElmorep result= (oaBooleanAppDef_oaElmore::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaElmore_FromoaBooleanAppDef_oaElmore(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaElmore, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaElmore_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaElmore_static_find,METH_VARARGS,oaBooleanAppDef_oaElmore_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaElmore_static_get,METH_VARARGS,oaBooleanAppDef_oaElmore_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaElmore_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaElmore_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaElmore\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaElmore",
           (PyObject*)(&PyoaBooleanAppDef_oaElmore_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaElmore\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaElmore_Type.tp_dict;
    for(method=oaBooleanAppDef_oaElmore_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaFigGroup
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFigGroup_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaFigGroup_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaFigGroupObject* self = (PyoaBooleanAppDef_oaFigGroupObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaFigGroup)
    {
        PyParamoaBooleanAppDef_oaFigGroup p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaFigGroup_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaFigGroup, Choices are:\n"
        "    (oaBooleanAppDef_oaFigGroup)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaFigGroup_tp_dealloc(PyoaBooleanAppDef_oaFigGroupObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFigGroup_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaFigGroup value;
    int convert_status=PyoaBooleanAppDef_oaFigGroup_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[48];
    sprintf(buffer,"<oaBooleanAppDef_oaFigGroup::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaFigGroup_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaFigGroup v1;
    PyParamoaBooleanAppDef_oaFigGroup v2;
    int convert_status1=PyoaBooleanAppDef_oaFigGroup_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaFigGroup_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaFigGroup_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaFigGroup* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaFigGroup_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaFigGroup**) ((PyoaBooleanAppDef_oaFigGroupObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaFigGroup Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(oaBooleanAppDef_oaFigGroup** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaFigGroup* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaFigGroup_Type.tp_alloc(&PyoaBooleanAppDef_oaFigGroup_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaFigGroupObject* self = (PyoaBooleanAppDef_oaFigGroupObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(oaBooleanAppDef_oaFigGroup* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaFigGroup_Type.tp_alloc(&PyoaBooleanAppDef_oaFigGroup_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaFigGroupObject* self = (PyoaBooleanAppDef_oaFigGroupObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroup_get_doc[] = 
"Class: oaBooleanAppDef_oaFigGroup, Function: get\n"
"  Paramegers: (oaFigGroup)\n"
"    Calls: oaBoolean get(const oaFigGroup* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaFigGroup,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroup_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFigGroup data;
    int convert_status=PyoaBooleanAppDef_oaFigGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFigGroupObject* self=(PyoaBooleanAppDef_oaFigGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroup p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFigGroup_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroup_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaFigGroup, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroup_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFigGroup data;
    int convert_status=PyoaBooleanAppDef_oaFigGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFigGroupObject* self=(PyoaBooleanAppDef_oaFigGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroup_set_doc[] = 
"Class: oaBooleanAppDef_oaFigGroup, Function: set\n"
"  Paramegers: (oaFigGroup,oaBoolean)\n"
"    Calls: void set(oaFigGroup* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaFigGroup,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroup_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFigGroup data;
    int convert_status=PyoaBooleanAppDef_oaFigGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFigGroupObject* self=(PyoaBooleanAppDef_oaFigGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroup p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFigGroup_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroup_isNull_doc[] =
"Class: oaBooleanAppDef_oaFigGroup, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroup_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaFigGroup data;
    int convert_status=PyoaBooleanAppDef_oaFigGroup_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaFigGroup_assign_doc[] = 
"Class: oaBooleanAppDef_oaFigGroup, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroup_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaFigGroup data;
  int convert_status=PyoaBooleanAppDef_oaFigGroup_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaFigGroup p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaFigGroup_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaFigGroup_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaFigGroup_get,METH_VARARGS,oaBooleanAppDef_oaFigGroup_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaFigGroup_getDefault,METH_VARARGS,oaBooleanAppDef_oaFigGroup_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaFigGroup_set,METH_VARARGS,oaBooleanAppDef_oaFigGroup_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaFigGroup_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaFigGroup_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaFigGroup_tp_assign,METH_VARARGS,oaBooleanAppDef_oaFigGroup_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroup_doc[] = 
"Class: oaBooleanAppDef_oaFigGroup\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaFigGroup)\n"
"    Calls: (const oaBooleanAppDef_oaFigGroup&)\n"
"    Signature: oaBooleanAppDef_oaFigGroup||cref-oaBooleanAppDef_oaFigGroup,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaFigGroup_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaFigGroup",
    sizeof(PyoaBooleanAppDef_oaFigGroupObject),
    0,
    (destructor)oaBooleanAppDef_oaFigGroup_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaFigGroup_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaFigGroup_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaFigGroup_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaFigGroup_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaFigGroup_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroup_static_find_doc[] = 
"Class: oaBooleanAppDef_oaFigGroup, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroup_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::find(p1.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFigGroup, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroup_static_get_doc[] = 
"Class: oaBooleanAppDef_oaFigGroup, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroup_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::get(p1.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupp result= (oaBooleanAppDef_oaFigGroup::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaFigGroup_FromoaBooleanAppDef_oaFigGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFigGroup, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaFigGroup_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaFigGroup_static_find,METH_VARARGS,oaBooleanAppDef_oaFigGroup_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaFigGroup_static_get,METH_VARARGS,oaBooleanAppDef_oaFigGroup_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaFigGroup_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaFigGroup_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaFigGroup\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaFigGroup",
           (PyObject*)(&PyoaBooleanAppDef_oaFigGroup_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaFigGroup\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaFigGroup_Type.tp_dict;
    for(method=oaBooleanAppDef_oaFigGroup_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaFigGroupMem
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFigGroupMem_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaFigGroupMem_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaFigGroupMemObject* self = (PyoaBooleanAppDef_oaFigGroupMemObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaFigGroupMem)
    {
        PyParamoaBooleanAppDef_oaFigGroupMem p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaFigGroupMem_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaFigGroupMem, Choices are:\n"
        "    (oaBooleanAppDef_oaFigGroupMem)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaFigGroupMem_tp_dealloc(PyoaBooleanAppDef_oaFigGroupMemObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFigGroupMem_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaFigGroupMem value;
    int convert_status=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaBooleanAppDef_oaFigGroupMem::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaFigGroupMem_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaFigGroupMem v1;
    PyParamoaBooleanAppDef_oaFigGroupMem v2;
    int convert_status1=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaFigGroupMem_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaFigGroupMem* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaFigGroupMem_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaFigGroupMem**) ((PyoaBooleanAppDef_oaFigGroupMemObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaFigGroupMem Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(oaBooleanAppDef_oaFigGroupMem** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaFigGroupMem* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaFigGroupMem_Type.tp_alloc(&PyoaBooleanAppDef_oaFigGroupMem_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaFigGroupMemObject* self = (PyoaBooleanAppDef_oaFigGroupMemObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(oaBooleanAppDef_oaFigGroupMem* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaFigGroupMem_Type.tp_alloc(&PyoaBooleanAppDef_oaFigGroupMem_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaFigGroupMemObject* self = (PyoaBooleanAppDef_oaFigGroupMemObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroupMem_get_doc[] = 
"Class: oaBooleanAppDef_oaFigGroupMem, Function: get\n"
"  Paramegers: (oaFigGroupMem)\n"
"    Calls: oaBoolean get(const oaFigGroupMem* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaFigGroupMem,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroupMem_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFigGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFigGroupMemObject* self=(PyoaBooleanAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroupMem p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFigGroupMem_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroupMem_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaFigGroupMem, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroupMem_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFigGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFigGroupMemObject* self=(PyoaBooleanAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroupMem_set_doc[] = 
"Class: oaBooleanAppDef_oaFigGroupMem, Function: set\n"
"  Paramegers: (oaFigGroupMem,oaBoolean)\n"
"    Calls: void set(oaFigGroupMem* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaFigGroupMem,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroupMem_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFigGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFigGroupMemObject* self=(PyoaBooleanAppDef_oaFigGroupMemObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFigGroupMem p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFigGroupMem_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroupMem_isNull_doc[] =
"Class: oaBooleanAppDef_oaFigGroupMem, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroupMem_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaFigGroupMem data;
    int convert_status=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaFigGroupMem_assign_doc[] = 
"Class: oaBooleanAppDef_oaFigGroupMem, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroupMem_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaFigGroupMem data;
  int convert_status=PyoaBooleanAppDef_oaFigGroupMem_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaFigGroupMem p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaFigGroupMem_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaFigGroupMem_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaFigGroupMem_get,METH_VARARGS,oaBooleanAppDef_oaFigGroupMem_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaFigGroupMem_getDefault,METH_VARARGS,oaBooleanAppDef_oaFigGroupMem_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaFigGroupMem_set,METH_VARARGS,oaBooleanAppDef_oaFigGroupMem_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaFigGroupMem_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaFigGroupMem_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaFigGroupMem_tp_assign,METH_VARARGS,oaBooleanAppDef_oaFigGroupMem_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroupMem_doc[] = 
"Class: oaBooleanAppDef_oaFigGroupMem\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaFigGroupMem)\n"
"    Calls: (const oaBooleanAppDef_oaFigGroupMem&)\n"
"    Signature: oaBooleanAppDef_oaFigGroupMem||cref-oaBooleanAppDef_oaFigGroupMem,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaFigGroupMem_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaFigGroupMem",
    sizeof(PyoaBooleanAppDef_oaFigGroupMemObject),
    0,
    (destructor)oaBooleanAppDef_oaFigGroupMem_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaFigGroupMem_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaFigGroupMem_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaFigGroupMem_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaFigGroupMem_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaFigGroupMem_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroupMem_static_find_doc[] = 
"Class: oaBooleanAppDef_oaFigGroupMem, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroupMem_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::find(p1.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFigGroupMem, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFigGroupMem_static_get_doc[] = 
"Class: oaBooleanAppDef_oaFigGroupMem, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFigGroupMem* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFigGroupMem|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaFigGroupMem_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::get(p1.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFigGroupMemp result= (oaBooleanAppDef_oaFigGroupMem::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaFigGroupMem_FromoaBooleanAppDef_oaFigGroupMem(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFigGroupMem, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaFigGroupMem_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaFigGroupMem_static_find,METH_VARARGS,oaBooleanAppDef_oaFigGroupMem_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaFigGroupMem_static_get,METH_VARARGS,oaBooleanAppDef_oaFigGroupMem_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaFigGroupMem_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaFigGroupMem_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaFigGroupMem\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaFigGroupMem",
           (PyObject*)(&PyoaBooleanAppDef_oaFigGroupMem_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaFigGroupMem\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaFigGroupMem_Type.tp_dict;
    for(method=oaBooleanAppDef_oaFigGroupMem_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaFrame
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFrame_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaFrame_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaFrameObject* self = (PyoaBooleanAppDef_oaFrameObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaFrame)
    {
        PyParamoaBooleanAppDef_oaFrame p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaFrame_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaFrame, Choices are:\n"
        "    (oaBooleanAppDef_oaFrame)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaFrame_tp_dealloc(PyoaBooleanAppDef_oaFrameObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFrame_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaFrame value;
    int convert_status=PyoaBooleanAppDef_oaFrame_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaBooleanAppDef_oaFrame::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaFrame_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaFrame v1;
    PyParamoaBooleanAppDef_oaFrame v2;
    int convert_status1=PyoaBooleanAppDef_oaFrame_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaFrame_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaFrame_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaFrame* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaFrame_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaFrame**) ((PyoaBooleanAppDef_oaFrameObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaFrame Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(oaBooleanAppDef_oaFrame** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaFrame* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaFrame_Type.tp_alloc(&PyoaBooleanAppDef_oaFrame_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaFrameObject* self = (PyoaBooleanAppDef_oaFrameObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(oaBooleanAppDef_oaFrame* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaFrame_Type.tp_alloc(&PyoaBooleanAppDef_oaFrame_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaFrameObject* self = (PyoaBooleanAppDef_oaFrameObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrame_get_doc[] = 
"Class: oaBooleanAppDef_oaFrame, Function: get\n"
"  Paramegers: (oaFrame)\n"
"    Calls: oaBoolean get(const oaFrame* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaFrame,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFrame_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFrame data;
    int convert_status=PyoaBooleanAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFrameObject* self=(PyoaBooleanAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrame p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFrame_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrame_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaFrame, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaFrame_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFrame data;
    int convert_status=PyoaBooleanAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFrameObject* self=(PyoaBooleanAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrame_set_doc[] = 
"Class: oaBooleanAppDef_oaFrame, Function: set\n"
"  Paramegers: (oaFrame,oaBoolean)\n"
"    Calls: void set(oaFrame* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaFrame,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFrame_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFrame data;
    int convert_status=PyoaBooleanAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFrameObject* self=(PyoaBooleanAppDef_oaFrameObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrame p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFrame_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrame_isNull_doc[] =
"Class: oaBooleanAppDef_oaFrame, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaFrame_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaFrame data;
    int convert_status=PyoaBooleanAppDef_oaFrame_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaFrame_assign_doc[] = 
"Class: oaBooleanAppDef_oaFrame, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaFrame_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaFrame data;
  int convert_status=PyoaBooleanAppDef_oaFrame_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaFrame p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaFrame_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaFrame_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaFrame_get,METH_VARARGS,oaBooleanAppDef_oaFrame_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaFrame_getDefault,METH_VARARGS,oaBooleanAppDef_oaFrame_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaFrame_set,METH_VARARGS,oaBooleanAppDef_oaFrame_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaFrame_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaFrame_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaFrame_tp_assign,METH_VARARGS,oaBooleanAppDef_oaFrame_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrame_doc[] = 
"Class: oaBooleanAppDef_oaFrame\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaFrame)\n"
"    Calls: (const oaBooleanAppDef_oaFrame&)\n"
"    Signature: oaBooleanAppDef_oaFrame||cref-oaBooleanAppDef_oaFrame,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaFrame_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaFrame",
    sizeof(PyoaBooleanAppDef_oaFrameObject),
    0,
    (destructor)oaBooleanAppDef_oaFrame_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaFrame_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaFrame_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaFrame_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaFrame_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaFrame_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrame_static_find_doc[] = 
"Class: oaBooleanAppDef_oaFrame, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFrame* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFrame|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFrame* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaFrame_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::find(p1.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFrame, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrame_static_get_doc[] = 
"Class: oaBooleanAppDef_oaFrame, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFrame* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrame|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrame* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrame|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrame* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrame|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrame* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrame|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaFrame_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::get(p1.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFramep result= (oaBooleanAppDef_oaFrame::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaFrame_FromoaBooleanAppDef_oaFrame(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFrame, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaFrame_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaFrame_static_find,METH_VARARGS,oaBooleanAppDef_oaFrame_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaFrame_static_get,METH_VARARGS,oaBooleanAppDef_oaFrame_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaFrame_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaFrame_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaFrame\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaFrame",
           (PyObject*)(&PyoaBooleanAppDef_oaFrame_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaFrame\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaFrame_Type.tp_dict;
    for(method=oaBooleanAppDef_oaFrame_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaFrameInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFrameInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaFrameInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaFrameInstObject* self = (PyoaBooleanAppDef_oaFrameInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaFrameInst)
    {
        PyParamoaBooleanAppDef_oaFrameInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaFrameInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaFrameInst, Choices are:\n"
        "    (oaBooleanAppDef_oaFrameInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaFrameInst_tp_dealloc(PyoaBooleanAppDef_oaFrameInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaFrameInst_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaFrameInst value;
    int convert_status=PyoaBooleanAppDef_oaFrameInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[49];
    sprintf(buffer,"<oaBooleanAppDef_oaFrameInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaFrameInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaFrameInst v1;
    PyParamoaBooleanAppDef_oaFrameInst v2;
    int convert_status1=PyoaBooleanAppDef_oaFrameInst_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaFrameInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaFrameInst_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaFrameInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaFrameInst_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaFrameInst**) ((PyoaBooleanAppDef_oaFrameInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaFrameInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(oaBooleanAppDef_oaFrameInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaFrameInst* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaFrameInst_Type.tp_alloc(&PyoaBooleanAppDef_oaFrameInst_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaFrameInstObject* self = (PyoaBooleanAppDef_oaFrameInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(oaBooleanAppDef_oaFrameInst* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaFrameInst_Type.tp_alloc(&PyoaBooleanAppDef_oaFrameInst_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaFrameInstObject* self = (PyoaBooleanAppDef_oaFrameInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrameInst_get_doc[] = 
"Class: oaBooleanAppDef_oaFrameInst, Function: get\n"
"  Paramegers: (oaFrameInst)\n"
"    Calls: oaBoolean get(const oaFrameInst* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaFrameInst,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFrameInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFrameInst data;
    int convert_status=PyoaBooleanAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFrameInstObject* self=(PyoaBooleanAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrameInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaFrameInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrameInst_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaFrameInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaFrameInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFrameInst data;
    int convert_status=PyoaBooleanAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFrameInstObject* self=(PyoaBooleanAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrameInst_set_doc[] = 
"Class: oaBooleanAppDef_oaFrameInst, Function: set\n"
"  Paramegers: (oaFrameInst,oaBoolean)\n"
"    Calls: void set(oaFrameInst* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaFrameInst,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaFrameInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaFrameInst data;
    int convert_status=PyoaBooleanAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaFrameInstObject* self=(PyoaBooleanAppDef_oaFrameInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaFrameInst p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaFrameInst_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrameInst_isNull_doc[] =
"Class: oaBooleanAppDef_oaFrameInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaFrameInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaFrameInst data;
    int convert_status=PyoaBooleanAppDef_oaFrameInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaFrameInst_assign_doc[] = 
"Class: oaBooleanAppDef_oaFrameInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaFrameInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaFrameInst data;
  int convert_status=PyoaBooleanAppDef_oaFrameInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaFrameInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaFrameInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaFrameInst_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaFrameInst_get,METH_VARARGS,oaBooleanAppDef_oaFrameInst_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaFrameInst_getDefault,METH_VARARGS,oaBooleanAppDef_oaFrameInst_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaFrameInst_set,METH_VARARGS,oaBooleanAppDef_oaFrameInst_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaFrameInst_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaFrameInst_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaFrameInst_tp_assign,METH_VARARGS,oaBooleanAppDef_oaFrameInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrameInst_doc[] = 
"Class: oaBooleanAppDef_oaFrameInst\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaFrameInst)\n"
"    Calls: (const oaBooleanAppDef_oaFrameInst&)\n"
"    Signature: oaBooleanAppDef_oaFrameInst||cref-oaBooleanAppDef_oaFrameInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaFrameInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaFrameInst",
    sizeof(PyoaBooleanAppDef_oaFrameInstObject),
    0,
    (destructor)oaBooleanAppDef_oaFrameInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaFrameInst_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaFrameInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaFrameInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaFrameInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaFrameInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrameInst_static_find_doc[] = 
"Class: oaBooleanAppDef_oaFrameInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaFrameInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::find(p1.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFrameInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaFrameInst_static_get_doc[] = 
"Class: oaBooleanAppDef_oaFrameInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaFrameInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaFrameInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaFrameInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::get(p1.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaFrameInstp result= (oaBooleanAppDef_oaFrameInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaFrameInst_FromoaBooleanAppDef_oaFrameInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaFrameInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaFrameInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaFrameInst_static_find,METH_VARARGS,oaBooleanAppDef_oaFrameInst_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaFrameInst_static_get,METH_VARARGS,oaBooleanAppDef_oaFrameInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaFrameInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaFrameInst_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaFrameInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaFrameInst",
           (PyObject*)(&PyoaBooleanAppDef_oaFrameInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaFrameInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaFrameInst_Type.tp_dict;
    for(method=oaBooleanAppDef_oaFrameInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaGCellPattern
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGCellPattern_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaGCellPattern_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaGCellPatternObject* self = (PyoaBooleanAppDef_oaGCellPatternObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaGCellPattern)
    {
        PyParamoaBooleanAppDef_oaGCellPattern p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaGCellPattern_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaGCellPattern, Choices are:\n"
        "    (oaBooleanAppDef_oaGCellPattern)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaGCellPattern_tp_dealloc(PyoaBooleanAppDef_oaGCellPatternObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGCellPattern_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaGCellPattern value;
    int convert_status=PyoaBooleanAppDef_oaGCellPattern_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[52];
    sprintf(buffer,"<oaBooleanAppDef_oaGCellPattern::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaGCellPattern_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaGCellPattern v1;
    PyParamoaBooleanAppDef_oaGCellPattern v2;
    int convert_status1=PyoaBooleanAppDef_oaGCellPattern_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaGCellPattern_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaGCellPattern_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaGCellPattern* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaGCellPattern_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaGCellPattern**) ((PyoaBooleanAppDef_oaGCellPatternObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaGCellPattern Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(oaBooleanAppDef_oaGCellPattern** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaGCellPattern* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaGCellPattern_Type.tp_alloc(&PyoaBooleanAppDef_oaGCellPattern_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaGCellPatternObject* self = (PyoaBooleanAppDef_oaGCellPatternObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(oaBooleanAppDef_oaGCellPattern* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaGCellPattern_Type.tp_alloc(&PyoaBooleanAppDef_oaGCellPattern_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaGCellPatternObject* self = (PyoaBooleanAppDef_oaGCellPatternObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGCellPattern_get_doc[] = 
"Class: oaBooleanAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaGCellPattern)\n"
"    Calls: oaBoolean get(const oaGCellPattern* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaGCellPattern,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGCellPattern_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGCellPattern data;
    int convert_status=PyoaBooleanAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGCellPatternObject* self=(PyoaBooleanAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGCellPattern_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGCellPattern_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaGCellPattern, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaGCellPattern_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGCellPattern data;
    int convert_status=PyoaBooleanAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGCellPatternObject* self=(PyoaBooleanAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGCellPattern_set_doc[] = 
"Class: oaBooleanAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaGCellPattern,oaBoolean)\n"
"    Calls: void set(oaGCellPattern* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaGCellPattern,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGCellPattern_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGCellPattern data;
    int convert_status=PyoaBooleanAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGCellPatternObject* self=(PyoaBooleanAppDef_oaGCellPatternObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGCellPattern p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGCellPattern_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGCellPattern_isNull_doc[] =
"Class: oaBooleanAppDef_oaGCellPattern, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaGCellPattern_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaGCellPattern data;
    int convert_status=PyoaBooleanAppDef_oaGCellPattern_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaGCellPattern_assign_doc[] = 
"Class: oaBooleanAppDef_oaGCellPattern, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaGCellPattern_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaGCellPattern data;
  int convert_status=PyoaBooleanAppDef_oaGCellPattern_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaGCellPattern p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaGCellPattern_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaGCellPattern_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaGCellPattern_get,METH_VARARGS,oaBooleanAppDef_oaGCellPattern_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaGCellPattern_getDefault,METH_VARARGS,oaBooleanAppDef_oaGCellPattern_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaGCellPattern_set,METH_VARARGS,oaBooleanAppDef_oaGCellPattern_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaGCellPattern_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaGCellPattern_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaGCellPattern_tp_assign,METH_VARARGS,oaBooleanAppDef_oaGCellPattern_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGCellPattern_doc[] = 
"Class: oaBooleanAppDef_oaGCellPattern\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaGCellPattern)\n"
"    Calls: (const oaBooleanAppDef_oaGCellPattern&)\n"
"    Signature: oaBooleanAppDef_oaGCellPattern||cref-oaBooleanAppDef_oaGCellPattern,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaGCellPattern_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaGCellPattern",
    sizeof(PyoaBooleanAppDef_oaGCellPatternObject),
    0,
    (destructor)oaBooleanAppDef_oaGCellPattern_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaGCellPattern_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaGCellPattern_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaGCellPattern_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaGCellPattern_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaGCellPattern_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGCellPattern_static_find_doc[] = 
"Class: oaBooleanAppDef_oaGCellPattern, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaGCellPattern_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::find(p1.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGCellPattern, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGCellPattern_static_get_doc[] = 
"Class: oaBooleanAppDef_oaGCellPattern, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGCellPattern* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGCellPattern|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaGCellPattern_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::get(p1.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGCellPatternp result= (oaBooleanAppDef_oaGCellPattern::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaGCellPattern_FromoaBooleanAppDef_oaGCellPattern(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGCellPattern, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaGCellPattern_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaGCellPattern_static_find,METH_VARARGS,oaBooleanAppDef_oaGCellPattern_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaGCellPattern_static_get,METH_VARARGS,oaBooleanAppDef_oaGCellPattern_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaGCellPattern_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaGCellPattern_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaGCellPattern\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaGCellPattern",
           (PyObject*)(&PyoaBooleanAppDef_oaGCellPattern_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaGCellPattern\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaGCellPattern_Type.tp_dict;
    for(method=oaBooleanAppDef_oaGCellPattern_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaGroup
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGroup_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaGroup_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaGroupObject* self = (PyoaBooleanAppDef_oaGroupObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaGroup)
    {
        PyParamoaBooleanAppDef_oaGroup p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaGroup_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaGroup, Choices are:\n"
        "    (oaBooleanAppDef_oaGroup)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaGroup_tp_dealloc(PyoaBooleanAppDef_oaGroupObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGroup_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaGroup value;
    int convert_status=PyoaBooleanAppDef_oaGroup_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaBooleanAppDef_oaGroup::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaGroup_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaGroup v1;
    PyParamoaBooleanAppDef_oaGroup v2;
    int convert_status1=PyoaBooleanAppDef_oaGroup_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaGroup_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaGroup_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaGroup* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaGroup_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaGroup**) ((PyoaBooleanAppDef_oaGroupObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaGroup Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(oaBooleanAppDef_oaGroup** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaGroup* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaGroup_Type.tp_alloc(&PyoaBooleanAppDef_oaGroup_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaGroupObject* self = (PyoaBooleanAppDef_oaGroupObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(oaBooleanAppDef_oaGroup* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaGroup_Type.tp_alloc(&PyoaBooleanAppDef_oaGroup_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaGroupObject* self = (PyoaBooleanAppDef_oaGroupObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroup_get_doc[] = 
"Class: oaBooleanAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaGroup)\n"
"    Calls: oaBoolean get(const oaGroup* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaGroup,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGroup_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGroup data;
    int convert_status=PyoaBooleanAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGroupObject* self=(PyoaBooleanAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroup_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroup_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaGroup, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaGroup_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGroup data;
    int convert_status=PyoaBooleanAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGroupObject* self=(PyoaBooleanAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroup_set_doc[] = 
"Class: oaBooleanAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaGroup,oaBoolean)\n"
"    Calls: void set(oaGroup* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaGroup,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGroup_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGroup data;
    int convert_status=PyoaBooleanAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGroupObject* self=(PyoaBooleanAppDef_oaGroupObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroup p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroup_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroup_isNull_doc[] =
"Class: oaBooleanAppDef_oaGroup, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaGroup_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaGroup data;
    int convert_status=PyoaBooleanAppDef_oaGroup_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaGroup_assign_doc[] = 
"Class: oaBooleanAppDef_oaGroup, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaGroup_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaGroup data;
  int convert_status=PyoaBooleanAppDef_oaGroup_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaGroup p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaGroup_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaGroup_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaGroup_get,METH_VARARGS,oaBooleanAppDef_oaGroup_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaGroup_getDefault,METH_VARARGS,oaBooleanAppDef_oaGroup_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaGroup_set,METH_VARARGS,oaBooleanAppDef_oaGroup_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaGroup_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaGroup_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaGroup_tp_assign,METH_VARARGS,oaBooleanAppDef_oaGroup_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroup_doc[] = 
"Class: oaBooleanAppDef_oaGroup\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaGroup)\n"
"    Calls: (const oaBooleanAppDef_oaGroup&)\n"
"    Signature: oaBooleanAppDef_oaGroup||cref-oaBooleanAppDef_oaGroup,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaGroup_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaGroup",
    sizeof(PyoaBooleanAppDef_oaGroupObject),
    0,
    (destructor)oaBooleanAppDef_oaGroup_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaGroup_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaGroup_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaGroup_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaGroup_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaGroup_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroup_static_find_doc[] = 
"Class: oaBooleanAppDef_oaGroup, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGroup* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGroup|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGroup* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaGroup_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::find(p1.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGroup, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroup_static_get_doc[] = 
"Class: oaBooleanAppDef_oaGroup, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGroup* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroup* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroup* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroup|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroup* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroup|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaGroup_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::get(p1.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupp result= (oaBooleanAppDef_oaGroup::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaGroup_FromoaBooleanAppDef_oaGroup(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGroup, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaGroup_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaGroup_static_find,METH_VARARGS,oaBooleanAppDef_oaGroup_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaGroup_static_get,METH_VARARGS,oaBooleanAppDef_oaGroup_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaGroup_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaGroup_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaGroup\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaGroup",
           (PyObject*)(&PyoaBooleanAppDef_oaGroup_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaGroup\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaGroup_Type.tp_dict;
    for(method=oaBooleanAppDef_oaGroup_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaGroupMember
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGroupMember_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaGroupMember_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaGroupMemberObject* self = (PyoaBooleanAppDef_oaGroupMemberObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaGroupMember)
    {
        PyParamoaBooleanAppDef_oaGroupMember p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaGroupMember_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaGroupMember, Choices are:\n"
        "    (oaBooleanAppDef_oaGroupMember)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaGroupMember_tp_dealloc(PyoaBooleanAppDef_oaGroupMemberObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGroupMember_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaGroupMember value;
    int convert_status=PyoaBooleanAppDef_oaGroupMember_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[51];
    sprintf(buffer,"<oaBooleanAppDef_oaGroupMember::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaGroupMember_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaGroupMember v1;
    PyParamoaBooleanAppDef_oaGroupMember v2;
    int convert_status1=PyoaBooleanAppDef_oaGroupMember_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaGroupMember_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaGroupMember_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaGroupMember* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaGroupMember_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaGroupMember**) ((PyoaBooleanAppDef_oaGroupMemberObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaGroupMember Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(oaBooleanAppDef_oaGroupMember** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaGroupMember* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaGroupMember_Type.tp_alloc(&PyoaBooleanAppDef_oaGroupMember_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaGroupMemberObject* self = (PyoaBooleanAppDef_oaGroupMemberObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(oaBooleanAppDef_oaGroupMember* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaGroupMember_Type.tp_alloc(&PyoaBooleanAppDef_oaGroupMember_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaGroupMemberObject* self = (PyoaBooleanAppDef_oaGroupMemberObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroupMember_get_doc[] = 
"Class: oaBooleanAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaGroupMember)\n"
"    Calls: oaBoolean get(const oaGroupMember* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaGroupMember,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGroupMember_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGroupMember data;
    int convert_status=PyoaBooleanAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGroupMemberObject* self=(PyoaBooleanAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGroupMember_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroupMember_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaGroupMember, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaGroupMember_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGroupMember data;
    int convert_status=PyoaBooleanAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGroupMemberObject* self=(PyoaBooleanAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroupMember_set_doc[] = 
"Class: oaBooleanAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaGroupMember,oaBoolean)\n"
"    Calls: void set(oaGroupMember* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaGroupMember,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGroupMember_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGroupMember data;
    int convert_status=PyoaBooleanAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGroupMemberObject* self=(PyoaBooleanAppDef_oaGroupMemberObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGroupMember p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGroupMember_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroupMember_isNull_doc[] =
"Class: oaBooleanAppDef_oaGroupMember, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaGroupMember_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaGroupMember data;
    int convert_status=PyoaBooleanAppDef_oaGroupMember_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaGroupMember_assign_doc[] = 
"Class: oaBooleanAppDef_oaGroupMember, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaGroupMember_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaGroupMember data;
  int convert_status=PyoaBooleanAppDef_oaGroupMember_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaGroupMember p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaGroupMember_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaGroupMember_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaGroupMember_get,METH_VARARGS,oaBooleanAppDef_oaGroupMember_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaGroupMember_getDefault,METH_VARARGS,oaBooleanAppDef_oaGroupMember_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaGroupMember_set,METH_VARARGS,oaBooleanAppDef_oaGroupMember_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaGroupMember_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaGroupMember_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaGroupMember_tp_assign,METH_VARARGS,oaBooleanAppDef_oaGroupMember_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroupMember_doc[] = 
"Class: oaBooleanAppDef_oaGroupMember\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaGroupMember)\n"
"    Calls: (const oaBooleanAppDef_oaGroupMember&)\n"
"    Signature: oaBooleanAppDef_oaGroupMember||cref-oaBooleanAppDef_oaGroupMember,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaGroupMember_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaGroupMember",
    sizeof(PyoaBooleanAppDef_oaGroupMemberObject),
    0,
    (destructor)oaBooleanAppDef_oaGroupMember_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaGroupMember_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaGroupMember_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaGroupMember_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaGroupMember_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaGroupMember_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroupMember_static_find_doc[] = 
"Class: oaBooleanAppDef_oaGroupMember, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaGroupMember_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::find(p1.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGroupMember, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGroupMember_static_get_doc[] = 
"Class: oaBooleanAppDef_oaGroupMember, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGroupMember* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGroupMember|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaGroupMember_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::get(p1.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGroupMemberp result= (oaBooleanAppDef_oaGroupMember::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaGroupMember_FromoaBooleanAppDef_oaGroupMember(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGroupMember, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaGroupMember_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaGroupMember_static_find,METH_VARARGS,oaBooleanAppDef_oaGroupMember_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaGroupMember_static_get,METH_VARARGS,oaBooleanAppDef_oaGroupMember_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaGroupMember_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaGroupMember_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaGroupMember\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaGroupMember",
           (PyObject*)(&PyoaBooleanAppDef_oaGroupMember_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaGroupMember\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaGroupMember_Type.tp_dict;
    for(method=oaBooleanAppDef_oaGroupMember_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaGuide
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGuide_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaGuide_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaGuideObject* self = (PyoaBooleanAppDef_oaGuideObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaGuide)
    {
        PyParamoaBooleanAppDef_oaGuide p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaGuide_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaGuide, Choices are:\n"
        "    (oaBooleanAppDef_oaGuide)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaGuide_tp_dealloc(PyoaBooleanAppDef_oaGuideObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaGuide_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaGuide value;
    int convert_status=PyoaBooleanAppDef_oaGuide_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaBooleanAppDef_oaGuide::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaGuide_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaGuide v1;
    PyParamoaBooleanAppDef_oaGuide v2;
    int convert_status1=PyoaBooleanAppDef_oaGuide_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaGuide_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaGuide_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaGuide* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaGuide_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaGuide**) ((PyoaBooleanAppDef_oaGuideObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaGuide Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(oaBooleanAppDef_oaGuide** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaGuide* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaGuide_Type.tp_alloc(&PyoaBooleanAppDef_oaGuide_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaGuideObject* self = (PyoaBooleanAppDef_oaGuideObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(oaBooleanAppDef_oaGuide* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaGuide_Type.tp_alloc(&PyoaBooleanAppDef_oaGuide_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaGuideObject* self = (PyoaBooleanAppDef_oaGuideObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGuide_get_doc[] = 
"Class: oaBooleanAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaGuide)\n"
"    Calls: oaBoolean get(const oaGuide* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaGuide,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGuide_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGuide data;
    int convert_status=PyoaBooleanAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGuideObject* self=(PyoaBooleanAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaGuide_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGuide_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaGuide, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaGuide_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGuide data;
    int convert_status=PyoaBooleanAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGuideObject* self=(PyoaBooleanAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGuide_set_doc[] = 
"Class: oaBooleanAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaGuide,oaBoolean)\n"
"    Calls: void set(oaGuide* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaGuide,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaGuide_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaGuide data;
    int convert_status=PyoaBooleanAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaGuideObject* self=(PyoaBooleanAppDef_oaGuideObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaGuide p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaGuide_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGuide_isNull_doc[] =
"Class: oaBooleanAppDef_oaGuide, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaGuide_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaGuide data;
    int convert_status=PyoaBooleanAppDef_oaGuide_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaGuide_assign_doc[] = 
"Class: oaBooleanAppDef_oaGuide, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaGuide_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaGuide data;
  int convert_status=PyoaBooleanAppDef_oaGuide_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaGuide p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaGuide_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaGuide_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaGuide_get,METH_VARARGS,oaBooleanAppDef_oaGuide_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaGuide_getDefault,METH_VARARGS,oaBooleanAppDef_oaGuide_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaGuide_set,METH_VARARGS,oaBooleanAppDef_oaGuide_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaGuide_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaGuide_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaGuide_tp_assign,METH_VARARGS,oaBooleanAppDef_oaGuide_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGuide_doc[] = 
"Class: oaBooleanAppDef_oaGuide\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaGuide)\n"
"    Calls: (const oaBooleanAppDef_oaGuide&)\n"
"    Signature: oaBooleanAppDef_oaGuide||cref-oaBooleanAppDef_oaGuide,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaGuide_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaGuide",
    sizeof(PyoaBooleanAppDef_oaGuideObject),
    0,
    (destructor)oaBooleanAppDef_oaGuide_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaGuide_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaGuide_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaGuide_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaGuide_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaGuide_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGuide_static_find_doc[] = 
"Class: oaBooleanAppDef_oaGuide, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGuide* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGuide|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGuide* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaGuide_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::find(p1.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGuide, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaGuide_static_get_doc[] = 
"Class: oaBooleanAppDef_oaGuide, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaGuide* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGuide|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGuide* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGuide|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGuide* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGuide|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaGuide* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaGuide|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaGuide_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::get(p1.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaGuidep result= (oaBooleanAppDef_oaGuide::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaGuide_FromoaBooleanAppDef_oaGuide(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaGuide, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaGuide_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaGuide_static_find,METH_VARARGS,oaBooleanAppDef_oaGuide_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaGuide_static_get,METH_VARARGS,oaBooleanAppDef_oaGuide_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaGuide_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaGuide_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaGuide\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaGuide",
           (PyObject*)(&PyoaBooleanAppDef_oaGuide_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaGuide\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaGuide_Type.tp_dict;
    for(method=oaBooleanAppDef_oaGuide_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaImage
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaImage_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaImage_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaImageObject* self = (PyoaBooleanAppDef_oaImageObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaImage)
    {
        PyParamoaBooleanAppDef_oaImage p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaImage_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaImage, Choices are:\n"
        "    (oaBooleanAppDef_oaImage)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaImage_tp_dealloc(PyoaBooleanAppDef_oaImageObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaImage_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaImage value;
    int convert_status=PyoaBooleanAppDef_oaImage_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[45];
    sprintf(buffer,"<oaBooleanAppDef_oaImage::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaImage_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaImage v1;
    PyParamoaBooleanAppDef_oaImage v2;
    int convert_status1=PyoaBooleanAppDef_oaImage_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaImage_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaImage_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaImage* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaImage_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaImage**) ((PyoaBooleanAppDef_oaImageObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaImage Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(oaBooleanAppDef_oaImage** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaImage* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaImage_Type.tp_alloc(&PyoaBooleanAppDef_oaImage_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaImageObject* self = (PyoaBooleanAppDef_oaImageObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(oaBooleanAppDef_oaImage* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaImage_Type.tp_alloc(&PyoaBooleanAppDef_oaImage_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaImageObject* self = (PyoaBooleanAppDef_oaImageObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaImage_get_doc[] = 
"Class: oaBooleanAppDef_oaImage, Function: get\n"
"  Paramegers: (oaImage)\n"
"    Calls: oaBoolean get(const oaImage* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaImage,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaImage_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaImage data;
    int convert_status=PyoaBooleanAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaImageObject* self=(PyoaBooleanAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaImage_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaImage_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaImage, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaImage_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaImage data;
    int convert_status=PyoaBooleanAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaImageObject* self=(PyoaBooleanAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaImage_set_doc[] = 
"Class: oaBooleanAppDef_oaImage, Function: set\n"
"  Paramegers: (oaImage,oaBoolean)\n"
"    Calls: void set(oaImage* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaImage,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaImage_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaImage data;
    int convert_status=PyoaBooleanAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaImageObject* self=(PyoaBooleanAppDef_oaImageObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaImage p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaImage_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaImage_isNull_doc[] =
"Class: oaBooleanAppDef_oaImage, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaImage_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaImage data;
    int convert_status=PyoaBooleanAppDef_oaImage_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaImage_assign_doc[] = 
"Class: oaBooleanAppDef_oaImage, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaImage_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaImage data;
  int convert_status=PyoaBooleanAppDef_oaImage_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaImage p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaImage_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaImage_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaImage_get,METH_VARARGS,oaBooleanAppDef_oaImage_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaImage_getDefault,METH_VARARGS,oaBooleanAppDef_oaImage_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaImage_set,METH_VARARGS,oaBooleanAppDef_oaImage_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaImage_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaImage_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaImage_tp_assign,METH_VARARGS,oaBooleanAppDef_oaImage_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaImage_doc[] = 
"Class: oaBooleanAppDef_oaImage\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaImage)\n"
"    Calls: (const oaBooleanAppDef_oaImage&)\n"
"    Signature: oaBooleanAppDef_oaImage||cref-oaBooleanAppDef_oaImage,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaImage_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaImage",
    sizeof(PyoaBooleanAppDef_oaImageObject),
    0,
    (destructor)oaBooleanAppDef_oaImage_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaImage_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaImage_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaImage_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaImage_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaImage_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaImage_static_find_doc[] = 
"Class: oaBooleanAppDef_oaImage, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaImage* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaImage|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaImage* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaImage_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::find(p1.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaImage, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaImage_static_get_doc[] = 
"Class: oaBooleanAppDef_oaImage, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaImage* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaImage|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaImage* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaImage|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaImage* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaImage|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaImage* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaImage|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaImage_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::get(p1.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaImagep result= (oaBooleanAppDef_oaImage::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaImage_FromoaBooleanAppDef_oaImage(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaImage, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaImage_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaImage_static_find,METH_VARARGS,oaBooleanAppDef_oaImage_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaImage_static_get,METH_VARARGS,oaBooleanAppDef_oaImage_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaImage_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaImage_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaImage\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaImage",
           (PyObject*)(&PyoaBooleanAppDef_oaImage_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaImage\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaImage_Type.tp_dict;
    for(method=oaBooleanAppDef_oaImage_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaInst
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaInst_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaInst_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaInstObject* self = (PyoaBooleanAppDef_oaInstObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaInst)
    {
        PyParamoaBooleanAppDef_oaInst p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaInst_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaInst, Choices are:\n"
        "    (oaBooleanAppDef_oaInst)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaInst_tp_dealloc(PyoaBooleanAppDef_oaInstObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaInst_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaInst value;
    int convert_status=PyoaBooleanAppDef_oaInst_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[44];
    sprintf(buffer,"<oaBooleanAppDef_oaInst::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaInst_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaInst v1;
    PyParamoaBooleanAppDef_oaInst v2;
    int convert_status1=PyoaBooleanAppDef_oaInst_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaInst_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaInst_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaInst* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaInst_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaInst**) ((PyoaBooleanAppDef_oaInstObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaInst Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(oaBooleanAppDef_oaInst** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaInst* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaInst_Type.tp_alloc(&PyoaBooleanAppDef_oaInst_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaInstObject* self = (PyoaBooleanAppDef_oaInstObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(oaBooleanAppDef_oaInst* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaInst_Type.tp_alloc(&PyoaBooleanAppDef_oaInst_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaInstObject* self = (PyoaBooleanAppDef_oaInstObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInst_get_doc[] = 
"Class: oaBooleanAppDef_oaInst, Function: get\n"
"  Paramegers: (oaInst)\n"
"    Calls: oaBoolean get(const oaInst* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaInst,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaInst_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaInst data;
    int convert_status=PyoaBooleanAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaInstObject* self=(PyoaBooleanAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInst_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInst_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaInst, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaInst_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaInst data;
    int convert_status=PyoaBooleanAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaInstObject* self=(PyoaBooleanAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInst_set_doc[] = 
"Class: oaBooleanAppDef_oaInst, Function: set\n"
"  Paramegers: (oaInst,oaBoolean)\n"
"    Calls: void set(oaInst* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaInst,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaInst_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaInst data;
    int convert_status=PyoaBooleanAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaInstObject* self=(PyoaBooleanAppDef_oaInstObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInst p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInst_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInst_isNull_doc[] =
"Class: oaBooleanAppDef_oaInst, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaInst_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaInst data;
    int convert_status=PyoaBooleanAppDef_oaInst_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaInst_assign_doc[] = 
"Class: oaBooleanAppDef_oaInst, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaInst_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaInst data;
  int convert_status=PyoaBooleanAppDef_oaInst_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaInst p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaInst_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaInst_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaInst_get,METH_VARARGS,oaBooleanAppDef_oaInst_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaInst_getDefault,METH_VARARGS,oaBooleanAppDef_oaInst_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaInst_set,METH_VARARGS,oaBooleanAppDef_oaInst_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaInst_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaInst_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaInst_tp_assign,METH_VARARGS,oaBooleanAppDef_oaInst_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInst_doc[] = 
"Class: oaBooleanAppDef_oaInst\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaInst)\n"
"    Calls: (const oaBooleanAppDef_oaInst&)\n"
"    Signature: oaBooleanAppDef_oaInst||cref-oaBooleanAppDef_oaInst,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaInst_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaInst",
    sizeof(PyoaBooleanAppDef_oaInstObject),
    0,
    (destructor)oaBooleanAppDef_oaInst_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaInst_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaInst_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaInst_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaInst_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaInst_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInst_static_find_doc[] = 
"Class: oaBooleanAppDef_oaInst, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaInst* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaInst|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaInst* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaInst_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::find(p1.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaInst, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInst_static_get_doc[] = 
"Class: oaBooleanAppDef_oaInst, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaInst* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInst* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInst* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInst|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInst* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInst|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaInst_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::get(p1.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstp result= (oaBooleanAppDef_oaInst::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaInst_FromoaBooleanAppDef_oaInst(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaInst, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaInst_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaInst_static_find,METH_VARARGS,oaBooleanAppDef_oaInst_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaInst_static_get,METH_VARARGS,oaBooleanAppDef_oaInst_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaInst_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaInst_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaInst\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaInst",
           (PyObject*)(&PyoaBooleanAppDef_oaInst_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaInst\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaInst_Type.tp_dict;
    for(method=oaBooleanAppDef_oaInst_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}


/********************************************************************
 *   Copyright 2002-2008  LSI Corporation
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *******************************************************************/

#include "pyoa_header.h"


// ==================================================================
// Wrapper Implementation for Class: oaBooleanAppDef_oaInstHeader
// ==================================================================


// ==================================================================
// Alloc/Dealloc Routines
// ==================================================================

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaInstHeader_new(PyTypeObject *type, PyObject *args, PyObject *kwds)
{
  try {
    int is_raw=(type==&PyoaBooleanAppDef_oaInstHeader_Type);
    PyObject* bself = type->tp_alloc(type,0);
    if (bself == NULL) return bself;
    PyoaBooleanAppDef_oaInstHeaderObject* self = (PyoaBooleanAppDef_oaInstHeaderObject*)bself;
    self->locks = NULL;
    self->borrow = 0;
    static char *kwlist [] = { NULL } ;
    // Case: (oaBooleanAppDef_oaInstHeader)
    {
        PyParamoaBooleanAppDef_oaInstHeader p1;
        if (PyArg_ParseTuple(args,(char*)"O&",
              &PyoaBooleanAppDef_oaInstHeader_Convert,&p1)) {
            self->data=p1.Data();
            self->value=&(self->data);
            return bself;
        }
    }
    PyErr_Clear();
    // Case: ()
    {
        if (PyArg_ParseTuple(args,(char*)"")) {
          self->data=NULL;
          self->value=&(self->data);
          return bself;
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Constructor found for class: oaBooleanAppDef_oaInstHeader, Choices are:\n"
        "    (oaBooleanAppDef_oaInstHeader)\n"
    );
    Py_DECREF(self);
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static void
oaBooleanAppDef_oaInstHeader_tp_dealloc(PyoaBooleanAppDef_oaInstHeaderObject* self)
{
    self->ob_type->tp_free((PyObject*)self);
}

// ------------------------------------------------------------------
static PyObject*
oaBooleanAppDef_oaInstHeader_tp_repr(PyObject *ob)
{
    PyParamoaBooleanAppDef_oaInstHeader value;
    int convert_status=PyoaBooleanAppDef_oaInstHeader_Convert(ob,&value);
    assert(convert_status!=0);
    PyObject* result;

    char buffer[50];
    sprintf(buffer,"<oaBooleanAppDef_oaInstHeader::" DISPLAY_FORMAT ">",POINTER_AS_DISPLAY(value.DataCall()));
    result=PyString_FromString(buffer);
    return result;
}
        
// ------------------------------------------------------------------
static int
oaBooleanAppDef_oaInstHeader_tp_compare(PyObject *ob1,PyObject* ob2)
{
    PyParamoaBooleanAppDef_oaInstHeader v1;
    PyParamoaBooleanAppDef_oaInstHeader v2;
    int convert_status1=PyoaBooleanAppDef_oaInstHeader_Convert(ob1,&v1);
    int convert_status2=PyoaBooleanAppDef_oaInstHeader_Convert(ob2,&v2);
    assert(convert_status1!=0);
    assert(convert_status2!=0);
    if (v1.DataCall()==v2.DataCall()) return 0;
    return 1;
}
        
// ------------------------------------------------------------------
int
PyoaBooleanAppDef_oaInstHeader_Convert(PyObject* ob,PyParamoaBooleanAppDef_oaInstHeader* result)
{
    if (ob == NULL) return 1;
    if (PyoaBooleanAppDef_oaInstHeader_Check(ob)) {
        result->SetData( (oaBooleanAppDef_oaInstHeader**) ((PyoaBooleanAppDef_oaInstHeaderObject*)ob)->value);
        return 1;
    }
    PyErr_SetString(PyExc_TypeError,
        "Convertion of parameter to class: oaBooleanAppDef_oaInstHeader Failed");
    return 0;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(oaBooleanAppDef_oaInstHeader** value,int borrow,PyObject* lock)
{
    if (value && *value) {
        oaBooleanAppDef_oaInstHeader* data=*value;
        PyObject* bself = PyoaBooleanAppDef_oaInstHeader_Type.tp_alloc(&PyoaBooleanAppDef_oaInstHeader_Type,0);
        if (bself == NULL) return bself;
        PyoaBooleanAppDef_oaInstHeaderObject* self = (PyoaBooleanAppDef_oaInstHeaderObject*)bself;
        self->value = (oaObject**) value;
        self->data = NULL;
        self->locks = NULL;
        self->borrow = 0; // Ignore borrow flag, since we copied
       if (lock) PyoaLockObject(self->locks,lock);
        return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}
// ------------------------------------------------------------------
PyObject* PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(oaBooleanAppDef_oaInstHeader* data)
{
    if (data) {
       PyObject* bself = PyoaBooleanAppDef_oaInstHeader_Type.tp_alloc(&PyoaBooleanAppDef_oaInstHeader_Type,0);
       if (bself == NULL) return bself;
       PyoaBooleanAppDef_oaInstHeaderObject* self = (PyoaBooleanAppDef_oaInstHeaderObject*)bself;
       self->data = (oaObject*) data;
       self->value = &(self->data);
       self->borrow = 0; 
       self->locks = NULL;
       return bself;
    }
    Py_INCREF(Py_None);
    return Py_None;
}

// ------------------------------------------------------------------
// FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInstHeader_get_doc[] = 
"Class: oaBooleanAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaInstHeader)\n"
"    Calls: oaBoolean get(const oaInstHeader* object)\n"
"    Signature: get|simple-oaBoolean|cptr-oaInstHeader,\n"
"    This function returns the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to get the value for this extension.\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaInstHeader_get(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaInstHeader data;
    int convert_status=PyoaBooleanAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaInstHeaderObject* self=(PyoaBooleanAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    if (PyArg_ParseTuple(args,"O&",
          &PyoaInstHeader_Convert,&p1)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        oaBoolean result= (data.DataCall()->get(p1.Data()));
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInstHeader_getDefault_doc[] = 
"Class: oaBooleanAppDef_oaInstHeader, Function: getDefault\n"
"  Paramegers: ()\n"
"    Calls: oaBoolean getDefault() const\n"
"    Signature: getDefault|simple-oaBoolean|\n"
"    BrowseData: 1\n"
"    This function returns the default value for this boolean extension.\n"
;

static PyObject*
oaBooleanAppDef_oaInstHeader_getDefault(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaInstHeader data;
    int convert_status=PyoaBooleanAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaInstHeaderObject* self=(PyoaBooleanAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    if (PyArg_ParseTuple(args,"")) {
        oaBoolean result= (data.DataCall()->getDefault());
        return PyoaBoolean_FromoaBoolean(result);
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInstHeader_set_doc[] = 
"Class: oaBooleanAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaInstHeader,oaBoolean)\n"
"    Calls: void set(oaInstHeader* object,oaBoolean value)\n"
"    Signature: set|void-void|ptr-oaInstHeader,simple-oaBoolean,\n"
"    This function sets the value of this Boolean AppDef.\n"
"    object\n"
"    The object on which to set the value for this extension\n"
"    value\n"
"    The value of the extension to set on the object\n"
"    oacInvalidDesignObjectForAppDef\n"
;

static PyObject*
oaBooleanAppDef_oaInstHeader_set(PyObject* ob, PyObject *args)
{
  try {
    PyParamoaBooleanAppDef_oaInstHeader data;
    int convert_status=PyoaBooleanAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    PyoaBooleanAppDef_oaInstHeaderObject* self=(PyoaBooleanAppDef_oaInstHeaderObject*)ob;
    if (!PyValidateDbObject(data.Data(),0)) return NULL;

    PyParamoaInstHeader p1;
    PyParamoaBoolean p2;
    if (PyArg_ParseTuple(args,"O&O&",
          &PyoaInstHeader_Convert,&p1,
          &PyoaBoolean_Convert,&p2)) {
        if (!PyValidateDbObject(p1.Data(),1)) return NULL;
        data.DataCall()->set(p1.Data(),p2.Data());
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInstHeader_isNull_doc[] =
"Class: oaBooleanAppDef_oaInstHeader, Function: isNull\n"
"  Parameters: () \n"
"    This functions returns 1 if the DbPointer is NULL, and 0 otherwise.\n"
;

static PyObject*
oaBooleanAppDef_oaInstHeader_tp_isNull(PyObject* ob, PyObject *args)
{
    PyParamoaBooleanAppDef_oaInstHeader data;
    int convert_status=PyoaBooleanAppDef_oaInstHeader_Convert(ob,&data);
    assert(convert_status!=0);
    if (data.DataCall()==NULL)
        return PyInt_FromLong(1);
    else
        return PyInt_FromLong(0);
}
static char oaBooleanAppDef_oaInstHeader_assign_doc[] = 
"Class: oaBooleanAppDef_oaInstHeader, Function: set\n"
"  Paramegers: (oaDouble)\n"
"    This function sets the current value.\n"
;

static PyObject*
oaBooleanAppDef_oaInstHeader_tp_assign(PyObject* ob, PyObject *args)
{
  PyParamoaBooleanAppDef_oaInstHeader data;
  int convert_status=PyoaBooleanAppDef_oaInstHeader_Convert(ob,&data);
  assert(convert_status!=0);
  try {
    PyParamoaBooleanAppDef_oaInstHeader p1;
    if (PyArg_ParseTuple(args,(char*)"O&",
          &PyoaBooleanAppDef_oaInstHeader_Convert,&p1)) {
        data.Data()=p1.Data();
        Py_INCREF(ob);
        return ob;
    }
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}


// ------------------------------------------------------------------
//  Function Methods Table:
// ------------------------------------------------------------------

static PyMethodDef oaBooleanAppDef_oaInstHeader_methodlist[] = {
    {"get",(PyCFunction)oaBooleanAppDef_oaInstHeader_get,METH_VARARGS,oaBooleanAppDef_oaInstHeader_get_doc},
    {"getDefault",(PyCFunction)oaBooleanAppDef_oaInstHeader_getDefault,METH_VARARGS,oaBooleanAppDef_oaInstHeader_getDefault_doc},
    {"set",(PyCFunction)oaBooleanAppDef_oaInstHeader_set,METH_VARARGS,oaBooleanAppDef_oaInstHeader_set_doc},
    {"isNull",(PyCFunction)oaBooleanAppDef_oaInstHeader_tp_isNull,METH_VARARGS,oaBooleanAppDef_oaInstHeader_isNull_doc},
    {"assign",(PyCFunction)oaBooleanAppDef_oaInstHeader_tp_assign,METH_VARARGS,oaBooleanAppDef_oaInstHeader_assign_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Object:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInstHeader_doc[] = 
"Class: oaBooleanAppDef_oaInstHeader\n"
"  The oaBooleanAppDef class implements an application-specific extension to a particular type of data in a database.\n"
"  Once created, a boolean field is added to each object of the specified dataType, with the specified default value. Applications can use the new data field for whatever purpose is necessary.\n"
"  For additional information on defining and using AppDefs, see oaAppDef and Extending the Database in the Programmer's Guide.\n"
"Constructors:\n"
"  Paramegers: (oaBooleanAppDef_oaInstHeader)\n"
"    Calls: (const oaBooleanAppDef_oaInstHeader&)\n"
"    Signature: oaBooleanAppDef_oaInstHeader||cref-oaBooleanAppDef_oaInstHeader,\n"
;

// ------------------------------------------------------------------
PyTypeObject PyoaBooleanAppDef_oaInstHeader_Type = {
    PyObject_HEAD_INIT(&PyType_Type)
    0,
    "oaBooleanAppDef_oaInstHeader",
    sizeof(PyoaBooleanAppDef_oaInstHeaderObject),
    0,
    (destructor)oaBooleanAppDef_oaInstHeader_tp_dealloc,	/* tp_dealloc */
    0,	/* tp_print */
    0,					/* tp_getattr */
    0,					/* tp_setattr */
    (cmpfunc)oaBooleanAppDef_oaInstHeader_tp_compare,	/* tp_compare */
    (reprfunc)oaBooleanAppDef_oaInstHeader_tp_repr,	/* tp_repr */
    0,					/* tp_as_number */
    0,					/* tp_as_sequence */
    0,					/* tp_as_mapping */
    0,					/* tp_as_hash */
    0,					/* tp_as_call */
    0,					/* tp_str */
    0,					/* tp_getattro */
    0,					/* tp_setattro */
    0,					/* tp_as_buffer */
    Py_TPFLAGS_DEFAULT|Py_TPFLAGS_BASETYPE, /* tp_flags */
    oaBooleanAppDef_oaInstHeader_doc,	/* tp_doc */
    0,					/* tp_traverse */
    0,					/* tp_clear */
    0,					/* tp_richcompre */
    0,					/* tp_weaklistoffset */
    0,					/* tp_iter */
    0,					/* tp_iternext */
    oaBooleanAppDef_oaInstHeader_methodlist,	/* tp_methods */
    0,					/* tp_members */
    0,					/* tp_getset */
    &PyoaAppDef_Type,	/* tp_base */
    0,					/* tp_dict */
    0,					/* tp_descr_get */
    0,					/* tp_descr_set */
    0,					/* tp_dictoffset */
    0,					/* tp_init */
    PyType_GenericAlloc,	/* tp_alloc */
    oaBooleanAppDef_oaInstHeader_new,	/* tp_new */
    _PyObject_Del,	/* tp_free */
};


// ------------------------------------------------------------------
// Static FunctionMethods:
// ------------------------------------------------------------------

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInstHeader_static_find_doc[] = 
"Class: oaBooleanAppDef_oaInstHeader, Function: find\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* find(const oaString& name)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' if it exists.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* find(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: find|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,\n"
"    This function returns an oaBooleanAppDef object with this dataType and the specified 'name' that is associated with the specified object extension 'objDef'.\n"
"    name\n"
"    The name of the oaAppDef object to look for\n"
"    objDef\n"
"    A constant pointer to the object extension\n"
;

static PyObject*
oaBooleanAppDef_oaInstHeader_static_find(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::find(p1.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::find(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaInstHeader, function: find, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaAppObjectDef)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static char oaBooleanAppDef_oaInstHeader_static_get_doc[] = 
"Class: oaBooleanAppDef_oaInstHeader, Function: get\n"
"  Paramegers: (oaString)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* get(const oaString& name)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* get(const oaString& name,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* get(const oaString& name,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, and the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
"  Paramegers: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
"    Calls: oaBooleanAppDef_oaInstHeader* get(const oaString& name,const oaAppObjectDef* objDef,oaBoolean defValue,oaBoolean persist)\n"
"    Signature: get|ptr-oaBooleanAppDef_oaInstHeader|cref-oaString,cptr-oaAppObjectDef,simple-oaBoolean,simple-oaBoolean,\n"
"    This function constructs a boolean extension with the given name, associated with the given appObject and with the specified default value.\n"
"    name\n"
"    The name of the boolean extension to create\n"
"    objDef\n"
"    The oaAppObjectDef with which to associate the new extension\n"
"    defValue\n"
"    The default value for the extension to create\n"
"    persist\n"
"    The persistency of the extension to create\n"
"    oacAppDefExists\n"
;

static PyObject*
oaBooleanAppDef_oaInstHeader_static_get(PyObject* ob, PyObject *args)
{
  try {
    // Case: (oaString)
    {
        PyParamoaString p1;
        if (PyArg_ParseTuple(args,"O&",
              &PyoaString_Convert,&p1)) {
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::get(p1.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2)) {
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaBoolean p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaBoolean_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        if (PyArg_ParseTuple(args,"O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::get(p1.Data(),p2.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        if (PyArg_ParseTuple(args,"O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    // Case: (oaString,oaAppObjectDef,oaBoolean,oaBoolean)
    {
        PyParamoaString p1;
        PyParamoaAppObjectDef p2;
        PyParamoaBoolean p3;
        PyParamoaBoolean p4;
        if (PyArg_ParseTuple(args,"O&O&O&O&",
              &PyoaString_Convert,&p1,
              &PyoaAppObjectDef_Convert,&p2,
              &PyoaBoolean_Convert,&p3,
              &PyoaBoolean_Convert,&p4)) {
            if (!PyValidateDbObject(p2.Data(),2)) return NULL;
            oaBooleanAppDef_oaInstHeaderp result= (oaBooleanAppDef_oaInstHeader::get(p1.Data(),p2.Data(),p3.Data(),p4.Data()));
            return PyoaBooleanAppDef_oaInstHeader_FromoaBooleanAppDef_oaInstHeader(result);
        }
    }
    PyErr_Clear();
    PyErr_SetString(PyExc_TypeError,
        "No Arg-Matching Function found for class: oaBooleanAppDef_oaInstHeader, function: get, Choices are:\n"
        "    (oaString)\n"
        "    (oaString,oaBoolean)\n"
        "    (oaString,oaBoolean,oaBoolean)\n"
        "    (oaString,oaAppObjectDef)\n"
        "    (oaString,oaAppObjectDef,oaBoolean)\n"
        "    (oaString,oaAppObjectDef,oaBoolean,oaBoolean)\n"
    );
    return NULL;
  }
  catch (oaException &excp) {
    PyErr_OpenAccess(excp);
    return NULL;
  }
}

// ------------------------------------------------------------------
static PyMethodDef oaBooleanAppDef_oaInstHeader_staticmethodlist[] = {
    {"static_find",(PyCFunction)oaBooleanAppDef_oaInstHeader_static_find,METH_VARARGS,oaBooleanAppDef_oaInstHeader_static_find_doc},
    {"static_get",(PyCFunction)oaBooleanAppDef_oaInstHeader_static_get,METH_VARARGS,oaBooleanAppDef_oaInstHeader_static_get_doc},
   {NULL,NULL,0,NULL}
};


// ------------------------------------------------------------------
//  Type Init:
// ------------------------------------------------------------------

int
PyoaBooleanAppDef_oaInstHeader_TypeInit(PyObject* mod_dict)
{
    if (PyType_Ready(&PyoaBooleanAppDef_oaInstHeader_Type)<0) {
      printf("** PyType_Ready failed for: oaBooleanAppDef_oaInstHeader\n");
      return -1;
    }

    if (PyDict_SetItemString(mod_dict,"oaBooleanAppDef_oaInstHeader",
           (PyObject*)(&PyoaBooleanAppDef_oaInstHeader_Type))<0) {
       printf("** Failed to add type name to module dictionary for: oaBooleanAppDef_oaInstHeader\n");
       return -1;
    }

    PyObject *dict, *value;
    PyMethodDef *method;
    dict=PyoaBooleanAppDef_oaInstHeader_Type.tp_dict;
    for(method=oaBooleanAppDef_oaInstHeader_staticmethodlist;method->ml_name!=NULL;method++) {
        value=PyCFunction_New(method,NULL);
    if (value==NULL) return -1;
        if (PyDict_SetItemString(dict,method->ml_name,value)!=0) {
        Py_DECREF(value);
            printf("** Failed to add static function to module dictionary for: %s\n",
                method->ml_name);
            return -1;
        }
        Py_DECREF(value);
    }
    return 0;
}

